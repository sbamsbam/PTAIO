<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/js/core/jquery.min.js"></script>
    <meta charset="utf-8"/>
    <meta name="csrf-token" content="gaCYVBdIxqvehtm0v7x9XtC6GYCwTfbPvegRnAvx">

    <link rel="manifest" href="/manifest.json">

    <link rel="apple-touch-icon" sizes="76x76" href="/favicon.ico">
    <link rel="icon" type="image/png" href="/favicon.ico">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>

    
    <title>Hypervisor Necromancy; Reanimating Kernel Protectors</title>

    <!-- Prism code colouring -->
    <link rel="stylesheet" href="/css/prism.css">

    <!-- prism.js syntax highlighter -->
    <script src="/js/clipboard.js"></script>
    <script src="/js/prism.js"></script>

    <link rel="canonical" href="https://www.exploit-db.com/papers/48073">
    <meta name="description" content="Hypervisor Necromancy; Reanimating Kernel Protectors">
    <meta name="keywords" content="Multiple,papers">
    <meta name="author" content="phrack">

    <meta property="og:title" content="Hypervisor Necromancy; Reanimating Kernel Protectors">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://www.exploit-db.com/exploits/48073">
    <meta property="og:image" content="https://www.exploit-db.com/images/spider-orange.png" />
    <meta property="og:site_name" content="Exploit Database" />
    <meta property="article:published_time" content="2020-02-14" />
        <meta property="article:author" content="phrack" />
    <meta property="article:authorUrl" content="https://www.exploit-db.com/?author=9089" />

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@ExploitDB">
    <meta name="twitter:title" content="Hypervisor Necromancy; Reanimating Kernel Protectors">
    <meta name="twitter:creator" content="@ExploitDB">
    <meta name="twitter:image:src" content="https://www.exploit-db.com/images/spider-orange.png">


    <link rel="alternate" type="application/rss+xml" title="Exploit-DB.com RSS Feed" href="/rss.xml">

    <meta
            content='width=device-width, initial-scale=1.0, shrink-to-fit=no'
            name='viewport'/>

    <meta property="og:title" content="Offensive Security&#8217;s Exploit Database Archive">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://www.exploit-db.com/">

    <meta name="theme-color" content="#ec5e10">

    <script id="Cookiebot" src="https://consent.cookiebot.com/uc.js" data-cbid="5cfe7093-608f-4f4e-80b4-925b1e9d949f"
            data-georegions="{'region':'US-06','cbid':'6abbf59f-78fd-4d8f-ac7e-b57c0f046bbf'}" data-blockingmode="auto"
            type="text/javascript">
    </script>

    <script type="text/javascript">
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-1981501-4', { 'cookieDomain': 'www.exploit-db.com' } );

        ga('send', 'pageview');
    </script>
    <script async src="https://www.google-analytics.com/analytics.js"
            type="text/javascript">

    </script>

    <!-- Material Design Icons https://materialdesignicons.com/ -->
    <link href="/css/materialdesignicons.min.css" media="all" rel="stylesheet" type="text/css"/>

    <!-- Theme CSS Files -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>

    <link href="/css/now-ui-dashboard.css" rel="stylesheet"/>

    <link href="/css/app.css" rel="stylesheet"/>

    <style>
        .rbtn {
            border: 2px solid white;
            border-radius: 20px;
            color: black;
            padding: 8px;
            cursor: pointer;
        }

        .rsuccess {
            border-color: white;
            color: white;
        }

        .rsuccess:hover {
            background-color: white;
            color: #165283;
        }
        .rprimary {
            border-color: #ca4f0c;
            color: #ca4f0c;
        }

        .rprimary:hover {
            background-color: #ca4f0c;
            color: white;
        }
    </style>
</head>

<body class=" sidebar-mini">

<div class="wrapper">

    
    <div class="sidebar" data-color="orange">

    <div class="logo">

        
        <a href="/" class="simple-text logo-mini">
            &nbsp;<img src="/images/spider-white.png" alt="Exploit Database">
        </a>

        
        
            <a href="/" class="simple-text logo-normal">
                Exploit Database
            </a>

        
    </div>

    <div class="sidebar-wrapper">

        <ul class="nav">

            
            <li class="">

                <a href="/">
                    <i class="mdi mdi-ladybug mdi-24px"></i>
                    <p>Exploits</p>
                </a>

            </li>

            
            <li class="">

                <a href="/google-hacking-database">
                    <i class="mdi mdi-search-web mdi-24px"></i>
                    <p title="Google Hacking Database">GHDB</p>
                </a>

            </li>

            
            <li class="active">

                <a href="/papers">
                    <i class="mdi mdi-file-outline mdi-24px"></i>
                    <p>Papers</p>
                </a>

            </li>

            
            <li class="">

                <a href="/shellcodes">
                    <i class="mdi mdi-chip mdi-24px"></i>
                    <p>Shellcodes</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">



                <li>

                    <a class="nav-link" href="/search">
                        <i class="mdi mdi-database-search mdi-24px"></i>
                        <p title="Search Exploit-Database">Search EDB</p>
                    </a>

                </li>



            <li>

                
                <a class="nav-link" href="/searchsploit">
                    <i class="mdi mdi-book-open-page-variant mdi-24px"></i>
                    <p>SearchSploit Manual</p>
                </a>

            </li>

            <li>

                
                <a class="nav-link" href="/submit">
                    <i class="mdi mdi-upload mdi-24px"></i>
                    <p>Submissions</p>
                </a>

            </li>

        </ul>

        <hr/>

        <ul class="nav">

            <li>

                <a data-toggle="collapse" href="#onlineTraining" aria-expanded="false">
                    <i class="mdi mdi-school mdi-24px"></i>
                    <p>Online Training <b class="caret"></b></p>
                </a>

                <div class="collapse " id="onlineTraining">
                    <ul class="nav">

                        <li>
                            <a href="/pentest-training-with-kali-linux">
                                <span class="sidebar-mini-icon">PWK</span>
                                <span class="sidebar-normal" title="Penetration Testing with Kali Linux"> PEN-200 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/wireless-attacks-training">
                                <span class="sidebar-mini-icon">WiFu</span>
                                <span class="sidebar-normal" title="Offensive Security Wireless Attacks"> PEN-210 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/evasion-techniques-breaching-defenses">
                                <span class="sidebar-mini-icon">ETBD</span>
                                <span class="sidebar-normal" title="Evasion Techniques and Breaching Defenses"> PEN-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/advanced-web-attacks">
                                <span class="sidebar-mini-icon">AWAE</span>
                                <span class="sidebar-normal" title="Advanced Web Attacks and Exploitation"> WEB-300 </span>
                            </a>
                        </li>
                        <li>
                            <a href="/windows-user-mode-exploit-development">
                                <span class="sidebar-mini-icon">WUMED</span>
                                <span class="sidebar-normal" title="Windows User Mode Exploit Development"> EXP-301 </span>
                            </a>
                        </li>
                    </ul>

                </div>

            </li>

<!--
            <li>

                <a class="nav-link" href="#" data-toggle="modal" data-target="#osresources">
                    <i class="mdi mdi-link-variant mdi-24px"></i>
                    <p>Offsec Resources</p>
                </a>

            </li>
-->
        </ul>

    </div>

</div>

    <div class="main-panel">

        
        <nav class="navbar navbar-expand-lg navbar-transparent  navbar-absolute
  bg-primary">

    <div class="container-fluid">

        <div class="navbar-wrapper">

            <div class="navbar-toggle">
                <button type="button" class="navbar-toggler" aria-label="Toggle Navigation">
                    <span class="navbar-toggler-bar bar1"></span>
                    <span class="navbar-toggler-bar bar2"></span>
                    <span class="navbar-toggler-bar bar3"></span>
                </button>
            </div>

            
            <a class="navbar-brand" href="/">
                <img src="/images/edb-banner-logo-white.png" height="60" alt="Exploit Database">
            </a>

        </div>

        
        <div class="collapse navbar-collapse justify-content-end" id="navigation">

            <ul class="navbar-nav">

                
                    

                        
                           
                           

                            
                            
                                
                            
                        

                        

                            
                                
                            

                            
                               
                                                     
                                
                            

                            
                                
                            

                        
                    
                

                
                    

                        
                            
                            
                                
                            
                        

                    
                

                <li class="nav-item">

                    
                    <a class="nav-link" href="/exploit-database-statistics" aria-label="Exploit Database Statistics">
                        <i class="mdi mdi-chart-bar-stacked mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">Stats</span>
                        </p>
                    </a>

                </li>

                <li class="nav-item dropdown">

                    
                    <a class="nav-link dropdown-toggle" href="/"
                       id="navbarDropdownMenuLink" data-toggle="dropdown"
                       aria-haspopup="true" aria-expanded="false" aria-label="Site Information">

                        <i class="mdi mdi-information-outline mdi-24px"></i>
                        <p>
                            <span class="d-lg-none d-md-block">About Us</span>
                        </p>
                    </a>

                    <div class="dropdown-menu dropdown-menu-right"
                         aria-labelledby="navbarDropdownMenuLink">

                        <a class="dropdown-item" href="#" data-toggle="modal" data-target="#about" aria-label="About Exploit-DB">
                            About Exploit-DB
                        </a>

                        <a class="dropdown-item" href="/history" aria-label="Exploit-DB History">
                            Exploit-DB History
                        </a>

                        <a class="dropdown-item" href="/faq" aria-label="FAQ">
                            FAQ
                        </a>

                    </div>

                </li>

                
                                    <li class="nav-item">

                        <a class="nav-link" href="#" data-toggle="modal" data-target="#search" aria-label="Search Exploit-DB">
                            <i class="mdi mdi-database-search mdi-24px"></i>
                            <p>
                                <span class="d-lg-none d-md-block">Search</span>
                            </p>
                        </a>

                    </li>

                
            </ul>

        </div>

    </div>

</nav>

        
        
    <div class="panel-header panel-header-sm"></div>

    <div class="content">

        <div class="row">

            <div class="col-md-12">

                
                <div class="card">

                    <div class="card-body">

                        <div class="row justify-content-md-center">

                            
                            <h1 class="card-title text-secondary text-center" style="font-size: 2.5em;">
                                Hypervisor Necromancy; Reanimating Kernel Protectors
                            </h1>

                        </div>

                        
                        <div class="ml-2 mr-2">

                            <div class="row">

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                EDB-ID:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                48073
                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                CVE:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                                                                                        N/A

                                                                
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>EDB Verified:</strong>
                                                <i class="mdi mdi-24px mdi-close"
                                                   style="color: #ec5e10">
                                                </i>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Author:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?author=9089">
                                                                    phrack
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Type:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?type=papers">
                                                                    papers
                                                                </a>

                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer">

                                            <div class="stats h6 text-center">

                                                <!-- Display a checkmark if the exploit is verified and an X if not -->
                                                <strong>Paper: </strong>
                                                <a href="/download/48073" data-toggle="tooltip" data-placement="top"
                                                   title="Download" aria-label="Download Paper 48073">
                                                    <i class="mdi mdi-download mdi-24px text-primary"></i>
                                                </a>
                                                &nbsp; / &nbsp;
                                                <a href="/raw/48073" data-toggle="tooltip" data-placement="top"
                                                   title="View Raw" aria-label="View Raw 48073">
                                                    <i class="mdi mdi-code-braces mdi-24px text-primary"></i>
                                                </a>

                                            </div>

                                        </div>

                                    </div>

                                </div>

                                <div class="col-sm-12 col-md-4">

                                    <div class="card card-stats">

                                        <div class="card-body ">

                                            <div class="statistics statistics-horizontal">

                                                <div class="info info-horizontal">

                                                    <div class="row">

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Platform:
                                                            </h3>

                                                            <h6 class="stats-title">

                                                                <a href="/?platform=multiple">
                                                                    Multiple
                                                                </a>

                                                            </h6>

                                                        </div>

                                                        <div class="col-6 text-center">

                                                            <h3 class="info-title">
                                                                Published:
                                                            </h3>

                                                            <h6 class="stats-title">
                                                                2020-02-14
                                                            </h6>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <hr/>

                                        <div class="card-footer ">

                                            <div class="stats h6 text-center">

                                                
                                                <strong>Vulnerable App:</strong>

                                                
                                            </div>

                                        </div>

                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="btn-group ml-3">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/48067" aria-label="View Previous Paper"
                                       data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                        <i class="mdi mdi-arrow-left mdi-36px"></i>
                                    </a>

                                </div>


                                <div class="col">

                                    <div class="btn-group float-right">

                                        <a class="btn btn-primary btn-fab btn-icon btn-round"
                                           href="/papers/48081" aria-label="View Next Paper"
                                           data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                            <i class="mdi mdi-arrow-right mdi-36px"></i>
                                        </a>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                
                <div class="card">

                    <div class="card-body">

                        
                        <pre><code class="language-txt" style="white-space: pre-wrap;">|=-----------------------------------------------------------------------=|
|=----------------------=[ Hypervisor Necromancy; ]=---------------------=|
|=----------------=[ Reanimating Kernel Protectors, or ]=----------------=|
|=-----------------------------------------------------------------------=|
|=--------=[ On emulating hypervisors; a Samsung RKP case study ]=-------=|
|=-----------------------------------------------------------------------=|
|=---------------------------=[ Aris Thallas ]=--------------------------=|
|=--------------------=[ athallas.phrack@gmail.com ]=--------------------=|
|=-----------------------------------------------------------------------=|



--[ Table of Contents

0 - Introduction
1 - Overview
    1.1 - ARM Architecture &amp; Virtualization Extensions
    1.2 - Samsung Hypervisor
    1.3 - Workspace Environment
2 - Framework Implementation &amp; RKP Analysis
    2.1 - System Bootstrap
        2.1.1 - EL1
    2.2 - EL2 Bootstrap
        2.2.1 - Stage 2 translation &amp; Concatenated tables
        2.2.2 - EL2 bootstrap termination and EL1 physical address
    2.3 - RKP Initialization Functions
        2.3.1 - RKP Exception Handlers
        2.3.2 - RKP Initialization
        2.3.3 - RKP Deferred Initialization
        2.3.4 - Miscellaneous Initializations
    2.4 - Final Notes
3 - Fuzzing
    3.1 - Dummy fuzzer
        3.1.1 - Handling Aborts
        3.1.2 - Handling Hangs
    3.2 - AFL with QEMU full system emulation
        3.2.1 - Introduction
        3.2.2 - Implementation
            3.3.2.1 - QEMU patches
            3.3.2.2 - Framework support
            3.3.2.3 - Handling parent translations
            3.3.2.4 - Handling hangs and aborts
            3.3.2.5 - Demonstration
    3.4 - Final Comments
4 - Conclusions
5 - Thanks
6 - References
7 - Source code



--[ 0 - Introduction

Until recently, to compromise an entire system during runtime attackers
found and exploited kernel vulnerabilities. This allowed them to perform a
variety of actions; executing malicious code in the context of the kernel,
modify kernel data structures to elevate privileges, access protected data,
etc. Various mitigations have been introduced to protect against such
actions and hypervisors have also been utilized, appart from their
traditional usage for virtualization support, towards this goal. In the
Android ecosystem this has been facilitated by ARM virtualization
extensions, which allowed vendors/OEMs to implement their own protection
functionalities/logic.

On the other hand, Android devices have been universally a major PITA to
debug due to the large diversity of OEMs and vendors that introduced
endless customizations, the lack of public tools, debug interfaces etc. To
the author&#039;s understanding, setting up a proper debug environment is
usually one of the most important and time consuming tasks and can make a
world of difference in understanding the under examination system or
application in depth (especially true if no source code is available),
identifying 0day vulnerabilities and exploiting them.

In this (rather long) article we will be investigating methods to emulate
proprietary hypervisors under QEMU, which will allow researchers to
interact with them in a controlled manner and debug them. Specifically, we
will be presenting a minimal framework developed to bootstrap Samsung S8+
proprietary hypervisor as a demonstration, providing details and insights
on key concepts on ARM low level development and virtualization extensions
for interested readers to create their own frameworks and Actually Compile
And Boot them ;). Finally, we will be investigating fuzzing implementations
under this setup.

The article is organized as follows. The first section provides background
information on ARM, Samsung hypervisors and QEMU to properly define our
development setup. Next, we will elaborate on the framework implementation
while dealing with the various ARM virtualization and Samsung
implementation nuances. We will continue by demonstrating how to implement
custom dummy fuzzers under this setup and finally for more intelligent
fuzzing incorporate AFL a.k.a. &quot;NFL or something by some chap called
Cameltuft&quot; :p

On a final note, any code snippets, memory offsets or other information
presented throughout this article refer to Samsung version G955FXXU4CRJ5,
QEMU version 4.1.0 and AFL version 2.56b.


--[ 1 - Overview

----[ 1.1 - ARM Architecture &amp; Virtualization Extensions

As stated in &quot;Arm Architecture Reference Manual Armv8, for Armv8-A
architecture profile - Issue E.a&quot; (AARM), Armv8 defines a set of Exception
Levels (EL, also referred to as Execution Levels) EL0 to EL3 and two
security states Secure and Non-secure aka Normal World. The higher the
exception level, the higher the software execution privilege. EL3
represents the highest execution/privilege level and provides support for
switching between the two security states and can access all system
resources for all ELs in both security states. EL2 provides support for
virtualization and in the latest version Armv8.5 support for Secure World
EL2 was introduced. EL1 is the Operating System kernel EL typically
described as _privileged_ and EL0 is the EL of userland applications called
_unprivileged_.


---------------------------------------------------
|              Secure Monitor (EL3)               |
---------------------------------------------------
|   Hypervisor (EL2)*   |  Sec Hypervisor (sEL2)  |
---------------------------------------------------
|        OS (EL1)       |    Trusted OS (sEL1)    |
---------------------------------------------------
|   Userland App (EL0)  |    Secure App (sEL0)    |
---------------------------------------------------
       Normal World             Secure World


Switching between ELs is only allowed via taking an exception or returning
from one. Taking an exception leads to a higher or the same EL while
returning from one (via `eret`) to lower or the same EL. To invoke EL1,
`svc` (SuperVisor Call) command is used which triggers a synchronous
exception which is then handled by the corresponding OS kernel exception
vector entry. Similarly, EL2 is invoked via the `hvc` (HyperVisor Call)
command and EL3 via the `smc` (Secure Monitor Call) command. Switching
between security states is only done by EL3.

When a hypervisor is present in the system it can control various aspects
of EL1 behavior, such as trapping certain operations traditionally handled
by EL1 to the hypervisor allowing the latter to decide how to handle the
operation. Hypervisor Configuration Register (HCR_EL2) is the system
register the allows hypervisors to define which of these behaviors they
would like to enable.

Last but not least, a core feature of the virtualization extensions is the
Stage 2 (S2) translation. As depicted below, this feature splits the
standard translation process into two steps. First, using the EL1
translation tables (stored at Translation Table Base Register TTBRn_EL1)
which are controlled by EL1, the Virtual Address (VA) is translated to an
Intermediate Physical Address (IPA), instead of a Physical Address (PA) of
the standard process. The IPA is then translated to a PA by the hypervisor
using the Stage 2 translation table (stored at Virtual Translation Table
Base Register VTTBR_EL2) which is fully controlled by EL2 and not
accessible by EL1. Note that once S2 translation is enabled, EL1 does not
access physical memory immediately and every IPA must always be translated
via S2 tables for the actual PA access.

Of course, EL2 and EL3 maintain their own Stage 1 translation tables for
their code and data VAs, which perform the traditional VA to PA mapping.


                                                Intermediate
  Virtual Memory Map                            Guest Physical
  Guest OS                                      Memory Map
                                                 (IPA)
 +----------------+                            +-------------+
 | +------------+ |                            | +---------+ |
 | |  OS (EL 1) | |   +--------------------+   | |  Flash  | |
 | +------------+ |   | Guest OS           |   | +---------+ |
 |                +--&gt;+ Translation Tables +--&gt;+             |
 | +------------+ |   | TTBRn_EL1          |   | +---------+ |
 | | APP (EL 0) | |   +--------------------+   | |   RAM   | |
 | +------------+ |                            | +---------+ |
 +----------------+                            +-------------+
                                                      |
        +---------------------------------------------+
        |
        |                                      +-------------+
        v                        Real Physical | +---------+ |
 +------+-------------+          Memory Map    | |  Flash  | |
 | Translation tables |                        | +---------+ |
 | VTTBR_EL2          +-----------------------&gt;+             |
 +--------------------+                        | +---------+ |
                                +-------------&gt;+ |   RAM   | |
                                |              | +---------+ |
 +----------------+   +---------+----------+   +-------------+
 | +------------+ |   | Hypervisor         |
 | | Hyp (EL 2) | +--&gt;+ Translation Tables |
 | +------------+ |   | TTBR0_EL2          |
 +----------------+   +--------------------+


In this article we will be focusing on Normal World, implementing the EL3
and EL1 framework to bootstrap a proprietary EL2 implementation.


----[ 1.2 - Samsung Hypervisor

As part of its ecosystem Samsung implements a security platform named
Samsung Knox [01] which among others comprises a hypervisor implementation
called Real-Time Kernel Protection (RKP). RKP aims to achieve various
security features [02], such as the prevention of unauthorized privileged
code execution, the protection of critical kernel data (i.e. process
credentials) etc.

Previous versions of the Samsung hypervisor have been targeted before, with
[03] being the most notable exemplar. There, Samsung S7 hypervisor was
analyzed in great detail and the article provided valuable information.
Moreover, Samsung S8+ hypervisor is stripped and strings are obfuscated
whereas S7 is not, providing a valuable resource for binary diffing and
string comparison. Finally, the under examination S8+ hypervisor shares
many similarities regarding the system architecture which have slowly begun
disappearing in the latest models such as Samsung S10.

One of the most obvious differences is the location of the binary and the
bootstrap process. In sum, for S8+ the hypervisor binary is embedded in the
kernel image and the precompiled binary can be found in the kernel source
tree under init/vmm.elf (the kernel sources are available at [04]). The
kernel is also responsible for bootstrapping and initializing RKP. On the
other hand, the S10+ hypervisor binary resides in a separate partition, is
bootstrapped by the bootloader and then initialized by the kernel. We will
provide more details in the corresponding sections that follow.

All these reasons contributed to the selection of the S8 hypervisor as the
target binary, as they ease the analysis process, remove undesired
complexity from secondary features/functionalities and allow focusing on
the core required knowledge for our demonstration. Ultimately, though, it
was an arbitrary decision and other hypervisors could have been selected.


----[ 1.3 - Workspace Environment

As aforementioned the targeted Samsung version is G955FXXU4CRJ5 and QEMU
version is 4.1.0. Both the hypervisor and our framework are 64-bit ARM
binaries. QEMU was configured to only support AArch64 targets and built
with gcc version 7.4.0, while the framework was built with
aarch64-linux-gnu-gcc version 8.3.0. For debugging purposes we used
aarch64-eabi-linux-gdb version 7.11.

$ git clone git://git.qemu-project.org/qemu.git
$ cd qemu
$ git checkout v4.1.0
$ ./configure --target-list=aarch64-softmmu --enable-debug
$ make -j8

AFL version is 2.56b and is also compiled with gcc version 7.4.0.

$ git clone https://github.com/google/afl
$ cd afl
$ git checkout v2.56b
$ make


--[ 2 - Framework Implementation &amp; RKP Analysis

The first important thing to mention regarding the framework is that it is
compiled as an ELF AArch64 executable and treated as a kernel image, since
QEMU allows to boot directly from ELF kernel images in EL3 and handles the
image loading process. This greatly simplifies the boot process as we are
not required to implement separate firmware binary to handle image loading.
Function `_reset()` found in framework/boot64.S is the starting execution
function and its physical address is 0x80000000 (as specified in the linker
script framework/kernel.ld) instead of the default value of 0x40000000 for
our QEMU setup (the reasoning behind this is explained later when the
framework physical memory layout is discussed).

We are now ready to start executing and debugging the framework which is
contained in the compilation output kernel.elf. We use the virt platform,
cortex-a57 cpu with a single core, 3GB of RAM (the reason for this size is
clarified during the memory layout discussion later), with Secure mode
(EL3) and virtualization mode (EL2) enabled and wait for gdb to attach.


$ qemu-system-aarch64            \
    -machine virt                \
    -cpu cortex-a57              \
    -smp 1                       \
    -m 3G                        \
    -kernel kernel.elf           \
    -machine gic-version=3       \
    -machine secure=true         \
    -machine virtualization=true \
    -nographic                   \
    -S -s

$ aarch64-eabi-linux-gdb kernel.elf -q
    Reading symbols from kernel.elf...done.
    (gdb) target remote :1234
    Remote debugging using :1234
    _Reset () at boot64.S:15
    15          ldr x30, =stack_top_el3
    (gdb) disassemble
    Dump of assembler code for function _Reset:
    =&gt; 0x0000000080000000 &lt;+0&gt;:     ldr     x30, 0x80040000
       0x0000000080000004 &lt;+4&gt;:     mov     sp, x30
    ...


The framework boot sequence is presented below. We will explain the
individual steps in the following sections. Note that we will not be
following the graph in a linear manner.


        +-------+                  +-------+                  +-------+
        |  EL3  |                  |  EL2  |                  |  EL1  |
        +-------+                  +-------+                  +-------+
            |                          .                          .
         _reset                        .                          .
            |                          .                          .
        copy_vmm                       .                          .
            |                          .                          .
          eret  -------------------------------------------&gt;  start_el1
            |                          .                          |
            |                          .                    __enable_mmu
            |                          .                          |
    handle_interrupt_el3  &lt;---------------------------  smc(CINT_VMM_INIT)
            |                          .                          |
      _vmm_init_el3                    .                          |
            |                          .                          |
      eret(0xb0101000)  ----------&gt;  start                        |
            |                          |                          |
            |                          |                          |
    handle_interrupt_el3  &lt;--- smc(0xc2000401)                    |
            |                          |                          |
 _reset_and_drop_el1_main              |                          |
            |                          |                          |
          eret --------------------------------------------&gt;  _el1_main
            |                          |                          |
            |                          |                       el1_main
            |                          |                          |
            |                          |                       rkp_init
            |                          |                          |
            |                          |                       rkp_call
            |                          |                          |
            |                    vmm_dispatch  &lt;----------  hvc(RKP_INIT)
            |                          |                          |
            |               vmm_synchronous_handler               |
            |                          |                          |
            |                      rkp_main                       |
            |                          |                          |
            |                 my_handle_cmd_init                  |
            |                          |                          |
            |               various init functions...             |
            |                          |                          |
            |                  rkp_paging_init                    |
            |                          |                          |
            |                process el1 page tables              |
            |                          |                          |
            |                        eret  -----------------&gt;  el1_main
            |                          |                          |
            |                          |                          +---+
            |                          |                          |   |
            |                          |                          |&lt;--+



----[ 2.1 - System Bootstrap

The first thing to do after a reset is to define the stack pointers and
exception vectors. Since EL2 system register values are handled by RKP
during its initialization, we will be skipping EL2 registers to avoid
affecting RKP configurations, except for any required reserved values as
dictated by AARM. Moreover, various available oracles which will be
discussed later can be examined to verify the validity of the system
configuration after initializations are complete.

Stack pointers (SP_ELn) are set to predefined regions, arbitrarily sized
8kB each. Vector tables in AArch64 comprise 16 entries of 0x80 bytes each,
must be 2kB aligned and are set in VBAR_ELx system configuration registers
where x denotes the EL (for details refer to AARM section &quot;D1.10 Exception
entry&quot; and &quot;Bare-metal Boot Code for ARMv8-A Processors&quot;).


| Exception taken from EL  | Synchronous | IRQ   | FIQ   | SError |
-------------------------------------------------------------------
| Current EL (SP_EL0)      | 0x000       | 0x080 | 0x100 | 0x180  |
| Current EL (SP_ELx, x&gt;0) | 0x200       | 0x280 | 0x300 | 0x380  |
| Lower EL AArch64         | 0x400       | 0x480 | 0x500 | 0x580  |
| Lower EL AArch32         | 0x600       | 0x680 | 0x700 | 0x780  |


In our minimal implementation we will not be enabling IRQs or FIQs.
Moreover, we will not be implementing any EL0 applications or performing
`svc` calls from our kernel and as a result all VBAR_EL1 entries are set to
lead to system hangs (infinite loops). Similarly, for EL3 we only expect
synchronous exceptions from lower level AArch64 modes. As a result only the
corresponding `vectors_el3` entry (+0x400) is set and all others lead to
system hang as with EL1 vectors. The exception handler saves the current
processor state (general purpose and state registers) and invokes the
second stage handler. We follow the `smc` calling convention [05], storing
the function identifier in W0 register and arguments in registers X1-X6
(even though we only use one argument). If the function identifier is
unknown, then the system hangs, a decision of importance in the fuzzing
setup.


// framework/vectors.S

.align 11
.global vectors
vectors:
    /*
     * Current EL with SP0
     */
    .align 7
    b       .          /* Synchronous */
    .align 7
    b       .          /* IRQ/vIRQ */
    ...

.align 11
.global vectors_el3
vectors_el3:
    ...

    /*
     * Lower EL, aarch64
     */
    .align 7
    b el3_synch_low_64
...

el3_synch_low_64:
    build_exception_frame

    bl  handle_interrupt_el3

    cmp x0, #0
    b.eq 1f
    b .
1:
    restore_exception_frame
    eret
...


Processors enter EL3 after reset and in order to drop to a lower ELs we
must initialize the execution state of the desired EL and control registers
and construct a fake state in the desired EL to return to via `eret`. Even
though we will be dropping from EL3 directly to EL1 to allow the
proprietary EL2 implementation to define its own state, we still have to
set some EL2 state registers values to initialize EL1 execution state.
Failure to comply with the minimal configuration results in `eret`
invocation to have no effect on the executing exception level (at least in
QEMU), in other words we can not drop to lower ELs.

In detail, to drop from EL3 to EL2 we have to define EL2 state in Secure
Configuration Register (SCR_EL3). We set SCR_EL3.NS (bit 0) to specify that
we are in Normal World, SCR_EL3.RW (bit 10) to specify that EL2 is AArch64
and any required reserved bits. Additionally, we set SCR_EL3.HCE (bit 8) to
enable the `hvc` instruction here, although this could also be performed at
later steps. Next, to be able to drop to EL1 we modify Hypervisor
Configuration Register (HCR_EL2) to set HCR_EL2.RW (bit 31) and specify
that EL1 is AArch64 and any other required reserved bits. To be as close as
possible to the original setup we set some more bits here, such as
HCR_EL2.SWIO (bit 1) which dictates the cache invalidation behavior. These
additional values are available to us via the aforementioned oracles which
will be presented later in the article.


// framework/boot64.S

.global _reset
_reset:
    // setup EL3 stack
    ldr x30, =stack_top_el3
    mov sp, x30

    // setup EL1 stack
    ldr x30, =stack_top_el1
    msr sp_el1, x30

    ...

    // Setup exception vectors for EL1 and EL3 (EL2 is setup by vmm)
    ldr x1, = vectors
    msr vbar_el1, x1
    ldr x1, = vectors_el3
    msr vbar_el3, x1

    ...

    // Initialize EL3 register values
    ldr   x0, =AARCH64_SCR_EL3_BOOT_VAL
    msr   scr_el3, x0

    // Initialize required EL2 register values
    mov   x0, #( AARCH64_HCR_EL2_RW )
    orr   x0, x0,#( AARCH64_HCR_EL2_SWIO )
    msr   hcr_el2, x0

    ...

    /*
     * DROP TO EL1
     */
    mov   x0, #( AARCH64_SPSR_FROM_AARCH64 | AARCH64_SPSR_MODE_EL1 | \
                 AARCH64_SPSR_SP_SEL_N)
    msr   spsr_el3, x0


    // drop to function start_el1
    adr   x0, start_el1
    msr   elr_el3, x0
    eret


For the fake lower level state, Exception Link Register (ELR_EL3) holds the
exception return address, therefore we set it to the desired function
(`start_el1()`). Saved Process Status Register (SPSR_EL3) holds the
processor state (PSTATE) value before the exception, so we set its values
so that the fake exception came from EL1 (SPSR_EL3.M bits[3:0]), using
SP_EL1 (SPSR_EL3.M bit 0) and executing in AArch64 mode (SPSR_EL3.M bit 4).
`eret` takes us to `start_el1()` in EL1. The final register related to
exceptions is Exception Syndrome Register (ESR_ELx) which holds information
regarding the nature of the exception (syndrome information) and as such it
has no value to the returning EL and can be ignored.


------[ 2.1.1 - EL1

As aforementioned our goal is to provide a minimal setup. Considering this,
there is also the need to be as close as possible to the original setup.
Our EL1 configuration is defined with those requirements in mind and to
achieve this we used system configuration register values from both the
kernel source and the EL2 oracles that will be presented in the following
sections, but for now we can safely assume these are arbitrarily chosen
values. We will be presenting details regarding some critical system
register values but for detailed descriptions please refer to AARM section
&quot;D13.2 General system control registers&quot;.


start_el1:
    // initialize EL1 required register values

    ldr x0, =AARCH64_TCR_EL1_BOOT_VAL
    msr tcr_el1, x0

    ldr x0, =AARCH64_SCTLR_EL1_BOOT_VAL
    msr sctlr_el1, x0
    ...


#define AARCH64_TCR_EL1_BOOT_VAL (                                \
  ( AARCH64_TCR_IPS_1TB        &lt;&lt; AARCH64_TCR_EL1_IPS_SHIFT   ) | \
  ( AARCH64_TCR_TG1_4KB        &lt;&lt; AARCH64_TCR_EL1_TG1_SHIFT   ) | \
  ( AARCH64_TCR_TSZ_512G       &lt;&lt; AARCH64_TCR_EL1_T1SZ_SHIFT  ) | \
  ( AARCH64_TCR_TG0_4KB        &lt;&lt; AARCH64_TCR_EL1_TG0_SHIFT   ) | \
  ( AARCH64_TCR_TSZ_512G       &lt;&lt; AARCH64_TCR_EL1_T0SZ_SHIFT  ) | \
  ...
  )


As Translation Control Register (TCR_EL1) values suggest, we use a 40-bit
1TB sized Intermediate Physical Address space (TCR_EL1.IPS bits[34:32]),
for both TTBR0_EL1 and TTBR1_EL1 4kB Translation Granule size (TCR_EL1.TG1
bits [31:30] and TCR_EL1.TG0 [15:14] respectively) and 25 size offset which
means that there is a 64-25=39 bit or 512GB region of input VAs for each
TTBRn_EL1 (TCR_EL1.T1SZ bits[21:16] and TCR_EL1.T0SZ bits[5:0]).

By using 4kB Granularity each translation table size is 4kB and each entry
is a 64-bit descriptor, hence 512 entries per table. So at Level 3 we have
512 entries each pointing to a 4kB page or in other words we can map a 2MB
space. Similarly, Level 2 has 512 entries each pointing to a 2MB space
summing up to a 1GB address space and Level 1 entries point to 1GB spaces
summing up to a 512GB address space. In this setup where there are 39bit
input VAs we do not require a Level 0 table as shown from the translation
graph. For more details refer to AARM section &quot;D5.2 The VMSAv8-64 address
translation system&quot;.


+---------+---------+---------+-----------+
| [38:30] | [29:21] | [20:12] |  [11:0]   | VA segmentation with
|         |         |         |           | 4kB Translation Granule
| Level 1 | Level 2 | Level 3 | Block off | 512GB input address space
+---------+---------+---------+-----------+


                                         Physical Address
                             +-------------------------+-----------+
 VA Translation              |          [39:12]        |  [11:0]   |
 demonstration with          +-------------------------+-----------+
 4kB Granule,                               ^                 ^
 512GB Input VA Space                       |                 |
 1TB IPS                                    |                 +----------+
                                            +-------------------------+  |
                                                                      |  |
                Level 1 tlb          Level 2 tlb        Level 3 tlb   |  |
    +--------&gt; +-----------+   +---&gt;+-----------+  +--&gt;+-----------+  |  |
    |          |           |   |    |           |  |   |           |  |  |
    |          +-----------+   |    +-----------+  |   |           |  |  |
    |          | 1GB block |   |    | 2MB block |  |   |           |  |  |
    |          |   entry   |   |    |   entry   |  |   |           |  |  |
    |          +-----------+   |    +-----------+  |   |           |  |  |
    |          |           |   |    |           |  |   |           |  |  |
    |          +-----------+   |    |           |  |   |           |  |  |
    |      +--&gt;+ Tbl entry +---+    |           |  |   |           |  |  |
+---+---+  |   +-----------+        +-----------+  |   |           |  |  |
| TTBRn |  |   |           |    +--&gt;+ Tbl entry +--+   +-----------+  |  |
+---+---+  |   |           |    |   +-----------+   +-&gt;+ Pg entry  +--+  |
    ^      |   |           |    |   |           |   |  +-----------+     |
    |      |   |           |    |   |           |   |  |           |     |
    +--+   |   +-----------+    |   +-----------+   |  +-----------+     |
       |   |                    +------+            |                    |
       |   +----+ Index +----+         |         +--+        +-----------+
       |                     |         |         |           |
+----+-+-+----+---------+----+----+----+----+----+----+------+----+
|    |   |    | Level 0 | Level 1 | Level 2 | Level 3 | PA offset | VA
+----+---+----+---------+---------+---------+---------+-----------+
      [55]      [47:39]   [38:30]   [29:21]   [20:12]     [11:0]
  TTBRn Select


For Levels 1 and 2 every entry can either point to the next translation
table level (table entry) or to the actual physical address (block entry)
effectively ending translation. The entry type is defined in bits[1:0],
where bit 0 identifies whether the descriptor is valid (1 denotes a valid
descriptor) and bit 1 identifies the type, value 0 being used for block
entries and 1 for table entries. As a result entry type value 3 identifies
table entries and value 1 block entries. Level 1 block entries point to 1GB
memory regions with VA bits[29:0] being used as the PA offset and Level 2
block entries point to 2MB regions with bits[20:0] used as the offset. Last
but not least, Level 3 translation tables can only have page entries
(similar to block entries but with descriptor type value 3, as previous
level table entries).


61          51                             11         2  1:0
+------------+-----------------------------+----------+------+ Block Entry
| Upper Attr |           ...               | Low Attr | Type | Stage 1
+------------+-----------------------------+----------+------+ Translation

| bits | Attr      | Description                  |
---------------------------------------------------
| 4:2  | AttrIndex | MAIR_EL1 index               |
| 7:6  | AP        | Access permissions           |
| 53   | PXN       | Privileged execute never     |
| 54   | (U)XN     | (Unprivileged) execute never |
                                                    Block entry attributes
| AP | EL0 Access  | EL1/2/3 Access |               for Stage 1 translation
-------------------------------------
| 00 | None        |   Read Write   |
| 01 | Read Write  |   Read Write   |
| 10 | None        |   Read Only    |
| 11 | Read Only   |   Read Only    |



61      59                                            2  1:0
+--------+--------------------------------------------+------+ Table Entry
|  Attr  |                     ...                    | Type | Stage 1
+--------+--------------------------------------------+------+ Translation

| bits  | Attr | Description                |
---------------------------------------------
| 59    | PXN  | Privileged execute never   |
| 60    | U/XN | Unprivileged execute never |
| 62:61 | AP   | Access permissions         |
                                                Table entry attributes
| AP | Effect in subsequent lookup levels |     for Stage 1 translation
-------------------------------------------
| 00 | No effect                          |
| 01 | EL0 access not permitted           |
| 10 | Write disabled                     |
| 11 | Write disabled, EL0 Read disabled  |


In our setup we use 2MB regions to map the kernel and create two mappings.
Firstly, an identity mapping (VAs are equal to the PAs they are mapped to)
set to TTBR0_EL1 and used mainly when the system transitions from not using
the MMU to enabling it. Secondly, the TTBR1_EL1 mapping where PAs are
mapped to VA_OFFSET + PA, which means that getting the PA from a TTBR1_EL1
VA or vice versa is simply done by subtracting or adding the VA_OFFSET
correspondingly. This will be of importance during the RKP initialization.


#define VA_OFFSET 0xffffff8000000000

#define __pa(x) ((uint64_t)x - VA_OFFSET)
#define __va(x) ((uint64_t)x + VA_OFFSET)


The code to create the page tables and enable the MMU borrows heavily from
the Linux kernel implementation. We use one Level 1 entry and the required
amount of Level 2 block entries with the two tables residing in contiguous
preallocated (defined in the linker script) physical pages. The Level 1
entry is evaluated by macro `create_table_entry`. First, the entry index is
extracted from VA bits[38:30]. The entry value is the next Level table PA
ORed with the valid table entry value. This also implicitly defines the
table entry attributes, where (U)XN is disabled, Access Permissions (AP)
have no effect in subsequent levels of lookup. For additional details
regarding the memory attributes and their hierarchical control over memory
accesses refer to AARM section &quot;D5.3.3 Memory attribute fields in the
VMSAv8-64 translation table format descriptors&quot;.

A similar process is followed for Level 2 but in a loop to map all required
VAs in macro `create_block_map`. The entry value is the PA we want to map
ORed with block entry attribute values defined by AARCH64_BLOCK_DEF_FLAGS.
The flag value used denotes a non-secure memory region, (U/P)XN disabled,
Normal memory as defined in Memory Attribute Indirection Register
(MAIR_EL1) and Access Permissions (AP) that allow Read/Write to EL1 and no
access to EL0. As with table entries, for detailed description refer to
AARM section &quot;D5.3.3&quot;. Finally, MAIR_ELx serves as a table holding
information/attributes of memory regions and readers may refer to AARM
section &quot;B2.7 Memory types and attributes&quot; for more information.


// framework/aarch64.h

/*
 * Block default flags for initial MMU setup
 *
 * block entry
 * attr index 4
 * NS = 0
 * AP = 0 (EL0 no access, EL1 rw)
 * (U/P)XN disabled
 */
#define AARCH64_BLOCK_DEF_FLAGS (                          \
  AARCH64_PGTBL_BLK_ENTRY                                | \
  0x4 &lt;&lt; AARCH64_PGTBL_BLK_ENT_STAGE1_LOW_ATTR_IDX_SHIFT | \
  AARCH64_PGTBL_BLK_ENT_STAGE1_LOW_ATTR_AP_RW_ELHIGH &lt;&lt;    \
      AARCH64_PGTBL_BLK_ENT_STAGE1_LOW_ATTR_AP_SHIFT     | \
  AARCH64_PGTBL_BLK_ENT_STAGE1_LOW_ATTR_SH_INN_SH    &lt;&lt;    \
      AARCH64_PGTBL_BLK_ENT_STAGE1_LOW_ATTR_SH_SHIFT     | \
  1 &lt;&lt; AARCH64_PGTBL_BLK_ENT_STAGE1_LOW_ATTR_AF_SHIFT      \
  )


// framework/mmu.S

__enable_mmu:
    ...

    bl __create_page_tables

    isb
    mrs x0, sctlr_el1
    orr x0, x0, #(AARCH64_SCTLR_EL1_M)
    msr sctlr_el1, x0
...

__create_page_tables:

    mov x7, AARCH64_BLOCK_DEF_FLAGS
    ...

    // x25 = swapper_pg_dir
    u/ x20 = VA_OFFSET
    mov x0, x25
    adrp x1, _text
    add x1, x1, x20
    create_table_entry x0, x1, #(LEVEL1_4K_INDEX_SHIFT), \
                        #(PGTBL_ENTRIES), x4, x5

    adrp x1, _text
    add x2, x20, x1
    adrp x3, _etext
    add x3, x3, x20
    create_block_map x0, x7, x1, x2, x3
...

.macro create_table_entry, tbl, virt, shift, ptrs, tmp1, tmp2
    lsr \tmp1, \virt, \shift
    and \tmp1, \tmp1, \ptrs - 1                // table entry index
    add \tmp2, \tbl, #PAGE_SIZE                // next page table PA
    orr \tmp2, \tmp2, #AARCH64_PGTBL_TBL_ENTRY // valid table entry
    str \tmp2, [\tbl, \tmp1, lsl #3]           // store new entry
    add \tbl, \tbl, #PAGE_SIZE                 // next level table page
.endm

.macro  create_block_map, tbl, flags, phys, start, end
    lsr     \phys, \phys, #LEVEL2_4K_INDEX_SHIFT
    lsr     \start, \start, #LEVEL2_4K_INDEX_SHIFT
    and     \start, \start, #LEVEL_4K_INDEX_MASK     // table index
    orr     \phys, \flags, \phys, lsl #LEVEL2_4K_INDEX_SHIFT // table entry
    lsr     \end, \end, #LEVEL2_4K_INDEX_SHIFT     // block entries counter
    and     \end, \end, #LEVEL_4K_INDEX_MASK       // table end index
    1:   str     \phys, [\tbl, \start, lsl #3]  // store the entry
    add     \start, \start, #1                     // next entry
    add     \phys, \phys, #LEVEL2_4K_BLK_SIZE      // next block
    cmp     \start, \end
    b.ls    1b
.endm

...


As a demonstration we perform a manual table walk for VA 0xffffff8080000000
which should be the TTBR1_EL1 VA of function `_reset()`. The Level 1 table
index (1) is 2 and the entry value is 0x8008a003 which denotes a valid
table descriptor at PA 0x8008a000. The Level 2 entry index (2) is 0 and
value of the entry is 0x80000711 which denotes a block entry at physical
address 0x80000000. The remaining VA bits setting the PA offset are zero
and examining the resulting PA is of course the start of function
`_reset()`. Note that since we have not yet enabled the MMU (as shown in
the disassembly this is performed in the next instructions), all memory
accesses with gdb refer to PAs that is why we can directly examine the page
tables and resulting PA. In our setup that would be true even with MMU
enabled due to the identity mapping, however, this should not be assumed to
apply to every system.


(gdb) disas
Dump of assembler code for function __enable_mmu:
   0x00000000800401a0 &lt;+0&gt;:     mov     x28, x30
   0x00000000800401a4 &lt;+4&gt;:     adrp    x25, 0x80089000 // TTBR1_EL1
   0x00000000800401a8 &lt;+8&gt;:     adrp    x26, 0x8008c000
   0x00000000800401ac &lt;+12&gt;:    bl      0x80040058 &lt;__create_page_tables&gt;
=&gt; 0x00000000800401b0 &lt;+16&gt;:    isb
   0x00000000800401b4 &lt;+20&gt;:    mrs     x0, sctlr_el1
   0x00000000800401b8 &lt;+24&gt;:    orr     x0, x0, #0x1
End of assembler dump.

(gdb)  p/x ((0xffffff8000000000 + 0x80000000) &gt;&gt; 30) &amp; 0x1ff      /* (1) */
$19 = 0x2

(gdb)  x/gx ($TTBR1_EL1 + 2*8)
0x80089010:     0x000000008008a003

(gdb)  p/x ((0xffffff8000000000 + 0x80000000) &gt;&gt; 21) &amp; 0x1ff      /* (2) */
$20 = 0x0

(gdb)  x/gx 0x000000008008a000
0x8008a000:     0x0000000080000711

(gdb)  x/10i 0x0000000080000000
   0x80000000 &lt;_reset&gt;: ldr     x30, 0x80040000
   0x80000004 &lt;_reset+4&gt;:       mov     sp, x30
   0x80000008 &lt;_reset+8&gt;:       mrs     x0, currentel


Finally, with the MMU enabled we are ready to enable RKP. Since the EL2
exception vector tables are not set, the only way to do that is to drop to
EL2 from EL3 as we did for EL1. We invoke `smc` with function identifier
CINT_VMM_INIT which the EL3 interrupt handler redirects to function
`_vmm_init_el3()`.


----[ 2.2 - EL2 Bootstrap

RKP binary is embedded in our kernel image using the `incbin` assembler
directive as shown below and before dropping to EL2 we must place the
binary in its expected physical address. Since RKP is an ELF file, we can
easily obtain the PA and entry point which for this specific RKP version
are 0xb0100000 and 0xb0101000 respectively. `copy_vmm()` function copies
the binary from its kernel position to the expected PA during the system
initialization in function `_reset()`.


// framework/boot64.S
...

.global _svmm
_svmm:
.incbin &quot;vmm-G955FXXU4CRJ5.elf&quot;
.global _evmm
_evmm:
...


$ readelf -l vmm-G955FXXU4CRJ5.elf

Elf file type is EXEC (Executable file)
Entry point 0xb0101000
There are 2 program headers, starting at offset 64

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  LOAD           0x0000000000000000 0x00000000b0100000 0x00000000b0100000
                 0x000000000003e2e0 0x000000000003e6c0  RWE    0x10000
  ...


At long last we are ready to drop to EL2. Similarly to dropping to EL1, we
set ELR_EL3 to the RKP entry point and SPSR_EL3 so that the fake exception
came from EL2 executing in AArch64 mode. We additionally set X0 and X1 to
to RKP start PA and reserved size. These values are dictated by the Samsung
kernel implementation and the oracles and required by the EL2
implementation which will be explained shortly. Readers interested in the
Samsung kernel implementation can refer to kernel function `vmm_init()` at
kernel/init/vmm.c which is called during the kernel initialization in
function `start_kernel()`.


// framework/boot64.S

.global _vmm_init_el3
.align 2
_vmm_init_el3:
    // return to vmm.elf entry (RKP_VMM_START + 0x1000)
    mov   x0, #RKP_VMM_START
    add   x0, x0, #0x1000
    msr   elr_el3, x0
    mov   x0, #(AARCH64_SPSR_FROM_AARCH64 | AARCH64_SPSR_MODE_EL2 | \
                AARCH64_SPSR_SP_SEL_N)
    msr   spsr_el3, x0

    // these are required for the correct hypervisor setup
    mov   x0, #RKP_VMM_START
    mov   x1, #RKP_VMM_SIZE
    eret
    .inst       0xdeadc0de //crash for sure
ENDPROC(_vmm_init_el3)


One valuable source of information at this point is the Linux kernel procfs
entry /proc/sec_log as it provides information about the aforementioned
values during Samsung kernel `vmm_init()` invocation. This procfs entry is
part of the Exynos-SnapShot debugging framework and more information can be
found in the kernel source at kernel/drivers/trace/exynos-ss.c. A sample
output with RKP related values is displayed below. Apart from the RKP
related values we can see the kernel memory layout which will be helpful in
creating our framework memory layout to satisfy the plethora of criteria
introduced by RKP which will be presented later.


RKP: rkp_reserve_mem, base:0xaf400000, size:0x600000
RKP: rkp_reserve_mem, base:0xafc00000, size:0x500000
RKP: rkp_reserve_mem, base:0xb0100000, size:0x100000
RKP: rkp_reserve_mem, base:0xb0200000, size:0x40000
RKP: rkp_reserve_mem, base:0xb0400000, size:0x7000
RKP: rkp_reserve_mem, base:0xb0407000, size:0x1000
RKP: rkp_reserve_mem, base:0xb0408000, size:0x7f8000
software IO TLB [mem 0x8f9680000-0x8f9a80000] (4MB) mapped at
    [ffffffc879680000-ffffffc879a7ffff] Memory: 3343540K/4136960K available
    (11496K kernel code, 3529K rwdata, 7424K rodata, 6360K init, 8406K bss,
    637772K reserved, 155648K cma-reserved)
Virtual kernel memory layout:
    modules : 0xffffff8000000000 - 0xffffff8008000000   (   128 MB)
    vmalloc : 0xffffff8008000000 - 0xffffffbdbfff0000   (   246 GB)
      .init : 0xffffff8009373000 - 0xffffff80099a9000   (  6360 KB)
      .text : 0xffffff80080f4000 - 0xffffff8008c2f000   ( 11500 KB)
    .rodata : 0xffffff8008c2f000 - 0xffffff8009373000   (  7440 KB)
      .data : 0xffffff80099a9000 - 0xffffff8009d1b5d8   (  3530 KB)
    vmemmap : 0xffffffbdc0000000 - 0xffffffbfc0000000   (     8 GB maximum)
              0xffffffbdc0000000 - 0xffffffbde2000000   (   544 MB actual)
SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=8, Nodes=1
RKP: vmm_reserved
  .base=ffffffc030100000 .size=1048576
  .bss=ffffffc03013e2e0 .bss_size=992
  .text_head=ffffffc030101000 .text_head_size=192
RKP: vmm_kimage
.base=ffffff8009375a10  .size=255184
RKP: vmm_start=b0100000, vmm_size=1048576
RKP: entry point=00000000b0101000
RKP: status=0
in rkp_init, swapper_pg_dir : ffffff800a554000


The entry point eventually leads to RKP function `vmm_main()` (0xb0101818).
The function initially checks whether RKP has already been initialized (3)
and if true it returns, or else proceeds with the initialization and sets
the initialization flag. Immediately after this, `memory_init()` function
(0xb0101f24) is called where a flag is set indicating that memory is active
and a 0x1f000 sized buffer at 0xb0220000 is initialized to zero.


// vmm-G955FXXU4CRJ5.elf

int64_t vmm_main(int64_t hyp_base_arg, int64_t hyp_size_arg, char **stacks)
{
    ...

    if ( !initialized_ptr )                                       /* (3) */
    {
        initialized_ptr = 1;
        memory_init();

        log_message(&quot;RKP_cdb5900c %sRKP_b826bc5a %s\n&quot;,
                                    &quot;Jul 11 2018&quot;, &quot;11:19:43&quot;);

        /* various log messages and misc initializations */

        heap_init(base, size);
        stacks = memalign(8, 0x10000) + 0x2000;

        vmm_init();
        ...

        if (hyp_base_arg != 0xB0100000)
            return -1;
        ...

        set_ttbr0_el2(&amp;_static_s1_page_tables_start___ptr);
        s1_enable();

        set_vttbr_el2(&amp;_static_s2_page_tables_start___ptr);
        s2_enable();
    }
    ...

    return result;
}


This buffer is the RKP log and along with RKP debug log at 0xb0200000,
which will be presented later, they comprise the EL2 oracles. Both of them
are made available via procfs entry /proc/rkp_log and interested readers
can check kernel/drivers/rkp/rkp_debug_log.c for more information from the
kernel perspective. RKP log is written to by `log_message()` function
(0xb0102e94) among others and an edited sample output from `vmm_main()`
with deobfuscated strings as comments with the help of S7 hypervisor binary
as mentioned before.


RKP_1f22e931 0xb0100000 RKP_dd15365a 40880   // file base: %p size %s
RKP_be7bb431 0xb0100000 RKP_dd15365a 100000  // region base: %p size %s
RKP_2db69dc3 0xb0220000 RKP_dd15365a 1f000   // memory log base: %p size %s
RKP_2c60d5a7 0xb0141000 RKP_dd15365a bf000   // heap base: %p size %s


During the initialization the heap is initialized and memory is allocated
for the stack which has been temporarily set to a reserved region during
compilation. Next, in `vmm_init()` (0xb0109758) two critical actions are
performed. First, the EL2 exception vector table (0xb010b800) is set in
VBAR_EL2 enabling us to invoke RKP from EL1 via `hvc`. Finally, HCR_EL2.TVM
(bit 26) is set trapping EL1 writes to virtual memory control registers
(SCTLR_EL1, TTBRnRL1, TCR_EL1, etc) to EL2 with Syndrome Exception Class
(ESR_EL2.EC bits [31:26]) value 0x18 (more on this while discussing the EL2
synchronous exception handler).

At this point we clarify one the aforementioned constrains; that of the RKP
bootstrap arguments. The RKP PA is compared at this point with hardcoded
value 0xb0100000 and if there&#039;s a mismatch the bootstrap process terminates
and -1 is returned denoting failure. Furthermore, the PA is stored and used
later during the paging initialization, also discussed later.

If the RKP PA check is satisfied, the final bootstrap steps comprise the
MMU and memory translations enabling. First, EL2 Stage 1 translations are
enabled. TTBR0_EL2 is set to predefined static tables at 0xb011a000 and
`s1_enable()` (0xb0103dcc) function is called. First, MAIR_EL2 is set to
define two memory attributes (one for normal memory and one for device
memory). Next, TCR_EL2 is ORed with 0x23518 which defines a 40 bits or 1TB
Physical Address Size (TCR_EL2.PS bits[18:16]), a 4kB Granule size
(TCR_EL2.TG0 bits[15:14]) and 24 size offset (TCR_EL2.T0SZ bits[5:0]) which
corresponds to a 64-24=40 bit or 1TB input address space for TTBR0_EL2. To
conclude `s1_enable()` SCTLR_EL2 is set with the important values being
SCTLR_EL2.WNX (bit 19) which enables the behavior where write permission
implies XN and SCTLR_EL2.M (bit 0) which enables the MMU.

Last but not least, Stage 2 translation is enabled. VTTBR_EL2 which holds
the Stage 2 translation tables is set to the predefined static tables at
0xb012a000. Next, Virtual Translation Control Register (VTCR_EL2) is set
which as the name dictates, controls the Stage 2 translation process
similarly to TCR_ELx for Stage 1 translations. Its value defines a 40 bits
or 1TB Physical Address Size (VTCR_EL2.PS bits[18:16]), a 4kB Granule size
(TCR_EL2.TG0 bits[15:14]), and 24 size offset (TCR_EL2.T0SZ bits[5:0])
which corresponds to a 64-24=40 bit or 1TB input address space for
VTTBR0_EL2. Moreover, Starting Level of Stage 2 translation controlled by
VTCR_EL2.SL0 (bits[7:6]) is set to 1 and since TCR_EL2.TG0 is set to 4kB
Stage 2 translations start at Level 1 with concatenated tables which will
be explained in detail next. Finally, HCR_EL2.VM (bit 0) is set to enable
Stage 2 translation.


------[ 2.2.1 - Stage 2 translation &amp; Concatenated tables

As AARM states &quot;for a Stage 2 translation, up to 16 translation tables can
be concatenated at the initial lookup level. For certain input address
sizes, concatenating tables in this way means that the lookup starts at a
lower level than would otherwise be the case&quot;. We are going to demonstrate
this in our current setup but for more details refer to section &quot;D5.2.6
Overview of the VMSAv8-64 address translation stages&quot; of AARM.

Since we have a 40 bit input address range only bit 39 of the input VA
is used to index translation table at Level 0 and as a result only two
Level 1 tables exist. Instead of the default setup, ARM allows to
concatenate the two tables in contiguous physical pages and start
translation in Level 1. To index the Level 1 tables, IPA bits[39:30] are
used instead of the traditional bits[38:30].

+---------+---------+---------+---------+-----------+ Default approach
|   39    | [38:30] | [29:21] | [20:12] |  [11:0]   | Stage 2 translation
|         |         |         |         |           | IPA segmentation
| Level 0 | Level 1 | Level 2 | Level 3 | Block off | 4kB Granule
+---------+---------+---------+---------+-----------+ 40-bit IPS

+-------------+---------+---------+-----------+ Concatenated Tables
|   [39:30]   | [29:21] | [20:12] |  [11:0]   | IPA segmentation
|             |         |         |           | 4kB Granule
|   Level 1   | Level 2 | Level 3 | Block off | 40-bit IPS
+-------------+---------+---------+-----------+ VTCR_EL2.SL0 = 1


We have included a gdb script to dump the Stage 2 translation tables based
on tools from [03] and [06]. The script reads the table PA from VTTBR_EL2
and is configured for our setup only and not the generic approach.
Moreover, it needs to be called from EL2 or EL3, for which `switchel &lt;#&gt;`
command can be used. Finally, our analysis indicates that there is a 1:1
mapping between IPAs and PAs.


(gdb) switchel
$cpsr = 0x5 (EL1)

(gdb)  switchel 2
Moving to EL2
$cpsr = 0x9

(gdb) pagewalk

################################################
#     Dump Second Stage Translation Tables     #
################################################
PA Size: 40-bits
Starting Level: 1
IPA range: 0x000000ffffffffff
Page Size: 4KB

...
Third level: 0x1c07d000-0x1c07e000: S2AP=11, XN=10
Third level: 0x1c07e000-0x1c07f000: S2AP=11, XN=10
...
second level block: 0xbfc00000-0xbfe00000: S2AP=11, XN=0
second level block: 0xbfe00000-0xc0000000: S2AP=11, XN=0
first level block: 0xc0000000-0x100000000: S2AP=11, XN=0
first level block: 0x880000000-0x8c0000000: S2AP=11, XN=0
...

(gdb) switchel 1
Moving to EL1
$cpsr = 0x5 (EL1)


------[ 2.2.2 - EL2 bootstrap termination and EL1 physical address

Now that the hypervisor is setup we can resume with the framework setup.
The bootstrap process terminates via an `smc` command thus returning to
EL3. X0 holds the special value 0xc2000401 and X1 the return value of the
operation (zero denoting success). If the bootstrap process fails,
`handle_interrupt_el3()` fails (5) and the system hangs (4).


// framework/vectors.S

el3_synch_low_64:
    build_exception_frame

    bl  handle_interrupt_el3

    cmp x0, #0                                                    /* (4) */
    b.eq 1f
    b .
1:
    restore_exception_frame
    eret
...

// framework/interrupt-handler.c

int handle_interrupt_el3(uint64_t value, uint64_t status)
{
    int ret = 0;
    switch (value) {
        case 0xc2000401: // special return value from vmm initialization
            if (status == 0) {
                _reset_and_drop_el1_main();
            } else {
                ret = -1;                                         /* (5) */
            }
     ...
}


Careful readers might have noticed that the EL2 `smc` invocation causes a
new exception frame to be stored in EL3 and in order to return to EL1 we
must properly restore the state. Well, due to the framework minimal nature
no information needs to be saved before or after EL2 bootstrap. As a result
we simply reset the state (i.e. stack pointers) and drop to EL1 function
`_el1_main()` which in turn leads to `el1_main()`.


// framework/boot64.S

...

_reset_and_drop_el1_main:
    /*
     * We have initialized vmm. Jump to EL1 main since HVC is now enabled,
     * and EL1 does not require EL3 to interact with hypervisor
     */
    // setup EL3 stack
    ldr x30, =stack_top_el3
    mov sp, x30

    // setup EL1 stack
    ldr x30, =stack_top_el1
    msr sp_el1, x30

    mov   x0, #(AARCH64_SPSR_FROM_AARCH64 | AARCH64_SPSR_MODE_EL1 | \
                AARCH64_SPSR_SP_SEL_N)
    msr   spsr_el3, x0


    // drop to function _el1_main
    adr   x0, _el1_main
    msr   elr_el3, x0
    eret                                                          /* (6) */
...

_el1_main:
    mov x20, #-1
    lsl x20, x20, #VA_BITS
    adr x0, el1_main
    add x0, x0, x20

    blr x0
...


Here we explain another system constrain. Our framework was arbitrarily
placed at PA 0x80000000. The reason should by now be obvious. After
enabling Stage 2 translation, every EL1 IPA is translated through Stage 2
tables to find the PA. Examining the hypervisor static maps reveals region
starting at 0x80000000 to satisfy the criteria required for lower level
execution. Specifically, eXecute Never (XN) field is unset and there is no
write permissions. Should the kernel be placed in an unmapped or non
executable for Stage 2 translation region during framework initialization,
then returning from EL3 to EL1 (6) results in a translation error.


(gdb) pagewalk

################################################
#     Dump Second Stage Translation Tables     #
################################################
...
Third level: 0x1c07e000-0x1c07f000: S2AP=11, XN=10
Third level: 0x1c07f000-0x1c080000: S2AP=11, XN=10
Third level: 0x80000000-0x80001000: S2AP=1, XN=0
Third level: 0x80001000-0x80002000: S2AP=1, XN=0
...


54          51                             10         2  1:0
+------------+-----------------------------+----------+------+ Block Entry
| Upper Attr |           ....              | Low Attr | Type | Stage 2
+------------+-----------------------------+----------+------+ Translation


| bits  | Attr      | Description        |
------------------------------------------
| 5:2   | AttrIndex | MAIR_EL2 index     |
| 7:6   | S2AP      | Access permissions |
| 53:54 | XN        | Execute never      |
                                                  Block entry attributes
| S2AP | EL1/EL0 Access |  | XN | Allow Exec  |   for Stage 2 translation
-------------------------  --------------------
| 00   | None           |  | 00 | EL0/EL1     |
| 01   | Read Only      |  | 01 | EL0 not EL1 |
| 10   | Write Only     |  | 10 | None        |
| 11   | Read Write     |  | 11 | EL1 not EL0 |



----[ 2.3 - RKP Initialization Functions

The first thing performed in `el1_main()` is to initialize RKP. There are
numerous steps that comprise RKP initialization and we will present them in
the following sections. Before explaining the initialization process though
we will describe the RKP exception handlers.


------[ 2.3.1 - RKP Synchronous Handler

As explained during the EL2 bootstrap VBAR_EL2 is set at 0xb010b800 where
each handler first creates the exception frame storing all generic
registers and then calls function `vmm_dispatch()` (0x0b010aa44) with the
three arguments being the offset indicating the EL from which the exception
was taken, the exception type and the exception frame address respectively.
`vmm_dispatch()` is designed to only handle synchronous exceptions and
simply returns otherwise. Function `vmm_synchronous_handler()` (0xb010a678)
handles as the name suggests the synchronous exceptions and only the
exception frame (third) argument is of importance.


stp    X1, X0, [SP,#exception_frame]!
...
mov    X0, #0x400       // Lower AArch64
mov    X1, #0           // Synchronous Exception
mov    X2, SP           // Exception frame, holding args from EL1

bl     vmm_dispatch
...
ldp    X1, X0, [SP+0x10+exception_frame],#0x10
clrex
eret


As shown from the following snippet the handler first evaluates ESR_EL2.EC.
Data and Instruction Aborts from the current EL (ECs 0x21 and 0x25) are not
recoverable and the handler calls `vmm_panic()` function (0xb010a4cc) which
leads to system hang. Data and Instruction Aborts from lower EL (ECs 0x20
and 0x24) are handled directly by the handler. Furthermore, as mentioned
before, by setting HCR_EL2.TVM during the RKP bootstrap, EL1 writes to
virtual memory control registers are trapped to EL2 with EC 0x18 and here
handled by function `other_msr_mrs_system()` (0xb010a24c). `hvc` commands
either from AArch32 or AArch64 (ECs 0x12 and 0x16) are our main focus and
will be explained shortly. Finally, any other ECs return -1 which leads
`vmm_dispatch()` to `vmm_panic()`.


// vmm-G955FXXU4CRJ5.elf

int64_t vmm_synchronous_handler(int64_t from_el_offset,
                int64_t exception_type, exception_frame *exception_frame) {

    esr_el2 = get_esr_el2();
    ...

    switch ( esr_el2 &gt;&gt; 26 )   /* Exception Class */
    {
        case 0x12:        /* HVC from AArch32 */
        case 0x16:        /* HVC from AArch64 */


            if ((exception_frame-&gt;x0 &amp; 0xFFF00000) == 0x83800000) /* (7) */
                rkp_main(exception_frame-&gt;x0, exception_frame);
            ...
            return 0;


        case 0x18:   /* Trapped MSR, MRS or System instruction execution */
            v7 = other_msr_mrs_system(exception_frame);
            ...

        case 0x20:     /* Instruction Abort from a lower Exception level */
            ...

        case 0x21:          /* Instruction Abort Current Exception Level */
            vmm_panic(from_el_offset, exception_type, ...);

        case 0x24:            /* Data Abort from a lower Exception level */
            ...

        case 0x25:                 /* Data Abort Current Exception Level */
            vmm_panic(from_el_offset, exception_type, ...);

        default:
            return -1;
    }
}


Before moving to `hvc` we will be briefly introducing `msr`/`mrs` handling
(for details regarding the values of ESR_EL2 discussed here refer to AARM
section &quot;D13.2.37&quot;). First, the operation direction is checked via the
ESR_EL2.ISS bit 0. As mentioned only writes are supposed to be trapped
(direction bit value must be 0) and if somehow a read was trapped, handler
ends up in `vmm_panic()`. The general purpose register used for the
transfer is discovered from the value of ESR_EL2.ISS.Rt (bits [9:5]). The
rest of ESR_EL2.ISS values are used to identify the system register
accessed by `msr` and in RKP each system register is handled differently.
For example SCTLR_EL1 handler does not allow to disable the MMU or change
endianess and TCR_EL1 handler does not allow modification of the Granule
size. We will not be examining every case in this (already long) article,
but interested readers should by now have more than enough information to
start investigating function `other_msr_mrs_system()`.

RKP `hvc` invocation&#039;s first argument (X0) is the function identifier and
as shown in (7) must abide by a specific format for function `rkp_main()`
(0xb010d000) which is the `hvc` handler to be invoked. Specifically, each
command is expected to have a prefix value of 0x83800000. Furthermore, to
form the command, command indices are shifted by 12 and then ORed with the
prefix (readers may also refer to kernel/include/linux/rkp.h). This format
is also expected by `rkp_main()` as explained next.


// vmm-G955FXXU4CRJ5.elf

void rkp_main(unsigned int64_t command, exception_frame *exception_frame)
{

    hvc_cmd = (command &gt;&gt; 12) &amp; 0xFF;                             /* (8) */

    if ( hvc_cmd &amp;&amp; !is_rkp_activated )                           /* (9) */
        lead_to_policy_violation(hvc_cmd);
    ...

    my_check_hvc_command(hvc_cmd);
    switch ( hvc_cmd )
    {
        case 0:
            ...

            if ( is_rkp_activated )                              /* (10) */
                rkp_policy_violation(2, 0, 0, 0);

            rkp_init(exception_frame);
            ...

            break;
...


void my_check_hvc_command(unsigned int64_t cmd_index)
{
    if ( cmd_index &gt; 0x9F )
        rkp_policy_violation(3, cmd_index, 0, 0);

    prev_counter = my_cmd_counter[cmd_index];

    if ( prev_counter != 0xFF )
    {
        cur_counter = (prev_counter - 1);

        if ( cur_counter &gt; 1 )
            rkp_policy_violation(3, cmd_index, prev_counter, 0);

        my_cmd_counter[cmd_index] = cur_counter;
    }
}


`rkp_main()` first extracts the command index (8) and then calls function
`my_check_hvc_command()` (0xb0113510). Two things are happening there.
First, the index must be smaller than 0x9f. Second, RKP maintains an array
with command counters. The counter for RKP initialization command is 1
during the array definition and is set again along with all other values at
runtime in function `my_initialize_hvc_cmd_counter()` (0xb011342c) during
the initialization. If any of these checks fails, `rkp_policy_violation()`
(0xb010dba4) is called which can be considered as an assertion error and
leads to system hang. Finally, before allowing any command invocation
except for the initialization, a global flag indicating whether RKP is
initialized is checked (9). This flag is obviously set after a successful
initialization as explained in the following section.

Before continuing with the initialization process we will present some
commands as examples to better demonstrate their usage. The first
initialization function (presented next) is `rkp_init()` with command id 0
which corresponds to command 0x83800000. During definition, as mentioned
above, its counter is set to 1 so that it can be called once before
invoking `my_initialize_hvc_cmd_counter()`. Similarly, command id 1
corresponds to deferred initialization function (also presented next), can
be reached with command 0x83801000 and since its counter is set to 1 which
means it can only be called once. Commands with counter value -1 as the
ones shown in the table below for handling page tables (commands 0x21 and
0x22 for level 1 and 2 correspondingly) can be called arbitrary number of
times.


| Function     | ID   | Command    | Counter |
----------------------------------------------
| rkp_init     | 0x0  | 0x83800000 |       0 |
| rkp_def_init | 0x1  | 0x83801000 |       1 |
...
| rkp_pgd_set  | 0x21 | 0x83821000 |      -1 |
| rkp_pmd_set  | 0x22 | 0x83822000 |      -1 |
...


------[ 2.3.2 - RKP Initialization

With this information, we are now ready to initialize RKP. In the snippet
below we demonstrate the framework process to initialize the RKP (with RKP
command id 0). We also show the `rkp_init_t` struct values used in the
framework during the invocation and we will be elaborating more on them
while examining the RKP initialization function `rkp_init()` (0xb0112f40).
Interested readers can also study and compare `framework_rkp_init()`
function with Samsung kernel function `rkp_init()` in kernel/init/main.c
and the initialization values presented here against some of the values
from the sample sec_log output above.


// framework/main.c

void el1_main(void) {
    framework_rkp_init();
    ...
}

// framework/vmm.h

#define RKP_PREFIX  (0x83800000)
#define RKP_CMDID(CMD_ID)  (((CMD_ID) &lt;&lt; 12 ) | RKP_PREFIX)

#define RKP_INIT                RKP_CMDID(0x0)
...

// framework/vmm.c

void framework_rkp_init(void)
{
    struct rkp_init_t init;
    init.magic = RKP_INIT_MAGIC;
    init._text = (uint64_t)__va(&amp;_text);
    init._etext = (uint64_t)__va(&amp;_etext);
    init.rkp_pgt_bitmap = (uint64_t)&amp;rkp_pgt_bitmap;
    init.rkp_dbl_bitmap = (uint64_t)&amp;rkp_map_bitmap;
    init.rkp_bitmap_size = 0x20000;

    init.vmalloc_start = (uint64_t)__va(&amp;_text);
    init.vmalloc_end = (uint64_t)__va(&amp;_etext+0x1000);
    init.init_mm_pgd = (uint64_t)&amp;swapper_pg_dir;
    init.id_map_pgd = (uint64_t)&amp;id_pg_dir;
    init.zero_pg_addr = (uint64_t)&amp;zero_page;
    init.extra_memory_addr = RKP_EXTRA_MEM_START;
    init.extra_memory_size = RKP_EXTRA_MEM_SIZE;
    init._srodata = (uint64_t)__va(&amp;_srodata);
    init._erodata = (uint64_t)__va(&amp;_erodata);

    rkp_call(RKP_INIT, &amp;init, (uint64_t)VA_OFFSET, 0, 0, 0);
}

// framework/util.S

rkp_call:
    hvc #0
    ret
ENDPROC(rkp_call)


magic           : 0x000000005afe0001
vmalloc_start   : 0xffffff8080000000
vmalloc_end     : 0xffffff8080086000
init_mm_pgd     : 0x0000000080088000
id_map_pgd      : 0x000000008008b000
zero_pg_addr    : 0x000000008008e000
rkp_pgt_bitmap  : 0x0000000080044000
rkp_dbl_bitmap  : 0x0000000080064000
rkp_bitmap_size : 0x0000000000020000
_text           : 0xffffff8080000000
_etext          : 0xffffff8080085000
extra_mem_addr  : 0x00000000af400000
extra_mem_size  : 0x0000000000600000
physmap_addr    : 0x0000000000000000
_srodata        : 0xffffff8080085000
_erodata        : 0xffffff8080086000
large_memory    : 0x0000000000000000
fimc_phys_addr  : 0x00000008fa080000
fimc_size       : 0x0000000000780000
tramp_pgd       : 0x0000000000000000


Before everything else, the debug log at 0xb0200000 is initialized (11).
This is the second EL2 oracle and we will be discussing it shortly as it
will provide valuable information to help create correct memory mapping for
the initialization to be successful.

Evidently, there are two modes of RKP operation which are decided upon
during the initialization; normal and test mode. Test mode disables some of
the aforementioned `hvc` command invocation counters and enables some
command indices/functions. As the name suggests these are used for testing
purposes and while these may assist and ease the reversing process, we will
not be analyzing them in depth, because the are not encountered in real
world setups. The mode is selected by the struct magic field, whose value
can either be 0x5afe0001 (normal mode) or 0x5afe0002 (test mode).

It would be possible to change to test mode via a second `rkp_init()`
invocation while hoping not to break any other configurations, however this
is not possible via normal system interaction. As shown in (12) after a
successful initialization, global flag `is_rkp_activated` is set. This flag
is then checked (10) before calling `rkp_init()` in `rkp_main()` function
as demonstrated in the previously presented snippet.


// vmm-G955FXXU4CRJ5.elf

void rkp_init(exception_frame *exception_frame)
{
    ...

    rkp_init_values = maybe_rkp_get_pa(exception_frame-&gt;x1);

    rkp_debug_log_init();                                        /* (11) */
    ...

    if ( rkp_init_values-&gt;magic - 0x5AFE0001 &lt;= 1 ){

        if ( rkp_init_values-&gt;magic == 0x5AFE0002 )
        {
            /* enable test mode */
        }

        /* store all rkp_init_t struct values */

        rkp_physmap_init();

        ...

        if ( rkp_bitmap_init() )
        {
            /* misc initializations and debug logs */

            rkp_debug_log(&quot;RKP_6398d0cb&quot;, hcr_el2,
                             sctlr_el2, rkp_init_values-&gt;magic);

            /* more debug logs */

            if ( rkp_paging_init() )
            {
                is_rkp_activated = 1;                            /* (12) */
                ...

                my_initialize_hvc_cmd_counter();
                ...
            }
        }
        ...
    }
    ...
}


RKP maintains a struct storing all required information. During
initialization in RKP function `rkp_init()`, values passed via `rkp_init_t`
struct along with the VA_OFFSET are stored there to be used later. Next,
various memory regions such as physmap and bitmaps are initialized. We are
not going to be expanding on those regions since they are implementation
specific, but due to their heavy usage by RKP (especially physmap) we are
going to briefly explain them. Physmap contains information about physical
regions, such as whether this is an EL2 or EL1 region etc., is set to a
predefined EL2 only accessible region as explained next and RKP uses this
information to decide if certain actions are allowed on specific regions.

Two bitmaps exist in this specific RKP implementation; rkp_pgt_bitmap and
rkp_dbl_bitmap and their physical regions are provided by EL1 kernel. They
are both written to by RKP. rkp_pgt_bitmap provides information to EL1 on
whether addresses are protected by S2 mappings and as such accesses should
be handled by RKP. rkp_dbl_bitmap is used to track and prevent unauthorized
mappings from being used for page tables. The `rkp_bitmap_init()` success
requires only the pointers to not be zero, however additional restrictions
are defined during `rkp_paging_init()` function (0xb010e4c4) later.

Next, we see the RKP debug log being used, dumping system registers thus
providing important information regarding the system state/configuration,
which has helped us understand the system and configure the framework.
Below a (processed) sample output is displayed with the various registers
annotated. Finally, Samsung allows OEM unlock for the under examination
device model, which allows us to patch vmm.elf, build and boot the kernel
with the patched RKP and retrieve additional information. The final snippet
line contains the debug log from a separate execution, where MAIR_ELn
registers were replaced with SCTLR_EL1 and VTCR_EL2 respectively. How to
build a custom kernel and boot a Samsung device with it is left as exercise
to the reader.


0000000000000000    neoswbuilder-DeskTop RKP64_01aa4702
0000000000000000    Jul 11 2018
0000000000000000    11:19:42

/* hcr_el2 */      /* sctlr_el2 */
  84000003          30cd1835           5afe0001  RKP_6398d0cb

/* tcr_el2 */      /* tcr_el1 */
  80823518          32b5593519         5afe0001  RKP_64996474

/* mair_el2 */     /* mair_el1 */
21432b2f914000ff  0000bbff440c0400     5afe0001  RKP_bd1f621f
...


/* sctlr_el1 */    /* vtcr_el2 */
   34d5591d           80023f58         5afe0001  RKP_patched


Finally, one of the most important functions in RKP initialization follows;
`rkp_paging_init()`. Numerous checks are performed in this function and the
system memory layout must satisfy them all for RKP to by initialized
successfully. Furthermore, physmap, bitmaps and EL2 Stage 1 and 2 tables
are set or processed. We will be explaining some key points but will not go
over every trivial check. Finally, we must ensure that any RKP required
regions are reserved. The physical memory layout used in the framework
aiming to satisfy the minimum requirements to achieve proper RKP
initialization is shown below. Obviously, more complex layouts can be used
to implement more feature rich frameworks.

The graph also explains the previously presented size selection of 3GBs for
the emulation system RAM. This size ensures that the framework has a
sufficiently large PA space to position executables in their expected PAs.


  +---------+ 0x80000000  text, vmalloc
  |         |
  |         |
  |         |
  |         |
  +---------+ 0x80044000  rkp_pgt_bitmap
  |         |
  |         |
  +---------+ 0x80064000  rkp_map_bitmap
  |         |
  |         |
  +---------+ 0x80085000  _etext, srodata
  |         |
  +---------+ 0x80086000  _erodata, vmalloc_end
  |         |
  |         |
  +---------+ 0x80088000  swapper_pg_dir
  |         |
  |         |
  +---------+ 0x8008b000  id_pg_dir
  |         |
  |         |
  +---------+ 0x8008e000  zero_page
  |         |
      ...
  |         |
  +---------+ 0xaf400000 rkp_extra_mem_start
  |         |
  |         |
  +---------+ 0xafa00000 rkp_extra_mem_end
  |         |
  +---------+ 0xafc00000 rkp_phys_map_start
  |         |
  |         |
  +---------+ 0xb0100000 rkp_phys_map_end, hyp_base


To sum up the process, after alignment and layout checks, the EL1 kernel
region is set in physmap (13) and mapped in EL2 Stage 1 translation tables
(14). The two bitmap regions are checked (15) and if they are not
incorporated in the kernel text, their Stage 2 (S2) entries are changed to
Read-Only and not executable (16) and finally physmap is updated with the
two bitmap regions. FIMC region, which will be discussed shortly, is
processed next (17) in function `my_process_fimc_region()` (0xb0112df0).
Continuing, kernel text is set as RWX in S2 translation tables (18) which
will change later during the initialization to read-only. Last but not
least, physmap and extra memory address are unmapped from S2 (19) and (21)
rendering them inaccessible from EL1 and their physmap regions are set (20)
and (22).


// vmm-G955FXXU4CRJ5.elf

int64_t rkp_paging_init(void)
{
    /* alignment checks */


    v2 = my_rkp_physmap_set_region(text_pa, etext - text, 4);    /* (13) */
    if ( !v2 ) return v2;

    /* alignment checks */


    res = s1_map(text_pa, etext_pa - text_pa, 9);                /* (14) */
    ...

    /*
     * bitmap alignment checks                                   /* (15) */
     * might lead to label do_not_process_bitmap_regions
     */


    res = rkp_s2_change_range_permission(rkp_pgt_bitmap,         /* (16) */
            bitmap_size + rkp_pgt_bitmap, 0x80, 0, 1); // RO, XN
    ...

    res = rkp_s2_change_range_permission(rkp_map_bitmap,
                                            bitmap_size + rkp_map_bitmap,
                                            0x80, 0, 1); // RO, XN
    ...

do_not_process_bitmap_regions:

    if ( !my_rkp_physmap_set_region(rkp_pgt_bitmap, bitmap_size, 4) )
        return 0;

    res = my_rkp_physmap_set_region(rkp_map_bitmap, bitmap_size, 4);
    if ( res )
    {
        res = my_process_fimc_region();                          /* (17) */
        if ( res )
        {
            res = rkp_s2_change_range_permission(                /* (18) */
                                            text_pa, etext_pa,
                                            0, 1, 1);  // RW, X
            ...

                                                                 /* (19) */
            res = maybe_s2_unmap(physmap_addr, physmap_size + 0x100000);
            ...

            res = my_rkp_physmap_set_region(physmap_addr,        /* (20) */
                                            physmap_size + 0x100000, 8);
            ...

                                                                 /* (21) */
            res = maybe_s2_unmap(extra_memory_addr, extra_memory_size);
            ...

            res = my_rkp_physmap_set_region(extra_memory_addr,   /* (22) */
                                                extra_memory_size, 8);
            ...
        }
    }
    return res;
}


FIMC refers to Samsung SoC Camera Subsystem and during the kernel
initialization, regions are allocated and binaries are loaded from the
disk. There is only one relevant `hvc` call, related to the FIMC binaries
verification (command id 0x71). RKP modifies the related memory regions
permissions and then invokes EL3 to handle the verification in function
`sub_B0101BFC()`. Since we are implementing our own EL3 and are interested
in EL2 functionality we will be ignoring this region. However, we still
reserve it for completeness reasons and function `my_process_fimc_region()`
simply processes the S2 mappings for this region. By invoking `hvc` with
command id 0x71, even if every other condition is met and `smc` is reached,
as discussed above EL3 will hang because there is no handler for `smc`
command id 0xc200101d in our setup.


// vmm-G955FXXU4CRJ5.elf

sub_B0101BFC

...
mov  X0, #0xC200101D
mov  X1, #0xC
mov  X2, X19  // holds info about fimc address, size, etc.
mov  X3, #0
dsb  SY
smc  #0
...


Although, as mentioned, simply reserving the region will suffice for this
specific combination of hypervisor and subsystem, it is indicative of the
considerations needed when examining hypervisors, even if more complex
actions are required by other hypervisors and/or subsystems. For example
the verification might have been incorporated in the initialization
procedure, in which case this could be handled by our framework EL3
component.

At this step we have performed the first step of RKP initialization
successfully. After some tasks such as the `hvc` command counters
initialization and the `is_rkp_activated` global flag setting `rkp_init()`
returns. We can now invoke other `hvc` commands.


------[ 2.3.3 - RKP Deferred Initialization

The next step is the deferred initialization which is handled by function
`rkp_def_init()` (0xb01131dc) and its main purpose is to set the kernel
S2 translation permissions.


// vmm-G955FXXU4CRJ5.elf

void rkp_def_init(void)
{
    ...

    if ( srodata_pa &gt;= etext_pa )
    {
        if (!rkp_s2_change_range_permission(text_pa, etext_pa, 0x80, 1, 1))
            // Failed to make Kernel range ROX
            rkp_debug_log(&quot;RKP_ab1e86d9&quot;, 0, 0, 0);
    }
    else
    {
        res = rkp_s2_change_range_permission(text_pa, srodata_pa,
                                             0x80, 1, 1)) // RO, X
        ...

        res = rkp_s2_change_range_permission(srodata_pa, etext_pa,
                                             0x80, 0, 1)) // RO, XN
        ...
    }

    rkp_l1pgt_process_table(swapper_pg_dir, 1, 1);
    RKP_DISALLOW_DEBUG = 1;
    rkp_debug_log(&quot;RKP_8bf62beb&quot;, 0, 0, 0);
}


As demonstrated below after `rkp_s2_change_range_permission()` invocation
the kernel region is set to read only. Finally, in
`rkp_l1pgt_process_table()` swapper_pg_dir (TTBR1_EL1) and its subtables
are set to read-only and not-executable.


// EL1 text before rkp_s2_change_range_permission()
Third level: 0x80000000-0x80001000: S2AP=11, XN=0
...
// EL1 text after rkp_s2_change_range_permission()
Third level: 0x80000000-0x80001000: S2AP=1, XN=0
...

// swapper_pg_dir before rkp_l1pgt_process_table()
Third level: 0x80088000-0x80089000: S2AP=11, XN=0
Third level: 0x80089000-0x8008a000: S2AP=11, XN=0
...
// swapper_pg_dir after rkp_l1pgt_process_table()
Third level: 0x80088000-0x80089000: S2AP=1, XN=10
Third level: 0x80089000-0x8008a000: S2AP=1, XN=10
...


------[ 2.3.4 - Miscellaneous Initializations

In our approach, we have not followed the original kernel initialization to
the letter. Specifically, we skip various routines initializing values
regarding kernel structs such as credentials, etc., which are void of
meaning in our minimal framework. Moreover, these are application specific
and do not provide any valuable information required by the ARM
architecture to properly define the EL2 state. However, we will be briefly
presenting them here for completeness reasons, and as our system
understanding improves and the framework supported functionality
requirements increase (for example to improve fuzzing discussed next) they
can be incorporated in the framework.

Command 0x40 is used to pass information about cred and task structs
offsets and then command 0x42 for cred sizes during the credential
initialization in kernel&#039;s `cred_init()` function. Next, in `mnt_init()`
command 0x41 is used to inform EL2 about vfsmount struct offsets and then
when rootfs is mounted in `init_mount_tree()` information regarding the
vfsmount are sent via command 0x55. This command is also used later for the
/system partition mount. These commands can only be called once (with the
exception of command 0x55 whose counter is 2) and as mentioned above are
used in the original kernel initialization process. Incorporating them to
the framework requires understanding of their usage from both the kernel
and the hypervisor perspective which will be left as an exercise to the
reader who can start by studying the various `rkp_call()` kernel
invocations.


----[ 2.4 - Final Notes

At this point we have performed most of the expected RKP initialization
routines. We now have a fully functional minimal framework which can be
easily edited to test and study the RKP hypervisor behavior.

More importantly we have introduced fundamental concepts for readers to
implement their own setups and reach the current system state which allows
us to interact with it and start investigating fuzzing implementations.

On a final note, some of the original kernel initialization routines were
omitted since their action lack meaning in our framework. They were briefly
introduced and interested readers can study the various `rkp_call()` kernel
invocations and alter the framework state at will. Additionally, this
allows the fuzzers to investigate various configuration scenarios not
restricted by our own assumptions.


--[ 3 - Fuzzing

In this section we will be describing our approaches towards setting up
fuzzing campaigns under the setup presented above. We will begin with a
naive setup aiming to introduce system concepts we need to be aware and an
initial interaction with QEMU source code and functionality. We will then
be expanding on this knowledge, incorporating AFL in our setup for more
intelligent fuzzing.

To verify the validity of the fuzzing setups presented here we evidently
require a bug that would crash the system. For this purpose we will be
relying on a hidden RKP command with id 0x9b. This command leads to
function `sub_B0113AA8()` which, as shown in the snippet, adds our second
argument (register X1) to value 0x4080000000 and uses the result as an
address to store a QWORD. As you might be imagining, simply passing 0 as
our second argument results in a data abort ;)


// vmm-G955FXXU4CRJ5.elf

int64_t sub_B0113AA8(exception_frame *exc_frame)
{
    *(exc_frame-&gt;x1 + 0x4080000000) = qword_B013E6B0;
    rkp_debug_log(&quot;RKP_5675678c&quot;, qword_B013E6B0, 0, 0);
    return 0;
}


To demonstrate the framework usage we are going to trigger this exception
with a debugger attached. We start the framework and set a breakpoint in
the handler from `hvc` command 0x9b at the instruction writing the QWORD to
the evaluated address. Single stepping from there causes an exception,
which combined with the previous information about RKP exception handlers,
we can see is a synchronous exception from the same EL. Continuing
execution from there we end up in the synchronous handler for data aborts
(EC 0x25) which leads to `vmm_panic()` :)


(gdb) target remote :1234
_reset () at boot64.S:15
15          ldr x30, =stack_top_el3

(gdb) continue
...
Breakpoint 1, 0x00000000b0113ac4 in ?? ()
(gdb) x/4i $pc-0x8
   0xb0113abc:  mov     x0, #0x80000000
   0xb0113ac0:  movk    x0, #0x40, lsl #32
=&gt; 0xb0113ac4:  str     x1, [x2,x0]
   0xb0113ac8:  adrp    x0, 0xb0116000
(gdb) info registers x0 x1 x2
x0             0x4080000000     277025390592
x1             0x0      0
x2             0x1      1


(gdb) stepi
0x00000000b010c1f4 in ?? ()

(gdb) x/20i $pc
=&gt; 0xb010c1f4:  stp     x1, x0, [sp,#-16]!
   ...
   0xb010c234:  mov     x0, #0x200    // Current EL
   0xb010c238:  mov     x1, #0x0      // Synchronous
   0xb010c23c:  mov     x2, sp
   0xb010c240:  bl      0xb010aa44    // vmm_dispatch

(gdb) continue
Continuing.


Breakpoint 5, 0x00000000b010a80c in ?? ()  // EC 0x25 handler
(gdb) x/7i $pc
=&gt; 0xb010a80c:  mov     x0, x22
   0xb010a810:  mov     x1, x21
   0xb010a814:  mov     x2, x19
   0xb010a818:  adrp    x3, 0xb0115000
   0xb010a81c:  add     x3, x3, #0x4d0
   0xb010a820:  bl      0xb010a4cc    // vmm_panic


----[ 3.1 - Dummy fuzzer

To implement the dummy fuzzer we decided to abuse `brk` instruction, which
generates a Breakpoint Instruction exception. The exception is recorded in
in ESR_ELx and the value of the immediate argument in the instruction
specific syndrome field (ESR_ELx.ISS, bits[24:0]). In QEMU, this
information is stored in `CPUARMStame.exception` structure as shown in the
following snippet.


// qemu/target/arm/cpu.h

typedef struct CPUARMState {
    ...

    /* Regs for A64 mode.  */
    uint64_t xregs[32];

    ...

    /* Information associated with an exception about to be taken:
     * code which raises an exception must set cs-&gt;exception_index and
     * the relevant parts of this structure; the cpu_do_interrupt function
     * will then set the guest-visible registers as part of the exception
     * entry process.
     */
    struct {
        uint32_t syndrome; /* AArch64 format syndrome register */
        ...
    } exception;
    ...
}


`arm_cpu_do_interrupt()` function handles the exceptions in QEMU and we can
intercept the `brk` invocation by checking `CPUState.exception_index`
variable as shown in (23). There we can introduce our fuzzing logic and
setup the system state with our fuzzed values for the guest to access as
discussed next. Finally, to avoid actually handling the exception (calling
the exception vector handle, changing ELs etc.) which would disrupt our
program flow, we simply advance `pc` to the next instruction and return
from the function. This effectively turns `brk` into a fuzzing instruction.


// qemu/target/arm/helper.c

/* Handle a CPU exception for A and R profile CPUs.
   ...
 */
void arm_cpu_do_interrupt(CPUState *cs)
{
    ARMCPU *cpu = ARM_CPU(cs);
    CPUARMState *env = &amp;cpu-&gt;env;
    ...

    // Handle the break instruction
    if (cs-&gt;exception_index == EXCP_BKPT) {                      /* (23) */

        handle_brk(cs, env);

        env-&gt;pc += 4;
        return;
    }
    ...

    arm_cpu_do_interrupt_aarch64(cs);
    ...
}

We utilize syndrome field as a function identifier and specifically
immediate value 0x1 is used to call the dummy fuzzing functionality. There
are numerous different harnesses that can be implemented here. In our demo
approach we only use a single argument (via X0) which points to a guest
buffer where fuzzed data could be placed. The framework registers, hence
arguments which will be passed to EL2 by `rkp_call_fuzz` after calling
`__break_fuzz()` are set by our harness in function `handle_brk()`.


// framework/main.c

void el1_main(void) {
    framework_rkp_init();
    rkp_call(RKP_DEF_INIT, 0, 0, 0, 0, 0);

    for(; ;){ // fuzzing loop
        __break_fuzz(); // create fuzzed values
        rkp_call_fuzz(); // invoke RKP
    }
}

// framework/util.S

__break_fuzz:
    ldr x0, =rand_buf
    brk #1
    ret
ENDPROC(__break_fuzz)

rkp_call_fuzz:
    hvc #0
    ret
ENDPROC(rkp_call_fuzz)


We will not be presenting complex harnesses here since this is beyond the
scope of this article and will be left as exercise for the reader. We will,
however, be describing a simple harness to fuzz RKP commands. Moreover,
since most RKP handlers expect the second argument (X1 register) to point
to a valid buffer we will be using `rand_buf` pointer as shown above for
that purpose.

The logic should be rather straightforward. We get a random byte (24), at
the end place it in X0 (25) and as a result will be used as the RKP command
index. Next, we read a page of random data and copy it to the guest buffer
`rand_buf` (using function `cpu_memory_rw_debug()`) and use it as the
second argument by placing the buffer address in X1 (26).


// qemu/target/arm/patch.c

int handle_brk(CPUState *cs, CPUARMState *env)
{
    uint8_t syndrome = env-&gt;exception.syndrome &amp; 0xFF;
    int l = 0x1000;
    uint8_t buf[l];

    switch (syndrome) {
        case 0: // break to gdb
            if (gdbserver_running()) {
                qemu_log_mask(CPU_LOG_INT, &quot;[!] breaking to gdb\n&quot;);
                vm_stop(RUN_STATE_DEBUG);
            }
            break;
        case 1: ; // dummy fuzz
            uint8_t cmd = random() &amp; 0xFF;                       /* (24) */

            /* write random data to buffer buf */

            /*
             * Write host buffer buf to guest buffer pointed to
             * by register X0 during brk invocation
             */
            if (cpu_memory_rw_debug(cs, env-&gt;xregs[0], buf, l, 1) &lt; 0) {
                fprintf(stderr, &quot; Cannot access memory\n&quot;);
                return -1;
            }

            fuzz_cpu_state.xregs[0] = 0x83800000 | (cmd &lt;&lt; 12);
            fuzz_cpu_state.xregs[1] = env-&gt;xregs[0];


            env-&gt;xregs[0] = fuzz_cpu_state.xregs[0];             /* (25) */
            env-&gt;xregs[1] = fuzz_cpu_state.xregs[1];             /* (26) */
            break;
        default:
            ;
    }
    return 0;
}


As you might expect after compiling the modified QEMU and executing the
fuzzer, nothing happens! We elaborate more on this next.


------[ 3.1.1 - Handling Aborts

Since this is a bare metal implementation there is nothing to &quot;crash&quot;. Once
an abort happens, the abort exception handler is invoked and both our
framework and RKP ends up in an infinite loop. To identify aborts we simply
intercept them in `arm_cpu_do_interrupt()` similarly with `brk`.


// qemu/target/arm/helper.c

void arm_cpu_do_interrupt(CPUState *cs)
{
    ...

    // Handle the instruction or data abort
    if (cs-&gt;exception_index == EXCP_PREFETCH_ABORT ||
          cs-&gt;exception_index == EXCP_DATA_ABORT ) {

        if(handle_abort(cs, env) == -1) {
            qemu_system_shutdown_request(SHUTDOWN_CAUSE_HOST_ERROR);
        }
        // reset system
        qemu_system_reset_request(SHUTDOWN_CAUSE_HOST_QMP_SYSTEM_RESET);
    }
    ...
}


When a data or instruction abort exception is generated, we create a crash
log in `handle_abort()` and then request QEMU to either reset and restart
fuzzing or terminate if `handle_abort()` fails which essentially terminates
fuzzing as we can not handle aborts. We use QEMU functions to dump the
system state such as the faulting addresses, system registers, and memory
dumps in text log files located in directory crashes/.


int handle_abort(CPUState *cs, CPUARMState *env)
{
    FILE* dump_file;

    if (open_crash_log(&amp;dump_file) == -1) return -1;


    const char *fmt_str = &quot;********* Data\\Instruction abort! *********\n&quot;
                          &quot;FAR = 0x%llx\t ELR = 0x%llx\n&quot;
                          &quot;Fuzz x0 = 0x%llx\t Fuzz x1 = 0x%llx\n&quot;;

    fprintf(dump_file, fmt_str, env-&gt;exception.vaddress,
                                env-&gt;pc,
                                fuzz_cpu_state.xregs[0],
                                fuzz_cpu_state.xregs[1]);

    fprintf(dump_file, &quot;\n********** CPU State **********\n&quot;);
    cpu_dump_state(cs, dump_file, CPU_DUMP_CODE);
    fprintf(dump_file, &quot;\n********** Disassembly **********\n&quot;);
    target_disas(dump_file, cs, env-&gt;pc-0x20, 0x40);
    fprintf(dump_file, &quot;\n********** Memory Dump **********\n&quot;);
    dump_extra_reg_data(cs, env, dump_file);

    fprintf(dump_file, &quot;\n********** End of report **********\n&quot;);

    fclose(dump_file);

    return 0;
}


A sample trimmed crash log is presented below. We can see that the faulting
command is 0x8389b000 (or command index 0x9b ;) the faulting address and
the code were the abort happened. You can create your own logs by
executing the dummy fuzzer ;)


********** Data\Instruction abort! **********
FAR = 0x41000c5000       ELR = 0xb0113ac4
Fuzz x0 = 0x8389b000     Fuzz x1 = 0x800c5000

********** CPU State **********
 PC=00000000b0113ac4 X00=0000004080000000 X01=0000000000000000
X02=00000000800c5000 X03=0000000000000000 X04=0000000000000000
....
X29=00000000b0142e70 X30=00000000b010d294  SP=00000000b0142e70
PSTATE=600003c9 -ZC- NS EL2h

********** Disassembly **********
0xb0113abc:  d2b00000  movz     x0, #0x8000, lsl #16
0xb0113ac0:  f2c00800  movk     x0, #0x40, lsl #32
0xb0113ac4:  f8206841  str      x1, [x2, x0]
0xb0113ac8:  f0000000  adrp     x0, #0xb0116000
0xb0113acc:  911ac000  add      x0, x0, #0x6b0

********** Memory Dump **********
...
X00: 0x0000004080000000
000000407fffff60: Cannot access memory

...

X02: 0x00000000800c5000
...
00000000800c4fe0: 0x0000000000000000 0x0000000000000000
00000000800c4ff0: 0x0000000000000000 0x0000000000000000
00000000800c5000: 0x21969a71a5b30938 0xc6d843c68f2f38be
00000000800c5010: 0xd7a1a2d7948ffd7e 0x42793a9f98647619
00000000800c5020: 0x87c01b08bb98d031 0x1949658c38220d4d

...

********** End of report **********


------[ 3.1.2 - Handling Hangs

RKP has two functions that lead to system hangs; `rkp_policy_violation()`
and `vmm_panic()`. The former is used when RKP unsupported exceptions or
exception classes are triggered, while the latter aligns better with the
`assert()` function logic.

Since there are only two functions with these characteristics we can simply
reset the system if they are ever executed. This is done in QEMU function
`cpu_tb_exec()` which is responsible for emulating the execution of a
single basic block. When they are identified via their address, the system
is reset as with the abort case presented above, without however creating a
crash log file.

Evidently, this is not an optimal approach and does not scale well. We
will be providing a better solution in the setup with AFL described next.


// qemu/accel/tcg/cpu-exec.c

/* Execute a TB, and fix up the CPU state afterwards if necessary */
static inline tcg_target_ulong cpu_tb_exec(CPUState *cpu,
                                           TranslationBlock *itb)
{
    CPUArchState *env = cpu-&gt;env_ptr;
    ...

    if (env-&gt;pc == 0xB010DBA4) { // rkp_policy_violation
        qemu_log(&quot;[!] POLICY VIOLATION!!! System Reset!\n&quot;);
        qemu_system_reset_request(SHUTDOWN_CAUSE_HOST_QMP_SYSTEM_RESET);
    }

    if (env-&gt;pc == 0xB010A4CC) { // vmm_panic
        qemu_log(&quot;[!] VMM PANIC!!! We should not be here!!!\n&quot;);
        qemu_system_reset_request(SHUTDOWN_CAUSE_HOST_QMP_SYSTEM_RESET);
    }

    ...
}


----[ 3.2 - AFL with QEMU full system emulation

One of the major problems encountered during this work was QEMU changing
rapidly. This caused various tools to become obsolete, unless teams were
dedicated porting them to newer versions fixing various problems introduced
by the modified QEMU code. With this in mind, we will first introduce
problems stemming from this situation and previous work on full system
emulation. We will then proceed with the proposed solution.


------[ 3.2.1 - Introduction

As mentioned before, we chose the latest stable QEMU v4.1.0 and AFL v2.56b.
The first step was to port AFL to the target QEMU version. The patch
itself is rather straightforward, so we will not be presenting details
here. Refer to the attached afl-2.56-qemu-4.1.0-port/readme for more
details. Note that to remove the QEMU directory from the AFL subfolder, we
included in AFL header files config.h and afl-types.h in the patch. As a
result, to avoid any unexpected behaviors theses files must be kept in sync
between AFL and QEMU.

After applying the patches and building QEMU and copying the resulting
binary in AFL directory as `afl-qemu-trace`, we invoke AFL with QEMU in the
old fashioned way:

$ ./afl-fuzz -Q -i in -o out /usr/bin/readelf -a @@


We will briefly explain some QEMU/AFL key points to help understand the
modified version. With QEMU the forkserver practically runs inside QEMU,
starts when the ELF entry point is encountered and is kept in sync with AFL
via pipes. When AFL instructs forkserver to run once, the forkserver
(parent) clones itself, writes the QEMU child (child) pid to AFL and allows
the child to execute free. AFL sets a child execution watchdog which will
terminate the child if triggered. While the child runs it updates the AFL
bitmap (`afl_maybe_log()`) and reports blocks that have not been translated
yet back to the parent (`afl_request_tsl()`) who waits in a read loop
(`afl_wait_tsl()`). Once a new block is encountered the parent mirrors the
translation and avoid re-translation for future children which
significantly improves fuzzing performance (interested readers can also
check [07]). Upon termination/crash/exit of the child, parent exits the
wait loop, reports back to AFL and awaits AFL to order a new execution.


   +-------+              +-------------+            +------------+
   |  AFL  |              | Qemu Parent |            | Qemu Child |
   +-------+              +-------------+            +------------+
       |                          .                        .
 init_forkserver                  .                        .
       |                          .                        .
   fork/exec  ------------&gt;  afl_setup                     .
       |                   (entry point)                   .
   setitimer                      |                        .
       |                          |                        .
     read    &lt;----+               |                        .
    (block)       |        afl_forkserver                  .
       |          |               |                        .
       |          +--unblock--- write                      .
       |                          |    &lt;-------------------------------+
  run_target          +-------&gt; read                       .           |
       |              |        (block)                     .           |
       |              |           |                        .           |
     write --unblock--+           |                        .           |
       |                          |                        .           |
     read    &lt;----+             fork  -----------------&gt;  run          |
    (block)       |               |                        | &lt;------+  |
       |          |               |                        |        |  |
       |          +--unblock--- write                afl_maybe_log  |  |
   setitimer                 (child pid)                   |        |  |
       |                          |                        |        |  |
     read   &lt;-----+               |                        |        |  |
    (block)       |               |                        |        |  |
       |          |       afl_wait_tsl/read  &lt;----- afl_request_tsl |  |
       |          |         (loop block)                 write      |  |
       |          |               |                        |        |  |
    do stuff      |               |                        +--------+  |
       |          |           waitpid() &lt;---+              |           |
       |          |               |         |          terminate       |
       |          |               |         +-----------  exit         |
       |          |               |                      crash         |
       |          +--unblock--- write                                  |
       |                   (child status)                              |
       |                          |                                    |
       |                          +--------------repeat----------------+


Our approach is based on TriforceAFL [08] whose goal was to fuzz the Linux
kernel. We are going to provide a brief overview but skip various details,
because as aforementioned TriforceAFL is based on old QEMU (2.3.0) and AFL
(2.06b) versions, currently does not build and the project seems to be
abandoned. Furthermore, Linux kernel is vastly more complex compared to our
framework and the targeted hypervisor and for this reason different hashing
algorithm for the bitmap was used, which is not required here.
Additionally, the target in this article is an ARM binary and executes on
different level (EL2) from the Linux kernel (EL1). Nonetheless, interested
readers may refer to the project source code, documentation [09] and slides
for additional details.

In short, they introduced an instruction as a handler to dispatch
operations to 4 different functions called &quot;hypercalls&quot;, all handled by
QEMU. The parent executes normally and boots the VM until the first
hypercall `startForkServer` is encountered which causes the forkserver to
be instantiated. The parent/forkserver the spawns a child guest which then
invokes hypercall `getWork` to fetch the new testcase from the host to the
guest VM and then hypercall `startWork` to enable tracing and set the
address region to be traced. If the child does not crash, it terminates by
calling hypercall `endWork` to force the child QEMU to exit. These
&quot;hypercalls&quot; are invoked from a custom Linux kernel driver.

As stated in TriforceAFL, getting forkserver to work was one of the most
difficult parts. QEMU full system emulation uses 3 threads; CPU, IO and
RCU. Their solution was to have `startForkServer` hypercall set a flag
which causes CPU thread (vCPU) to exit the CPU loop, save some state
information, notify the IO thread and exit. IO thread then receives the
notification and starts the forkserver by forking itself. The child IO
thread then spawns a new vCPU thread which restores its state from the
previous vCPU saved information and continues execution cleanly from
`startForkServer`. Basically, the forkserver is the IO thread (whose vCPU
thread has now terminated) and each new fork child spawns a new vCPU thread
(with information from the parent vCPU saved state) to do the CPU
emulation.

Finally, AFL was edited to increase the QEMU parent/child memory limit
MEM_LIMIT_QEMU because full system emulation has larger memory requirements
compared to user mode emulation, especially for emulating Linux kernel.
Furthermore, during the AFL `init_forkserver()` fork, a timer controlled by
FORK_WAIT_MULT defined value is set in AFL to avoid blocking in read
indefinitely in case forkserver in parent fails. This value was increased,
because during this step the parent initializes the guest VM until
`startForkServer` hypercall is reached, which might be time consuming. Last
but not least, mode enabled by argument -QQ was introduced to allow user to
specify the QEMU binary path instead of using `afl-qemu-trace`.

Our approach relies heavily on TriforceAFL as mentioned before. We decided
to skip the TriforceAFL implementation details due to the vast QEMU
differences, however we recommend readers to study the TriforceAFL [08]
implementation and documentation.


------[ 3.2.2 - Implementation

First we are going to go over the AFL diff which is the most brief since we
only modified afl-fuzz.c and config.h and we do not deviate much from
TriforceAFL. The QEMU parent/child memory limits have been commented out
since our framework emulation has much larger memory requirements in
comparison. Secondly, to disable QEMU chaining feature which affects AFL
stability, AFL normally sets environmental variable &quot;QEMU_LOG&quot; to &quot;nochain&quot;
(see qemu/linux-user/main.c for details) before invoking QEMU in user mode.
This option however is not honored in full system emulation and as a result
QEMU option `-d nochain` _must_ be specified during QEMU full system
emulation invocation. Lastly, users must set the various system
configurations AFL requires such as disabling the CPU frequency scaling and
external core dump handling utilities. We invoke the fuzzer with our setup
as:


$ AFL_SKIP_CPUFREQ=1 AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1 \
    ./afl-fuzz -QQ -i in -o out                              \
      &lt;path-to-qemu&gt;/aarch64-softmmu/qemu-system-aarch64     \
        -machine virt                                        \
        -cpu cortex-a57                                      \
        -smp 1                                               \
        -m 3G                                                \
        -kernel kernel.elf                                   \
        -machine gic-version=3                               \
        -machine secure=true                                 \
        -machine virtualization=true                         \
        -nographic                                           \
        -d nochain                                           \
        -afl_file @@


--------[ 3.3.2.1 - QEMU patches

At this point we will be providing details regarding the QEMU patches to
support full system AFL fuzzing since as mentioned before, even though the
main idea persists, there are many differences compared to the original
TriforceAFL implementation mainly due to vast QEMU differences between the
versions. The first difference is that we utilized `brk` to introduce
hypercalls instead of introducing a new instruction.


// qemu/target/arm/patch.c

int handle_brk(CPUState *cs, CPUARMState *env)
{
    ...

    switch (syndrome) {
        ...

        case 3:
            return start_forkserver(cs, env, env-&gt;xregs[0]);
        case 4:
            return get_work(cs, env, env-&gt;xregs[0], env-&gt;xregs[1]);
        case 5:
            return start_work(cs, env, env-&gt;xregs[0], env-&gt;xregs[1]);
        case 6:
            return done_work(env-&gt;xregs[0]);
        default:
            ;
    }
    return 0;
}


To better demonstrate the setup we provide the following diagram and each
step will be explained next. Readers are also advised to compare this with
the original AFL/QEMU diagram presented previously.


    +-------------+       +-------------+   +------------+  +-------------+
    | Qemu Parent |       | Qemu Parent |   | Qemu Child |  | Qemu  Child |
    |  IO thread  |       | vCPU thread |   |  IO thread |  | vCPU thread |
    +-------------+       +-------------+   +------------+  +-------------+
           |                     .                .               .
       initialize                .                .               .
          QEMU                   .                .               .
           |                     .                .               .
  (27) start vCPU -----&gt; thread entry point       .               .
           |                     |                .               .
        do stuff &lt;-+   tcg_register_thread (28)   .               .
           |       |             |                .               .
           +-------+             |                .               .
           |             main execution loop      .               .
           |              execute guest VM        .               .
           |            until start_forkserver    .               .
           |                    (29)              .               .
           |                     |                .               .
           |                     |                .               .
           |              start_forkserver        .               .
           |                     |                .               .
           |           set afl_wants_cpu_to_stop  .               .
           |                    (30)              .               .
           |                     |                .               .
           |              save vCPU state         .               .
           |                    (31)              .               .
           |                     |                .               .
           |               +-- notify             .               .
           |               | IO thread            .               .
           |               |    (32)              .               .
           |               |     |                .               .
  got_pipe_notification &lt;--+   exit               .               .
           |                     |                .               .
    afl_forkserver (33)          X                .               .
           |                                      .               .
    write(unblock AFL)                            .               .
           |                                      .               .
 +-&gt; read(from AFL, block)                        .               .
 |         |                                      .               .
 |       fork --------------------------&gt; restore vCPU state      .
 |         |                                     (34)             .
 |         |                                      |               .
 |         |                                   start --&gt; thread entry point
 |         |                                  vCPU (35)           |
 |         |                                      |               |
 |         |                                      |     tcg_register_thread
 |         |                                      |             (36)
 |         |                                      |               |
 |       write                                    |            getWork
 |  (child pid to AFL)                            |               |
 |         |                              +--&gt; do stuff           |
 repeat   ...                             |       |           startWork
 |         |                              +-------+               |
 |         |                                                      |
 |    afl_wait_tsl  &lt;-----------------+                      afl_maybe_log
 |       (37)                         |                           |
 |         |                          |                           |
 |         |                          +-------------------  afl_request_tsl
 |      waitpid &lt;-----------+                                   (38)
 |         |                |                                     |
 |         |                |                                     |
 |       write              |                                   crash
 | (child status to AFL)    +--------------------------------  endWork
 |         |
 +---------+


During system initialization, vCPU is instantiated (27) by IO thread in a
manner dependent on the system configuration. Our setup uses Multithread
Tiny Coge Generator (MTTCG) which allows the host to run one host thread
per guest vCPU. Note that we are using a single core/thread and as a result
there is a single vCPU thread in our setup.

The vCPU thread entry point for MTTCG configuration is function
`qemu_tcg_cpu_thread_fn()` under qemu/cpus.c where, after some
initializations, vCPU enters its main execution loop (29)-(40). In
a high level of abstraction, execution loop comprises two steps;
translating basic blocks (function `tb_find()`) and executing them
(function `cpu_tb_exec()`).

As mentioned before, we allow the QEMU parent to execute free and
initialize the guest VM until `start_forkserver` hypercall is invoked. As a
result, each forkserver child will start with a _fully initialized VM_
right before the targeted functionality significantly improving fuzzing
performance.


// qemu/cpus.c

/* Multi-threaded TCG
 *
 * In the multi-threaded case each vCPU has its own thread. The TLS
 * variable current_cpu can be used deep in the code to find the
 * current CPUState for a given thread.
 */

static void *qemu_tcg_cpu_thread_fn(void *arg)
{
    CPUState *cpu = arg;

    ...

    tcg_register_thread();                                       /* (39) */

    do {
        ...

        r = tcg_cpu_exec(cpu);                                   /* (40) */

        ...

    } while ((!cpu-&gt;unplug || cpu_can_run(cpu))                  /* (41) */
               &amp;&amp; !afl_wants_cpu_to_stop);

    if(afl_wants_cpu_to_stop) {
        ...

        if(write(afl_qemuloop_pipe[1], &quot;FORK&quot;, 4) != 4)          /* (42) */
            perror(&quot;write afl_qemuloop_pip&quot;);
        ...

        restart_cpu = (&amp;cpus)-&gt;tqh_first;                        /* (43) */

        ...
    }
    ...

    return NULL;
}


When during the execution `start_forkserver()` hypercall is invoked, global
flag `afl_wants_cpu_to_stop` is set (30)-(44) ultimately breaking the vCPU
main execution loop. There are various reasons that could cause the system
to reach this state so after the main loop we check flag
`afl_wants_cpu_to_stop` to decide whether vCPU must terminate (41).
Finally we save the vCPU state (31)-(43), notify IO thread (32)-(42) and
terminate the vCPU thread.


// qemu/target/arm/patch.c

target_ulong start_forkserver(CPUState* cs, CPUARMState *env, ...)
{
    ...

    /*
     * we&#039;re running in a cpu thread. we&#039;ll exit the cpu thread
     * and notify the iothread. The iothread will run the forkserver
     * and in the child will restart the cpu thread which will continue
     * execution.
     */
    afl_wants_cpu_to_stop = 1;                                   /* (44) */

    return 0;
}


Parent IO thread becomes the forkserver in the notification handling
function `got_pipe_notification()` (33)-(45). In the fork child (which is
the child QEMU IO thread) we reset the vCPU state (34)-(46) and start a new
vCPU thread for the child process (35)-(47). (don&#039;t forget to comment out
the `madvise(..., DONTFORK)` invocation ;)


// qemu/cpus.c

static void got_pipe_notification(void *ctx)
{
    ...

    afl_forkserver(restart_cpu);                                 /* (45) */


    /* we&#039;re now in the child! */
    (&amp;cpus)-&gt;tqh_first = restart_cpu;                            /* (46) */

    qemu_tcg_init_vcpu(restart_cpu);                             /* (47) */
}


Finally, for MTTCG all TCG threads must register their context before
starting translation (36)-(39) as part of their initialization process
mentioned before. As shown next, each thread registers its context in
`tcg_ctxs` array in an incremental fashion and assigns it to thread local
variable `tcg_ctx`. It is obvious that the system was not designed with a
forkserver in mind, where vCPU thread is respawned and trying to register a
new context for the forkserver children will fail. However, since we
use a single thread and we can simply bypass this by patching function
`tcg_register_thread()` to always set `tcg_ctx` to the first array entry
after the first invocation.


// qemu/tcg/translate-all.c

__thread TCGContext *tcg_ctx;


// qemu/tcg/tcg.c

void tcg_register_thread(void)
{
    static bool first = true;
    if (!first) {
        tcg_ctx = tcg_ctxs[0];
        return;
    }
    first = false;

    ...

    *s = tcg_init_ctx;

    ...

    /* Claim an entry in tcg_ctxs */
    n = atomic_fetch_inc(&amp;n_tcg_ctxs);
    g_assert(n &lt; ms-&gt;smp.max_cpus);
    atomic_set(&amp;tcg_ctxs[n], s);

    tcg_ctx = s;

    ...
}


--------[ 3.3.2.2 - Framework support

Let&#039;s now demonstrate how to reach the state where forkserver is up and
running via the framework. After the framework initialization we call
`__break_start_forkserver()` from EL1 (48) which in turn calls `brk` with
instruction specific syndrome 3 which corresponds to the `start_forkserver`
hypercall. This eventually causes the forkserver to be started in the
parent QEMU process as discussed above.

Each new child QEMU process, will resume guest VM execution in its vCPU at
the instruction immediately following `__break_start_forkserver()` in a
guest VM state identical to the one the parent process had before
instantiating the forkserver. For example, in our setup the child will
continue in (49) invoking the `get_work` hypercall to fetch the test case
from the host (technically it will resume from `ret` instruction after
`brk #3` in `__break_start_forkserver()` function but you get the idea ;).


// framework/main.c

void el1_main(void) {
    framework_rkp_init();

    rkp_call(RKP_DEF_INIT, 0, 0, 0, 0, 0);


    __break_start_forkserver(0);                                 /* (48) */

    /* fuzzing loop */
    for(; ;){
        __break_get_work();                                      /* (49) */
        __break_start_work();

        rkp_call_fuzz_afl((*(uint64_t*)(&amp;rand_buf)), &amp;rand_buf); /* (50) */

        __break_end_work(0);
    }
}


// framework/afl.S

__break_start_forkserver:
    brk #3
    ret
ENDPROC(__break_start_forkserver)

__break_get_work:
    ldr x0, =rand_buf
    mov x1, 0x1000
    brk #4
    ret
ENDPROC(__break_get_work)

__break_start_work:
    mov   x0, #RKP_VMM_START
    add   x1, x0, #RKP_VMM_SIZE
    brk #5
    ret
ENDPROC(__break_start_work)

rkp_call_fuzz_afl:
    hvc #0
    ret
ENDPROC(rkp_call_fuzz_afl)

__break_end_work:
    // x0 is the exit value
    brk #6
    ret
ENDPROC(__break_end_work)


For demonstration purposes and to verify that the fuzzer works as expected,
we will be using the same fuzzing harness as with the dummy fuzzer to fuzz
the `hvc` command ids. If everything works as expected we should have at
least one crash by invoking command 0x9b.

As mentioned above, framework function `__break_get_work()` (49) invokes
qemu `get_work` hypercall (51). There, the child QEMU reads the AFL
created test case and copies its contents in guest VM `rand_buf`. In the
next step, `__break_start_work()` framework function invokes `start_work`
hypercall (52) which sets the child process to only track and edit the
AFL bitmap for addresses in the RKP range.


// qemu/target/arm/patch.c

static target_ulong get_work(CPUState *cs, CPUARMState *env,     /* (51) */
                             target_ulong guest_ptr, target_ulong sz)
{
    int l = 0x1000;
    uint8_t buf[l];

    assert(afl_start == 0);
    fp = fopen(afl_file, &quot;rb&quot;);
    if(!fp) {
         perror(afl_file);
         return -1;
    }

    fread(buf, l, 1, fp); // must add checks

    if (cpu_memory_rw_debug(cs, guest_ptr, buf, l, 1) &lt; 0) {
        fprintf(stderr, &quot; Cannot access memory\n&quot;);
        return -1;
    }


    fclose(fp);
    return retsz;
}


static target_ulong start_work(CPUState *cs, CPUArchState *env,  /* (52) */
                               target_ulong start, target_ulong end)
{
    afl_start_code = start;
    afl_end_code   = end;
    afl_start = 1;
    return 0;
}


The initial testcase provided to AFL must execute without crashing. For
that we use command id 0x98 which as shown in the snippet simply writes in
the debug log and exits. At long last, we can invoke and fuzz the `hvc`
handler. We read the first QWORD (50) from the provided test case as the
command id and simply use `rand_buf` as the second argument as discussed in
the dummy fuzzer harness.


// vmm-G955FXXU4CRJ5.elf

void rkp_main(uint64_t command, exception_frame *exception_frame)
{
  ...

  switch ( hvc_cmd )
  {
    ...

    case 0x98:
      rkp_debug_log(&quot;RKP_a3d40901&quot;, 0, 0, 0); // CFP_JOPP_INIT
      break;
...


However, not long after the `hvc` invocation our system crashes. The
problem lies in the basic block translations performed by the QEMU parent
process as we elaborate on in the next section.


--------[ 3.3.2.3 - Handling parent translations

For QEMU to perform basic block translations for ARM architectures, it uses
`mmu_idx` to distinguish translation regimes, such as Non-Secure EL1 Stage
1, Non-Secure EL1 Stage 2 etc. (for more details refer to ARMMMUIdx enum
definition under qemu/target/arm/cpu.h). As shown below, to evaluate the
current `mmu_idx` it relies on the current CPU PSTATE register (53). This
process is normally performed by the vCPU thread during the guest VM
emulation.


// qemu/target/arm/helper.c

int cpu_mmu_index(CPUARMState *env, bool ifetch)
{
    return arm_to_core_mmu_idx(arm_mmu_idx(env));
}

ARMMMUIdx arm_mmu_idx(CPUARMState *env)
{
    int el;
    ...

    el = arm_current_el(env);
    if (el &lt; 2 &amp;&amp; arm_is_secure_below_el3(env)) {
        return ARMMMUIdx_S1SE0 + el;
    } else {
        return ARMMMUIdx_S12NSE0 + el;
    }
}


// qemu/target/arm/cpu.h

static inline int arm_current_el(CPUARMState *env)
{
    ...

    if (is_a64(env)) {
        return extract32(env-&gt;pstate, 2, 2);                     /* (53) */
    }
    ...
}


As earlier discussed, in QEMU/AFL when a child process encounters a basic
block previously not translated, it instructs (38)-(55) the parent to
mirror the basic block translation process (37)-(57) so that next
children will have cached copies to avoid re-translation and improve
performance [07]. To achieve this, the child sends (55) the current pc
address along with other information for the parent to perform the
translation (57) _within its own CPU state_. Moreover, in our setup the
parent translation is performed by the IO thread because vCPU thread is
terminated during the forkserver instantiation. The problem of course lies
in a state inconsistency between the child and the parent.

We will demonstrate the state inconsistency via an example. When the parent
becomes the forkserver in our setup/framework it is executing in EL1.
While the child process executes, its vCPU will emulate the `hvc`
invocation, change its state to EL2 to continue with the emulation of the
hypervisor code and almost certainly encounter new basic blocks. As
mentioned above, it will instruct the parent to do the translation as well.
As there is no way for the parent to be aware of the child state changes it
will remain in EL1. It should be obvious now that when the parent tries to
translate the EL2 basic blocks while being in EL1 will fail.

So the child must also send its PSTATE (54) which the parent uses to set
its own PSTATE (56) and then perform the translation correctly.


// qemu/accel/tcg/cpu-exec.c

static inline TranslationBlock *tb_find(CPUState *cpu, ...)
{
    ...

    if (tb == NULL) {
        ...

        CPUArchState *env = (CPUArchState *)cpu-&gt;env_ptr;        /* (54) */
        pstate = env-&gt;pstate;

        /*
         * AFL_QEMU_CPU_SNIPPET1 is a macro for
         * afl_request_tsl(pc, cs_base, flags, cf_mask, pstate);
         */
        AFL_QEMU_CPU_SNIPPET1;                                   /* (55) */
        ...
    }
    ...
}


// qemu/afl-qemu-cpu-inc.h

void afl_wait_tsl(CPUState *cpu, int fd) {
  ...

  CPUArchState *env = (CPUArchState *)cpu-&gt;env_ptr;

  while (1) { // loop until child terminates
    ...

    env-&gt;pstate = t.pstate;                                      /* (56) */
    tb = tb_htable_lookup(cpu, t.pc, t.cs_base,
                              t.flags, t.cf_mask);               /* (57) */
    ...
  }
  ...
}


Furthermore, as stated above the parent process is originally in EL1 during
the forkserver instantiation. However, the child can terminate (hopefully)
during execution in other ELs. In this case, the parent might be left in
the EL the child was during the crash (if new basic blocks were encountered
before crashing) and consequently the next fork child will also be in that
EL. However, as previously discussed each child resumes execution right
after `__break_start_forkserver()` in EL1 and as a result of being in a
different EL, translations will fail causing the child to crash. For this
reason, we save the original state before the forkserver initialization
(58) and restore it before forking the each next child (59).


void afl_forkserver(CPUState *cpu) {
  ...

  CPUArchState *env = (CPUArchState *)cpu-&gt;env_ptr;
  afl_fork_pstate = env-&gt;pstate;                                 /* (58) */
  ...

  /* forkserver loop */
  while (1) {
    env-&gt;pstate = afl_fork_pstate;                               /* (59) */
    ...

    child_pid = fork();
    ...

    if (!child_pid) {
      /* Child process */
      ...
    }
    /* Parent */
    ...

    afl_wait_tsl(cpu, t_fd[0]);
    ...
  }
}


Before executing we need to address some issues previously encountered,
namely how to handle aborts, policy violations etc.


--------[ 3.3.2.4 - Handling hangs and aborts

As shown next, if an abort exception is triggered (60) we terminate child
process with exit status -1, which AFL is modified to treat as a crash
(62). Additionally, we skip the crash logging function to avoid cluttering
the system with logs due to high execution speeds as shown next.


// qemu/target/arm/helper.c

/* Handle a CPU exception for A and R profile CPUs.
   ...
 */
void arm_cpu_do_interrupt(CPUState *cs)
{
    ...

    // Handle the instruction or data abort
    if (cs-&gt;exception_index == EXCP_PREFETCH_ABORT ||            /* (60) */
          cs-&gt;exception_index == EXCP_DATA_ABORT ) {

        /*
         * since we are executing in afl, avoid flooding system with crash
         * logs and instead terminate here
         *
         * comment out to see abort logs
         */
        exit(-1);

        if(handle_abort(cs, env) == -1) {
        }
        ...
        exit(-1);
    }
    ...
}


// afl/afl-fuzz.c

static u8 run_target(char** argv, u32 timeout) {
    ...

    /*
     *  Policy violation (type of assertion), treat as hang
     */
    if(qemu_mode &gt; 1 &amp;&amp; WEXITSTATUS(status) == 32) {
        return FAULT_TMOUT;                                      /* (61) */
    }

    /* treat all non-zero return values from qemu system as a crash */
    if(qemu_mode &gt; 1 &amp;&amp; WEXITSTATUS(status) != 0) {
        return FAULT_CRASH;                                      /* (62) */
    }

}


Furthermore, we chose to treat `rkp_policy_violation()` as a system hang by
terminating the child with status 32 (63) which is then identified by AFL
(61). Additionally, `vmm_panic()` (64) is treated as a crash. As we
previously said, this solution does not scale well because of systems where
not all possible hangs can be identified. However, AFL sets watchdog timers
for each child execution and if the timer is triggered, the child is
terminated. This is the reason we chose to have unhandled `smc` invocations
and other unexpected exceptions to loop indefinitely. They might have a
small impact in fuzzing performance (loop until timer is triggered) but
otherwise allow for a stable system setup.

In essence this setup allows for flexibility regarding the way we handle
aborts, hangs and generally all erroneous system states, with a failsafe
mechanism that guarantees the fuzzing setup robustness even when not all
system behavior corner cases have been accounted for. As our understanding
of the system improves, more of theses conditions can be incorporated in
the fuzzing logic.


// qemu/accel/tcg/cpu-exec.c

static inline TranslationBlock *tb_find(CPUState *cpu, ...)
{
    ...

    if (pc == 0xB010DBA4) { // rkp_policy_violation
        qemu_log(&quot;[!] POLICY VIOLATION!!! System Reset!\n&quot;);
        exit(32);                                                /* (63) */
    }

    if (pc == 0xB010A4CC) { // vmm_panic
        qemu_log(&quot;[!] VMM PANIC!!! We should not be here!!!\n&quot;); /* (64) */
        exit(-1);
    }
    ...
}


--------[ 3.3.2.5 - Demonstration

We illustrate (show off ;) below an execution snapshot. We can see the
fuzzer operating on average at 350-400 executions per second, identifying
new paths and crashes, even with our naive fuzzing harness. Lastly, reading
one of the crashes reveals the faulting command id 0x9b ;)


         american fuzzy lop 2.56b-athallas (qemu-system-aarch64)

-- process timing ---------------------------------- overall results -----
|        run time : 0 days, 0 hrs, 0 min, 38 sec  |  cycles done : 0     |
|   last new path : 0 days, 0 hrs, 0 min, 2 sec   |  total paths : 22    |
| last uniq crash : 0 days, 0 hrs, 0 min, 24 sec  | uniq crashes : 4     |
|  last uniq hang : 0 days, 0 hrs, 0 min, 13 sec  |   uniq hangs : 5     |
|- cycle progress ----------------- map coverage ------------------------|
|  now processing : 7 (31.82%)   |    map density : 0.44% / 0.67%        |
| paths timed out : 0 (0.00%)    | count coverage : 1.49 bits/tuple      |
|- stage progress ----------------- findings in depth -------------------|
|  now trying : havoc            | favored paths : 13 (59.09%)           |
| stage execs : 630/2048 (30.76%)|  new edges on : 15 (68.18%)           |
| total execs : 13.3k            | total crashes : 134 (4 unique)        |
|  exec speed : 375.3/sec        |  total tmouts : 835 (5 unique)        |
|- fuzzing strategy yields ------------------------ path geometry -------|
|   bit flips : 7/256, 6/248, 3/232              |    levels : 4         |
|  byte flips : 0/32, 0/24, 0/8                  |   pending : 15        |
| arithmetics : 5/1790, 1/373, 0/35              |  pend fav : 7         |
|  known ints : 2/155, 0/570, 0/331              | own finds : 20        |
|  dictionary : 0/0, 0/0, 0/0                    |  imported : n/a       |
|       havoc : 0/8448, 0/0                      | stability : 100.00%   |
|        trim : 98.77%/13, 0.00%                 |------------------------
--------------------------------------------------          [cpu000:109%]


$ xxd -e -g4 out/crashes/id:000000,sig:00,src:000000,op:flip2,pos:1

00000000: 8389b000


----[ 3.4 - Final Comments

Using the proposed framework, we have demonstrated a naive fuzzing setup
and an advanced setup employing AFL based on TriforceAFL while elaborating
on QEMU internals.

The proposed solutions can be easily modified to support other setups with
full system emulation and in different ELs or security states as well. For
example, let&#039;s assume the desired target is an EL3 implementation and we
wish to fuzz early initialization functionality before interaction with
other components or ELs. We can achieve this by identifying the desired
location by address similarly to `rkp_policy_violation` and injecting the
`start_forkserver` and any other required functionality to that specific
location. This is similarly true for trusted OSs and applications.

Finally, one of the AFL limitations is the lack of state awareness. After
each testcase the framework/guest VM state is reset for the new testcase to
be executed. This of course prevents us from finding bugs which depend on
more than one `hvc` invocations. A possible solution could be to build
harnesses that support such functionality, even though this is not the
intended AFL usage and as such it is not guaranteed to have good results.
It remains to be verified and other fuzzing solutions could also be
examined for state aware fuzzing.


--[ 4 - Conclusions

The author hopes that this article has been useful to readers who dedicated
the time to read it, did not lose motivation despite its size and of course
maintained their sanity :) Even though though we attempted to make this
(very long) article as complete as possible, there is always room for
improvement of both the presented solutions and new features or supported
functionalities, as is true with every similar project. Readers are welcome
and encouraged to extend/improve the proposed solution or, using the newly
found knowledge, develop their own and publish their results.


--[ 5 - Thanks

First of all, I would like to thank the Phrack Staff for being very
accommodating with my various requests and for continuing to deliver such
awesome material! This work would have been very different without huku&#039;s
insightful comments, his very helpful review and him being available to
bounce ideas off of. Thanks to argp as well for his helpful review and
assistance with various procedural issues. Also, cheers to friends from
CENSUS and finally to the many other friends who helped me one way or
another through this very demanding journey.

Remember, support your local artists, beat your (not only) local fascists,
stand in solidarity with the oppressed. Take care.


--[ 6 - References

[01] https://www.samsungknox.com/en

[02] https://www.samsungknox.com/en/blog/real-time-kernel-protection-rkp

[03] https://googleprojectzero.blogspot.com/2017/02/
        lifting-hyper-visor-bypassing-samsungs.html

[04] https://opensource.samsung.com/

[05] http://infocenter.arm.com/help/
        index.jsp?topic=/com.arm.doc.den0028b/index.html

[06] https://hernan.de/blog/2018/10/30/
        super-hexagon-a-journey-from-el0-to-s-el3/

[07] https://github.com/google/AFL/
        blob/v2.56b/docs/technical_details.txt#L516

[08] https://github.com/nccgroup/TriforceAFL

[09] https://github.com/nccgroup/TriforceAFL/
        blob/master/docs/triforce_internals.txt

--[ 7 - Source code

begin 664 rkp-emu-fuzz-galore.tar.gz
M&#039;XL(`-7*,5X``^P\:W?:2++YS*_HL:_&#039;R`-8XF$GSB1[,,B)3K#Q()S&#039;S.0H
M`C6@C9!8M7#P[-W[VV]5M]X(C#-)[MW9Z$PLH:Y75U5753\T_L=%E&lt;Z7U&lt;GR
MCS^J4]/Q?&#039;K\Z`M?,ERGIRV\*Z&lt;M.7V/KD=*XT1N-1O0`G!*H]$Z&gt;41:7UJ0
MHFO)`M,GY)&#039;IVVP;W&#039;WM_Z:77V#_J37ZHC[P&lt;/LW%:7^W?[?XMID?Y^:UIS6
MYM87X($&amp;/CEI;K)_O=6HY^S?.CEM/&quot;+R%^!][_4?;O]],GAU3?3`G%)2)X$Y
M&lt;BCY9#H?2Z7AS&amp;8D\#R&#039;P&#039;UD,FH1SR6?//\C6?B443&gt;`-[9+?I.5]\1T+7BH
MOZ^52EK`R&amp;+I+SQ&amp;&quot;:?`Z9%@1LG2M:A/Z,J&lt;VZX9V$!N=K&gt;@_JW-/#^1P3==
MYO#F$I&gt;&#039;&lt;&gt;H+WW8#8CH.N34=VR+`W[?#-J!M^\0,X,UH&amp;5!6(UJ`O-ER@6)8
M*,2(EFSWUOL(OR:^-R=JKTZ`J]IK&lt;!(3&gt;`ZPQY&#039;H&#039;]@G.QC/J/.!C+WY&#039;&amp;&amp;@
MU;PU;0&gt;%JI7.J&gt;-]XN^(1&gt;&gt;&gt;RT!PWB=O0FS0P9)!?VKD`@C/850!4`&quot;XC/AT
M:OJ6[4Z)/5\X=`X=$9TU&amp;5O.%_C(*H0&amp;XQJ`3D!?(#PJS_/M*:C-(:8?V&amp;.4
MH/3APX=2&amp;4:K1&quot;)A2_\U7C&quot;?/&quot;/RJD7*:D^12B%$#$+JI4OO%OD#8=!&quot;&quot;N5)
M!+P`T847[#_P*NT3O+K0$Z+3L0=J$X8=)F8E0V%6O/8?SN&amp;Z373[#WI&amp;FG)U
M!)HN`0-0&quot;72H1V^I&lt;T:4D@8PP&amp;\*0/)*1)E)?)6N49Z0Q*OS4JE6JZ&amp;W^Q9Q
M!`%YI8SE4PNPJN*1PN,9T&gt;OMZV&gt;*4B%OKYXI&lt;A$*35`F12C(B0FM&lt;#PR&lt;KSQ
M1\0&gt;3&lt;9&lt;S&quot;H^4OZ8Q98W(M((&lt;1P&amp;U#SBQ/99D,&gt;+@%%&lt;^2&amp;(CQ\GF(\WL&lt;2.
MYEP3S)+V.Z7`5=&amp;?P1_(`/V&gt;NF/*2B4,+V?DYUD0+-C9\?&#039;4\Z8.7?C&gt;W^DX
M^(/Z7@T$F[*%%]1@F![7(;,&lt;R_5CQYZ@1U1Y?*GR`%,=W2U@B.%;9L[9TIVR
MVBR8.\^11SW-8T9]UW1K%CU&amp;VDCS\;$B&#039;S?D8P@H0&amp;X&amp;$6SJN56S^G=OZ;OT
MKHH1I4H=N1IX508/C&gt;/GI?_KR+[;M2G_FZ8_GITTJU$DJ&quot;WN/IO&#039;]OROG-;E
MDUS^/VTIW_/_-[D@!WE^0,#D,/*&amp;D&amp;;&lt;Y7P$20&gt;26)1A(&lt;=C_N&#039;!H&quot;J&quot;02I&#039;
MBYJA=&#039;5S:5QH`WUH]-37:L]0KX8#3=5A&gt;&quot;MRO7D?;1&#039;:MA+7U4[_JKM&amp;O:74
M[R,&gt;8)S&gt;2GOX4AML(\T@5R!AI+:8W3%[C&amp;G8LJ`,8B+/E*Y?OM.-=K&lt;[,&#039;3M
M5Q6PZT=&#039;33G$]R831H.(`D9*@HDK$A#J&quot;!&quot;&lt;!]A4$5-&quot;..-&lt;&amp;QK]BPM=&#039;0+-
MDT)Z;Z^06D0,2IXB8F^OLJ1:C9#6W&amp;0?H58119)/47.WE%/JMT6E9&amp;9,;U$V
M]NU%X/FEBU[7.._U.Z^,?MNX;.NO&gt;#&quot;_@*L3IH4&#039;\,BX0(J)OI&#039;)Q87Z4&quot;9I
M5TCQ&amp;&amp;[A`=&gt;./,JBA@1/I*MXH*&quot;/23%[7EZG&amp;;?/&gt;^I]3!/&#039;&#039;MT%PJU-\LN;
M_J!;XG\CCWM&lt;*EET(@IE8V2Z+O7+TED)JRSQ&quot;V&quot;:CX_V]O?(3V3O=W&lt;OW?33
M,\(;6D=[9*UAEVHNC]0B1P1((:O]=5Y&quot;#OZ2RUL639+H@N.9UC_*.,!&quot;^6]!
M=`A1M87I,VI`+6Y0F`64#X_*2Y?94Q&lt;,XGA06&gt;&quot;?(ZE\P*1#&lt;L!&#039;J,3QP520
MJ`DRN@4&gt;I;$#E0&quot;Y#G,;UBFUCBCR0X8HA6&#039;8KAT81IE19Q*^QPM_UH26)XXY
M92#;T%_2HG9JCF&gt;&amp;\(00*(&#039;&quot;4J(&lt;B5#A6%(MYKD7)=Z]&quot;N]YIW]YV8;XUVT/
MV]B#6$HQJ&gt;$R5F!J,*UP9S.&quot;X`Y$CKEUKO4!B(`**-(C+\4.)8G\&quot;&quot;X8U\DQ
M\M*&#039;:BQ0&gt;R&amp;%,J?V_#FI&lt;X21HD@QK+#FWEB@0+\/K#TP14Q&quot;*N5`#Y&#039;8&amp;12$
M!Q;:K)Q`)D3M24H&amp;F&#039;&amp;Y7D#$M&amp;WM=3VQ4YJ&#039;Z?)6NJ)C&quot;(&lt;XA-3&gt;F&gt;&quot;8$BV-
M*5PFD3;P[[*D7P\[`P-GD5O4&amp;L$&lt;2E(.=WB^`W((A-@9]/W,^).A7I[B`TYI
M2#F94F=PAK+^*W&quot;+I1:&amp;PRL#!A.G9Z0&lt;0X&amp;1E9/(REEZ+^0UR&amp;8AI-Y;@TQ(
M9B#!SIPL!,(1S&quot;DR;2%/S&amp;*\JJAG6JF3P56VXYYLP57NX=O,X3*Z#A\.`J2)
M*R7^+;7VI%)IW3/C,%WDM/$\]\#B\UP^/!KUGYI&#039;UVVI$&quot;,_$0Z&#039;%!B@&amp;#XS
M33Z0E1-GQ1&amp;@=BE#[8\N(U658MS4)/K`&gt;G4&gt;X&lt;6J0G^0\X[+0Z,%V&lt;1(%6(&amp;
M3XOEV-U3.&#039;0UIHN`O*)W(\_T+0TBBN\O%T%ND$,P3T7$#?1%A+P-@I$?!_/#
MP\/P&quot;5,&lt;$^5BOD2$,HHW3.U;ZJ[5?RE*X&gt;/^&quot;P]MX-U2OYA@&gt;D&#039;+6PKB0&amp;KI
M\)(.@S[B8^Y(K77=A=2QR.#UF,@KAFVM,)QQ,Y;E&quot;ME0B*&gt;3P&lt;2QP)-%DN7Z
M@&quot;2=(WF45!8I&lt;^QK3&quot;R2F:+`_%LZ0G/;V@QRHF7PUC(\26E+)=9/&lt;TM@&quot;QEQ
MC26,^&amp;!-LQ+&amp;W8U5`IO*GVF)A8^DB24&gt;,N`)`&gt;2&quot;-$ZTBXN43Q37QR11U!JQ
ML&quot;!!6:(4&amp;H6NG&quot;.OJVJ;D(D;KTLFY@2IZC./C*YMH%L;.&quot;&lt;.P$&gt;$&gt;&amp;MU_CH\
M9AZ1RG(3H&gt;.-#KE&amp;A+KHEGDA?LJQ&quot;=%8W5Q@5D$)(=3DYDJY/+1R4Z&quot;9F5`.
M4(S)\E[APM&gt;!_&#039;A5%;=PN&gt;N`\&gt;6N`X8E3CDG&gt;27;M0I,TMPRBBW]5C][+WZN
M7/Y#6O?&#039;=,SZHOXH9KT[^Z.RS1_O%W*;/Q9+@I.G-&#039;D#M1B[8F;&quot;E(J(]EH,
M+%HO2`=!E@J&quot;Q3Q_(O:?&quot;(,L&quot;2JYV)2.3F+6FQW&gt;&amp;R(AU*\SS&quot;C9&gt;)CC&amp;%ID
M8S3,\$N`4_SZR.63S2BI&quot;L8V&lt;P\#Z*I(18D[P93%(^RCO&lt;CX+LOY+GNH[VY8
M!]C%&gt;=DVY\V:Y&quot;O(MCW0K\F&amp;@3X[LHI\88N&lt;^:&amp;5$&gt;XS8KV0&lt;&amp;VYY4O$^K&quot;E
M&lt;$A^F33`=D\#;/&lt;T4+SC\G7SP!:?N&#039;]&lt;;?6)A\5;]L!X6[&quot;&amp;FHI!P1&gt;)MK@F
MD@E]03RJH@%?&#039;/;XNE_(,QD4Y8&quot;&#039;OOS,H1A6J#W82&gt;T;EAGO&#039;X.B/VO+D5]Y
M#(9-11;\,J,SV&#039;UT!KN/SMS^ZU&lt;&gt;EN&amp;:H&lt;YW,]7&gt;0]&lt;,^6I?A+R^VA=MDA:O
M]D74MZ[U1:S@/2Z7.C8+RA/;@1ESV3&#039;G(\LDH)=5C07@C66)_/&quot;,[.UQ*C6V
M&lt;.R@O$?VI-14&#039;QK&amp;2(:Z9:0H?&lt;.UQ/0(YV+\3)3&quot;9;UD!_E@A5O(!Y8DUA&quot;!
M9H44K23B%:[L13_7EW#6EOKX2Y&quot;$!@9?R47FJ)3?Y/&gt;Y!8Y0Z@3X9R+C,9/D
MQ7/26&quot;&gt;&gt;]&amp;E/&lt;T6A!0A+/!N&quot;_5H]?R:3&#039;W\D\/3SLX:T)Q42R*]8\LZ)!937
MIK.DJN][_L;%JD*^V%,ZA:K3I_]8VCZUBG@7\&lt;WH`%PMML4Z_WTR=JB))W&#039;6
MFD)/X[&lt;?R?^4&gt;:#_^6?PE0(JN&quot;,&amp;P1:EW$CKOY^E30.$UL`V&gt;K1P,P@N?,T8
MB*W+$&#039;IE^I1#N`(7,\VYXK;EP\.V@X?P[G#YJ9!0!F\?S(#IE8N6:?E3PY43
M&gt;,B0+1B9\9!$F&gt;,]%ZD4AU+IW^2LQ%_Q*CK_D&gt;P@5$&gt;F3ZMS&amp;IA.=&gt;*;&lt;XK&#039;
M_QY\-IB?_VW=&gt;_Y7:3::K8:B/)+K2NNT^?W\[[&gt;X/L?^/:VC7NGJSCSN._][
M&lt;I([_U.OGX`;?#__\PTN&quot;._&gt;XLZWIS/(^&amp;.)U&amp;7E2;4NUV72A@X&#039;U+9@YC6&lt;
MF0Y4OQ#DVXY#.#&quot;+=[9J&amp;/P&#039;%.#$81/&lt;YL#]C27C^ZS,6_ICRM]`26WZ=SA_
MG$-E#M%_AJ41WKUE`$3FGF5/[#&#039;?*&lt;&#039;*E!+PP[D=X$&#039;CA0]9U&lt;*#%[-P.V;B
M.8[W&quot;3,MSG%M?FZV1#@:.&quot;Q?Z5-J.&lt;$8;K&quot;$$HT]&quot;R#!_%C`F.&#039;I&amp;7/DW6)3
MJ!*1UEPOL,&gt;T(F:A6%&lt;CE81I=`0Y)1&#039;PA.F&quot;/:=^#4C4U\4`=BEM1&amp;)`)ZWE
MF&#039;X=2&lt;(#0H*0Y8V7\&lt;EC1#L&amp;2X@%QKD)4P;;=%BB&lt;VXJI)ON!/:L42/\A`I$
M!A8=1S*78$]?R!*+3V:&gt;8U%X.S?O^$[\B$;G:(1`,`4#)#SEC&amp;SG7D&quot;)T`9X
M&amp;B#&quot;M#H\M\V[SKQ)\`DMG3@/7&amp;Q!Q^A`6(2@8_GH.JYP(L:XR``(TUR=Z/V+
MX9OV0&quot;7P?#WHO]:Z:I=\^-#6X&lt;7A(8&amp;Y%_Q[1]2WUP-5UTE_0+3+ZYX&amp;0(`U
M:%\-87)&lt;`6+:5:=WT]6N7E3(^&lt;V07/6&#039;I*==:D,`&#039;/8KP$LM0&quot;3]&quot;W*I#CHO
MX6?[7.MIPW&lt;XM(#GA3:\0GX7P+!-KMN#H=:YZ;4&#039;Y/IF&lt;-W758(B=S6]TVMK
MEVJW!OR!)X$I^]60Z&quot;_;O1[O(,#=#%\&quot;C7,5Q,$E&#039;$$1&gt;M35!FIG6`&#039;$Y*D#
MO0=)8%JJ7ZL=#1Z`BOI6!&lt;&#039;;@W&lt;5[&#039;VG#P&#039;_EQL`@V;2;5^V7T`_RMN[#U1`
MMYV;@7J)\D&amp;O]9MS?:@-;X8J&gt;=&#039;O=[EB=77P&amp;A**_I3T^CK7S8VN5@A.?3EK
M(`%JT9\&quot;-&gt;S1C:YQ%6E70W4PN+D&gt;:OTKB;SLOP$E@)QM0.YR7?:O&gt;(=!&amp;_W!
M.R2+FN#*1L&#039;&gt;O%2A98`*A+X-!VU4A3X&lt;:)UA&quot;A`Y#ON#8:JGY$I]T=-&gt;J%&lt;=
M%5I1**3S1M-5&quot;:RCZ0BB&quot;=9OVL#WAG&lt;&lt;;0*2B&lt;&gt;4_U6X[8AV@0[0?:VA\&quot;$X
MV%O7A!Q&quot;=9V7H&gt;)K7[!&gt;_IS\/X=H61OOSN.&gt;_-]HG2A1_=&lt;\:34Q_Y_*S&gt;_Y
M_UM&lt;^[8[=I:0&quot;?&lt;F/J6@&quot;Q&lt;_3:G-]DI)RT&lt;^J9MD7]K168SJ#&#039;`&lt;R&#039;29YMOY
M&#039;%^42G0%&lt;&quot;ZY]6R+L/G8&amp;$,I4&lt;8%/,R_TM,L0.QC!O@E7QPKX_L\&amp;#9R.DL@
M=-(T!+&amp;*:#P&quot;M`J)6R:&gt;E_U5KQ2NGI`42&quot;.+T&lt;SS-XP13,T_YF4;S\&quot;3?)Q:
MCY83&gt;%WBP.%!&#039;\_#:;M!&lt;1%&amp;())_&lt;D%&quot;[9;W?OOA/5%7D,.&quot;\(LE0!&amp;3_T:M
M5OO=Q?;VR!,G?,1)-LQIV+0&#039;4OP+&amp;.[;$UPG;%_TC(N;7W\ME%HL?QI0=WSD
M!9Q?!N0B.%QH0%ML:A=TMD%`4A?M:&amp;]0Y&quot;8[&amp;AA]#&#039;.2,B@W&amp;RKT&quot;!\5Q#P^
M)@!&quot;$);Z0K?440R,1AF%%C@1HF-3[#B#5]=&amp;5[TPM&quot;L-XKZ&lt;_B^&quot;!7:QOW8@
MVQC=F\MK`Q%[_1?2TWM@NNKYS8L0DH-NU&#039;[,$-Z5GY*GTC^3U90B4^3;LF9(
M&lt;(^/$C\_(KJ)&#039;YMQY:&#039;[@&amp;)=RE@M!9*&amp;ON#G&#039;_AV#/^&amp;#\HZ_$PP_A#.(N6W
MLE3A-5[D\`C(2SJ3)76F(!?NHYG^%/!2AT7)T7&#039;\O.X+Y:/8&#039;8ZD\H\1&#039;PGX
M)C^&gt;KBLK]CHYU-:_&lt;&amp;SLXUI;\8!`CGD7SH@3#W2TMQTK\EMXX;TNN*O_)=X5
M.\AQ&#039;,BDI_B+/_/M/8N.EE/TD_!K2+:NY4AIA?8KI^U2Z(@`3A&quot;&lt;%3H#&quot;%.H
M/VQ8&gt;(X]OB.WMA&gt;=J8.TE&lt;;,J+=SV=6Z97GUY%Q:TS`&quot;6V9@XES+#W:D\QCH
M&lt;$,?2?(*Z:SR),4Z.JZ81P1#!X34.OG_MM3Y6?7??%G3&#039;\#CGOJOU:@K^?6?
M%MR^UW_?X$HJMOF=`;4#RY9QX6&gt;`V9&gt;+*=^W%_5=;6Z.?8^,(2@$--S0Y^=5
M*R08.5&quot;3V;C7RF;V!+=&lt;`Y_!^_E&quot;X7_%]HO#?+S]+E[_+A!^YQB\&#039;9-,JCV\
M(2E2)0K)73``Q:E=V[7H2A&quot;P8@)U)(!B[5_#1(IOF7,0S_&lt;S(/RVWV[#)!WR
MS_6+X7G/P&#039;^X+_Y.Q-T@C?&amp;;H!H*YS&quot;&#039;[#?&gt;9YF+]BSOO/`H/1Z/(*D3&amp;_S4
M0ZD&amp;T6.^IFY^)@5RSR)4-O\&gt;1&gt;QL@\[%-C&lt;@9M0L&amp;L/;/M_NKQO-5Y&quot;$NNI;
M0W^I70PS\&quot;&amp;9Z+X%(S)4(4:&quot;P+]UNL=DD3U&quot;8&lt;-^A3^Y&gt;@O%2$@E1Z:C?O!-
M?O%WASZL06^1/],&#039;/&quot;`A^O&#039;DR9.SC*L(Z2-7&quot;;43^LH:04&amp;3!?B_#L#Z*^E0
MY%%Y-:\-A0V^M4YIDTN&lt;]UX5NFE$*3GR-IXO,C)%3C&gt;J.?B=/ZAB%+LP./&#039;4
M\4:F`[5$Z,?HXB)VL%(-TN?4)?5246MX@&#039;/NW&gt;)M=5HAT1@5!V:PFKKHM5_H
MHCP/*X\CLJK+?#=2;&amp;]&amp;7[#+&lt;M+&gt;@&#039;8C@%XEKYKXBF;?M?!HU&quot;&lt;3/[(T%E/#
MLOVD[00W2*WLZ^.,O&#039;6H$O:K2NB73OQ.-+QN\T\G0M/X&quot;]X*&lt;]%$K/AMLQ))
M%LU#BMA&#039;;#F&#039;D\PK!5\UA.W60K?``)#],G&lt;&amp;)3=2)&amp;P103$Z*`3P(-.JE;5/
M&#039;&lt;EDWC20;S/--XYA@NMI)10._C7BW@E8`E`++$NQ1@57&quot;YTOTHI2$2^-P%L8
MHBA?;!`&#039;YY+@_$(&lt;+.*4R!DB8HT&lt;L=U%3BRRP5DR9FGENY&quot;VMA7;BM.7OY:]
MMK*OA_X9JBZEH-3@B(!1H8TU6&gt;^W\;TVO%^:=7.EA&gt;(XC8&lt;)-1&gt;I`S^1D9%H
M:A@E+4K4$NK2IS`HU:LN+GV7BV*8E`V!U.6&amp;A*(Z&#039;?J2MV=9%WZ,XLD9I2&#039;O
M2I&amp;C)&gt;TGE51H$)&amp;91Y_B$,P!;#82G&#039;T6&gt;2L;!XX?:S?,T5QY&amp;+[*42C6.\,&gt;
M?LFE&amp;)=26ELQ.B+$/,3#F$MCPW1KR5]8;(0WE\VR@*#=4`\I&#039;2?*^GZ4Y(&#039;7
MY\S_;ND8RA*V\QSPGOG?*4S]&lt;O._1O/[_O^WN&lt;+YQ&amp;AI.Y8A3@OB)Y/&lt;V+D:
M2M2B4^I2&#039;X:K3Z=X/L!GF4*&#039;!6&#039;`&gt;&lt;+#%%2[;,%+GI/W/V0!,-QB,-L(T*J(
MN+410)026P!X5*YO!E&quot;&gt;A&#039;EA(P#/&quot;5N$5%!(98N0&quot;@JI;!%2X&lt;E]BY`HH[)%
M1A1QBX0HX!;Y&amp;J(.V&quot;B=R(?YYL0G=.X39;9@/@9U*5OUAID##8$0$/H;ZQ8J
MZ%O&gt;YZCC\XD99?Y&amp;!M1)Z,?O07:ZB6_&gt;,\+I23@@?,I9KPV)G&#039;Q=WUL@&quot;[$2
M3F-Q,V(ZUCK;]SAAR]0280&lt;01,FS&amp;5!.&amp;)7(.:WDS0SD#?0C&quot;VQ@L,OHCO@D
M;I%B$S4F+E70F+AC06/BR@6-J7%0T)H&gt;1D7-J6%8U)P:QD7-J3!0U)P*(P7-
M&amp;ZP&gt;-Z?&quot;6%%S*@P6-:?&quot;:%%S*@R&#039;S?$L/&quot;PV%26N1&lt;.\7@KO9SD?&quot;&lt;\!$[4G
M#@3IUUDO#`F&gt;BO*2MY`:B:]CB!9W[GCF&gt;ZZW9+LC:8-?CF_AS^X8%QI@P)\&#039;
M&quot;,;/QA_?BCOBW=OWU5^W[]FN]_C_G0H_6@D7@Q_2\&lt;_K^6=T_3/ZOI/A&lt;[UO
MU/_BO=\2%W@:33U_CP__H?&#039;A3P&lt;(&lt;!Z#87\-Q_M?=JX&amp;.([J2/?\2!:2;%8_
MEI3USZXD)V!Q`:,?VP(;C5:R8Y#YDT2*@ERTDFQ&quot;(B#8,L3!/FLD#%&lt;@ZN*Q
MQ3D5&lt;J65#61WKZZ*&quot;[9C@9/5VD`Y1XJ`A#F2(V&#039;E&#039;_[$O_RCP9;WOIZ9E4;2
M6ARNA(0Z3=7XO=&gt;ONU^_[G[]^KU9ZT=U&quot;XO/&lt;YV&lt;IQ;.5Q&gt;3:&gt;0O&amp;36^8LXP
M$C&amp;*D\?;U?KC&lt;W&#039;/EF:7&gt;0EE_H*L;N0G94:D,1&quot;L[PK&amp;_9(931HN7;T&amp;1=%M
M8X1,MJ+1N=)V[EO--W-_Z_/VW]MS/O&lt;_&lt;7[Z-^D8GW/_LV#AY8O&amp;W?^4%%^^
M&lt;.K^Y\MX\K]_VUW&amp;?UP&gt;^3UUW8KRZRI7+JNN6U&amp;7G(^N[]^U^AR]R2/]QF^/
M;JA&gt;MOSJF]WNBQ&gt;L7[6ZGO]Z]H+Y8S&#039;,&#039;]&#039;@W[JK*^&lt;#\&gt;*1^I(E[L7N^&gt;Z-
M=D[SQP_P[6NO-7XJ90_&#039;-KX+UH\?SU.]K&#039;S\I]HQ!)&gt;/(YCX\ZEQ!(7G(C!0
MXXQ09,S&quot;^.D/Q\_)M,W1]$NW_WG=_]YYYS&gt;_55I2LOSFFV\JKJB^IN32U7?&lt;
M-LD8QAHO/L?Z7[2PL*B0[W]+%BTJ+&quot;E:L*@(Z[\8T*GU_V4\+&lt;M6+A&lt;%8:0M
MTJ_(:#D&lt;3W&amp;A6&#039;#&#039;$6D$1Z&#039;%P%-H&amp;B4:N-/&amp;&lt;#3I8F7DL$G7\U:,WASKQF/K
M5B5^`3F3O@#NU#/U3#U3S]0S]4P]4\_4,_5,/5//U#/U3#UC&#039;X]G\:$Z-WWB
M):KMCW;VSB/*;&amp;B9XZ@CTHZDA`+&#039;,D*!MV&gt;%`N_FAP(#EX0&quot;&#039;Q2%`A]=&amp;0I\
M4A$*#%:%`B=J0H%3MX8&quot;&gt;F,H&lt;+HI%!AN#@6B&amp;T*!CP7JB&amp;X(^X&gt;;P_[336&amp;_
MWACVG[HU[#]1$_8/5H7]GU2$_1]=&amp;?9_4!3V#UP2]K^;&#039;_:_/2OL/Y81]A])
M&quot;?L]&amp;^;&lt;S#+T2Q3T$=TL$;WZ9IET&quot;&quot;)GLMR&quot;3/O_IHJ;&gt;J:&gt;J6?JF7JFGJ_P
M$Q&#039;H*;J[7.^1ZEXSZN]XNKD^O&amp;%?8%@B;;!&amp;&quot;)RX50R&lt;:I0&quot;Q[$7GY&quot;$8%8&quot;
M=90+:CIVX60&#039;Z@;=^YYNMT#%AU&#039;WJ&quot;E:/JF]BD*:&lt;*;NH&#039;1&amp;/OA&lt;-%K2&amp;HWN
M-G&quot;&#039;/-V^Z51R&quot;O63;2F:F]3J&#039;B=U/XF&lt;027Z&amp;&amp;)IK2AS5=+:4&#039;IZ2&#039;.YI4-F
MGZ!U&lt;1\I^KT8NS\:11UR&quot;O1QLYBG-8O&quot;BP:&gt;5]`.2QG!.Q,LGA$!N41F\+`T
M,W@[8/DB=0QA/CDH#Z,T:43@Y`2]Z+]Z!74&lt;7ROHAY*INUG,;&amp;]^:=W6YD1%
M4\6,%W&gt;+U&amp;[R9/P,@V&lt;-ZP&#039;U?FEFP1.2-:97TJX%G`2U.I=\U268GY&quot;D:#V0
M52#2#1R?I.6AKP)XS2[&amp;I5VL(P&#039;Z)%+3NQ*H^,UDTKE&gt;@-S&#039;H&#039;&#039;+VB+F*^[I
M[11IH`&gt;YFSF&gt;K%W.&lt;.&quot;Z@`LX?X/1GI8M&gt;7RR-A_])Y-B.I&amp;UKZ.M&quot;&quot;:&gt;(Z8K
M=X+F0OVC[-@\$K19L3Y?@I9CL[F/J-BHP^:N)$/.ZL&amp;:&lt;OB,!SY3$1C&gt;\)R?
M_0GP7GLYO.&#039;78_SKN#3&#039;M$%/LM8U3=%W2(HN@=&lt;P9&#039;\Z5:T^*&gt;S9^BCZ=^]/
MUMI$18](64&#039;P^E0A:G=1Y2&lt;7&quot;U1[7!*#$=BB7%9T#YGT&#039;X&quot;^.9&#039;6U)^-UL;D
M&amp;MYPP&amp;_*\!M3AA32!R4J&gt;&#039;&lt;Y=?PQ&amp;MW&gt;*FSN%7Z[XU.B_ZQV$W6WIIEMHYYK
MJU\^6B&gt;?VDNH&quot;W/5:MBV6VW=;+1=7&#039;]HM-XS1ZWVBE30*K2.T+X$?R&#039;5I,\E
MDQ[VR!Q&amp;&#039;LWRO0W_?`OK[ACF=U22,&amp;]%9__G.3;B[41&gt;S/EQ!#X5QKL#[_UX
M^UN47[I(&amp;&amp;B-^8&gt;2H@6@CV&#039;DY&gt;;\GYVPQO4F.?`9QM,QWA#&amp;.X7Q3DHRUGU&quot;
M\+B4&amp;(Q62*\,1DEK?NN^K&gt;SO`N05T]3J8SG4&lt;9](^H_AJ^MGD/ZC=-+OS2+]
M&#039;B?IZ^:2_BCF&amp;)D6&quot;AR^,!0XFAT*O.4*!=ZY*!1X[[)0X/U%H&lt;&quot;&#039;9:&amp;`3VKK
M)67OIZV&quot;VLMK%_;KC&lt;V-8\\IR&#039;02,IV`3!&#039;,C7W?/K&gt;UF-N&#039;96&#039;_^XO&quot;_O&lt;N
M&quot;_O?N2CL?\L5]A_-#OL/7QCV1Z:%_:^*M,O`A[^:\2`[&gt;`2^=!1^TP!ZP\?:
M4C7VH_IT16_(@HZ=BKYJKJ+?(O,:!SP9\!F`PP]ES+]6-M=^3!&lt;[&lt;KB=&amp;0P9
MNAU=&quot;WI3)7SO^;&amp;^!]WSW`8Q-S.^3;?DR@A&gt;!;ZK1?D57C-F/$S4VG+5WB/H
M/PI[/&quot;`FM&quot;&gt;ZU=Y_@&lt;_&quot;?X-8[^;&lt;O-.-N&#039;0IZ!-B,&lt;,W78-\O?,M65FNX0W[
M)ZP#GL/UB%.#YKEKMQDGIFNS0/&lt;&#039;LFA3%#T&gt;+&gt;)H0402&quot;OHEL&gt;&quot;J.#R2P&gt;/@
M9#R@B\R-PBSHKH#E^*;%H\?&amp;`XNZXU?@(6-&gt;C&#039;,8N,MSXLW)7#O;!+N_C\HZ
M1YPH&#039;^3O\,65S^1EQKERW273)Y%HM%:1]_3V`^;V2H;&gt;#F=D%N;G6+&amp;14CD&gt;
M=AOK&gt;0&amp;5QF08SX/;K@6II=P7K:!78G&amp;51&quot;H&amp;;&gt;]1M/NG\5Z1&quot;OF$H(3]M(7$
M@7KXO7`FX&gt;`#V%&lt;1`VN/`&quot;&gt;&quot;N,E\5&lt;0Z\-)&amp;Q@,_KQ6G7:J@C]&lt;%X%MHP&lt;I2
MKV#@;&quot;%OA8[]=$NSF*IA#73GR936D$[=/+\![`DMV!/M^J&#039;95`,];,D%CUR)
MBEW%M&quot;8B4FT/YF#`,=\R:[[(#[9X,)&gt;*)*6[?F-JC9S;5EV9U+4V=^/CC^6&gt;
M\?;-6WQA3&gt;L&quot;H:J&gt;A*HCP&amp;V$+-[;&lt;Q&lt;KP&quot;?(H4&quot;G$_:/#-(5F7;%9.B&#039;#+RF
M7H.L1]DG&gt;4[0`&gt;)CB2HJI3[(-8@U=$*2&quot;S8+5)(&amp;7XK)9&gt;0MWEC&gt;DG#P&gt;&gt;B7
M9?=&quot;]D^BT6RTMWOG*HOA,\5=R`4Z1&gt;&#039;?ZTT[;G$](NC&amp;&gt;L]@W9A[3&quot;1CW2\M
M.VP1(!NOY7JR])Q4T1WK8YW&#039;FQ?&amp;&gt;9G&lt;,[0KX9L\OV(U53-@WAE:[I9RO2U9
MZ2Y&amp;WS;$HPX/:2UBY@#RBUK$L9=W&#039;YZA&#039;0=-!^(9]S7&quot;EAR_.#8T&gt;/+;OR&#039;Q
MWJCH3),;M?9&#039;F^R&amp;3C!&gt;&gt;:JB&#039;X&#039;O&gt;9#/E&lt;&#039;W5-BVC&amp;C@&#039;?A=#(?[DJ%&#039;WF]$
MC)^&#039;?4G$&#039;B3)I&#039;,=]M&amp;QU^DS@),KF_R85^O9Z`B/(XCMJU++AV2+#CZB&gt;U&#039;&quot;
MYECVBFX?B]&gt;``CF0Q^UJ&lt;&quot;C=JY0\Y`&#039;R0!?&amp;EM%N(S&amp;EP4&#039;=HLPQ6M$KP5-$
M*:-=&quot;9XN?@&amp;+8&quot;\1P$,$C00&gt;920-M()&#039;/MH-X&quot;&amp;&quot;1QYH\D%;0&gt;9&lt;\M&amp;N`&#039;T9
MOX&quot;QK@2&#039;Z9=8*S?6D?&quot;#^NE4*WDIK&gt;4[M(8DM;I159V-LRFM\&gt;XYZ&lt;A?B\N6
M`&quot;XB+V0X&quot;2DC/II&quot;Q5CS6S9CGE^&#039;KZC(@47X8L*9Q(,OP!?;D$/&#039;]*#`+JP+
M%W3A2Z):G@/TTG0!Y(_QV(Q^.%UFK.]@(O0CC]5E)^@?&lt;&#039;3^C/73=@X],3UR
MCX(&#039;L3;&gt;5/(&amp;]D/WB22W&gt;TBJVH^Y2W@3D+ON8+O?/F_H&gt;9GS$$5?CO))T&quot;?&#039;
MUIAEY]6P&lt;P+P#EAVO@WE&lt;K8SQA$Q!O*8XG[L)?-D&gt;F4SB&gt;VHO]A&amp;PL-=PS^M
M#O_^V;7EZMR]&quot;KF&amp;*E37WFE\)PAYV?[AH6BM&quot;+V)/&amp;&gt;4QKICO6+,_EA\@PPN
M!]M&gt;#&quot;8;]XEJ;Y)-/KM&gt;ZT]$:T=S5FL?$*U8`[ZYX&amp;G$*=#-X[4-&gt;^7!7O.L
MV,&#039;V.H981%0WU*76[64_*4`,B=E;I;$RC&gt;Y5.^+F9J&gt;;$P)\GN#]9C7XG.`]
MK`AYMVS&quot;$*&gt;VGV+8(LR/3-BM5G[@N]+,SQGV;&lt;!.,JP,Z[)H&quot;_)&lt;WUJ&amp;WP`X
MQTY?!7!%$[&lt;*,-^WX.&lt;L-_*EWQAE5G&quot;?4&lt;X,/F.4F&lt;&amp;]1ID1W(/RI;/1[7ON
M%[1G[I^F,:YK,PVYR#D01IS)!,\?W_1H]6[T/X8XM6&#039;GA=K00_]6O1WU4WD.
M;5#Z6D&#039;-34^LW;:IZ+&#039;FL]Z^YDU21O.FCBKO;&lt;Z:#$=&amp;U38QHVK?+&lt;U#9Y#O
M1*19&#039;,\*#DNS@Y\*O&#039;?/#OZK(4=.@?IZ8*VZR?&lt;885^AC6*-&lt;,?LFMPDJD(&lt;
M2D$,JUH&quot;.7Z&gt;W^-4+Z7T?FEV01KH^&quot;SHNZ5HB.?)?(\`_@;X=B126F&gt;&gt;LB;W
M=!3[&amp;N(9QMX(_-?RL!Y$YP#O`1KF/#[?.]V\##G)G_WQ8CO;Y#CG2^R7*%G7
M&#039;Y\U;0J?V-6&#039;MZ&amp;M;F^G*#9QS&amp;[;VN:\;J:9G_PCQDXT&lt;[M=MZ`^T_)Y+MDF
MXV-YS&#039;&lt;Y+K3Q&#039;K)%T,NQEU;&quot;SRM32:_$VF/?O!_CQWR0Z(I#]M)-I5:[U&amp;I?
M:92N-4EF&gt;8]9NN]),&lt;O[K/+&gt;I!%Z*2DIO7%C=LT1[-&#039;)F._%&gt;#T)UZ0(\_8[
M89OTLB1:TX[8DDS.0WS?+X`F#W&quot;/@]+F+9!J&#039;G#TW/*0^WFG(_=YYT5W3*]Y
MV[W?F9:[WUDE7%#0)$PKJ+HOZ=#;E-;T,.PQ7W`,O(?]Y9H+$(&lt;IN&gt;EW9Z*U
M?)Z(=_X\:=UM(/YU_!?T22MOZ,O$F)R_%;M?=;9N4K8A1W^Q6&lt;QZF/5_2)S9
MWB+.&#039;$@VSIU&quot;L(@RVO=;_L_W!2&amp;&lt;31Z!#&#039;&gt;!WP_Q3CQ[QA^_`;C!\QS_R3CC
M7P=^U\&lt;=?^+YXUEK&#039;;.OO1XU?7DT!XXO[T+PWG2&gt;\JZ/(V\&gt;^.7&#039;E=?TWS]&#039;
M1_TS!OL!8%A_VS-`AV`^,=^WS?$EVQP[;?6-X^8;\Y,W;674,UI_TU:/EMO@
MMKJ/%H_4%4&gt;.K3X*)QN&lt;;&#039;#%;&lt;-WV_!M&lt;++!W3:XVXZ_PX:_PP;?:8/OM/%Y
MV&lt;;G91N^,MM67V*KV_@H-OQR&amp;TZYC;;\*J,&gt;D&lt;SSB3EO6[]CE$YY&gt;;:M;N/G
MMN&amp;[;?@VN&amp;*&#039;I]G@::-PMVU.;ON&lt;O#;^7AO\1AO\1AM\APV^PP;?:8/OM,%[
M;/`&gt;^[BF_L@[JE,#7FVSCUW&#039;/;9ZM&lt;F&#039;UENQUBK5]:E&amp;Z;-*LDJW51JTZQ8?
MLJ^G&amp;WD]XTPW?IUQ&#039;D!+5O3%X$JN.0\EUQK;:E.L;&gt;F=+)U[K;;7:JO0,YU9
MT6?6EQRB-];WF&gt;/]QYA]LJL%N&gt;3]I._\9](?;R?]B9\@I]Q&amp;^B^VD^YSJ4N[
M\M6E.RY2E^Z\1%WZ^&amp;7JTB&gt;*U*5/+E*7_N)*=:F1RQR0-=\EP+T,[P%)XWPI
MDJBF^YJH.W(ARA^BM/(QLO*Y/.RC7O=TXQPHVNZO?VWE7+NM7(&#039;/R&lt;9Y+.+0
M^K&#039;O-G[HZ6[^&amp;G7XIBT+^*9)&gt;)?CE0,&lt;9[H.D/9`#G74`X?/@)Q#ECUN/S/V
MF?NN3.FN5)RALSM_=LZV?/[]XKZ5?0)RBQB\&#039;^&lt;XS^_6]2&#039;V&lt;G[8*YLY\5;1
M*L?$?_.N-!C*-LZF3Y$[S;AKVL;GXD1:&quot;U@M\^0[:8&gt;9GSQ%:IK6COY4M#G&gt;
M=^U$SH1VX]F6/J._)TVK_W1C7\-G_]372)3^&gt;#;.I!R/4T;S%R_DY7.)!S+7
M@3_R[MK&lt;,RO[&amp;);WR+JGQ4ED[V=:BPYGKUIZ9-U6MX6?PN&lt;$[I--/5!EPTA?
M/%Y127AE&gt;(,0&amp;*Z`+C+&amp;Z:(GW=#%#:8N#!OX1.-^LCBF$W=,)^X,;3GP9MMT
M\II=)]Z,&quot;3JY`OT.&amp;S[G*;YLO@NWQO=F:O7IGKZ&amp;K&amp;5]C7.7]ZWZQHJ^U077
M]-UV:57?]_YX;Q^?.T(5],J@X6OE`&lt;S%B,$^&lt;:QN60_Q=#O#.%-9&gt;&#039;+,!M\U
M\2H;_G(VN+WI_&amp;W@S3)L\-&#039;9_X,-&gt;K*T8V&lt;GL0%E3[#!&#039;\Y^C@TH9U(;_/;L
M7\,&amp;-YEXMS=-:H/S6?&gt;3ZIJ&lt;AJX[;+IV&quot;Z.Z5E#/B&gt;G:Z]0&gt;!EYFK.US:@^.
MT^7KXW49&lt;4ZJRWO/H&lt;L(SD3Q=&amp;&gt;?%^/L9[Q]W^NC]?5#2AP&lt;G]4OKL\=.B?]
M3[\[.3WZ)Z5?=]/D].B?E/Z&amp;E9/3HS\&gt;?2OZW&#039;%HS@4??W9UD6O@1&#039;:GLT2D
M$KX_X]SZN&#039;&#039;/T5;=+U&#039;!9SI\0B2=X[;Q703P[Z13AQ=GYYD&quot;W\.:8R1:8XSS
MO=Z)Y]?17!ZTN^KQ\CEBT#;FGS`F\^VQC5F&amp;,5M%ON.$+&amp;1\&gt;RME?[L#OA//
MY^-]0_A`GWCF&gt;&amp;&lt;,[/-EVQ-&#039;MIQSR/;S+R#;&quot;U]0CHXX&lt;IQ,BR_&#039;_WP!.1ZW
MR=&#039;%]S+@8WP7G&lt;2/.(ZP&#039;&quot;Q?)BFE&#039;8@A_&amp;V38\%_#T&gt;WLSSK+%FZ$!&gt;BPZ8\
M8^4P_:,\@7:583P1&gt;6L%XEL+8E%8HMH*V9G&gt;0L(:_D[8&quot;)EPMNR60)]OU3U)
M&lt;]?R?I1&#039;2K&gt;&#039;YA0B%G:S3]8YR*`QX;,-.+UQ-V**,]V#,5B._?!C-_J)YA;&amp;
MYGJ!Y;\MB&#039;]AT)];#_OBW@6%7(A]B;1K)O2Q.Z:/(Z3]WM+&#039;/=`&#039;KZ%8CM&lt;J
MXSQ-.0M]&lt;R&#039;3W;/2V7;&gt;1*44_86(R:69@GLA\$OY7.Y.FELTTK]N;CKW&lt;Q^M
M=X[282X,?Y621NEDIT&#039;&#039;?F#@KW(6&lt;KM#W-3;D&gt;SI\SJ54E4$CM.RE4O1!^+8
MRES/S_V_L-=S7S%[13[&#039;7O7RJ+TJ,1?CVWSJ7\=FR&quot;O2^?S)8R!?&amp;V,SE@_P
MK?S=YO/L0G&#039;L$HIG%\Z%_L[L(EEVX&amp;\;/MB&#039;D,_40UX!^4R]M7&gt;.MY&#039;]F^Z?
M3D&gt;W1USJIZ^CW(=7D#!^)A65&amp;_([BDQY&lt;HK&lt;&lt;E81R9F%3P&#039;G&#039;_!VGF8_F%Z8
M`?F;Q&lt;Q&quot;^$?!=L&quot;NPGMI%N_?5+@-]2M.Q\YG8_&gt;!GP#&gt;16W&amp;;\,&gt;8AJ\EYV&gt;
MN&#039;\^P..L=Z6KITV_&gt;]@J1_&amp;&gt;&amp;?O]8Q;I2B+O68J&gt;&quot;YN582T)B51K[FVP+7*_
M!\\@?TR@W6S7KB)!V\!Y*=J&amp;CS&lt;*6A;:[EC[&gt;J6[$^V(3+N[*LI+W?Q=1*8B
MW_V&quot;)J2Z%G._9&#039;U+@0_LYGOU3+P9P,LB?^\]&gt;4U/^RH$K2M?T5M%H=T!O_)=
MINA\![#C$D77T&amp;Y.I+3F/$KO$%=HG6+6`/\&amp;B?/W;-@UU2J3K3+)*A.M4K9*
MT2KY&gt;\3(MX59K/&lt;7XOZ&amp;QZZ?K@2;?@Z0U@G]*#&#039;]#*+-^WM,&#039;_F&quot;]C%D[I&amp;M
M=IG2?0#]*NM&#039;*B\%ST*&gt;KZ$;]/TO&gt;5&lt;?&#039;E5UYL^],_D@091,2(8$R(0!@:%*
M:Q&quot;2XM-&lt;$C]0?-HER6KEZ3:3!(4:=ZL-`HIVA@^+-EOUAB@J5&amp;;`#XC:QPU!
MB_8I@:Q6E^Y328K=VMT:`BHK)!`@R=Q)R.S[GG-N[ID[7X%EN_;I&#039;WEFYMY[
MWO-^_,Y[OG[G9BK?/VJUA/OFP:DK]_A`/QACU&quot;-F=X!_9,#L#B?1?#.8?Y:*
MODE6P#&gt;+&gt;A&gt;&quot;;]`G6=PG6=PG6=PG6=PG6=PG6=0G64W&amp;.K&#039;.J]EGC&quot;_F$VU=
M)HR3)?)1R:F2?;)$YKX&#039;WW&amp;?;H=RA5HZ5/G!C7Q?=4,HM%&lt;?*WT9A%@6$,TA
MD[V(!_2-`CKC6!;&amp;*Q_I?`K\GK=+PKG*TZ1SDEK&amp;,-SP.+;9`D4[0N4H8#?1
M&lt;)ZT`\8U74-LCJ/GG5:8F_K@.N+WED1U.&quot;:K1;R.&#039;V(=4.ZHY&quot;U[#;%&#039;?0MU
M@.QV7H=_IT3;F6\^Z.#D.D`[.#S$L*KW23@/],%U)\Z_G%P.W/](?$[7%9[#
M/%J:2%?W9&#039;4&lt;U_5&amp;U!7*H:X&#039;+X37\3:O`W5]5M&lt;UC^L*&gt;&#039;L+[\\VZ0K72U#7
M/&quot;X&#039;[N\5G]-UQ?8)N/]F(EU]D]5C0:;K1-2UE.EJ&amp;0ZO8QNO`W7]K:YK+M.U
MRY+9M!7NHUS.W6P_(-03.6[]301&gt;&gt;=_5A+C5=&lt;7UR#;X3M&lt;CE&lt;CUR.(H6&#039;UF
M*#%67^7V/L&amp;QZHJ&quot;U?EQL+HM41V`U2=Y&#039;?&lt;+6&quot;4FK,X0L/I),!*K5\?`ZIKA
M&lt;!Q-CX/5YQ+I&quot;EBMX;K&gt;)&amp;`UVX35L0)63P8CL9H&gt;`ZM;3#A*BX/5IQ+I&quot;E@M
MY+KF&quot;%C][H7P.GH&#039;#:SF1\&amp;J-LCVWB2ROOV_;:11Q.TZ$V[#\6KTR_OG$&quot;W_
MRHO/KPT:ZL8QBW8#GDX,)L8LKBF@W?^`=H-MCVK,QA&amp;\`,9P&#039;!$5LX&quot;#TXGJ
M`,P&gt;U82&lt;Q3%;/B3@`&amp;0_S.O`,&lt;4U08:)$1Q`^WMHD&amp;$\#`=P_9`8([B_1GQ.
MU]7)&lt;&#039;`RD:Z`V;&lt;T(6&lt;Y&amp;0[N&#039;0JOHY+7@;I^2]=5P,&#039;W!R\F9[T?@8&amp;1G#5G
M]#DK(TK\5XPB_@]S&gt;[_/XW\A$!G_M#CQ_^$HXE^E&quot;7F`Q[]C,#S^P:`1_S&gt;T
MR/AKP&gt;CQ7VR*?R`8._ZUHXC_/$W(`SS^7PZ&amp;U_%IT(C_K[7(^&#039;\1Y&#039;G`ZFO_
M(F,T&gt;2!RW$G7A*&#039;?\(\Q]&quot;51&lt;P&#039;YH%7(!4]C_)P&lt;!Q:6JS\/)L9!(,#LOH[:
MK6AK`RP^(S&amp;`N#T&gt;C($#\&amp;UWHCH`!Y\&amp;A+;%&lt;;!$]&quot;W(7J/C`&#039;P_6V-^%GV[
M.G@Q;&gt;N]J&#039;ZE;6O&amp;Z-O6@B@^54?ATYW&lt;W@+NTZNC^+0@CD^?&amp;X5/?QH0\,I]
M.A0,]ZE3\.G&#039;@4B?SM;Q&quot;G.P!:/&quot;:Z1?&lt;9V`G6627&lt;56I7&lt;=V($^QK5/:$=%
MWN&#039;;._PSV%R;SGG^.2^`G/;/!AE?!.\U8%M.IGQ[\-]DM9S;]G6PK9@L8C(A
M#GN@/,XMW&gt;/R&quot;MGYH,RFQS1F`YX5NE&gt;7&quot;;YNPOF8E&lt;MT3%&amp;_Q67F4ISL:D?.
M+96;)\A]&lt;LJ(W&#039;&amp;&quot;W!-!+A=\6PMC947B&lt;MU3U)E&lt;+C\;`&amp;.**:J37S/6%-Z+
M/@_7&gt;8B0OVU?4QHR?[NRH4Z67O..(17HS_[52K,==`UNJFX&gt;*%&gt;:)\+X(A=R
MBP?FO[-P&#039;VZ5TM`IX1P3&gt;3=V/#OE&gt;AYY.$3WY11Z_B$TP/29#SK6R3GUC;*]
M&#039;GWKD;.9G#)13BZ5LTF4H^11.=U&lt;SG0J9]%AG(M/03G#Q;U4SK6BG(E4SH.B
M&#039;!^3\R&lt;NQX9RDI7#.&amp;]E^]F9=`R%Y9:&#039;6!L0R_W[@.&#039;K&lt;P.AO4*[;X_@&quot;LX6
MY_61W&quot;4LHPP8G*4N:#_/X3Q(UY4XU&#039;\9,.)H7IM!K.-^(9X#P7EHIX6TN.G9
MA\GJS@&amp;C;2)^]&gt;&gt;2&lt;.PJ\^&lt;`D\_SYZZB^Y&quot;(2?FD_NSA888S^BS@[$G!=GH-
M&lt;/8$OY;H#)*(K&lt;Y44H$XZ@,\(;ZRH=X`X&quot;L&#039;&lt;05Q&#039;,/CV&quot;K$L8W&#039;D-7+8G$O
MKWNN$,-K**8FG!S#,67(R&amp;EJ%F5P/-W%93@%/$VB,K*8C%6BC.PFORB#8WL1
MEY%!9=@!V]GUZ0*6&amp;CF.1-T7&quot;+ZL&quot;\3&#039;D=%VWX[)(?:5RFH&gt;Y#7D__ZBG\TA
M]R\@VBJH\^,2A[H#YH+^!8I6OJ8J@.LL^8Z[.G(&amp;6&#039;YY=(#O]T(?4)5&quot;*OAZ
MD8;^]=T&quot;^1KFKY,@-^6&quot;;AJT39Q[U-6Z`[A&amp;U.BLWH/RT*9D+N\U0=Y&quot;JR&amp;O
M`:Z_`_+L4*Z\]J%`IK-VI.Q`/RM[02@KR4;9XW#];2AK@[)]#]&lt;%5DY=.5+V
M1#_C+=\:H.M0JD=.[3TZ&#039;*JPIQ`USY+:ZQ\*5:QU$G5;&quot;AF_S4DR/&quot;E*[P$M
M5.%;0/L^%7G4&gt;03*]!MG&quot;L/YOA]&amp;M.&amp;%PE[&lt;%JC_R[[0%C]\MA(R#W5NA.^?
MP;5M\.F0R/PZP#.Y;V6#6R9-^EYI_&#039;VXZ&#039;5Y0=[O0.Y/A+H&gt;A&gt;__!M?676)=
M&gt;O]_N?A(EY.?$XVG1-N1UT&amp;Y&quot;C_H%[@*)EY(CIZG&#039;#:U$I[+$K@)?\`V2=NP
M0\6]R#OA_CCA_N_T^TJ^6I55TE$]Y&gt;:.FJL7=2QSW=9Q]R&gt;K.NYI7]GQ*I2[
MM3^&lt;U_37QKV)Z5_BI/X=/QK_MF:I*;&#039;\ZW92_X;Z8OBWU1G7O[U]E]._?WE&gt;
M#&lt;/J=.K+7_?%Y]4P?^6H+7V,5\/ZBQSUS;[8O!J&amp;X&gt;F1/KQV&lt;&lt;&lt;]X,?EX$=?
MWV7@U6Q+P(O9]M7DQ8AY%/#;$LYMV4@Y%*6]9F[+QK*7QS!N&quot;_8O&lt;P9&amp;SYM@
M\9BAEO:)&gt;V0&amp;1P+J:5D8A&lt;&lt;QM9?Q.&#039;R@`\8X8X#M:[H%_@:VHQ-Q.1QMD;HX
M9JJ.OLC]NO5)I`7FG6\NFUNJ+&gt;/?:PI+M5+&lt;Q[&lt;J#^!YU#SXQ&#039;;.&lt;#E3&#039;==&#039;
MZ\Z`=I&quot;9_XBRN96&gt;?&lt;U1\0SKW42JQS-MK^!Z`+&#039;4X]DZO&quot;^#?/H&lt;R&quot;XAI![*
ME^%9/QRKZ^7Q/%P)D0[)0Y8/=D)YAON9ZMGSK#[.*&lt;K@-F=PFS/,-E%Y4!]B
M1J_3.S)6FZG^F&lt;N+%A&lt;&#039;C)TE2V1&lt;&lt;(ZZAXW)Y^K7WC[#8N4%?.CQ&gt;J4_&gt;KQ^
M/ZIXA;VWH(G%;9;:?)Z-B3X(A&gt;_-^J-P+?*M^KZ])6S?&#039;L&gt;7N)&gt;/\1S9OQ\[
M):/R#.L[(O;PO_[_Q[MP1-G?[X[!NT![&amp;_7]_;%3Z+Y[&quot;V%[^E58]]CP/7U]
M_[Z%[]_K&gt;_6X-_E[&amp;$?%W-//)!F)N!:6X?A&lt;B[^E&gt;/WQKR!&gt;IQ-P8P[$X,;\
M7\?L&lt;O%D?$F1&lt;3D4@R&gt;S[BL0ETOCQNR+F`M[4TC+`,N?&#039;Q&#039;W++7Z&#039;.1/D&#039;-Z
MB&#039;WJ6%R7#&#039;A&#039;SD2II!Y!#D4RS._Q=YVD[L:V#+^/8FYOP[7&quot;R0&#039;&lt;&lt;[L2N1-)
M9&quot;]=SZ]4]N%Y6.1&gt;^#&lt;(7),VSJ&gt;`^_DD][IO0-[&amp;=Q(IL?@FN+\[F_%-;KO`
M]O0HWP3FZN_&amp;X)O@^FFGS,[=VSGOQ,XY%G;.L;!SCH6=&lt;RSLO-^Q4_S8F\0Y
M;K1]:YV?XP9_]NO^],U2QX$_6\$OYX;8I^[/JF1&quot;S]&quot;B/_\(]R`O[&amp;WE_CR`
MG!SPTP&amp;3/_,YET?WY^&gt;&lt;RX/^I-P4DR]OY-P=LR^1GZ+[$,&gt;RZ#L&lt;R^XH@&#039;;`
M_;DF!C\%?=G*?7EY.#Q1?`EM$_?__0YC;/&#039;Z6;8^TPJVM`KGE`[`=\!2^U0W
MVU]1^#X`[J]L/TO7[48X`;&lt;9&#039;(BGA?7YI_-&gt;ES0:+\=D=&lt;=9&gt;HZXH1O;%:Y_
M\[%M3S)I1&amp;[`XV?I?D9$&gt;;R&#039;==3&quot;^,.1&quot;W7J^_LUDCIDVK^&#039;7%DAVM&quot;&amp;Y^C!
MAFJP00$;%G(;O&amp;&quot;#*.=+,P]`8OO[:7@F3;`+]?=E&amp;[J]PVW1]_&quot;/#L6P0&gt;`.
M.)+#=8SG9U&#039;&#039;`R8.@F+A&#039;`28/Z4G\K][LEK&quot;_?\SO@&gt;C\[.?1/]S3L*O1/X$
MU/5&amp;&#039;&#039;NPW&gt;SF&gt;_^H@P7BXQZ&#039;;4@9X2R\9.(L7%1\!#D-9NZ#Q#@-_&lt;-1XI-F
MZ%G&amp;;=5Y&quot;T_$LF?V)&lt;9&#039;T/$&#039;)MX%C4\IVR,;DR@^OLGJ)[TL/M-YOZ/&#039;YVJ,
M#^=AM(J&lt;$:CK[^/8@_%Y7H\/Z+#U&#039;#M;Z)4@1GQ/#.&lt;3BT$&amp;YI8)/+=,X+EE
M`L\M$VAN$&lt;_\_R9L;9WNS982]3^#H2W/@PV(!&gt;\YIJ&lt;?Y@FXMY&lt;A&lt;GVL;+SA
M&gt;Q?Z8?O-&#039;;A&amp;+N[[X1A`WZ,;K_,+0/_:&lt;VPOC\K&lt;0-0K4*;-)&#039;,KDXGK%R/W
M&lt;*R$&gt;XDV)K-&quot;E]E&amp;U#M09BZ764/4U&quot;&amp;*I[V^M4Q.C/,C#=&#039;X@,*XAW*L[NB-
MGE?;]/.?[LC]U5M[P_/J^&lt;&#039;$&gt;?5VCIL&gt;4UY]+HGEU&gt;MZX^?5&quot;&gt;`#Q9177QE,
MG%=CV2#*:1R,GE=;+D2VVU8AK[YKRJOU@Q&gt;?5T&gt;K8^U@[+RZ-Y&#039;_(:^&gt;.L/\
M_Z0IKQ8F&amp;7GUGJ&#039;PO&#039;IG&#039;&#039;NPW98&#039;C;SZ!N1MKRFO?GLP&lt;5Z-:;L@YX;!Z&#039;G5
M%RT^0EXM-^75@ECVQ,FKH]71-A@[K^Y)%!_(JQMY?*XVY=6/K$9&gt;O7&lt;H/*^&amp;
M@O&#039;S:FG0R*LWG&gt;7OR3&#039;EU&gt;&amp;@P8%3TDCCQ&gt;76=\+&#039;;&#039;,@Q]J,,5OQ&amp;&lt;9Q,N&gt;6
M]^`[Y&lt;2X(SDQUYWAN85SHOXKF#BW7,]]MR$,VQO+UJ&#039;OP!&gt;Y9^+X&quot;&gt;H8AMSC
M$+$+^&gt;8I$W_)C-U1];&lt;@YU$S#TIB_*:?#T5BURU@]^]$[$+YE;%B/&gt;-_.2;`
MOL;$P:+8=3+LOIC(_Y!;CIQF_G&gt;:L)N/_N&gt;&lt;K.^(_#&amp;H2XEC#_*T;N`\+=3A
MV5Z&amp;7&lt;6$W7E!]OZ?Q&#039;B-Y.R%]8.`V\;3!E:AC9S1?;@3OL=J_YM.AV/U.NXK
MO3S:A=^YK]ZD_!_NJXTFK&#039;YL85B]&#039;V5&amp;*:]CM1Q\H9BP&gt;ER+Q.IH;1#EM&amp;O1
ML7IVD&amp;%5EXGZ&gt;],,W9:8L/JA%L,&amp;$U8O1&lt;?=6FRLGM,2^!^PZN+^GV;&quot;ZBJ+
M@=67@N%8?2:./8A5-6!@]&gt;09AE6W&quot;:N-FL$Q_#R5O;LS,5[#UZO\R2RWHOP3
M/3C.C,3KR_`]5F[]4P_&#039;ZS&#039;&amp;5_M)(G\!7O_&lt;@^\4XAS`7`.O+O07V/&gt;O/3%\
MD\?&amp;KJ^&gt;8&gt;]=H^/57+:V@/Z8#W6C#VS&lt;!S;J`UM3Y)K5KZ)PUJ2F73&#039;LCX&gt;C
MK2;[;QZ%_2]R^W-,]G\I,_LW)K!_.;??,6(_&gt;_\VT1B&#039;&quot;3E\U8&quot;&#039;^#Z(QMNS
MN&quot;JC\/;H&gt;LX,MIZ#&gt;4FFO#V+ZT#0X.WA&gt;H0[F&gt;[QO$DZ9ZEW]S!&gt;S;6XSDH6
M]5;%X.W]4\#@UMT2#.?L&lt;1X5^,RE+NDQ&gt;%3(V:LDY&amp;15#,Z&gt;),A\7S/X&gt;NM#
M(SPJ:+&lt;N]8:&gt;,![5F\BCFM]SD7R]NJ3=;&gt;FDA?*JB.T0Y&gt;RE(V&lt;/W^\LNP96
M(U=O5_O@INKF0+G2G`-CHDF4MY=]&lt;C?G-;D1/[(&gt;QXGXWF37&lt;P:_&quot;?1R4:[2
M53T&amp;A[I.SJUOE&quot;?68SE&quot;\)-H190O96=RR\QR)U&amp;YZT6Y9#:5&amp;^QF&lt;N&lt;(W&quot;LF
M%S^)AGTP\L%V&lt;SY8N-P&lt;*O&lt;^4:Z;R3W&gt;;7!]=5X8E6M5J-PK$/]&lt;#N3+=I2#
M[]SS2&gt;%RVKD&lt;7)&lt;N[V&lt;&lt;K:CO-8C@&quot;[T?L;^H]\]8I@GD[H3V5`=XUKF&gt;R/U[
MC&#039;/_J`ZML]7F;I&#039;[UQ:3^[=@2,`LM(&amp;7NJ-S_\Y=&amp;.&#039;^46R_T!V;^W=D.!RS
M3W5&#039;8O:GW9?&amp;_&gt;OCG#\-L-E?COS2]&gt;V4^Z?S]DR&lt;N[8P[&#039;R-QJ:V6^#^`1Z1
M&lt;\&gt;X?UF)N&#039;]@#Y.QM#L&amp;]R\J!]$N&lt;O\@/DS&amp;K=T&quot;]X]C+0;W;Z3,#8(O1\_]
M,W@Z]FXZOMN&#039;&gt;]&amp;RQ5NV,),4D$&gt;N*B^!7*2DD@+?:Z2H`+Y7)&gt;&lt;4^&#039;&gt;2HLX4
MR*&gt;ODB(8=^U+@;+%IT);YJ60QG&#039;PW0\YON&quot;4O(\0FRL5?A&gt;&gt;&quot;N?;B&#039;O3##?7
MJ&amp;/AN1`\9PMX&amp;F@?`&gt;7Q7&#039;&#039;@%.7T@&#039;^OH7P7&amp;9Z;&quot;M&gt;&lt;I\QGBW\9,Z&lt;Q/UVC
MGH,R7?#G;Y/4#S&#039;_C&quot;5[&lt;S@&#039;&lt;1+\K8;G!N1K5&gt;3PV5:L#?1#GKEC1O4&gt;G5\C
M2&lt;@=Q&#039;=^9F&amp;N&lt;&#039;UZBN7F^_I#6Q8AACG&#039;T)\:_MP1_EPUYR/ZCTGJ[&lt;BG+&amp;;S
MT%&gt;PCTPA&gt;^V@BP9UXIS4MN*A0):S-D;==E&lt;KE_DRR)DFU)UO#7_N+?[&lt;5J&#039;N
MQ_2Z-TCJ)J@;S^?BOL=YK+M`T2:L6!E8A6=TDPVNDB&#039;3YO*?8MS(_P`YC5,A
MY_!]D.W)2J\T&#039;*HH&lt;A+5GD+&amp;VYTDHS@%^F&quot;-&lt;267PK6E,TB&amp;)UWI/7H^%B_R
M`\8?W+;@&quot;&quot;$_;B;;&lt;H\8OQ7Z&amp;\+4[H#/SM-X[&gt;[FSM/\&amp;;BNZ,__G+UW=-BS
M?W&lt;OM)=3\#&lt;(?\,&gt;EE?P^GD\GRQ&lt;ZX+Q&quot;&gt;Z33EM14VA=X2RLL1*UDEAJ&#039;P^%
M*O`^OK&lt;:YM`5I5:RI$0BUU\)?C\HQ2Z#.;X+QA;35E3#O:EX;XG&#039;2KY1Q&gt;7)
M1&quot;DZ&quot;&#039;7B.^*&lt;F4IA:28I+(5KR%?!^]4@&gt;QK\G@:?)5`6Z\$ZD.OBQ;UBJ`OK
M728\7X+OL@*LX+NSEX%,*\A&lt;QJ_#&amp;*\BCY`BS`MXOQKN=T%9*_^MA4+9&lt;B@T
MUTVD0S!_6((RU\MDKA5TF`Y_VTE2+8PA*S#&#039;+)ND%$Z&#039;\GBMD_Y_A:3%:50.
M:0(,JJ@O(7*]!\8V_F&#039;Z?N0RGH_*=-N=\(&gt;^0FQ7$W(]ED&lt;;9)#MA#^\YP6=
M\1/&#039;1,2Q?2GO*\-D[9`Q!N`GJJ.E%L=23@N9&gt;R/HL!%TL1)K/3Y_$)X#NU34
M#]\##7U1A:X&#039;OO&gt;:0%W&#039;07^L`S]E_KD&gt;[CNHKB2N&#039;M7X/GZZUX[RI%IL-U?2
MO&amp;VAOJZ$:\B+0#LMH(.HGP??2\W\-)*W=3^A3U`NEL?U\50Z#I5JD4&gt;%OMH!
M,327.T;U5^B[Y+&amp;LE9=92-NRI6D&#039;QXPE5&lt;%UH18+YW3@&gt;^Y+4TD&amp;S(&gt;N1SY6
MOE=J*GG$4E[-&lt;2ZM&lt;09TC.\&quot;?R$6)`&#039;WNSBVN]@[!8I:*&lt;&lt;)?&amp;8EXQ&lt;N&lt;A&lt;&gt;
M`+FBST0NG3Z&gt;P?;J+G&#039;48[\VG[__-&gt;9[9ODZ11_EW\FNKI&amp;R=![EFB.4C_JN
M*.B#,`ZL&#039;2M%;?!Y&#039;-_YS^.&quot;?D3;,#Z(_;OA&amp;?Q_&quot;O@_5LPXV4S(H1)BJ_51
MSH92]!GHU`:X9F=`V+MSH4],Q[X&lt;^:/8AK&amp;=@/^+L+Z=$,M2D+T=?ON@#&lt;+8
M-#W6_\#@YSU&lt;[/];V%SX;MM,DKD8W[FU.6-S#O:=87SL5K(D;QIYH&#039;/3]ASZ
M&gt;TU.!K%*2_*6&quot;=?,OS&gt;&amp;_\[S4CXV^SXDC5R/U_?BWHE_/M$&quot;$!N9CV%0]\U9
M2J%G/?@`\.)YB_&amp;%,E.):K,JE/O@6\UX+?OAT_,+0GDP^OV\M5-^=!3T\!QD
M^G@A9GEK&lt;W^T$.*S7E:*2M8PGE*E6Z)&lt;F&lt;W)2E%C&amp;O1)LK&lt;,\0UCI[GP[-QU
MR&quot;N!9[%]%*&gt;&amp;/_M=T`&#039;K_R7$#WQ:J\!8VHY_-F^.;[6R#Z_UK87^&quot;/J&lt;&quot;5&lt;]
M\P+Q*)OQG,2^M-87OOD&#039;DIL%Y;.AO0PE&gt;\L&amp;TV`^=Y#Y?P6A[]MPI5)?V%PO
M(CXA;SR8+&quot;W9?R_XHV!K3IU,%N=9;+7_&quot;&#039;GL+2DP/R1//+D&quot;;//(.;4_@_(@
M.P.O8=ZM^S&#039;6JV@#WR9;Y_%\A/?1O\&lt;@GV._S?R&gt;W31/&quot;LS3=&gt;\$W0&lt;V5#4/
M9&#039;A?P/$&amp;SK\1EWZX7PSW!Y*]G^!U:+\M.&quot;:X`]JQ-YD&lt;]N.S]&#039;\B9#?%Z[_C
M8@*Y&quot;PLN`1/+.2:6?_4PH&lt;&lt;_Z%&amp;:[TH&#039;#)P&lt;/08F_P4Q\&quot;S(\B\78@QC79R3
M8:Q&#039;8KR`Q1CSVP#80Y_!_\N6,.;AG%,/6_=P0&gt;X_#+FLWB.3DS#&amp;JJ@&quot;&#039;]-^
M+8L42N?S&quot;O%Z#?YO$2&#039;7A=K(8&gt;B&#039;EG@&gt;)P^&lt;2&quot;(5E3/)`Y8A3\&lt;7$-LOB&quot;4M
M!/H3J_&gt;38S&quot;N+(%^ZG/(QTFI!U]XR2MO[;0D-6T&#039;/[\.=6UL)&gt;.703ZMH?F&lt;
M9&amp;[\GC3RVT.23[JAS[UI&amp;/__@J7)#_/83;A&amp;E41YB\@94CM!_GX8P^RFXV^I
MZ3C\KAZJ+)1A7(5]`LS?*AQ)WO8NF&#039;O#&gt;.?0RV!K$DFJSX&gt;_8I`!=JBZ/9\!
MWG6;=G&amp;;J#V/*+H]2[M`_N&lt;6N&lt;F:^E[.!F]2;B?T11YN2PW84@HR2[@M-6&quot;+
M_KN2VW+C&lt;.AZ_!]@H[6E%&amp;RQ@&quot;V5%V&amp;+!+$K]K*]&gt;@GZ+/S&gt;&quot;F6+6]@9CFF`
MP&gt;+7V7T&lt;;R&#039;VK)1CK10MA&#039;ZH&amp;-L`6Q,H&lt;]X_N;S**J4O)%)Z/MS#\4PI?*+-
MLT+X?SK8_W#R/B+E)CJOUL?/0-Y!%.U[5D6[TZ[L0T[7FO]A[UF@HZJN/??.
M$`($DDR^))&amp;9$!0:*/(+))&quot;0FX\V0HHI1$7,TYF`-`6LQB&quot;B1+@0:[7AN3@P
M%I_++B&lt;)VF26KX_Z0$UK5S+5]Y[6]A4SU;96GY,)44)$&quot;&lt;CG\LO;^YQS9^Y,
M`G8)?&lt;EZ*[/6K+OWN&gt;&gt;&gt;O&lt;\Y^^Q[[KW[0\BNY+J9-`?6&gt;@K\O=&quot;FU0GZ92+(
M(JQMVTZXSY63ZK&gt;3@=^[[)MA+QJC--OJ&quot;;%^\!HYN\&quot;SF+#\%/.//[8;=63G
M9!*+Z^&lt;/T+_?PKDS&lt;!_&amp;\[?#&gt;;0[5-]&lt;4(]EJ&lt;&quot;&#039;2XZO9WDV3*ENM+_#_%?&lt;
MABS5?9B]8TEU&#039;X1R)^Q9:D#&#039;P#S&#039;,YHSKT!SYN5IPIZKU;5N7K8S`I[+H+UG
MK[*]5&amp;P/GAGY/F-BYL:+C.=,?(Z40?&lt;M`=WU:^PCX&#039;6B?]@G//\R?H^%XV.&amp;
M_FV\QOR4&amp;?C!9^T;#/S&lt;$\;/DX*?.PW\E%UC?F88^&quot;F$\9$-_&quot;P*XV&gt;-X&quot;?+
MP,\,G9^KD3D#/Y&amp;&lt;&#039;[&lt;^/O@N6N&lt;G*8P?1?`3:^`&#039;[U$-!GE&quot;O1.0+_BC&#039;:ZK
MNS^K#&lt;HP)]N5?1WWL[7;N)YH3?&lt;3;5\-T5Y\F&amp;@O;2&#039;:S[&lt;1S96DYC6DJGF-
M5C6O*4/-VS=5S7MQNIKWTHUJWL_G0KG)3!M3B=9HA7^1B6*\,/\HU=*XE+3Z
MH^%X*VEMC&quot;YJ:8R6X%\,?[FE$7VG6+Z20U^[+SG-GC]D]\,PAEM`?VP&amp;_8&#039;O
M13#&#039;$#PDO_&lt;(Z)&amp;&lt;N3?2+X7^*$@CY=L-^N-(&quot;BFWA&gt;F/UV$N.]E&lt;)KD7B+F4
M,H)SZ8=S9]E&lt;)KGO$&#039;-I?S.[&#039;LO2@(]SL#^XQY3`\F5]**?48^Z:E@OZO*6X
M.P&#039;O8/$!TMQ-4`[[AG&amp;X5_&amp;P?0K0GGD%VC,O3QMT/&#039;O_9B4)O850U[/.EHWO
M&gt;;!M]U6V#?UJ#?2+Q8?@\CH9=&#039;,%TXEIF?A&gt;#/7+&#039;)@[[#?666_H-YYG=DEP
MO-?0[[I_(&amp;]91MX`&#039;V?@K3B,M_L$;XL-O%7\`WF;8.`-]&lt;[ABT&#039;&gt;K@OC[6;!
M6Y*!MRR=MVLAJV&amp;\?2;D4Q^WIPR\G3X?RIM5\&#039;;\?)`WX&gt;,YJ&quot;SB.S;,P90O
MSK6O2^?G(K`?_!I\3OA$7*.&quot;OK+Y^[/TY^/+[V6YKCH&quot;.N&amp;;Z&quot;I\OY$N8\ZF
M2&#039;&lt;3Z*TFT%M-H+&gt;:0&amp;\U@=[J,JN6)M!;7:&quot;WFD!O[4LJ:MF7),&amp;_&amp;/YR2Q/H
MK?=#]-9E]CW3^5X[&quot;\9_`&gt;BL^:&quot;S7&#039;I^2(EDX?YG)2&#039;&#039;D[MNI#EF=?DJ@%&lt;U
MS:)OPK@U03WV+5@=^&quot;WX!#PWL#U2(BE&#039;/PT)=%P^[I$28-]VEX/IN(+F]&#039;H;
MZ+A706X:F-PDN+.$W&#039;@,]ZM&amp;.&#039;&gt;:R4V&quot;^S8A-[[?SJ\_+&gt;Y7&gt;/]YIHO?IQX\
M&#039;[SW/`?UKJ9M?/]4&quot;&gt;WJ]ZXGKK(]=F]M&quot;MY;9Y\7]WJAJT9?Y+*+-/&amp;8;^C+
M]Z\Q;8N1-JRI(Q&lt;XS2)!VV:@77*-:9\\%Z2-NN8=07N*H&quot;T9:&#039;_K&amp;M/^TSFQ
MGQ&#039;]WL3T7HI[E*!M$D??N=`]C,\?E`/&lt;PWRDX_H&gt;YDA_UI_][&#039;OM?H.MPG[K
M?DD;=%_#XK#H^YI_8VNS`?1$(^B))M`3^T!/O`AZXJ4ZT!&lt;__GI]T5!DI@V@
M(QJL:(=MH@T8KRQ&quot;M32`CN@$&#039;=$PR-X&amp;[;7/,1WQWJ#O11,NE.ZQ7&lt;BG,,Z]
M\?NW/^&gt;\5+KGMN[^O2_(UM[Q$KZ#2&#039;`?@+T@OA_%&#039;&amp;`\SD5\+WXGN*5;Y*D+
M&gt;6?Z]&gt;WG7:;]O+#V9W_#]J^_3/N3P]J?.&amp;C[_#MW/)Q+A?HQW0-]F,=WLY@#
MSC&amp;#G(N`LE@X)QO.V&gt;I$KJ0ZGDL)&lt;X+9!6Q3^3FKP*VB[B?B:&#039;Q?HC!_Z#GT
M=]WXCI@&lt;(L1&amp;MP+\JVZTKUG[&quot;COOFL.^@7JZV3OMS%]V&lt;Y_#P6(LL_J^.?35
M[O&quot;8R:&#039;O:%@]VUSZ,M3C/,RECJV*UJSC[8`_JFC[=-PVCSHVP9K4&lt;17P!Q7M
M&gt;1WW`?Y#17M6QY4LZEBG:$X==P&amp;^5M%VZ3B93QV5BK8S0!_PNQ7MR0!]P%&lt;I
MVN,!^@NHXW9%4P/T`5^N:+4!^H`O@[U[@&#039;XV=2Q1M(T!^H#?K&amp;@/!.CG4$&gt;A
MHFT(T`=\L:)5!&gt;@#OE#1U@3H+Z2.^8IF#]`&#039;?(ZB503H`SY3T58&amp;Z&quot;^BCDQ%
M*P_0!_P&amp;12L+T,^ECLF*5AJ@#_@D12L)T`&lt;\1=&amp;*`_3SJ&quot;-1T90`_3S,OZSE
M!N@#/D&#039;1L@/T%U/,13XO0!_P&quot;$6;U1W^_?PW0;DA^70:G&#039;_S&lt;/_&gt;3EU&amp;E&#039;R:
M`65?0!GF2^9MY8,\FC-WU*[RUJVYT_NXG5A2H(Y77&amp;=G,:X(38&quot;RW;PLDY41
MB&gt;+:,W4;ZMDE.@[PUXW7MDMLS3UCO-8F4PG*?F*LI\KT`N&quot;]QC*?3,\`?M)8
MIICH&quot;&lt;#WA/!GHL&lt;`7Q&#039;&quot;GYD&gt;.&lt;SL#N`:,^W&amp;&lt;R&#039;TS-0&#039;^$&gt;&#039;T1\&amp;]&#039;4=H1^?
MXGXL/\!O^74L)CS_=BX)/YC5A-9^!&gt;&gt;B%&gt;UUK+,Z6`??&lt;[,ZH,\CT&quot;&lt;/YD7Z
MLG_O:F@?XP&quot;&lt;.0:\A/0-GH.A?MMA$0&lt;/Z/]&amp;T+_E&quot;O0K!/UGKT#_TSY.O_,+
MU&#039;$#8C_`/(VB#4#WXR[#&gt;+E&amp;T&gt;&gt;A[&#039;^ZC#R.HGNA[!-CF1)!40Y\QC)7!/UG
M*-.,[9&#039;1]$DHN\4X)\IH6@=X2&lt;@\C*9;`3\60G&lt;T?03*&quot;D+F/9)N!/SM$+J1
M]&#039;XHFVZL1\;0=8&lt;&#039;R94&quot;NG+686:GF&#039;D)VJA9&gt;Z=7BB24Q,#])H)4$[+]N5-=
M`W4Q^X90&quot;WOF*%)&gt;!.ME]?Y9U%&#039;BR%X-&gt;V?&#039;DWSO3&amp;I9GE@-X]62S1Q&gt;A?!&amp;
M#M^!\`,&lt;+D=X`X?1IIA4&lt;7@9PFLXO!1A.X=QWT&lt;J.(QV=F0EAPL1+N=P/L)E
M&#039;,Y%N)3#:&#039;]&#039;2C@\&#039;^%B#F/L1Z)P&amp;&amp;/MD5P.HYT4R&gt;9P)L+S.#P5X5D&lt;1CL5
M,H/#Z0A/XS#&amp;VB-3.,SB&amp;-HXC/Y?)(W#&quot;0@G&lt;QCMHD@\A_&#039;[.HGA,&#039;YG)5$&lt;
M9K$((CG,_+_,&#039;.9^X1S6OY4&#039;YBE2S-.LV0/F2:XEVF*X5M[,QTG&gt;2+2%&gt;&#039;R`
M:-EXW,#&#039;2:XB&amp;MJ/R6N(AK%&#039;93L?)[F&quot;:&amp;@_*J\D&amp;K[CD\OY.,EE1)N&amp;QU*B
MH6^+7,+&#039;22[&amp;/.)P5%A.]&#039;@YEX^3G(UQT^`XCVAHBR?/XN,DSR`:QDJ2IQ$-
MX_S(4_@XR3:B,5N\-.Z3+&quot;?S&lt;9+C&gt;;YM.89HN#^6H_@XR9&#039;\NX]LQAS?:,,7
M&#039;*&lt;!MGBP7STCOD,[;KC).Q_&amp;L69=HJ7F4:L%;=$5D0&lt;1OR&#039;R&gt;\@8NKN+VY=O
MAK:_@CV,2GZTG$2X&#039;MPFD_7M$6A&#039;$L3?!MT%:RN`V\V(UP5PURC`536`IX\A
MY4EL?K&lt;O5T09VK\;\;?Q&#039;8&amp;!A@_.+\)KU&quot;&lt;&quot;=5SB&amp;E7&#039;@0\61W8J[%LLQ%E&quot;
M@CYZ)^*)LUC@&amp;*/@&quot;\`5@;\(=?,$O`3@A0*.A3%8(&amp;`[E*.\N)8JK2WP_/$I
M_%&amp;OH&quot;^#\W/V/`)ZB;`&lt;$OB\DW:&amp;Y6/(\L&amp;&gt;BD)=W^^4UFH\/LKY^6^@[ZOD
MO+P+&lt;`&gt;VIQ#Z!SBBO!P$F@@?UN_KZABT&#039;\STFQ(SNV`_G=FE[RO&amp;LF&gt;N2DN!
M=_7\)=XUA&lt;N\]R[[GG?M[&gt;7&gt;=*CSN9_K9K[G&amp;$?3Q+RBS+QRB=N&#039;A?JQ_\&gt;@
M^\\/H1W)KNS&gt;3L@&quot;W,=C?$RT*&gt;&#039;R$D4CN%ZU@)[&lt;,Z@M!+1SSL]MR#G?450#
MW&#039;&amp;N8K&gt;OSO$*K)UZ&gt;(SK0-NM&#039;IA[OJ&gt;*XOG__*QM]DV7TQO/RGN@&#039;+\W7XZ&gt;
MVTC/-9Y^#/A&#039;W,&lt;\BX_&#039;&gt;/H7/\9_2J3W^\/B@@RRY\+U]`[46S:!./$[^#.\
M_4R7P5&gt;IZ0I^=LPF&#039;/8)QWJ!;Q,Y6%-)+-LFR=4&gt;F?F0[&quot;(&#039;&quot;C3K%-)7(HO^
MVR8PFU&#039;&lt;0_S&quot;S^PU=]F@#GZKLQV0,/[0+HR7BV/@D-AS,/,]0IS%TS#DI=?/
MX3B&amp;VA2_,&gt;!]%8[9W7Z6.SYSAI_&#039;L:CW\Q@,,_T\5\A#\.QQGY_MO0[&gt;&quot;T?4
MUZO%FI#.T@YII&gt;N$1*3ZN8&lt;?]7X%&lt;KM1)MKF&quot;*(]/)9HFR80[2$+T4YTPO6)
M1`N-2?&#039;6P&amp;=,X$N/FWK:)*//@)C3&quot;;3*+]8&gt;CH,8`YQKG`/)1F@&amp;S,%D@[\8
MG_&lt;)++_KG7Y\1HWL:P&gt;]@&lt;&lt;-!/,&amp;D0.HGU^08_I45I[,SL&lt;&amp;9&quot;^:+O7SF&amp;Q&lt;
MCJ/I=_P\&#039;RJ7V6A:Y.&lt;^WGR/&#039;D/S_=Q&#039;A%\?0Q?Y,1Z+S-K%(](]*&gt;AND\V,
M[C8Y(I2N&amp;D._;:3;&#039;D._9:1+8NGU1KI*+$TWTE5CZ76`&#039;[_0OW&lt;3^]:4Z/X^
MP!@/@,G1&amp;UR&gt;C/*&quot;XV@UXS?1!&#039;&lt;!M)&#039;&gt;&#039;DLOG&amp;)S#JJ0+L_XF#T#QP_FIZ#G
M%#\)\_5N)Y&lt;EU!MK8/UMW[K*:RLAW[.6DNJ25%(.^YQ#A?MG4V5EZ#&lt;9.\B8
M/&amp;/#;NF!_1WW@%Y`&amp;P]&lt;]S&gt;/)4ZTU_BCD&#039;&amp;K:FI%_%WV_AGC@J)-69R;[1&amp;(
MA=[7KS]C6&gt;A&#039;G4%Y^;KU&gt;A_41;\H&quot;=;KND[#,Y9JH&gt;A7_$ZG\)&lt;JDNA_G&gt;!^
MLRN@KJNH(&#039;1??R/W_5[;QWV^&amp;K%.1D&#039;HOOY&amp;[A=W_`ONL]7;&amp;^33;EB_&#039;X/.
MQKZR&amp;)RQ:!\0WM\X.KN?SV](N1)&#039;IPL;NU^+\?-%P^Z/]2&gt;._A3ZXJQ4O&amp;HB
M\)1&amp;JAUP#W\:RN+&amp;$^=9[F_[=^JX9):?Z&lt;!1KB]`EOF::X^C:$&gt;/X[;%,`?M
MXX)]N\N@LXQ]=EHF65Z8(U5[8&quot;Q_`-=^$46&lt;^7#&lt;Z&gt;O?6]3)]/D&quot;/K_Q=`W@
MF.ODL?-\G&amp;[6VU2+6JV1I/KWT,;43L,]48VG=^C\@+Q+R4IKNIG$2LFD=8-H
M`[^Y&#039;/5Q6=@*_?K,-U`6;C;(0K&amp;0A4-&#039;+R\+7&lt;&gt;Y+%BO(`OW&quot;5FHZAUD/DD&quot;
M?&gt;T2G\^$2WRLT==@X+PGT&#039;^]I.\5$FA:)^O3[G`;H&lt;%B5&gt;-]H(O;:_+Y?Z-`
M&lt;V$^2+UMT`&lt;_A;;SB=SG@WL6&#039;E&amp;7=4(=*T&#039;_$W.?BY5&#039;L/,I_/N0F_FC8`P@
MD]AOMB?0TS[=?UOM0+\ZWL=$NE7G74FDQWP\CBCO2R+M`7QL0!\FTFX?]Z/E
M^C&quot;)&lt;I]%D_L3GWCF,]I9COQ&amp;?B._D=__KU^\U69Z?ZC^(_1&#039;Z(_0&#039;Z$_0G^$
M_@C]__L_/%\.*?TC0TS_RR&amp;F?WJ(Z5\&lt;8OIF&gt;6CICQMB^I8AIC]QB.G;AIC^
MU&quot;&amp;F/W.(Z6&lt;-,?W&lt;(:9?-,3TE\AHX][6TC6NK:4[KJWEL]2VEIZ,MI;&gt;Z6TM
MQ^:VM7RYJ*VEKZBMY&gt;32MI93*]I:SMS5UJ*M;FLYO[ZMY6)-6TO_EK86?$_)
MWX$2^K-S_7O[MWB:+]9XFL^O]S1KJSW-9^[R-)]:X6D^N=33W%?D:?YRD:?Y
MV%Q/&lt;^]T3W-/AJ?YLU1/&lt;W&gt;&lt;I[EKG*&gt;YT^1IOB??]+[/]`*^[[PVO,5PWC8-
M1]YLG+=;AR-OLSAOTX8;;TI0WJ3AR)N0MP^U8&lt;B;D+=_&#039;XZ\&quot;7G;.=QX4X/R
M=N]PY$W(V^+AR)N0MZ3AR)N0M^-GAQEO[4%Y&gt;V&lt;X\B;DK7$X\B;D;&lt;MPY$W(
M6_DUYFTH]X\C_Y&#039;_R&#039;_D/_(?^7^3?VC&lt;.&lt;D=5UKJ5=%/MJJ8V&gt;TIS!?G.AZ?
M%?9$&amp;&quot;&lt;P1B;.`\(N:]Y$XHR3R`%VC:LLQT5(EAZCN&quot;V9.-WLWAWGWO9#N:\J
MEI3#L7I:++-5WD7:DRA9Z=CL(&quot;3&amp;)NPW]T`[-971U+Y,HET6XK07%N2HK,UX
M]XM)/$&gt;&#039;@OGSF-TUY^=UX(?1MT=34BK1O\%U.[$&gt;T/\)&#039;-FY?64Y=HEDH&gt;T\
MXE*9N97S&lt;!TUMO57B3@?$S0&lt;AO(7@,;#`]OJ8&amp;T5RQIKBTP*:&gt;L_H:UUHJT&quot;
M0_E.:&amp;L-X;&#039;1LJ.(TR&#039;@L&gt;.(\VX!3QY#G&amp;C;J`K;_S]&amp;$N&lt;=`F?V_X&quot;O$&#039;4O
M`EPFX!_#==\5\&quot;\!7B+@&gt;V$LOH/7KU,T85^YBRBA_#X&#039;_!*3NCQ]@MJQ`^C4
M;5(T!_&quot;Z9QWZ\&lt;&gt;[&#039;THD3@5D@L@L9RT?/W42W0[GT7;0)*L=3T$;+%]4/*^3
MR6WK8)Q#:6V#&gt;AF&quot;M[,@0S8!1Z00YW4$&lt;T!*[UEK25\SBVG)Y:DSEC@3V3GY
M/6LNZ8O$G-@L)S#(*HO&#039;P.O=&#039;4^&lt;:.-L9_%=@G([4V;^&amp;S!/UA!YK@!&gt;KA2#
M$OU&lt;&#039;OZ@?^]-&lt;#W:-VX$&gt;#O033&lt;7:NA[\&quot;;P&gt;+]&gt;%BG*=-Y`)N.3%2TN3=&#039;6
M0ITN;@,*8V^E/&quot;YYG#L7QYVHEAK@^9\^8&#039;;/[GIC7358=S;4/2CJ5$00)X[9
MKT;S8PW@E;+2JI@QCFG;@QC35)7UM685MHUR)O;9&quot;NW$P;$&lt;SCEE&amp;^4QJ^/&lt;
MC8_6G,7S29+PN=Y*^M+[6&gt;Q2&quot;_J?N4`N3#+W9&gt;#]L#&#039;&gt;D&quot;Y&gt;-T82:Q&#039;62#NL
M6Q?($.8^GG*&quot;^V,L%//\;&lt;&#039;[*.`=[9(QEA_OJXWJ&gt;2.:X-I3!/DDAVIV)-/K
M=1D)OZ8]])HC^C4=\VFRN&amp;9T^#4D/&gt;2:O_%KCM?L&amp;!.(QVV-$/*BA-8]1/A\
MC1;U$EA?$MQV.?^#HWV\G^&#039;^Z;*9Q&gt;[+*83V&quot;EUI-.-&quot;K;&gt;H:G6VR4QR,C[?
MS.%(@#_:R.$H@&#039;__`(=C`&#039;YC`X?C`7ZYBL/)`#^_AL-I`.^T&lt;]@&amp;&lt;&amp;T%AZ&lt;`
MO&amp;$EAZ&lt;!7%&#039;.X1D`EY9Q&gt;!;`N:4&lt;G@?PC!(.9P.&lt;5LSA7)*3&#039;J7L+JAR9$L*
MR;$6DQR6^Y:0`[B.[JFR9?-8=1*+-5=@5BT2]-&lt;1`4?HX_9(.$+_&amp;L;&quot;,8I?
MJ_N&gt;$O.K&#039;07$U7&amp;L?Z!?/HE\%9[%G^[X-.3&lt;P%RN6@9?IV?A&#039;G;&amp;)+M/FTSN
MDR:S^RO3*/=;X\B!?P&amp;9S&quot;FR@)Q/=&quot;\&amp;/5(Y1\FQSU=R&quot;FW$;5\(1X6X&#039;8OA
M:)?&lt;!682ZYA#&lt;FRY)5[[?#A6E&#039;GM&quot;Z&#039;_M2N]CL4DQ[EU]`HE\D\I\4_&amp;IV)[
M6;&amp;8^UVF.[8^XHTC&lt;GT=YD:&#039;=&gt;]P*JU2U&gt;1LUDZ$:&amp;&gt;L:&amp;&lt;&quot;R=GV-,G&amp;_&amp;-8
M;[.PLT=[&lt;3E:77[KT?Z];&amp;WN2*&gt;Z7L/R6]`^&#039;&#039;.6F9+=Z\.N*3RJYY/@=1&lt;&#039;
MZB:Y[6%U%X35G1NHF^B^+:SNC+&quot;ZTP)X`L.G&quot;#R=^7M,9==8CXH8#7I&lt;C0QC
M[BP^MV:8]YM@WG&lt;.,N]FF/=1,.\_NHIYGQ(5.N_M,==VWE^+N?IY/W&lt;I=*S?
MZQE\WM_M&quot;&lt;[[L;!KWNH)G9_VGN&quot;\^\/JMH;5/=@3G/&lt;_A]7]15A==T_HO+_4
M,W#&gt;&amp;T29!&#039;!7$K^O_CTR\-1@:Q_F&#039;];_&quot;3U/46D/ZE9&gt;QO0(Z!&lt;=!WV#.95S
MK)&#039;!,BOH&amp;2OH3LQ++8&#039;&gt;M(*^M(*&gt;M()^M()&gt;M((^Y/M!7M\T]^D.Z2V2C;X&lt;
MZ`,@8QM$[L68[CIOF&amp;_;^CBIG@;W582ESVN]MDCRK@PT9&lt;:K7$^J*E\G%25&gt;
MC(MM`YX(R`&#039;4R&lt;D&#039;?O*!GWS@)3^9ZT&quot;]O72\9^_:GH(XVT?8S=3V%_O90?WM
M4@GL)\B*,P;?-HP9\E&lt;8PVU/D&amp;H;M%6S6TVIF416.*$M9Z69JA_6G&amp;7R`/.,
MOJ`NJ+L&#039;ROZ7O:^!DZ*Z\KW=/&lt;`(J,A\,`)*SQBCCL94=WTK2LV`!I48@YB8
M9`U=55T5_(A104.(B0WJA@1CZ)&amp;(2\RCT1C-N)MEC1@G64,+[CZ-218A&amp;DW&lt;
MV*#1Z*#R)4PC,N^&lt;&gt;T]5=4_/D.R^]WOY_=[KFE_/O^K6_3SWW&#039;//N??6O5V_
M%=^EE&quot;KTH;9!_HV7T),7-/2QTIUS-_Q&#039;17N&gt;4GD^3W3.1(%)CS6MLGKPF\R%
M\=@*_(X,RR)+,\M-K.E9_([QY__)O\W8\)-)7`_E-D.&amp;&quot;=WMVE;L1YMZ*\^3
MV&#039;ZK_0ACL14L^]E&#039;\)G3!N)#-WS&amp;..)MW&gt;5E&lt;6&amp;#)*9VEUVZ9]:L/OPNZ32L
M*RC7;&gt;!VR^+DP&#039;SXX?&gt;02Z&amp;MMB^P^MIOGKEM!F/]I^(&gt;J?3-*/;AE?O`)VE/
M\]BA.=N2K/NY&#039;1=9CR!O/,//97&gt;&gt;2[+,&lt;]O!#?L_MG+M[T&gt;J-Y15!^C[F*9[
M+7[F4?^@T/4JZ8&#039;WS5`6!6RK6QK8OY10#P9:X%Z[2-]8K+@&#039;]&lt;RC`GVF&lt;%H^
M.%_IH&lt;-&quot;!T$]^J9#YV];V&amp;SU_`[B60T!#W0&lt;Q_&gt;`^]JQ;)4*-/E)Q[8UN24W
M#4#]]-ZU1!O`=TN/Y?I,)YY[4QGFNIHP\K&gt;&quot;,(LHS!%YA.@0U&amp;D+T!+K4X-R
M-AV:N^TQR&quot;/G5YY&gt;&lt;^\\B&#039;-#J]53!)VTZ4//KUD89Q/1_3,\K:;.8*_Y(,T1
MOT^MH&#039;M`\SLK:-[&lt;]E^@&lt;RFB\\7#TMG0.,TF&quot;IJ==`0ZGS*4SA2F]0ATGGQ$
M.M&gt;&gt;IU,X!&lt;_,PG/3XM!&#039;)CK1?LF&quot;[1KP&amp;G[7G.3?#7?FE]YLW17(@$E0MH\+
M&gt;W&lt;EU^5CG&quot;=7LCFS^C+!_25\C$&quot;$SU2&#039;&#039;P/A\?MX/(]K=3S^K&#039;6&amp;U9,$&amp;G._
M_)RH&gt;&quot;AO#GT@Z(C[593.M&#039;I8X*_4R?NP5X&#039;&gt;&gt;\D/[L-0B&#039;^E!_?&quot;ORF6FYN$
M7^N$NR&lt;7XR&gt;FIR6F78WW)8B;9%WG_2?%\F?_:7`UV&quot;(;]O-OQG-S&lt;1^I90UL
MWE&amp;\76/93\_CV6`[&gt;%JMG2]26E-HC`/[.]2U,O%6+H&lt;8\.W7WL8SXO%L^*;^
M/Q\6&lt;N/8(+Y,$%\SE[5/07S+@%[=(&amp;\R&gt;/Z.U65VS^HRL&gt;S?!#K]=&#039;!P4O5W
M=?\V;+L)SD+`\[KV05VZHAY75M5CX?2\75$/#T#:&lt;Z@&lt;&#039;0W&quot;!MI^%)LGZ&#039;MZ
ME1V\!OSFAMC,-N1O&gt;L`&#039;8._&gt;=AB_0V;]KS)NWZYD8._B7N#MG*ZL_]9&amp;&lt;E\.
M=O`$MAML,9%6\@RRH5IZ-W_=NNN6#[B]O#()_OBWZ&lt;OC91YN7Q?8STW]I5%L
MWDE0MY&lt;Q0W&lt;!&#039;^/GM[!F=,-]T%UV8EK431,_D^NFU_BY21N&quot;MAO44]/;D&lt;YR
MD/*)]5J@&lt;@;Y.07&gt;H9[1&#039;-9AE-];X?VED-^]4$^@)_2`&amp;-B#:&gt;P8_,[6&#039;&lt;&lt;6
M]F&quot;&lt;V!?\&quot;,KZ&amp;/C!_-UX&lt;(;V/-^?/=99*Y^B_09&gt;IV_4WP&quot;&gt;31[ZW#:6_%K/
MICL6]3P`]8GT:8&gt;ZG0%U!FU&#039;T+&amp;`^1K-QP)&gt;38SI_0CQ*M_?98$S$&amp;^P&gt;N:/
M9[N[&lt;)\+B,&lt;Y/&#039;=;-\2)[V+P#G20W79,O/,/7[#MW^&#039;=J`7^P#KT&quot;VVO`_27
M^6Q,?S(AOB,7?%*=Y@1*&lt;UK8?CY2];Z1WD\*:2G.=\)W,7J&#039;WZ0_L&amp;]QSP,L
MT3MJP8&lt;&#039;;@,[\H&amp;!&quot;WKP&#039;NOY@8:+&#039;L%[T983O2OPV\_#&lt;[9M/AK&#039;BH;NWU`]
M7G,7T(V/(9YHE;$MXUA%]DRN;ZR,@^Z`&gt;V[A]Z9)D$D%D`N&lt;[PYUX7XY?&quot;]&gt;
M0&gt;&gt;/Y&#039;F;!7=L!]L.#:X^+2;:00)X_E4\UZLR/(-V`.%/&quot;L*7L,R)7AX&#039;O.-G
ML$`&lt;;3&amp;^3TXDXY)G5HV+]8&amp;?8\&#039;/,J@&#039;2_C;,)_&amp;F&#039;@ZH--T,[8&quot;SPFZ;QJE
ME:F.XR&amp;(XW#09B&amp;OJS\0;=8!_V&quot;CK$0;193Q3%XO3IM5=J=:Y36&#039;^&#039;F/&lt;X^C
M&lt;K+QW&gt;7E&#039;^!^!XSS=N!V*]$TH#/NB;8V&#039;NM?U;-T309H^]4/Z!Q0N%^,[3S.
MGL7QD0YHNSM?&amp;EP=]@.EZGPOH?1W!WF&#039;?#:=895Q;R&quot;?RG!2`^4#WL5`=\/W
MJ&amp;OB7D)7D)]X(O+3)(GPGPK&quot;QX&gt;$EZ+P&#039;P_&quot;!W68_&amp;A5_N9&quot;_DZNR%L,THXO
MP+V4P78$?28^@?N;BWODGW!8[!DBZJ&lt;Z&#039;MR+^P&gt;5\4@CQS.N,IY&quot;=3QG0CP]
M0L=&gt;V8YU&quot;OE!?789ZJQQL$V/8TKX3HK&gt;O1_CXYB=I8E,N?DX&lt;9^#^[#=0+V-
MI3K&amp;-H1[GPH;H9GW&quot;R=!&#039;*]!_X/[$(.^)/)6JL[;&amp;#SC&amp;&lt;=NVA[;BN4)POSN
M`[&#039;_27%\H&#039;=(5&gt;&#039;*[P^NOIYHT[RJF[?9IGNZRR\\*_0U04\I&#039;`]]&amp;_QGR7_L
M&#039;N&amp;?0;AV-BO_YU?%V;V&quot;=M7IO`+A/@7AL,R@&lt;ZY&lt;MJ:[+,HAY&gt;V[N\O=$![]
M/0_^EL*[S-TB3MP+]F&amp;@7VD,4\,PR515F*??Q^_;*^K%`MK/@CJ&amp;L/&lt;2[2VH
MTT`G&quot;.+H`G_=X`_C^&quot;G$@?JMS/O5:5?O&#039;;-V\NGPO.I9L3]-T!\7#@F&gt;Q;/+
M&amp;J&quot;_P?;33N4*ZG(U^&#039;&amp;@&#039;E&#039;N`7\]BSRPA/)1C#-E%(5K(CHV$=T9T!-T[A5?
MAC2Q3[;W#L[[(?@=6JX[7Q7MMGAP&lt;,-FBBO&lt;@WFX&lt;YEHGX!0MV1&quot;CVFZ(U[&amp;
MOGKN%O&#039;-/N&gt;!.[K+J&amp;/A^4QW;R$&gt;2`1]=W.O&gt;4CL(X.\.6N+L%&amp;&#039;.U-IV/16
MBO2F5Z:W,DIO&quot;:5G5:1W0D5Z9_Z%],9MX72[NA3(&#039;.C+Q5Q64V=L&quot;]]OE-N5
M+%.X@;&amp;FL:B;+17S&#039;9UEL+=1/SWX&#039;V(?E$]37HKQ,&quot;^=!]\?(7W:?RE(L\3W
M7KEG*YM^W4]`;_E6L&amp;&lt;2I=7[&amp;J2!8]GG;N&#039;[=?&gt;6*`WDP^WO#]U+,BKC#CK3
M*[&quot;)7^4V&lt;8+;Q&quot;&gt;!35R&quot;9^P3&#039;^(Z8.:Y:6S6[MEP#[;6!M&amp;.4U5VP,&amp;#0C?`
M,?NF?5_?%K3EV(*%!NI`!7[F&quot;/#W5&#039;;IS%FW;?T9Y(VW&gt;VSOX`?Z&amp;1/O9=:T
MPAYKF9EC+#.9!-DV5HS!Y(YA_*RA2IIMYV&gt;9_;7VO!B7PC!Q*+,UI,PS*\J\
MG.]&#039;)&lt;K\9J`#%U+YH*P;#XJ]L&#039;A;@CPG&amp;]F*!\&gt;Q54/&#039;P/[;:96BM&#039;XP3%H]
M%6EQ.M\FYGLY/0O-^?B^#5OCJ^)E=DQA:[)![,47OAN@=V/%.]P_Z!8:4^F&quot;
M]^T-5GG:^&quot;Y^[L]H&quot;I&gt;`=&#039;$,!F7&gt;&gt;R`C1IIG4Z:S2U%OCT-Y`_JC[A&amp;&#039;\N+]
M&lt;GZ?@?M9NT\+^^DTWYLI*.\&quot;XB.T/R\=AH^*%7R$^OU)&#039;&lt;NVGD*\Q&#039;@^FU;$
M&amp;RTS-MXRNY*QSH[Q[(9B`^Y)TGSUJR&quot;&#039;[P&lt;ZW78,FXAG+]X&amp;86X#F=*`M$/9
M&quot;_E?=BZ[%.T^W,&lt;[L&quot;,W@YR=GX3V#;)@%;Q/TI[`Z#^P$\\Z&amp;.6AB7C8`1[F
M\2;CO8&amp;_0U0^K-/F1F8N/7?V-IQ3&quot;7B[6N;6CH6@;/@TI(MG`B,O:4#O9KYG
M30[/@G\4Y&lt;YY@X&#039;=-*GS;K&#039;7&#039;]^+&quot;&lt;\]GDCVY/0*/]\F/R3?&gt;B\9%/M*X?W&#039;
M!X/]N-%&gt;;NUO!WM9Y7W$2.,80L;@OJ:OD5V&amp;LA&#039;W&lt;BKHUE?8&gt;&#039;%N*IX)AO;5
M4-F$X5X8*5SCD&lt;,]/5*X\4&lt;.][.*&lt;&#039;@FP3H(U]Y\WK:1_/]X./]MYX_H_[[A
M_-\\YM*1_-\]4CG:CER.Y2.%FWKD&lt;$M&amp;&quot;M=\Y&#039;#7C!0N.5RX)ZKZ-QQ/_CL(
M&#039;YRAF\2]M6D?[?L^;7WE_OLM$]&gt;+CQ%VZ!;&lt;,[MR;./SY:%G%]?N:[=/C!MV
MXIA+&gt;X(IF1C;U;*S&quot;W2$%MY_XC/7*:!]+X1[U+F^/-HJ7_V;4%_=@GMPB_V5
M)O5V09K%&amp;/:OS;V;OF[=Y9[?9392&gt;\9]7WE\NS!^UF_QLX:;&gt;YW#XFSXLZ`=
MO3*:7;\7Z!+P`;:CNT:+]3%I?@9E:R=O6Z.8T@0R:1!T1WR&#039;\POM$[X[^?[#
M?(]))9B[1MK_#W##,%8#4W!/5TR#O\-UQB#OT!:YXGW1OI/&quot;%MF&quot;&gt;XD&#039;94!:
MCBOS/2+Y&gt;7NXK@#/.\XM61B..&lt;1HS`&#039;/\P`Z=.(XVS;00?&amp;LO0T3[YDL]G=O
MW&amp;V#;,&quot;T+;&#039;/9.=XTI&#039;&amp;5N:+1?G2*5^90X/J[VO&amp;T88??Z:S2#OQC(+]0$M.
M&lt;QIWPCJ]&quot;?2E&gt;W\]N+J08/J-=R[JX&gt;\&#039;NLH;H4Z0YFLA&#039;U#?HNYQO![J&#039;MW6
M!?RP4_@M\+/86G#^K+,#\KI@,+3E@$\%3W00+_Y\0/#IW307&lt;ONO`SVSJ7?Y
MKZ.YE^&#039;&amp;D+`\N+\PUN6_X3CE36*-T*;!$72W(6$&gt;KPBSH29,;?^QC\(N+0M;
MI(59Y540_O$/1&#039;^PDMHD[D5XXYDSMY4JQMIP+&#039;=.&amp;??@Q/8HYRO=EP`-&lt;+U2
M8;35`_*6GT-?^,VB&#039;AOB@#8[%^O[?.*9`U#_J)/HF&amp;&gt;P\8H5:2`]Y2&quot;-I)*O
M=+&lt;&#039;^%YF&lt;^^&amp;-%XYANU&gt;%Q,Z\+&lt;/B[-J&lt;I0&gt;VJNG!VE-7#MY[9V+]FR&#039;.L=Q
MJU4-M&gt;E-&quot;M++*.%:$70_#]+;#_D[&#039;L)ANJ+NE:IR3\?UZ,0_P7SKZT&gt;S59&#039;&lt;
MJO8O#0@Z?_D#L7&gt;9=GCPT;&gt;`]S&amp;/2Z&#039;]O%[9#H;I5[&#039;^L?Z.@SPW_4KP=QQX
M]I9XO+\0\/`N?&amp;;]_&#039;SPF&quot;BK&quot;^XNN+_,:4BR&quot;FT:X/^7?\7/O_TE^U&lt;^)O;H
M&#039;RN&gt;&lt;0S+`;\SP68,XNJ&amp;]%S0$Y\9&quot;/=PFXMUO/;P4/ZCN6#([Y_`;ZPBOS-8
M=7YQ_`[WPL/U:4%&gt;_V5`Z&quot;%!7@N\?&lt;5X&gt;M@F;ST&lt;S3NC+@8ZW:YEI\XLS[KG
M\]N0W]8FD_VXAR&quot;^ZUYTV39,&lt;V:,TOS0S#+C;JS_OB`?&lt;V;Q,UA?Y7U7HO-(
M^Z7BV4JHA]T$OWV)AL[W$J/Q;*YRLH&#039;X&#039;^3_#T%&gt;@(ZI&quot;%Y6\SM`=]P,OW\^
M$/&quot;;RGEC&amp;&lt;CA^^&#039;W(W#?=S26&lt;5+G=I&quot;QSPY26QS&#039;YAG@_B2$Y?EL`#WWT,?R
M[-&quot;,?%&quot;&amp;D\93&amp;1IKW\V&amp;\!M&#039;B_53%P=\B&gt;&lt;]Q*URD*=O0=H&amp;T.QC(=]6OU\&amp;
M[V?S]7M66?0%DVAOXN;.UQ)MG7\&quot;&gt;7\3M;D2M&amp;_&lt;A_$5R/L.H.5:&lt;-L.;F`#
M7)4&lt;Q&gt;9!F79O!YW\3R0OMT/\F\[%\[ES6V=A_P/MY\713&#039;D!W&amp;PH4P&gt;4MPO*
M\DH\UI\8S&gt;8A?V2AG+=RMT3_`H@3$?&gt;PO/T2J^?V!K8!]^SNAGNHVPWXK@O&gt;
MW0;/#0U\3`GJ0Q/EXW/J3;T7&#039;HCL5^RS&lt;*TBTFS=@&lt;%YCT*;;`O:?T:$P_R^
M&quot;K_I$.[#\.YGX&amp;&lt;T#Y^;BW-&quot;F%&gt;4&quot;:_0??NAP7DOC]C&#039;U&gt;ZG&amp;IPA]3[PFC$=
MUPO$08])=%Y,9U,J&#039;U3K$WA^N#P6=8DI-*\@=`EK&#039;%-DX,&amp;?`JV[N-W4UHGM
M`&gt;LR=M+QE[:S:6G&lt;@QYE&amp;+8_B[?Q*6&#039;?MN5`E-XTLN/Q&gt;3H]+QT3A=E!^L1F
M&quot;*.%?3ZX4W]_=EGT]U$_JN4Q7*&quot;&#039;O+E_&lt;#7NQ1Z;4&lt;&#039;GT):/%_.+?!P=95$W
MU&#039;TWN&amp;-[+G]C[61\=U!?.WD?Q&quot;7&amp;KW`]Y/&#039;`GVW`GTW`GY.`/R=WO@[\.IYL
M&#039;3QS;&quot;&#039;4WZH.KKM&lt;C[H+]DE(LZ-YWSVE]V.&#039;A&amp;Z%NE2A/*B.(7&gt;4/U;P#O)=
M&#039;!CD=(\?$GK/\&amp;&lt;2!?MMUL[S!GWRO0&gt;B/GDI],GK3F%E&lt;89@4^_CAP2]6;Q&quot;
M;VTDV5+2JG3CU?M)+D_@8Z:\[T6YGVL4[&gt;VE0WS_4&amp;X3_N(0W]^YLTVL&amp;5&amp;V
MGUM-^X#NH6PAMP&amp;@NP)A+HN)_4&amp;W`ZU1-W2A_WT-Z#R*K\7(S5U_6(R!X=ZG
M#.S3RKBG)?7^PDE\7515V#]!W-BFUE&#039;8^W$_]@8Q[W++&#039;8OV/,G(7DCJ8=_Z
M62CSVHI^&amp;.=P&amp;\97],.9R&quot;_&amp;=S&#039;1Z+OO5Z]UJ]D/G&lt;8#9T.;&lt;&gt;&amp;W&quot;GX_9,*6
MB$-_@;+B/I!5T/Z4DT.^%FG%SQ%AY/UBWW(&lt;`T;9$?01.,_G3!?TC@%-DB#/
MY@-ML0SME^&quot;X&#039;/!]4NE_*&quot;&#039;H&#039;VL&lt;V&lt;\WXZ+&lt;,4CS5JC#+*YA&#039;\=6&#039;4/R;*D8
M2U^/Y_#LN-FZ&quot;V7&gt;T9`O&quot;_I;S),8]VCJ_2WEM7IL&lt;@3YM&#039;#4CPZ1?/HLEU&amp;)
MSC+O&quot;T=U[H/^\&quot;0Z7Q#/,]PX1%;]A(\U3.V=@&#039;,-K&quot;6P3=:SI)&#039;&#039;LS/O`YGP
M*OQ&gt;&gt;P]E26XNKI?&#039;=A?81;@N+(/KQB8LG9QDD],S$M.NQGN,\S.0+K:-1^&#039;W
M/,8;$^UT![S#]O$]7D9&lt;WRW2PG:#:3WS&#039;K=GM^+:(1RWQ_;3/F&#039;MFHU&lt;CDT-
MY=A1`Z+-L&quot;#/A2C/?/P?XCDEDF-;D-_CP.]3N!R+]]\?XW)L&quot;\JQF;P])?IQ
M/7P7^`_Z;)P3&quot;&#039;26][^!LFUJA6R;0K)M,LBV)I!MDT&quot;V&#039;=_Y!LB&gt;N8,B;T/E
M6]=A&lt;6:SQN.8VOL[?EY;ZPAG+?Y[K&gt;W5%-D.-^ROMAU^=%&quot;TI&gt;^_+V34DPV&lt;
M7[&gt;P6=WE4H)MX/&lt;@KW)@@],&lt;/?&quot;A$&gt;K:.&quot;YVU7LXMQB-U:-;&quot;M(Y+5S&#039;T=P[
M`?CY9&#039;I^$-)\!_I3&#039;C&gt;N:QD&lt;5(^C=X6#8KZ_\ETP[O4/F%&lt;^M]_4&gt;S?&lt;OTGW
M=\&#039;][^G^=BI&#039;U^#@O/WDM@+&gt;_Y&#039;NOU;Q_IV@3Q]AK@2_,RG%V:.@QVSIN+&gt;[
M&#039;&amp;O&lt;M*8C%_\&gt;NG?$V0:DXV&gt;(?K=`O#B6%_)5TB0:-7$=I1UHI&amp;!\&lt;/^%@SBO
MU]R+^O&quot;1YA$X#0K=93PK+#F&gt;/9L`FKZ(^Z.#/&#039;#`#=\G&quot;GPN;#V&gt;L85C^MWC
M$\^.?D^,.V?`SWZXW\[PNVJ(&lt;X3Y!$SK%&quot;K&#039;Y][G&lt;XO*-L;E_9;F&#039;W27,V-_
MNZ;Y5\W?:XZ+_F(N^(F!&#039;.+IP_OLV,UK1%LR\UC&gt;6W^5^-Z?]HGXSC@HRAW8
MU*&lt;&gt;%&amp;,J1_KN@\8)^-JI&amp;.4+QXE+(#_FQ42^8E`?N;%/KFG&gt;$OO&gt;HXSX])+S
M^O!LT@+U(T&lt;?Y/*0RP1\/NI@M+?TD&lt;[(JTQ_&gt;YGV[1Z:_@^&amp;27]&gt;=?IOEZO3
M?[/\7T__24H_,33]?QPF_4QU^K\&gt;DOXS(Z8__%@UR@O_/3$??2/(BIMNL,K?
M+XOZVPRTM!)B_.LW6$=Q&lt;?\2CJ7&#039;J0V43&#039;[.G0-A70B;V2?&quot;/GHP&amp;-=N[L7Y
MF#CP4@[ZLG4X+@?^.MX3_C&quot;MS]%XV1JXOZE![)G&gt;]9[80WT)S\LD+C-$7B;U
M/ASF95+O8Y5YP3/F*O)RSCX1-G\P..]@4N^]%7E92GD9)&#039;^8EL&#039;S,JGWRT0#
MC`]U$AQS+P1]=*8ZG9/V81Z@GZYP&gt;VN?6,]0&amp;&lt;?\RC@*U7%,&#039;&quot;:.E_:AO*F.
MX]K*.$K5&lt;&lt;2&amp;B&gt;/I?6*L&quot;\&gt;@[KXJ.3#&lt;V,6,PK&#039;7;U\-?3]@&quot;?HRB&#039;OLD&lt;:G
M&lt;$T5Y\7L&gt;7WJXLSCN269Q[=#W_8.K6TN0CWQ]PO.Z[MI2?&quot;^M?/UX&#039;U&lt;O(]=
M&lt;U[?ZB7VXVA/VX`@OU?G0&quot;ZAGXWQ25&lt;O%V,!6V+7G=&gt;WBOMKYOY^BW8WV:RO
MQ)NO+D&#039;&gt;VR&#039;/E&gt;O!CKAVD\K!\UAJSL&gt;G6WW+ECB/X_E9[8LS`UQG`QNX$6S9
M^&quot;BFJ$#K#1UGY\%F6O]&quot;]]EY&#039;?#`LK/S&quot;R&amp;\O:F[7$C$\DN/B:W`&lt;X:&gt;&gt;!G&#039;
M-F-\_+&#039;E/SG/*N*YM?&lt;X/)\C?)[4&gt;S0\XS&gt;=/!^Y67V\SP(]$&gt;-=N*,YG^FT
MRD&quot;[@:_O$^USX;E67]/BA8]?&gt;FA015NXD=;HCB8=LH$P6%,]_#E&quot;8LSGVJ&lt;A
M+T_=T/,%B!O[OO:G0&gt;=?8`\,G2/E[WX%[Q;;`[@&gt;:P:&amp;N^V&amp;GNOWB?[GTT&#039;X
M+&lt;)/%+YZ7/@]DG&gt;XICXHGWVFU&gt;&gt;DK3[W+*M/M(FS\TNA?K$N;EWB/O[QO1#W
M4#^EL_/KP,]]X.=^\#,+_!3XG&#039;H+Z26MO&gt;/V#3&gt;F*\I3!-[I#/+\6Y&#039;G#^^K
M_#ZB=CSI)X/BS)VI^\)S&#039;;8P&quot;+L/Z@;;9NL^H6\5Q=P[R*&#039;IXON01!O7&quot;Z;L
M%&gt;T2OR\1ZV!!9]@KY+0AQL^X#I&quot;!^!+[Q/JN9#S2RXIBC&amp;H]GG%9&amp;&gt;^HJGB;
MN$[V*XJW(XCWQ&gt;[R.HAW!FOFXW?&lt;[661UC36UH_K)P3MI^&lt;%_9IZW]T#&lt;AC\
MO0!U]&amp;2W)72/TG20-?:`2&#039;M2[^O@Y\ESK3+2?AUW%SKA/^Z-SFU*!OW0D&gt;8,
MFJ)^Z*F]43^$Z^I8(.&gt;2YXCO($&amp;N81IXMDM#4+Y2=_F[2TBNC:#C89RY05K;
M`W&#039;T4CHXEGH7G9_QU&lt;KT,N=4V&gt;L/[Q%CLGRN!]ZW%\[)G_@R7Q.KA&amp;ZE&lt;_+&#039;
MO\S70D=NF7/SS2^+&gt;0DNQ_ZUN^P`K7B^F[OPN^;&gt;S)+V@6H]J9;_*K_!VIM(
M]&amp;;&amp;6W@VD.&quot;UTKE5:Z]R&gt;P1/5+I]#,H+-EWS-7O%65&amp;+(/U54+&gt;YT1`/\(&amp;_
M5_`&lt;/I?@V2&#039;Z8#_\I0_$F5*7`9T&gt;#?E[!C\K-?C&gt;Q:4TA9L81^^$./`\OE6C
MK;X&quot;_&#039;A[`UZVXTS!\Z=P?&amp;/M7+;[39#Q@Q&gt;SW0_%B`\S,XC&#039;Q1C_G#T!CT=N
M31`WC@$%Y0C.6%EVHM5WQ1^@;4,^L&quot;RQKR8&#039;\,S6&#039;/#IDTLJ^KXJ7GQ\V._&gt;
MD!^3&gt;VEM&#039;J-R%V:$ZSX^#/FZ#N=39L;R\=&#039;07T&quot;ZNW$=[=&#039;LT0?I_)&lt;)1-&lt;,
M?@\`\@)I/8[J`,^C:0SX\*-6&amp;=LR\N&lt;JU,GA][M#(3^N9*495?,&gt;8R#M3W)^
MQ/FOUM[9&gt;&quot;9+7/`=/D\\C/.@?`QD?0+Z6%%GC+&gt;A94O&lt;@&lt;WPV[];Z#?H&#039;\&lt;2
M5]%:],40INW5YNC[N&quot;E67R.4K&gt;]LJ\PNLLKK9`MLE&gt;3`2T(?78^R9-T,X78B
MY&gt;GZPUR^0IMHSG?,`IUP2&lt;&lt;`KF?[,OB9,8[MQG4:!0B#X\RGB3Y^?47;6,_:
MHK9QE&amp;CGZQF\9[N^MHW&#039;&quot;^^=JS(#7:S]6S;H-,&#039;WU&lt;B/]T-]?&#039;20MTT&gt;QD;9
MU\AV_TB,3:[OGMI5;F?Q7GL(/XCOYYX&gt;X1OU6&amp;\3\$,F^GX&quot;^)15R8C[@)ZG
MDP[&gt;LT?4Z[/[!8TKQ_E0[EOAN`2KJM&lt;\U&lt;F+$&quot;[XMAK:\43\/B_[!SY&amp;LSL)
M]/HN\,?&amp;L6PWQ#-O//E[$N,_$*P+`7K`\^!^(2?Y.7&gt;X-I7R4]P_W!G?D;R,
M(&gt;^?8?646*!GLI#O%T`&gt;31YGK/?R/8)G.:T;NLOS]HCUDO=3G&gt;)XY&quot;?V5*W[
M!3Z,5&lt;FK&gt;;MQ?:.@VRW#C(O&gt;O3&lt;ZJZP&#039;WC&lt;&#039;M,M4Q]--\0BZ5K\[&gt;W=TEM&amp;6
M/8(WFOX&lt;+R\\QLK;FV;D.?^U)&lt;H+=XC[IJF)\DAK#YN!-KE*/BC%&gt;+L*TDI&quot;
M6A\EFD\@^EQ`Y?H2SF&#039;$Q1J&gt;Y0&gt;X&#039;L_OOWR@@B&gt;2\7#]+&lt;8WGO)^*&lt;1Q/(O.
M:^H@^EQ&lt;R4^9ZK`?[!)A9^T7YS)%&lt;X&#039;+YF[Y?30W&gt;&quot;/E[ZS](Z]Y1)V&lt;QDG6
M=_QCU3C)W&amp;&quot;&lt;Y%B*YY,&#039;^#ITXO%XU1C)B[N$#1#8JR?L%VM4N.Y&gt;,7;!F/@F
M&lt;.@8!LKEG^T6[0O&#039;24A_7L]V0EL&#039;O6&#039;IDN3C1QIW$&#039;+IO#Z0&quot;=??,8;-PSCQ
MFU3.`Z51?3B&gt;@FV9RVV(;RVEA3+Y7P=YN80N5HKS\]RQ[;KX;7+I]KYUN\2X
MXHW&quot;?N?\_QT(C^L5-C%J$]!.OD5N]X5M(A&#039;:&lt;=AW?F=7M1V&#039;;I_:+&lt;X:Y&#039;&amp;`
M7(U=CF6U!];%H:]ZR.H+UK?R&lt;@S$RZB;XWHL.W`[%&quot;__I37#2%N7RKN4:(ME
MY&amp;FRF&gt;6E9#^.-+Z$X2^E\-&lt;/BO7K&amp;=JC`L^ZY_&#039;LZ\8Z&amp;OA+8T/\3&amp;&gt;JA\^+
M\3!U$7Z_R/O[%LZWRSJMOA.!CS&amp;/N/?*NF&#039;U0*&#039;WHTQ#^3\3:-=U;[P&lt;7P3/
MC8S&amp;U1)\;7EJUS!G6$.&gt;%N*^.9`NQF%/9.48A+4[61^&gt;+SUI-_(OV(V&#039;9FZS
MKV+E&gt;(-5[H9[Y[.LG&amp;@$&gt;A[JWN;.A3H&quot;G2WC\S..UZ^Z+\&amp;_P6S916,,OE4.
M]__9-;0-1G/TAW;QM/JRD)_;H!Q+VUA?;);5MW0JX&#039;C\UC9^Z=(S6%]B`MA+
M&lt;&#039;^K`N[-Y&quot;ZQOGB;U=&lt;-]\L,UC?J#*OO`;B_?3K&lt;-^#]S&amp;VW&amp;ZP\JI&#039;N);B7
MZ/Y4N%?H_D-P;]&quot;]`O?3Z7XVW$^E^UEPGZ1[&quot;^X_1/=)N#^5[AO@WK+Z;C\#
M:#/;ZF/@EIM.]5%*Y-L763W=\&#039;/A]^R[E?52.S^&#039;^AK*Y55W+NIIP[H!^NA3
MN\NM4#][;[4?N2O&gt;M**%K=_:$BONN27&gt;TM_8P.:!?O;H*Z/%/C&gt;,+=O:EGQQ
M#:ZM@KYMO&gt;DVY`W0=5N#_B39P.WWH(X&gt;A/S@7.2-\&gt;85@0Z&amp;=MT?=G&#039;]7\7]
M&quot;X0]*N:NO_&gt;N^)YQ6J*I?\&#039;AP7FU&gt;D?M&amp;;\[:)R%,;%7S^RQ;![@]8V`8%NL
M;&quot;]-S2=G9PR^O]-RL;\3RM-%@^+;4KS_Q*!8\X/WY\+]QX+Q=]`M9]$]K@OO
MHGL&lt;YSZ7[L\&quot;O?]LNL?U8D80=A#G56F,&#039;^))TSV.ES_R@9@?QF?&lt;D^G&#039;\-Q9
MT6?U?H!S\&gt;(9OV\YB&gt;[9()_OX??]D-8)=+_TL#A[F7]3?#BPP9IZMQX6XV*B
M?X&amp;Z&amp;9?;BK:A&quot;W+`&gt;I?FCDH-&gt;90YSK7@#K+AK&#039;?#M8I0GZ/X.&#039;H01GZW&gt;ET,
M_M;&gt;.O[Y5V8DGN=]T&gt;+&amp;Y]DB@]_G%H\/[PL5]\&gt;Q7#EV:/[R#LLZ+GYS8OG]
M@X-JA_7DA&lt;O`&#039;HP?FC][IM5UX69PX]^Y,^LK_$S+0VMGXS/VY1&quot;V&lt;3N\C]\&lt;
M:UQ&#039;_J8=6MO(TQPUX?E28EKOB/8*S?6AS5$&amp;GAG`\R%GL&#039;(C\.-GGAI&lt;_&lt;/-
M@ZNO&gt;&quot;JPZ2;UQL&#039;]D_!&lt;`/=//R5TE+OP&#039;.EXTR^GW;%H3Y*OVYK4&gt;^C=&lt;)TE
MR,A19)&lt;U];[QSN#J1QOQW.E)O7LK_11&amp;A;;;&#039;]\1]L2-&#039;2^LV1!O6[%OR&lt;*!
M7,7:,[0#\/O5?:-&gt;_&amp;D.VFW[&amp;)9&#039;V_&#039;I0&lt;$SRBCV:/.HAWZ*[&gt;M4R..-D-&lt;S
M`-_G96CI;8?[Z\#M%,&quot;#X+8&amp;\F\EFGG^&lt;SS_4WO1+MD!;1&#039;[SY^]0WR1&#039;$WK
M12&gt;#^Y3&gt;1\&#039;]#S$L2TOOBJWB.]&lt;&quot;V#J581_&amp;&lt;S]UJUP9[H?O8)L6ZRJW#XBU
M&quot;3&lt;!C[\0/_[9%XYI&#039;?=&quot;FAV&#039;\D30;G2^&lt;#;)M@+&lt;ZZP,M%E_[ZNC\H\/67,2
MS?$]72,3N&amp;ZZLZO\^&lt;UB_1&gt;6U2)=&amp;]TOWRR^,1&#039;\/SH??&amp;?RU7?(&#039;@(_N#8(
MV^H.]S./?&#039;$PH,F8*GWY2^\,72&lt;V=&quot;POUML,\6#?]26H_R*D&gt;S3\GMHL;%MT
MOQ+&lt;&#039;X?G,?#[Q&gt;:(QS+QY@H&gt;:^Z=7\5C8T+]]6+(P_XXU@OH/E4\%ODY[QWZ
MMJAB+2R.&lt;:%MA-\RB&#039;50K;U;!J.Z6@?RMX&#039;6T3X&amp;;KLKZ#]49\`^%VE5K-H_
MI5I7P7ZG99&#039;0;9K:9E+_%&gt;2Q18S_03Z_R\&gt;9FGN1CX-OG*Z!^XV;!E??M%F,
M,V1`3]K.F,9M_F1C:&#039;.-&gt;T&gt;L1&gt;3NF&lt;A]U#M&#039;L.,$OZS$/!4WB?-U[3CGP96L
M$,6Q[VW\]AYL^]A*D6ZIL8H7=KX=RLV:=W]Z&gt;RB?#-,W@VQJ(AJ)&lt;AT5KO-P
M/Y3;^MNW.0]&quot;N8X*XT;WWX#[&gt;Z/P#.[&lt;5IQSG23:TLJVPE&#039;YLSIR6S\S2\RS
M3@/:70OE.WDSMZUT=)L*]U&gt;&quot;6W(S&#039;[O2#D`]XSC&quot;&quot;X#8YS_)Y\[::,P`V_/Q
MO8^\7?D=14M_^P&gt;#\W2P=UKC?.P&#039;RGX4EVU!_GX8Y#LYMLJ]\+;0#3&quot;_K91G
MEAF;#_:&#039;03^K@[&quot;%:O?\V[R=KHP5V_(,Z@WZ.UR+4FYEU6&gt;RHXP8=A\#X$&lt;^
M3D%QM$`&lt;2@-^/\QPS33_&#039;F\;T*4#?B]MXFEQ&gt;FV!^Q/@]]M-?/Y%PW&#039;;`OA/
MT!@NZN]&#039;XC/0MU;*D!:VE[.&gt;0WYB?&amp;RG$?&gt;&amp;&quot;&lt;&gt;PQE;QSJ?&gt;%FU7T&#039;!&lt;U;M/
M5/)&lt;IOK=[!J&gt;JYVC&quot;LH_&quot;?*D0?E/?$+(GVE/T#I[3OMQ57R8AG@W&#039;)ZS[4:H
M\V::PS&gt;@?7T#:/+&quot;DX.KO[V)VT-:$=M*`\L7H8S&lt;AJ5GL(W+E?P3`SGS)+R;
MP5KX.E]!@W&#039;Y&#039;7&#039;Q#6KKVQ5M.CD^=)_P]DA[`0F9Y.!WK;E9?=T)T&quot;L:XL_-
M;X-^%.@,&gt;/U#?(T1KK]EN]HS)^3;9SL&amp;GM_&gt;M;Q]11+TP^&lt;.B_/I#QP6XP&#039;-
M]!T1?E^$&gt;?FG03%&gt;A/MQX/C]+P[7[ALU$^C0`_2X8!.W17I0QLY@T_H96[LF
M\OO3(ZY&#039;VH%Z[1E6#ZYQ2$;?ZT-=C^?K=)`.O]DIUGO&quot;OV:K@3V&#039;^LR:[WU^
M&amp;ZY+*\BL/#_!^O^,&gt;YWNY6.&quot;*V7HVQ:&quot;&#039;N$N63)@4U\`?#AOG+&quot;95P9]WSKH
MVQ,+[(%DDO$^.4-KO5B&quot;ZJ@@\G`?]/__1&#039;FX&quot;&gt;*XY\N7;4.=0%UTV;8ID.8_
M7#IGFW[)G&amp;TLB.&lt;DQOMU49]&#039;YPLSZ3X#]Q]CY9L@[6F)EO[EXQCPQ905VZ[Z
MZD&quot;&amp;]*$2](5(?^RKMOV]%;KG8@&#039;?1&#039;G&quot;_N0;E&quot;_&lt;EQ3UDA?B;,4^D&amp;=-\1&lt;?
MRQR&lt;U0-ARH69J*\$\JVY=PF$0?K@W`R.B;:SBQ[!,5#DW6FL&lt;3?NPX7O,8^X
MA\6,Q*3^IT&lt;A/QW?R_T/7-@3^9_4?R7X1UU^;;RMOSTVDC\1[U3NKZ4?&gt;&#039;&lt;&gt;
M^C\M)O:,&amp;LG_!/+?/J(_D3[2K/`Q+&amp;&lt;SS8FU]%H[A1S?B/O0O#&lt;X[[.@5Q9D
MB_/+,^^*O61JYD&gt;K]*YGAM5Y&lt;.Z2KXL&gt;A]\%=&gt;5+H#\Q:^.&gt;[8!+`6&gt;*^:5@
MS1D_NS[0`9&quot;?)^_D.@#UH]7OFN#=W?&#039;N?&amp;!+5NX#L./M(?$FC\D&#039;MB6&amp;;8&quot;P
MMT&quot;\WXU?+/+4)?(4^]C&amp;/2&lt;.S5/FF+RP546Z[_6+.0R1W^IW[]`9][&#039;1A:VX
MM\1ESX1[2T#^J_V^VB^^4;\&quot;XKH[/G?8&lt;JRO*&lt;&gt;Q5&gt;78VB_L5I&#039;/8_-&lt;1\5Q
M\:,*6Y_M%[;BM$:P&#039;&lt;!VG\_.W]TUALT[+&lt;S[L57TW$CY,2OF2&quot;KS\NVA&gt;2E5
MY^6?^X4-(O(Y(=\5Y`5H\1&quot;\N_`/@ZMEV@M`Y&#039;=&quot;5?IK^[$^Y^3!GINDLO-%
MO5Q`]3)GXY[&#039;&lt;;[F\*#Z&#039;+P?+OQW*/QS//RLZO`7;=SS$(5_4JQW&amp;V8/G*&amp;\
M*_8VV@MV88;VF&gt;+CA&lt;)VX&#039;M-)4.^G5#5WU[3+V3-!;CF$G0GULCFW0+Z-8:]
M!&gt;JA-5[8RA(%T&#039;7N7A/D\\;#0E_GW]F-#O&gt;&quot;`CI/J%I3&gt;!G%G0YI?5SX_F)Z
M=SK)[X2!&gt;\`T\[T#!,V.&quot;WED)OG%,836,86MR#,;XPF^KY@HTW%A7V^0WQ:2
M`1OCK?W=\4#.1OYP&#039;&lt;%&#039;R&quot;_VE5CW_4AO:O?3*\K(WA^&lt;MV58.V*8O05!1YH$
MNG#+=:#776.5Z1O?,,W\8#AV#O286%471XG\3+1#OJM^&#039;^L7&lt;T0,\MH,-%@5
MSZT1Y9](Y1+[?1VHV&#039;,4V_;GGZYLVQ.KZFCG6R+-64$_&gt;HG@&#039;3X^$V_B^ZET
M3UB[)FA;C^VLS&#039;]35;HO45RIBKAR\6!/\TF]$_^U(A^9ZK&quot;_I+`=89NO?K_I
MK4H[I?K=S]_B\Y$KD];Y?7S?2&amp;MTGY`+8L[P]L-B+I_KC&gt;@&#039;U__@M\RXAAO7
M,:/[G(:^8+]&quot;S,=?LQ&lt;?M[^`;W&#039;&gt;$-K!!A[/]&amp;X^MU8&lt;Q3;8\=B*6^*Q?B&lt;A
MOC6]&quot;=XC+6S0(:E.@:8MG?9.,0&gt;&amp;8^!NM,&lt;0T+=9[#$TQRJ[EUCEI6\)N;4P
M/CM?=([-Q\&quot;-S4$;EJV8P9KZ3P6;!NR)YX*X&lt;0^&lt;&quot;RENT)54)]HS!&gt;C?G.^&quot;
ML-V7&quot;+WTJK?&quot;^36@/:6+_J&gt;+_9&gt;&lt;M_C:6-Y6JN(I5&lt;=S^5M\K2BNDZZ16[A^
M%3$9SOW4KF^.+2+[1DJ4&lt;2V&#039;WB]T&gt;]RG]9?PNS%N]17G/SP1[)=QR*=7@@RX
M:XEH9V?TA^,(0+L6E/F=.(Z`^_,N9V(O&gt;0A[`]A*5^/Z_0MC;%58_[D&amp;W)MO
M93/N07N,58[MC)4S$W&amp;=`&gt;A^%P,&gt;`]@*.!80UQQ,!!P+V`KX8&lt;#)@+B&gt;ZT3`
MLP`[`,\%_##@9)Q3!#P1,`W8;?7EKF)]:Y&gt;POLSYX&#039;8QN%T(.)&gt;5U_Z8]04R
MJ&quot;O&amp;=B5/393Y\QQZ_E&quot;B[)QIE9=U@UWF6&#039;U+SV=E&quot;[_IR!V?CS&gt;P&lt;JR1E3_W
M[N#JM==&quot;_#&gt;POC&#039;]8GT*XWLFM%3)D[&gt;!GMW(3V_1.!&#039;CW[1&amp;]C_?,Q;WB&amp;?5
M^_\(]UVL4!W?2[C_[D8Q#OGR+\0WH=Q?J87W?R[4W1;P\\8OA)][A)]&gt;[B?9
M&amp;OKYG^#G$/E95^DG$_GY!?AY;J=8%X%UB#2(%2:8WP3_:`&lt;$WRA^=M?@:JCK
M5?OYON.8Y]8\TK%]^LQP3N;A-X&lt;;9ZF5[9^&amp;&lt;&#039;MI7Z#\6S2&#039;V&amp;&amp;5[WQ+C(MA
M_:YX2^3[P#M=O+Z_\9;@24&amp;&#039;UGS0%]P):&gt;)[=HF8AQ&lt;TF%1%S]O!SRNHYR:&quot;
M;Z%!SZG8#^K2?C$&#039;)VA3&#039;?:F-X5^Q^&gt;N*_;$.K\?U]-1F$)UF&quot;O?%#8[?7==
ME99QA+0^]R:?O]O5A&amp;=([.SB&lt;\E@`W:^_Z[XEB5S?LP4Y:\.]_$WCVP+;^=M
MF7_;ROT?_=;P\W&lt;X1M&lt;$&lt;H.W`VMF&amp;&gt;S)#:@[&lt;)ZP$N5@_8C\&#039;&quot;\#T;JM:BZ]
MD\K`OW.-!6MMFGIQWZG#[XBY?%&#039;VZG!3WQ2VM&lt;7$O@2!^XXWAY_GXVV8&#039;96?
MP8XRD3^AS9KQ\&lt;S$=2&quot;QVP&quot;7P^\.^*W$_7C@&#039;8N9\0;X-&lt;)O5LR&lt;B&gt;L&quot;YL7,
MV&#039;CX38!?,_S:X)&gt;$WZGP.P-^!ORFP\^&quot;WVSXS8&#039;?)?&quot;[&#039;&#039;Y/03Q%^&amp;7B9GQ!
MW(Q=$Q=U4VBKJIO7_QS1FM.%\?&amp;[B;$&amp;&quot;-,(O_&#039;PFP&quot;_9OA-C9M#ZVW:S7&amp;^
M/TJFHOZ^_Z;8_R2(+[[`-N8?2EQ?P/UA&amp;]@G^7[.(--QSZ-N_,X0_%@+V@W^
M&#039;03$TSU5?*.ZXLW:&lt;0N&lt;$TPFI^3CC8]M[&lt;@F0(ZMW!H#&gt;&lt;C;.NY?TTCW]\#]
M&gt;)&quot;3\&lt;&gt;VQB8@%K;&amp;FND=I%&lt;:7+NU%&#039;MLSPS:&gt;RF7P/W@&#039;MN::&#039;ALZQ??I&#039;5/
MD$[&#039;!+`Y:6];O@YK\&lt;SR3)98@=\2.13.#N1DJ9JVW_GS&quot;./-M(Z6ST=W3,F+
M^?`I^;LA+B&gt;.Z;7P[Y1&lt;Z&#039;\P+=2!E_&amp;QSM9.M&amp;_.@_06=N,X&gt;&#039;/_THIYR&quot;/M
MT&lt;&#039;KXJ&#039;S^ZPV&lt;;X+;S,/C&gt;[#&gt;&gt;P&lt;I#EOJY#C8HY\2G[:O8%N:)5?;8`Z67GK
MY&#039;NA77W]&quot;9!GT!=^!A&#039;ZPMXG4/Z`WG&amp;B&lt;./WT&quot;?^&quot;M]#GW@;8B&lt;K9X-WT#]^
M#MV@?]R(J+&#039;R+Q&#039;/8N7&amp;P,^YK#P.W:#O.Q81^KXFQ`M%?-P/]*6WHQOTI1]!
M_!0K+T;\+.-[N%DQT&lt;_%+8N?MP#ZUCS&lt;S^M4&#039;!.!.O\FSBLT6GE^#@F&gt;W9%D
MSW&#039;&gt;FMY0#O9&amp;#^HEMICKB[NZD\?G40\U7R&quot;[D_PQ2UZ!?MI9TT7&lt;GW5\/@&#039;H
M9H[/G_D&quot;ZEM-XT`G7/]&quot;QPGY-@@S:3&amp;W6W9MN._X/(Y?!W%LCS==Q/=2!?TC
M&quot;&gt;$6@NZ#WY7A?D!/&#039;L;S1?Y&quot;&gt;L7C\Q,I/9[W32?D&gt;;J;3OSKTOU[:R!.Z6*:
MV_^:--GD_&#039;O/BS2Q?;1,GU56X^S1?1#?AAV)YX)T6\&#039;O&quot;\.FVPKISA]X[?D@
MW9:_+EUK&lt;OYW$(:O!2Q^WEP&amp;LASS,&amp;(XJ#N^OJ=X8OZ9YX=^BUK=&#039;W&amp;9!&amp;VE
M`_H&quot;[-]0SLV?FKB&gt;S[U!^%?;1&#039;MX&lt;4O4OKF\OSQ1#N7HY3.C^\?/[\/U!+S-
M%2?GIX$_[.^2C:RO9GU4L.\(RI/&lt;9+Z&gt;*)`G7WT#Y-(2T?^AWLSW]1YF&#039;P@N
MXR#]./27T+R!&#039;L4]70N2`SQ.2#^([PMO&quot;+LXW+&gt;_?M6O^E6_ZE?5-?&gt;B2^:[
M64&lt;U)&lt;E-GKP0&#039;QTCK3FN:L/C6&#039;;AC=&lt;D4ZED6DH9W&#039;\J=5;*/$N1*\.G==N3
M&#039;&quot;_%`U2XI_QTVC-E&lt;+\.&#039;[/9E&quot;IKJGWRXK&#039;BO&gt;/ICJ.,_#Z==30SZ\HCOG&lt;U
M*:O:^DCO4RE/,GW?&amp;,O&quot;9UN2)&amp;4D_UG)E4PG+07^?4EULF9*#IY=6384/:4%
MSXXA&gt;Y(FA&lt;^^EDTKKAGZES19U92L%SP;IFOXFL;]7^M]:&gt;&amp;7G1NOO&quot;;KW?&quot;1
M6=[&quot;J^=]Z;HD&gt;-*4^5+*MA5=2@M&quot;QAB;L&gt;^;#^QZXX6;/[GN[_[93;_^J;W?
M^$9?TWUC?SKU&quot;V&gt;,^?DW]SW8&gt;.$7[VS]Q:\N_]&#039;U.W__Q?OF37SCH6&lt;V;/OV
M&#039;^[8&gt;&gt;\/?G_&quot;$W.^_?+KF__8&lt;\_Z#7]8&gt;^\)ESYZUWG?:?WSVO/&gt;^(\SQCQQ
MVKS3_B6W\P]KU0&gt;^^-US&quot;F?W?V+\`T9ZY]0/[K[&lt;OO^&lt;\KL7Y-9[XY8?\_;B
MLW\]&lt;]_/EMW\BP?7-CQY\H6-!R9_?/T5+4\\^-.;)]R?N*U4/&#039;W#(Q/F_O&#039;%
M^?_^XY]?_;M+NH]^^2&gt;+EW[JG$4SBR\]^`]7%5Z[^NP;_^V6&lt;R]&gt;=FWQ\D=&gt;
MNW][_@L_?VKQ&quot;8?/?FO_8P&lt;[?JY.G=CS\,`;FVZ+G?N11P?&amp;?&#039;IJCY+]]3W+
M;MXPJ_O]ZY8?=?//GGZI`&lt;B0J.0K2?5E5U%.7HQ/GNJH.K`:KT9!][0DVVHZ
M%=:;;QJZK:JBVM.JFX)Z-,63DI+DK*LZXDF5?=65_=3)UXVM2,\T4DI:]AS@
MFS,J?F.#]X[NRKKM^N`6.&#039;-WS_!36&lt;7F.1/M1/52*4,.GJ64G]*TM!KRIZ;)
MFN^9(;_(J:R;-0SB5SUEV*YF2B&amp;_ZHII2H82M!\_JZK0;F5!EBK?E!]9\E*F
MK`L/63GKN%G3$%GF=#*\M*]+V9KWHO&amp;D&#039;2B,0_%]3EI\\N*S^+^3LU&lt;DB=_3
M*&lt;]UC&amp;1$/NXNIVTHA&gt;&lt;&amp;Y&lt;H:IIUU?&quot;EY&lt;E:(&#039;\55-&quot;-%CU[:2?MI10_&gt;ZC;0
MWM0H4IZ.[Z&lt;\G&lt;N-JG1&lt;SY4&lt;R0C;HR:IFFO+SG\W&#039;&lt;&gt;37&lt;?4O1$&quot;5$=G.BE-
M]Y4T/:8EQ39`P-&quot;C8:C0^I4L/&quot;9YU&amp;Y6-15%&amp;3[QH)RJDO:];`T]W;0-`MO0
M0S[QTE`YIOS?IB&gt;T`5V21@KPWRPGKP$WY6BR9(]83)%_-RL;?EH:6DY%-Z&amp;M
M^NFP/E)9V=?T4+YFLZ:6SKK*WRK?NFK(FFR&#039;]&gt;`Y=M9SM3!_BF+Z3E8+^=Y,
M9:6T9T?]D2OIT&amp;2RP7-:&lt;]64YOC!LZKH65WWP_[(!`9/&amp;Q$]9,&gt;PH8MSAM(-
M&#039;$W%1^:J=C&gt;@;[)E.SW47;5]U_95.XQ7DWS/]T!T)(&gt;VMV15NS;3;EI2Y:&#039;Q
M.9ZOJ[X9M#O;3^E`3&gt;6OJHBAE)&lt;\0THKJ;^VG53E3P?E0-/T&amp;CDA&amp;ZIB9G7W
M_U;^*OB[*G^.E,[*7ACU?RD??X%A_U*V!&#039;^F-&lt;_0I+&quot;_@0SX:4]60KF2SJ:S
M%?J+XVI:2E-&quot;^9HUY7364&quot;-YJTFR)#MAOYNV32TKR&gt;%[$SH4&#039;_@JE#NRG];3
M&lt;LC_CF?[ANN$Z8-&gt;JFNR&amp;89/@SS(*DH-OQFJ#G)?K^%K:#Y2VDG5RA5/]EW%
M#M.5%&lt;_U-;&gt;F&#039;?FV;:NZYM:FYZBV(&gt;LU[&lt;CQ?=EV0GD@FP;TQ]@.%E&gt;W3]!&amp;
M&#039;#T;R@5-]7S-=#1H;YPL6=U6)`&gt;;3Y*=P+[&quot;GASF+\6^SY&amp;%+I&gt;Q:&gt;PVMG68
M/XT]S)&amp;%+E&gt;P2&gt;Q*]J-A_DYGRSFRT.5&quot;GF]I,?Q+C#YJ_+$36]JFG-C^H5,Z
M/P)5:TZ?T7W&gt;[(LN_N2\3W_V&quot;A9O&amp;-TX=OPQ$R8VM[9-GGIBLN-#&#039;SZU\XPS
M@1,UXZSIYS*VC?\A/D/WP5\3.YKC9&gt;P3%?24LZFTK@Q#3\$OON+8AA+J3[XB
M.XZLA/)1=57?U&lt;T:.6A[JF;ZME;3K^J&gt;K?FZ.=3=U$&amp;=U(P:_M`AN93AU_&quot;&#039;
M:_II1T_5R!T;U&#039;^PE6KR`UH+\%FJII]/^88BZVB(#&gt;$S0P:%RO.&#039;NFLJO`%:
MU\1C@NJF&amp;37M!NP;/^76]A-R*NV&quot;&#039;ER3;M8&amp;&gt;TO+UL1O^JZ3LFO;B6F#F/7-
MFG:9U7Q34O6:_*1L,!A]LX8.4.U93;=KVINN.[;I9;,U[HYC&gt;(Y90Q]3&lt;11%
MEVORHYEID#)^3?Q&gt;&quot;O0_2?%JXM%DSP`%MI;.$+]FJS5T]DS7U-P:.ILZ=)^R
M5),?W_$\W&lt;S6RJV4XGJ*5%N_MN]IIAFV`\E,9T%0U]!%4CT]Y&gt;H^:?0N&quot;%,&#039;
MZDBH^R,]5?1C:=6#WCY;4P[&#039;563?T6OR:Z9!&amp;]+LFOI4H&quot;,!5::F&#039;)+KZI*1
MK:D&#039;.ZT9_C#^4VE?@@ZDEA]!/Y8\LR8_H.:&quot;]C4,_310$[24$]AE6MI4/&lt;T.
MY0AHV[KL&amp;C7Q&amp;4!SW_0]HJ&lt;*W;$,-AWWQMN1Y_NZZX?]H0/\IQF&gt;&#039;J0#?.%!
M+U^KOQF^(MEVK7V34I2L8]?X5S1%,M24$&lt;8K@]&amp;9=93@&amp;;0&amp;4)3EVOI1=#?K
MF37\:F:-%/2I-7ROIQ0UZSLU_N5L%@BDA?0#F0):EQ_*;57WL6%HP;B+8?N@
M)&lt;BDR-@&gt;B&amp;G5H\[/E34%Y%Z8ALA/&quot;D0VRNNL$%LI*07FI.#45-;3P8@VQ9,D
M@&lt;FJ.L3%JN&amp;DTY+IB2&gt;0+&amp;E;2@&#039;Y`WJ&quot;5:_)M711LX;F0:[&quot;^E=3BI=R0GX`
MT&gt;ZF?=&lt;0Q0&#039;9#7Z%%D_M)*M[D*U:.9`%&gt;]2HT*=D50,C)=*70!J;OI\=B9\\
M(RVYLA_JZ;:&lt;M4%G&lt;X&gt;.N]F.[&quot;E9PXG&amp;$1375*-Q+*&quot;XK(+1&amp;#Z#S6%`)Q3J
M=:H)W:8&gt;ZH7`&lt;F;:B.P8X&amp;I(UPGCTWW;`=*&amp;^I3BZ4Y6-L/PGH&#039;]K1[2$XAE
M0II:D%]@04_*&amp;E+P#%JIE,U&amp;&gt;B)T@[[G:,I(=`G\A_&#039;)*1&quot;X62-XSH(-I6A&gt;
M2#=32YFV9XP8GP]*KVGJH7])4WS#D!3A&#039;3@&amp;%`O&#039;C&gt;K;577&#039;@ZH+Z]])FZZA
M.:&amp;&lt;\&quot;10+!0[E&quot;_05F53&quot;?G`MAW7`,4ZRK]C0(L-RZ]EH=/RI#`_KI%VY90:
MT=MQ?,=4TX+--04Z,]L/1L=T&amp;ZQ,`]L.\4@3.Y6UL&amp;4C_,UBL^&#039;_G!&#039;?+V-=
M[%QV-FAI&lt;X_@YV_W=QF[_/]H?#?&quot;[V9V&quot;Y-2:5E1-=TPH;*RGD^Z\`4M%[1-
MN&gt;&quot;&quot;$SL^+-3A&quot;^B:3KHPR7U349UTR.\IUP&#039;S,Z6&amp;_)X&quot;,Q`D9&quot;@GTJ!AN+8=
MOM=LD(IZZ!_:O2*94BJ,#V2*[+IR*&quot;]=!&lt;2EZX?Q@74H@&gt;0.PVM@A9G9;!B_
M*JN^IX;\ZH).J+IZV&#039;X,)9V57#_TGU5]6TFG0GYW9$W5%3\LGZP8NJ0+_T=5
M]A-IE`).F$]9@^[/,&lt;)X#!]Z=#5JQ]`10(]CAN]34MHPO:B&lt;:;!-H1Q&gt;6&quot;X_
M!?JF%]+%2WF&gt;G)9#NLF2JWFR&#039;M(53&quot;Y3-N60+FE=SH*:%CZ;&lt;E;-`B&amp;#9]TW
M-1`&lt;87C;3NN2E@KS8Z&lt;-23;4,#T0:F#R9D/_/AJ\IA32&amp;?1.75$B&gt;D#2:575
MPO*#4B794CK,CZ,9;LK60SJ#-6S[KA?6DYZR)&lt;]QP_`J:H6N$&gt;9?`JD`]1*E
M#^8JZ!.A_[2J2+X2E5?6?-!RW=&quot;_#T)4245\8^J0(G1_8?W8H/%X7OAL&gt;`8H
M2&#039;Y8?Y*&lt;2J75;)B&gt;D])QR&quot;.L+]]-J7I:&quot;&lt;L#1K(JN69(GVS:=,#&quot;B&lt;)[T*W9
M9IA?7P?)ZT3^4]&quot;H5##UP_K0TH8!O[#\H)2D*_)KZX9CFNFH7?JHSD?M1K)!
MJ33]\+V?3&gt;%X&gt;SH,;WA94&amp;W#\NJ.ZVA@_(;Y!WW+D&quot;/^];24!^VZHC[`;M$\
M/&gt;1_%0=]G)&quot;_9=#&gt;%5N/VC7HW0Y421A&gt;`J5$RT;E3:4&lt;0S)#^F;UK*H8:IB^
M!-H(L%3(GRIT&#039;$K6C^@/#.&amp;`(1+Q5]8S[%28GIX&amp;BT#1P_R&quot;+@Z*3U0&gt;8#])
M@PA&quot;?O%DH&amp;Z%?P/#1W)/5J!GE-WP&amp;;1:1P5-(JQO7?&gt;`&#039;R+^=\R4ZMD1?^!D
MH2N&#039;S[X,FH^4&quot;LOGIK,NR-VPOO1L5O)!EPOIX?JFIZGA&gt;\U1LZX&quot;&gt;G^0/UE2
MTW+4WGPY);E2Q-^@:LJ*[D?R#2&gt;:[(C?TSX./*9&quot;^JB@:$IVU%Y=/PU-U(CJ
MPS#2&#039;E1*V)[`8%0J^,&lt;`;@(S,:2GKI@0?SK*/S&quot;G:Z;#\J6\M&amp;S+;LA/T+1P
M?C/T+Z=&lt;7TLI87R^I)DIS0OI[2N@=SA2U)Y!.&quot;NF&#039;,8/I7=ER$!`K[3K917-
M,8-G3_+!_I+#\ADR2&#039;M?#^O;,:`3]&amp;PO\*]!AVH:2LA_/G1DFNI%]&#039;-=UTF+
M^ECRE2]\:9$7H-&quot;E\+)!`(?QIW0/)$H8OVV`.&#039;!D-WC65;33L]+8).4?;&quot;@3
MC/&#039;@&amp;7@)1(IA!L\I6?9D.Q6^][RTJOEN&amp;)^3`FT=.@A,_Z,+G2NO_6B0&amp;WS^
MRL)%WA&lt;_REVONV[^=3=\R?46+I1IUG&gt;D]V&#039;!.#T&lt;(+&lt;N1_+9!&#039;GA1?5A2-!:
MU:@^/0W\NTI%_VNZ(.&quot;C_E&amp;74L&quot;?4?V@V:`8$3_I+@Y[AOYUU[5U6XOZ/S2$
M[$B&gt;@W&amp;NI!PI]`_=O^E*:A1_&amp;CI@U0[E&amp;;26-(BSL#V`O&gt;2`2*OH;T`8@@D:
MT!?,Z93J1W99UD\;H)ME(SL-&amp;IAG&gt;%%Y?-\VI3!]Q?%ML.$CO0GZ#T=50_[6
M%$&lt;&quot;U3JBIYH&amp;@]&amp;.YO-!G,I&amp;-&#039;XN22G5`9$9CE=*GJYK1D1OD%6^$O&amp;_XX(X
M2T7T`U:S)2W2Z]*F8:8J[!A0#E205U&#039;[!=^@&quot;(;M!W14&#039;Q22D%[`W3*4*6R_
MJFN&quot;Z1VU7Q&quot;WOIK-1O(0.C`O&amp;^E/J13()\\.^2NK^&quot;8H=J$\--,@,%)1^]4T
M-&quot;0CO16T/=GU*_0=5U7!DC&#039;&quot;]JVYN@L2(J2&#039;:4&quot;%1?7A@7QWE4@O]3T)Q%%4
M?AU4&lt;E&quot;Y(GT%I2&#039;TZ.%[T_5U+](?LR`P);6BOJ&amp;MIK(1/:#JLCC&quot;$J4&#039;#%S1
M7Z1`6INR&#039;.E;0%LG&#039;&gt;5?3ZNN85?P+RB4FNY%\DNSU;0=]6\I&#039;01@6@WI;4,!
MP3(/PYN@OCIZI#^J8*&gt;Z1D7^%`GZ3RUL/X;KVS88IR%_9!U33^EA?!(4SO6B
M_A.L&gt;-VOD*&gt;@2@(_NF%^P+OLN9%^:&amp;95TTA&#039;_;&lt;&#039;W2G0*&amp;S?T-V8NB9%_3%H
MZUD_XE_0=_0T:)!A?)IA9/U(/\_:62!(I#_X61S`-\-GW752CASI-XJ2DCS3
M#O.#0T&gt;&amp;$]DI&quot;K`SZ,N1?&#039;-!&amp;0-#.Z1_UH`&gt;3(O&amp;(1P@7U:.]!OH&#039;64UTN&gt;A
M:X/^U(_J#\P%S9&lt;B^\%/.V&quot;^1/:&quot;+6456\1&#039;ZZ8&quot;\4[]FVF`816U#\4$!4Q7
M@O;A9%.^ED[YP3/H2[(#?7B8GBL9NAOI8V9:D].@%(?\Y*0\T`&lt;C_&lt;LQTF:V
M0CXX$+T3U3\PEYV6W$C&gt;&amp;9X*&quot;GBD?[G8X;N1OHSK5621_LD+1;D^&gt;O+&quot;,Q&quot;]
M:]+S%RZR%WE4WI.OX\[@GJIRQ^&lt;;O&quot;]&lt;&quot;9W=#?A\P]77P?L;KKSV&quot;Q&amp;=($DG
M;1MAOL$,1TO&lt;9?6K?M6O^E6_ZE?]JE_UJW[5K_I5O^I7_:I?]:M^U:_Z5;_J
M5_VJ7_6KYEK&lt;==SZOW4&gt;ZE?]JE_UJW[5K_I5O^I7_:I?]:M^U:_Z5;_J5_VJ
M7_6K?M6O^E6_ZE?]JE_UJW[5K_KUOW&lt;EUM?G_^M7_:I?]:M^U:_Z5;_J5_VJ
M7_6K?M6O_]&gt;O1*G:_D\4Q7/7&amp;%9DS/I;9.EO&gt;D&amp;Y&lt;XU0;BQ_X_^&#039;Y:]?]:M^
MU:_Z5;_J5_VJ7_6K?M6O^O7_YH7V+N/V;I+0(LP0Y@@+A$7&quot;$B%;2N$)+&lt;(,
M88ZP0%@D+!&amp;R912&gt;T&quot;+,$.8(&quot;X1%PA(ANY7&quot;$UJ$&amp;&lt;(&lt;88&amp;P2%@B9+=1&gt;$*+
M,$.8(RP0%@E+A.QV&quot;D]H$68(&lt;X0%PB)AB9#]/84GM`@SA#G&quot;`F&amp;1L$3(OD&#039;A
M&quot;2W&quot;#&amp;&amp;.L$!8)&quot;P1LN44GM`BS!#F&quot;`N$1&lt;(2(?LFA2&gt;T&quot;#.$.&lt;(&quot;89&amp;P1,B^
M1&gt;$)+&lt;(,88ZP0%@D+!&amp;R%12&gt;T&quot;+,$.8(&quot;X1%PA(ANX/&quot;$UJ$&amp;&lt;(&lt;88&amp;P2%@B
M9-^F\(06888P1U@@+!*6&quot;-F=%)[0(LP0Y@@+A$7&quot;$B&#039;[#H4GM`@SA#G&quot;`F&amp;1
ML$3(5E)X0HLP0Y@C+!`6&quot;4N$+$_A&quot;2W&quot;#&amp;&amp;.L$!8)&quot;P1LAX*3V@19@ASA`7&quot;
M(F&amp;)D-U%X0DMP@QACK!`6&quot;0L$;)5%)[0(LP0Y@@+A$7&quot;$B&#039;[+H4GM`@SA#G&quot;
M`F&amp;1L$3([J;PA!9AAC!&#039;6&quot;`L$I8(V6H*3V@19@ASA`7&quot;(F&amp;)D-U#X0DMP@QA
MCK!`6&quot;0L$;)_H/&quot;$%F&amp;&amp;,$=8(&quot;P2E@C9&amp;@I/:!%F&quot;&#039;.$!&lt;(B88F0?8_&quot;$UJ$
M&amp;&lt;(&lt;88&amp;P2%@B9/=2&gt;$*+,$.8(RP0%@E+A.S[%)[0(LP0Y@@+A$7&quot;$B&#039;[&#039;Q2&gt;
MT&quot;+,$.8(&quot;X1%PA(A6TOA&quot;2W&quot;#&amp;&amp;.L$!8)&quot;P1L@*%)[0(,X0YP@)AD;!$R-91
M&gt;$*+,$.8(RP0%@E+A.P^&quot;D]H$68(&lt;X0%PB)AB9#=3^$)+&lt;(,88ZP0%@D+!&amp;R
M&#039;U!X0HLP0Y@C+!`6&quot;4N$[`$*3V@19@ASA`7&quot;(F&amp;)D/V0PA-:A!G&quot;&#039;&amp;&amp;!L$A8
M(F0/4GA&quot;BS!#F&quot;,L$!8)2X3L(0I/:!%F&quot;&#039;.$!&lt;(B88D0#XOGX0DMP@QACK!`
M6&quot;0L$;)&gt;&quot;D]H$68(&lt;X0%PB)AB9`]3.$)+&lt;(,88ZP0%@D+!&amp;R?Z3PA!9AAC!&#039;
M6&quot;`L$I8(V3]1&gt;$*+,$.8(RP0%@E+A.S&#039;%)[0(LP0Y@@+A$7&quot;$B&#039;[9PI/:!%F
M&quot;&#039;.$!&lt;(B88EC8DLPWY=&lt;3^$),X0YP@)AD;!$R/Z%TB&gt;T&quot;#.$.&lt;(&quot;89&amp;P1,C^
M%WMO&#039;MS8D&gt;?Y85HUPQ9V;&#039;?/]$ZW[;&amp;=+=4,P2H&quot;Q$6RJJ3J`$B&quot;+(QX-0$6
M2^KNP?D(8@I7XP$%LEN*@-&gt;R.;XOV36^X;7L&amp;M_M7&gt;UR]D;$*J+V&#039;\?Z#TW4
M_HEP**+FS_U#$;7_.-;YR_R^&quot;W@XR*XNJ7?R&amp;U)]B/&lt;R?WGGR\R7[[V_`O]@
M#,R&quot;7;`&#039;]L$!Z/FK\`_&amp;P&quot;S8!7M@&#039;QR`GD_@&#039;XR!6;`+]L`^.``]?PW^P1B8
M!;M@#^R#`]#SU^$?C(%9L`OVP#XX`#T7\`_&amp;P&quot;S8!7M@&#039;QR`GC^!?S`&amp;9L$N
MV`/[X`#T_`WX!V-@%NR&quot;/;`/#D#/WX1_,`9FP2[8`_O@`/3\+?@&#039;8V`6[((]
ML`\.0,_?AG\P!F;!+M@#^^``]/P=^`=C8!;L@CVP#PY`S]^%?S`&amp;9L$NV`/[
MX`#T_#WX!V-@%NR&quot;/;`/#@37YSRB&#039;:]_&amp;YP&#039;5\$M\`@L@1WP&#039;&#039;P,/@$OP*?@
M,_`Y^`*&lt;^Q6$#\Z#J^`6&gt;`26P`YX#CX&amp;GX`7X%/P&amp;?@&lt;?`&#039;.?0WA@_/@*K@%
M&#039;H$EL`.&gt;@X_!)^`%^!1\!CX&#039;7X!SKR%\&lt;!Y&lt;!;?`([`$=L!S\#&#039;X!+P`GX+/
MP.?@&quot;W#N&amp;L(&#039;Y\%5&lt;`L\`DM@!SP&#039;&#039;X-/P`OP*?@,?`Z^`.=^%&gt;&amp;#\^`JN`4&gt;
M@26P`YZ#C\$GX`7X%&#039;P&amp;/@=?@&#039;._AO#!&gt;7`5W`*/P!+8`&lt;_!Q^`3\`)\&quot;CX#
MGX,OP+DYA`_.@ZO@%G@$EL`.&gt;`X^!I^`%^!3\!GX&#039;&#039;P!SGT=X8/SX&quot;JX!1Z!
M);`#GH./P2?@!?@4?`8^!U^`&lt;Z\C?&#039;`&gt;7`6WP&quot;.P!&#039;;`&lt;_`Q^`2\`)^&quot;S\#G
MX`MPSHOPP7EP%=P&quot;C\`2V`&#039;/P&lt;?@$_`&quot;?`H^`Y^#+\&quot;YOX#PP7EP%=P&quot;C\`2
MV`&#039;/P&lt;?@$_`&quot;?`H^`Y^#+\&quot;Y7T?XX#RX&quot;FZ!1V`)[(#GX&amp;/P&quot;7@!/@6?@&lt;_!
M%^#&lt;/X?PP7EP%=P&quot;C\`2V`&#039;/P&lt;?@$_`&quot;?`H^`Y^#+\&quot;Y?Q[A@_/@*K@%&#039;H$E
ML`.&gt;@X_!)^`%^!1\!CX&#039;7X!S_P+&quot;!^?!57`+/`)+8`&lt;\!Q^#3\`+\&quot;GX#&#039;P.
MO@#GOO$S&amp;O___6^#\^`JN`4&gt;@26P`YZ#C\$GX`7X%&#039;P&amp;/@=?@&#039;/?1/C@/+@*
M;GU3Q//O&#039;X&amp;E;R+]X#GX&amp;&#039;P&quot;7H!/P6?@&lt;_`%./&lt;;R&#039;]P&#039;EP%M\`CL`1VP&#039;/P
M,?@$O`&quot;?@L_`Y^`+&lt;.XW$3XX#ZZ&quot;6^`16`([X#GX&amp;&#039;P&quot;7H!/P6?@&lt;_`%./&lt;M
MA/\MD=_K\^`JN`4&gt;@26P`YZ#C\$GX`7X%&#039;P&amp;/@=?@&#039;-_4?+;X#RX&quot;FZ!1V`)
M[(#GX&amp;/P&quot;7@!/@6?@&lt;_!%^#&lt;;R%\&lt;!Y&lt;!;?`([`$=L!S\#&#039;X!+P`GX+/P.?@
M&quot;W#NVP@?G`=7P2WP&quot;&quot;R!&#039;?`&lt;?`P^`2_`I^`S\#GX`IS[#L(&#039;Y\%5&lt;`L\`DM@
M!SP&#039;&#039;X-/P`OP*?@,?`Z^`.?^180/SH.KX!9X!);`#G@./@:?@!?@4_`9^!Q\
M`&lt;[]2P@?G`=7P2WP&quot;&quot;R!&#039;?`&lt;?`P^`2_`I^`S\#GX`IS[EQ$^.`^N@EO@$5@&quot;
M.^`Y^!A\`EZ`3\%GX&#039;/P!3CWVP@?G`=7P2WP&quot;&quot;R!&#039;?`&lt;?`P^`2_`I^`S\#GX
M`IS[5Q`^.`^N@EO@$5@&quot;.^`Y^!A\`EZ`3\%GX&#039;/P!3CWKR)\&lt;!Y&lt;!;?`([`$
M=L!S\#&#039;X!+P`GX+/P.?@&quot;W#N7T/XX#RX&quot;FZ!1V`)[(#GX&amp;/P&quot;7@!/@6?@&lt;_!
M%Y)*2DI*2E\-O?:/U?M8E)24E)24E)24E)24E%Z^MJ[=^RVZ_[/U+?&quot;ZI)*2
MDI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2
MDI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2
MDI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2
MDI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI*2DI+25U&amp;O]7_C9X[?_UC^
M_O^N&gt;?I?2H2^9/%T=[\NV?_ZEQT9)24E)24E)24E)24E)24E)24E)24E)24E
M)24E)26E7Q*]-G#N/U!24GIU^K^O&gt;;[A\&lt;0X&amp;1@#LV`7[(%]&lt;`!ZO@G_8`S,
M@EVP!_;!`&gt;CY#?@&#039;8V`6[((]L`\.0,]OPC\8`[-@%^R!?7``&gt;KX%_V`,S()=
ML`?VP0&#039;H^8OP#\;`+-@%&gt;V`?&#039;(&quot;&gt;WX)_,`9FP2[8`_O@`/1\&amp;_[!&amp;)@%NV`/
M[(,#P3_O&gt;NW_4=&lt;?)24E)24EI3]?^H?7/+]-X\!_^&quot;WP.A@%-\`T6`1;X(?@
M1^#&#039;X&quot;?@I^!GX.?@%^&quot;U7T&#039;XX&#039;4P&quot;FZ`:;`(ML`/P8_`C\%/P$_!S\#/P2_`
M:U]#^.!U,`IN@&amp;FP&quot;+;`#\&amp;/P(_!3\!/P&lt;_`S\$OP&amp;NO(7SP.A@%-\`T6`1;
MX(?@1^#&#039;X&quot;?@I^!GX.?@%^&quot;U:P@?O`Y&amp;P0TP#1;!%O@A^!&#039;X,?@)^&quot;GX&amp;?@Y
M^`5X[5&lt;1/G@=C((;8!HL@BWP0_`C\&amp;/P$_!3\#/P&lt;_`+\-JO(7SP.A@%-\`T
M6`1;X(?@1^#&#039;X&quot;?@I^!GX.?@%^&quot;U.80/7@&gt;CX`:8!HM@&quot;_P0_`C\&amp;/P$_!3\
M#/P&lt;_$)224E)24E)24E)24GISXO^Z;6O?4WP6^!U,`IN@&amp;FP&quot;+;`#\&amp;/P(_!
M3\!/P&lt;_`S\$OP&amp;NO(7SP.A@%-\`T6`1;X(?@1^#&#039;X&quot;?@I^!GX.?@%^&quot;U:P@?
MO`Y&amp;P0TP#1;!%O@A^!&#039;X,?@)^&quot;GX&amp;?@Y^`5X[5&lt;1/G@=C((;8!HL@BWP0_`C
M\&amp;/P$_!3\#/P&lt;_`+\-JO(7SP.A@%-\`T6`1;X(?@1^#&#039;X&quot;?@I^!GX.?@%Y)*
M2E^F_NFU7T?]!Z^#47`#3(-%L/7KJOXJ*2DI*2DI*?T2BMYW)\G`&amp;)@%NV`/
M[(,#T/.OPS\8`[-@%^R!?7``&gt;OX2_(,Q,`MVP1[8!P&gt;@Y]^`?S`&amp;9L$NV`/[
MX`#T?`C_8`S,@EVP!_;!`&gt;CY-^$?C(%9L`OVP#XX`#W_%OR#,3`+=L$&gt;V`&lt;&#039;
MH.&lt;&lt;_L$8F`6[8`_L@P/0\X?P#\;`+-@%&gt;V`?&#039;(&quot;&gt;?QO^P1B8!;M@#^R#`]#S
M[\`_&amp;`.S8!?L@7UP`&#039;K^7?@&#039;8V`6[((]L`\.0,^_!_]@#,R&quot;7;`&#039;]L$!Z/GW
MX1^,@5FP&quot;_;`/C@`/?\!_(,Q,`MVP1[8!P&gt;@YS^$?S`&amp;9L$NV`/[X`#T_$?P
M#\;`+-@%&gt;V`?&#039;(&quot;&gt;_QC^P1B8!;M@#^R#`]#SG\`_&amp;`.S8!?L@7UP`&#039;K^4_@&#039;
M8V`6[((]L`\.0,]&#039;\`_&amp;P&quot;S8!7M@&#039;QR`GO\,_L$8F`6[8`_L@P/0\Y_#/Q@#
MLV`7[(%]&lt;`!Z&#039;L,_&amp;`.S8!?L@7UP`&#039;K^&quot;/[!&amp;)@%NV`/[(,#T/-?P#\8`[-@
M%^R!?7``&gt;OY+^`=C8!;L@CVP#PY`SW\%_V`,S()=L`?VP0&#039;H^:_A&#039;XR!6;`+
M]L`^.``]_PW\@S$P&quot;W;!&#039;M@&#039;!Z#GOX5_,`9FP2[8`_O@`/3\=_`/QL`LV`5[
M8!\&lt;@)X&gt;_(,Q,`MVP1[8!P&gt;@Y[^&#039;?S`&amp;9L$NV`/[X`#T_&amp;7X!V-@%NR&quot;/;`/
M#D#/_P#_8`S,@EVP!_;!`&gt;CY&amp;/[!&amp;)@%NV`/[(,#T/,_PC\8`[-@%^R!?7``
M&gt;OXG^`=C8!;L@CVP#PY`SQ/X!V-@%NR&quot;/;`/#D#/&#039;\,_&amp;`.S8!?L@7UP`&#039;K^
M9_@&#039;8V`6[((]L`\.0,__`O]@#,R&quot;7;`&#039;]L$!Z/E?X1^,@5FP&quot;_;`/C@`/?\;
M_(,Q,`MVP1[8!P&gt;@YW^&#039;?S`&amp;9L$NV`/[X`#T_!_P#\;`+-@%&gt;V`?&#039;(&quot;&gt;_Q/^
MP1B8!;M@#^R#`]&quot;#]WTS,`9FP2[8`_O@P&#039;A/^/\%_V`,S()=L`?VP0&#039;H^2OP
M#\;`+-@%&gt;V`?&#039;(&quot;&gt;OPK_8`S,@EVP!_;!`&gt;CY!/[!&amp;)@%NV`/[(,#T//7X!^,
M@5FP&quot;_;`/C@`/7\=_L$8F`6[8`_L@P/0&lt;P&#039;_8`S,@EVP!_;!`&gt;CY$_@&#039;8V`6
M[((]L`\.0,_?@&#039;\P!F;!+M@#^^``]/Q-^`=C8!;L@CVP#PY`S]^&quot;?S`&amp;9L$N
MV`/[X`#T_&amp;WX!V-@%NR&quot;/;`/#D#/WX%_,`9FP2[8`_O@`/3\7?@&#039;8V`6[((]
ML`\.0,_?@W\P!F;!+M@#^^!`4$E)24E)24E)24E)24E)24E)24E)24E)24E)
M24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)
M24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)
M24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)
M24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)24E)
M24E)24E)24E)24E)24E)Z67H5__R=_YT\QO?^=-?8=_YTWG^_Y&lt;=GZ^*3AY\
M\V?$4_`/P3\&quot;_QC\$_`?@/\(_#/PGX!??U?R.Z`/O`7&gt;`Q^`)^`I^(?@&#039;X%_
M#/X)^`_`?P3^&amp;?A/P*^_A_!!&#039;WAK#.^!#\!KR)=?`;\V]/LKJX!^HK&gt;:K5S&gt;
M$VAIIZW`B98KRC\]@6:]F&amp;OE/`&#039;Y;U[7?_[@_H)&#039;YLFO&amp;0&gt;^\8V?2&lt;J?_2&#039;W
M7Q_Z_5O#_K\#_]^1/__LC:$&lt;&#039;S+PV_!OE(\G)LO/$Y/^^K\[.?SK\/^:&lt;:`+
M_UWI?Y#_FM,#&lt;_Z\`9N&amp;_\&#039;_^YL_DY1&#039;!J\YW0^&#039;[PC;)L/_DHM[I:NK^;#A
MUZIM_W&#039;[)S_QEW*5&gt;E-;.CEK:,U&#039;9;W&gt;].=S3&lt;U?U5JYBO^XF:MJG7KSX=*C
M:C50N$080:Z5E2@QM+H&lt;M).T&#039;(V&amp;/*&#039;(&quot;O\CPL\L&gt;X+A\#(_Q(*_L%3;U-9;
MN29CGERS/+&#039;Y3SO_2ZHWR[5&quot;I5W4V!O&#039;34WC&gt;5$KEFNEP,D;7NM,JUZOZ,Y#
M#QO-&lt;JUU[#Q(]&lt;)QH&#039;J6*6K&#039;PJO7RWOA=J&#039;%&gt;(7+E&amp;OE5J;%?NIE7&amp;UN*!+F
M/ZNY4KGPEGEL)&lt;J//:KF*I5Z(4.%U!IS3JL5A\X(^]5JIE$:.5/,5&#039;,-EQ,_
MT9IU?CB3*Q:;0Z&lt;HQHU2*Y,OM[A?EY/%?&amp;7DI$@1G90G,GKY)]J0UPQ=A(:/
M:2X&#039;^9%F+E/5JO7FV5`$13&quot;.\RX!-4[.=(J#2]HRNKP&amp;CD1C^+`(J))KEC0$
M-.3CN%PM9&quot;@@MU#$29&gt;(\6A741@?L+=X&#039;&gt;$IT9HU5CCA33*C\_K$#SZJEXNL
M4&amp;^&lt;9?AO&#039;_U:\,J:L[3$&gt;%P*C3/?P3O[F?L[.YE4.GZ07F2_*_PN,O-P\KW$
MPG!-X*;IP&#039;&amp;]R7QE=I&lt;%WV)E]K;I9S.YG1`&gt;WV(W;Y874%E)-WPB?C&lt;6G,&amp;R
MFXP[NVL[+:,ACLO`/_!Z;1&#039;7M1;C8PX6G!B/M51JUF@(I_:H!(U@*6&quot;1C\4V
MSW!19[5\NY2IU$N.&#039;+7G#OT6(;2X%]YX?Q#^$3?YT^`&#039;R#AT`;XW?G#S1^R`
MCZIXOT$UG@G3C)N^\\/:&amp;PL3LGE[;PM)*]^\:4^:$6+P1X[\)#\;B;7#+&gt;F3
M4GJS;`1`$C&#039;*M&#039;E7$?3!QH(M&quot;YPY,&quot;WMYF]NQ59Y*3(WC!B^-3$G,I?*`Y&lt;,
MX$X=B3&lt;]C&quot;;=B&quot;3WPO^L:+6A#&quot;&quot;5CYGONX9#&gt;W&quot;CB9`!W6&amp;\;V7U8Y9O&#039;Q]K
M39D4NZ=\4\L]M`Y],*THK*BPFW&gt;&#039;,E84$3H`45*4@P7&gt;Q?O,DBC4B]JB/&#039;F#
M]_&amp;+MAZF7G?^&quot;CM_1IP_HQ071V=#W&gt;ZBV?TZ^R&#039;9%R[:&gt;D7[&gt;;V3:_#Q$ET\
MBN7F(EUBC#_E1257TIP^G!&gt;41?&amp;;^F?C&amp;H*::@ZX,L8UTU%?1Z^G!)F7]%=`
M7$]Y?:#&quot;3.XFTYF=^%9RW&gt;9`))KJF)$U&quot;YG,HQSOMNCX@MVA-LZE-NS4F3:&#039;
ME]]UNY&quot;:GJR+Z*@G&gt;^8X/-DNKM2L3L,TGD0U$XX&lt;XX=9DFH;5(Q-[\W@:8B&#039;
M8_=F&amp;W$XH^^L&#039;78?YDC$Z&lt;&amp;L/C:W]L&amp;)T[6MAIFN1X8+J`.)!^F#&gt;&amp;8G@&gt;O5
M.!_(S&quot;$?U$79*@3:A%L6X92S_HQWKHTZ=XXE$)?-Y,ZZ:^3-P&lt;6(0Q%GX=#L
M2HRVP,&lt;(Y&#039;G1%I_[\&lt;S&gt;YF8JP&lt;\%Y7\\3A]XO^P!^B]85YG_Y8XK@=0EPI@R
M_PN&#039;(RO#\[_H2D3-_UZ%9IR]+=WPLALLOKG-J*)H3=8IMT[XWY4*T\_TEE9E
MO!)5&lt;JURG5_CZM4JGT;JW,&lt;2][G$F^FC^D.-&amp;J?TUCK16(O/-0LY7?,&amp;2I5Z
M/E&lt;QFVB&amp;`LCP*N8-Y&quot;KE4HV%O2.G[HA&amp;??*H0&#039;A3CI^;6LN;V-W8/]A;]XUX
M6.#75(J)N`QD^#CLH&lt;YK.$^&amp;J.KDE$&gt;2)K^M&lt;H[&#039;C-E&lt;E&amp;NLP1M!K&lt;6^G]@Y
M-*.;R8BQ3V;8HA7K&lt;2YDY//-AR+RD9&#039;(C_.W8)1&quot;26MEJ!W:(M_4&quot;EKY$8^X
MD:U\\%&quot;OBO+B)&lt;$:E5R!GRS3$($U^9$,&#039;]!Q4V1ML]S4&gt;=J.]@XV:*1G+QM6
MUL5O*C@4*A_=!%A*T_ADO5P+%,20MLB[AW)%#XCR&#039;LX?([*C^6*&lt;D?E1X1T]
MURGO=^]:,&gt;2JUA^)$R&#039;&gt;(8O+KB/[HF.SSS!O9IO,SZ&amp;,HU*G890N\@H%W:JS
M&gt;JURQH/FEPB&gt;0$I_4ROQNBUJ!ADKU&#039;F)\,NN:YJMD*Q4NYR\XT@?3_B;COFD
M.,LO@$;JG2[XM&lt;V1$&lt;M3ZI$C*_C@9GQ&amp;%$[*E2+E@7;*KZ[L0=&quot;H!O2;/&lt;I5
MVNZI-HR.EK1QQEGS5\;&amp;V&#039;&quot;_\,_ZQ?&lt;KH*M&lt;_\T+PXQA3+G^!Y&gt;#RT/7_TAD
M5:W_OA*]63ZN\&lt;)DF9UW,QN)S53F7L;[)C]0KFF.8^9!/DQ&gt;2Z93+&#039;+;?DB.
MG&#039;D/?2QTRRC:H-?RF&gt;$3%=_I`O-98^Y3YK=\+]A&lt;/AIU&gt;=/NTG1J]!TU7CD7
MV`]%GQ)H\0K,Z,@B^YWC=JU`PY*W&lt;))[D(X=-IS^Q6Q&quot;^@_XB=XW&gt;9]4/F9+
M-YB17\@8,&lt;;YL@OQY]!5VG^^7N&gt;%,OL48$K[7PV&amp;A^__1((1-?Y_)7(=[EL&#039;
M&lt;[EFX827]&gt;3[/+R1:LUFN]&#039;RG_&quot;A6T5KRCL^&amp;`B$POQ/71.MD`7D0ML;N5/N
MPAQ&quot;-#6=CP,D[IAKY/Q&#039;N\$2VQ$:NQ4&gt;VL:)IQ$:)XJCF5:]D=$J$=M@2F\L
MDHL1.Z$9[(2D&#039;;TI[-`!IZT=7E\8-0&quot;6:U&#039;4I/.FCB&#039;&lt;&gt;KM)0\C$MEPKKC:,
MH5T\?K!^C_=DB&gt;V,X2L?T&#039;[,6&quot;@2&quot;LN1;KYB+9Q2&quot;#SP#,]6&amp;G#261;PDELK
M&gt;U(B6=II06N(K&#039;W$L[C&gt;%$-4D5@:KE/F^1+;81K#R6S(GS%&gt;?@N.03=/XUW#
MNRW][!%O_LB&quot;T%@/5N8[/$6$)S.R=`.&#039;`F;Y&lt;BW7/*/QI1Q3-K@5K2CN497Y
M2)1&amp;O+P:Z+8&lt;,6_^6-:2?&amp;!&gt;YK6+=].40AJ&lt;\TEH4XY.]9$)A9&#039;YJ?4#ROW,
MVMY&gt;.G,_OFV/MEXP8AUT#:&gt;I_;A=;FJ4I6&#039;7`.T#&gt;1\S@KPG@@QG#HZ8S/-Z
MTXP7_]_%9&gt;HHN0&gt;WB-J)B%I81FU\VM+;TH![ZEJ5&amp;8S&lt;3Z^/M_&amp;H98O&#039;.`N3
M#-C](XMOR#L&quot;-]C&amp;P=X^2^]1Q&lt;6AI0FYFMI/&#039;60V#_9V,CC&quot;WG&gt;&gt;V]G;2&amp;2H
M$0P=3^UG4KP)[CKR5V_H+F5?;-8;5$V-`00FD$87D;,2[SP!HUK%LBE^TTS&#039;
ML&#039;VD,?VDWN;SK)I&amp;BPQ\VE.@=9&amp;R;K9U:U8D&gt;D6Q@F&#039;TEU:`YES+/&#039;3&#039;&quot;*-L
M;R,AJ_X.UUW#??`T$LXO+]^.+(=N3RG&gt;T(3B#5DU3!C-YX^/H]%@(1@-CJ\U
M._&#039;D@:O-:J[L9C02+?*8A@I36X-[3(W68#,KNYH,GWOF\A4M4ZVVO595P`(6
M=5^\&lt;^&gt;]5Z-&gt;ENL$MDRV1DW#%7&lt;]N9L6LW9:&gt;9;W;JK&amp;TM50,TCQ:ZKLTZCZ
MZ10$]3&gt;=D[*H&#039;UJ-)LSM9DUGC\HYEMI97V0=S:RJ5N/A&amp;5=K\WG]F5AQJ[=;
M\$=W)D]X50RP&gt;QJ%U!FIB.1*.G&amp;T0ZJ21HTTZ]J&quot;=_@:GJ&amp;E&amp;XH.G&lt;[0(I%M
M.6&quot;,BSM#&gt;&lt;`;QTGND6;+VR)E?8#]7KMJ)%.L/S%=Y-:]^^MT&gt;:O5.TR67G&#039;1
M,&quot;4O@2%6K&amp;ODH&amp;6T`I&#039;#HOAX0\@56G)=&lt;J@$Q=`&gt;-6#\4&amp;3*6.02@Y$IHY&#039;1
MX8BC;_Q2NT:KM(&gt;Z1N&gt;)6;K&amp;%*JC**R17M&#039;9*8[6)4&gt;-=*F&quot;SCIG9&amp;&quot;8&lt;M&quot;/
M(8Y&gt;,8_)$YCQ#B=M*,E%X_BI]&amp;AT*W!_V?2Y)HBW`GFOE^J8E2C[8;/[1TOF
MI41M1ZL&lt;H^L:V;2&quot;FYF76(Q$(M^TK&lt;&gt;.*=F?JX:&amp;KU!#D7C&gt;4^H:XW-7Z[)&#039;
MHV(:&lt;1;X`(P/.6V-73;)&amp;=)O6XH&gt;78@5E9C^&quot;-!2*N/96M1RQ4*0SX^6E@K-
MG&#039;XBHJ&quot;WFYI5RO:26[#-F&amp;[99TQR+Y.8,?&amp;D64[,:D$.O.+?.UX&gt;&gt;H$/L&lt;4D
MS;]U&gt;WEY\\&amp;#P^CZP&gt;\M4QT@&quot;RX&amp;-&amp;%`$P:^[`FITBO55=9_S,V?,X8Q;?TW
MM#JR_A,-K:KUGU&lt;A&lt;_WWG?T#/DS=S-PSET7MQ]QV`\M=2L:^L4*=NCVY6PV;
MO8Q54UHVM1F3(ZLO.^%*0C]/^Y_U&amp;8&quot;I[7]Y&gt;/\&#039;;__+JOV_&quot;KENZ:=Q1GIO
M8^\.W1&amp;GS03U9C4G-L+R^:,^I&gt;&#039;_5([&quot;[!M`T1_\,[^9ZI=05WW^9]9K/VE*
M^P\M1X;O_X:7HRNJ_;\*F==_FLS8[_WBMWG`.6VTY`N&gt;K@5#HB`71AR;#U%8
MCB-:M.CBTN9(N@R]_78XN#`:OO60@SW\2&quot;*&lt;&lt;+%J/#QABVPD,6QUZ)$&quot;RVK8
M)57&amp;?OWAN(96AZPZ]NK;XQH.2ZM.Y\[MK9;[6\&gt;YX*W1:#@VN=I2MPJW#L=#
M&amp;W\MU_&#039;-J$L2G;M^;&lt;97@FXQWS](;&quot;8?R,A&amp;;KG86]_92&amp;[X^+^9Y,8&quot;=^&lt;S
M_W[[;18*LP4^S[&lt;,#&lt;6=EDS9D&quot;RCP=.AL#82F\++ZZ_;&#039;85&lt;C,K=\);1X.ER
M[EBC[FB,TTQXQ&amp;G8&amp;N/:=@;(EO-+,L:]TOY?XZ;PC&amp;%,[O^CD65^;FC\%PZJ
M^=\KD=G_F[&lt;A;=&lt;`VS&#039;L&#039;$R8=YNWM4=:16P$-)P;KM&lt;/#Q+;O,VDWJ&amp;FLBY7
MY,+^&quot;,N76_J(:WE#W&amp;A8&lt;)W2&quot;NVFQG;D!DQW/V&#039;#SRWIYQ[56G9?+-^[&gt;@@9
M&#039;J+2PU[*W5W0&lt;!&gt;4[N*-1J5&lt;$&#039;N;O48^(()\[&#039;M&lt;+K6;&lt;N.S&gt;6?-+^^[XW;S
M@FLN&amp;?&gt;B=U.R&lt;PU1;QA&lt;D$&#039;NUFM^70;!,VVLW^3!]RV_(?C=-^ZDT]F#&gt;KM%
M]WS$79/(6$.;29NA\+`A.CNCH43&lt;EIH(#&quot;7$LT_&lt;4#Q?;[;$39E4@C8VL*:T
M.M;&lt;02(5%1=M,A&gt;%N::FAT1=8C^(WEG^T5C/J9VX%9=5&gt;$[MK)M[7:G,BF6=
M;AF--7)O/6$9N;5@5C6V3KMFY?VF\3%(;EJ&gt;;R\XZG;2%HE-K54X&amp;9\)1[8\
M#5$5X58.C+K6*1=;)U016\UZ12PQ5^H=;;0)&amp;-;21TF;M;&quot;TEF[F&amp;CH[VDS:
M\T:?5MCI(UO&gt;A&quot;).4PE74V-M&amp;;=IF4]LPG-M)&gt;_;Q@!NCD1MF&gt;9(%.A42[1;
MPVCK]ZP[!1/:&gt;YCYL(/#O;T;VSON[[#A!B_RC25$7:)M.CR4(MT=+&amp;EB1WXS
M5]/EHQ5CC8H](\Z&gt;0!I-::VEH]P9KVV/&lt;I5R4&lt;9[[Y&#039;6;):+H_76,+&gt;?ME&gt;Y
ML&amp;5NOUEOR?TZ:8HL.\I5&#039;HZULKFS-]P9P(J]8QG7!1A6D@XK41&lt;KU,]-LQ)W
M6%FVK,3ULUKAI%FOU=LZRYG]D]AWQ&lt;Q];=[A(&gt;A443\U)4[W-^TU867!]&#039;B_
MW&amp;RUD3U6%,::2=K-K(Z:H?R9P4PJP89Z.J&gt;9E&#039;S.1W3&lt;2XYL$]WZ^&amp;JP9H_?
M;&lt;OP9KU)3Z7DF_5&lt;L9#3QUM82QUF=A-D(FAT@51T:SE&gt;BWGKTT_X(#67+U?*
MK3/6;I2:N:+FVZTS[?B8U]6%B6:3N[N)`T?G.M5RLE:CAW$F6=T[3$NKX9FM
M[K5;TZQN&#039;FYO,_-J.)/5S7:E,M[HACG]L5\/R.B&amp;=IQK5UJLD&quot;N&lt;:*Z7.,,&amp;
M73.&amp;;$2D#==KRN4;DMA_&lt;TS/+A5R;9WZQ[;&gt;T&amp;HZ=62\=]1.^&gt;5T8M](EZ*A
M&amp;$:=,4Q\R3%,)S&gt;&quot;0S%&lt;ML&lt;PN&lt;%*O#-IL*!YR1D=1]N,A8:,K;@:&quot;\UF+#QD
M;-756&#039;@V8Y$A8[=&lt;C45F,98R*J]I[+;=V-`X;U*DUO&lt;==L)!RPY+5AL5K:K5
M6I.OO^GX^H$S-N&amp;0/3;Q]BEOF+3O=1T#M5E2&gt;#24PG#8;E,\4,TO4NU:^;C,
MK\BBK8I]42T^+*T5M&quot;O69/NH+7]&amp;(P@*A0\BQL=T?[@LPI%7&#039;5,^OMP7F_)X
MBUNOT_ZU6F%2C`^&#039;8^SH$T9B.!S8U6)LQO&quot;0&lt;D).*9EO?^]P(3`^JNGMM:&amp;H
M.CH&#039;.CTNHN.-RE&amp;HW:BMDV&quot;/&lt;,F7;P0P)A&lt;3S&amp;T-=[%A1S=1TO@ED]LS]ZKK
M$]*[\=ZP+4&lt;OP2]:[]V/VY,YWM:]]8UA6^@D#C3Q4&amp;UQ?#0.C&quot;PR![#V?H%?
M:HLZE:0Q.MJ9,:L.C$9MV94]Q;0)G6VC?X667B9DH9EJ*PS9&lt;VS(R:Z.R458
MMDQ1V&lt;&gt;/OT&gt;-1=R-V:?5PF;`6BZ18\?&quot;4.&lt;GITWFSO5Q&quot;R7&amp;QG8^OPM&amp;[3&amp;)
M8BZ&lt;2(6F&gt;%NV&gt;UN&gt;U5LH9/&lt;60D%-][;B\+8RJ[=;#F^W9O06#CLJ&gt;-CTQGR)
M9(J&gt;^,XUJX]N!99&#039;!X)..Q&amp;&#039;G&lt;BLP3MB&#039;9XYUK==FJ7P-L&amp;?N4@@G]/SC:TC
M8G[_0W32XVK$=$&gt;AT&quot;R.5F9Q=&amp;L&amp;1^&#039;P+(XBLSB:*;C;Y@/A1B^6MM8:1ALK
M5CF,9T3&lt;6ZOY!`D/(.)H/I$)S6?DN1/F&lt;S=HK&lt;K,$M6),;79G;WJSY2ZL;Y&amp;
M4^&gt;,Q/ONX5B)3N7X-8M68?C$F8]Q^:B43[^-*X=[[TD;9S?BR&lt;W,)NUBML5X
M1?:&quot;SE4&amp;TS;OU%LT`M)&#039;UW&lt;LD\DADZLPZ5AQN)S)^)#)6S&quot;)!&gt;,K6MT8LGH;
M5C?$J^JL88FTXV[(L6/96(N0HT;KKD@GQT&gt;&#039;N8=:#2_@B(L[9=,,1L+V2]I4
M@Y&amp;PNT&#039;LFY:3++.*R1LL&lt;NQBV4V);&#039;-=W75LP1XU%1YG:G*L0BZF0N-,N5P\
M;*:&quot;+J:&quot;XTP%W4T9&gt;\D=(QNLK:?VQX0/3T&#039;#4]#A*3@\W#&#039;F&gt;@?6&lt;&quot;=D#7=&quot;
MDX&lt;[H&lt;S0^!/A[.P&lt;CK_M8&#039;A=&#039;QKU2J\;YFAONH54W#GF0R+IV106IPWD-&quot;EF
MZR&lt;:_YV8;BSH,FSC0=C]X[E5E_*R[&quot;0V[&#039;;0-Z02Z&lt;3NAC$&gt;G&gt;`]L9=R&amp;&lt;]9
M529!+S@IZVR]=&lt;J+L%:88&quot;KIS&amp;&quot;LFR6&#039;1\#3\WE#[K`86IJ*%T3?QB&gt;UMNF.
M?.)X4O[4Q,V=X9&#039;G;EV\:;5!:W&amp;3/=M7@#&#039;^M&#039;E.3/!\]&amp;#7D0PYGCMJEGD;
M;&amp;C-:ED7RV&#039;:`UH+T]@N/6PVP5PZM?X@/;(D(V9&gt;R!IRL&#039;NX(WH#NI&amp;HZ&gt;,&#039;
MG+SDDXZ2QR#95O+BT1A;T&lt;]@,[4?WQT=-=!R&quot;3\QL18Z2AP+#XE:L9RKU2AI
M8LV0;CGSVB@F:#F19&amp;UT4FDSFG`V^.6A!&amp;JF^0E&amp;#M&lt;=MQ*P)&quot;!R?71!1-S0
M.[W&lt;.@CU0&gt;ML_7[\&lt;%&#039;\D;P?7U_$(?Y&#039;KE:\M+WD.N-6#IWK,^)2.:VI;*=V
M-H;G+;MUF=SM&gt;J[(=MJ55KG!.R9QP[I5;UYRG4J\+0`FIE&lt;G&#039;IWX7F)X1O32
M(Q)OU:M4L\Z$L;UF4:,]O9&gt;VARZ;7HXE1KS.IW+&#039;IW+L;=ZA*]?[8T[CLC3^
M=&#039;#B:7G]&amp;&#039;&lt;:UX=QIY.3HX:&gt;?-QI],T33B&lt;FG$:&#039;.#;FR8DQ1U&lt;U[C3:_?BH
MB:8R[C0JKGS%WLC4;&amp;0,9+R=PF],S\:,@XPGS=/!U&#039;N9U+WDIK@&gt;X(I/SUO7
MCX_I#=KI]-I!,.,V9#0L)/8W@J:%57.7@AG%EJC*G5SEH;$;9`:CR8.M7&lt;.J
M#P,1&lt;6?0N&amp;&lt;F;\3E6JUF.4^7O.DF]^PF&lt;7M/W!:\NLG4/3/EW*2\ZJ7L-PHM
M8U0NTPVFM^P&amp;Y:7+],5*/%?;//OH_4GC381L!8HARG&quot;!AB9&amp;(AXRX\!\N):G
MM(I&amp;;Z^S(H/T&quot;%,LGDIN3*H@ID4?KN,S5)#)D:0*8ECUX2(_M8),-KGG,+DR
M6P69;#)US\I+&#039;RZ&quot;4RK(9(/I+9M!+)E;Q3!3!4GNIVPFC)$U3V95*]+K.:V=
M&#039;W&#039;YKAA1?&lt;;7EI2MMD1DKE%UF%)+UY)6IQ&amp;1=S/2]09;.^,12)9J=&gt;.9XAG:
MS%K2JEZ16Y--R=PU.E)IP7S+#.\F*?+CVJ1K#.AL]!VZA21V2SL;+)V86B9D
M8468$%NIG1969C816H$)XRZF:4.&lt;&lt;=AP3V9H8C)#5@@A*X30F!#&amp;V3&quot;S*CQL
M8\:$AJR\B@R;&amp;,TL[TQUFU\LQS82UVC0V&gt;B6H]`C8;%G&lt;I&#039;QXV/]K`A/9@Y&amp;
M5N!G99*G4-J19=$@//&#039;CXR-G^)%Y%#4C-\%/:&quot;4M(R&lt;[TVC4&quot;&amp;=E@J?P,OGB
MGN2,*&#039;H+GL3Q\=&#039;;1_1D=[%L1F]_S;5NIN[5)I1&amp;ZEYF=V^7(WY@3/TPD!&#039;[
M?&amp;5WRVN$CU^N%QGODD?OU,&quot;,V%AD&amp;)(Y;ET$4I&lt;P)/8]V0Q%[&quot;,85T-NR:8+
MTJ2$T_G,KO60A3WAS:IY@WD1&quot;:#&lt;&amp;+_CR#1XM&#039;80/[*6IR88%.L/_C7C-2NS
M3V_H(Q[^.&#039;T(@-JD-&amp;/^7)\ABNF#N)7F\-0HID^:]7;IY.&gt;*)9^[7B&amp;B:_:(
M1G[A&gt;;DX,9HN52PYI8HEQU:QX63(NCV]CB7&#039;UC%WBU]&amp;)4N.K623XOAEU++D
MV%HV+3&gt;=`5\RTI&gt;L97P&amp;,*F2\=.9Q&amp;Y\;3MA)L*H9.[SA+%6-I(ITXRM8DV&gt;
M;;CVO?%)HR%^4@ROC!RQ1]@8=@7$(%AZEB_X&#039;CM)@KF0S5S(9BXTP9QQ1\0V
MP&lt;-;YK&amp;Y2+Y8W7CM(Q\)Y\]D&#039;)&gt;$Z8`8!Y]HACOQ:MZRSL+,MQ+UIT]3[RUP
M&#039;RV,CEV&#039;9&#039;RZ&amp;=VR:H&lt;QI7`S^OLT2A+6QEE:#H5-6SXLL[I;NCW%4BA\RWRR
MT8=ME:Z6HJNPA%4VZRU]XV8&lt;ME6V*:(E&#039;1^]`FJ&lt;@[??GC@U6L&quot;RT&amp;5MV&quot;=E
ME@WWD&gt;4X&amp;_9YHKL-:T`_-BVVZ:J[C:&#039;!DHL-^QS:W&lt;;0L,7%AGUJ/R8_IMI(
M3K4QU(^YV+`OA;C;&amp;.H+W,HV-*ULAQJ26[G8%HG&amp;E6UP:MD&amp;7T+93K,Q6]D&amp;
M7T+93K8Q4]FZM-M+EDO07BYBS1&lt;]/#9`QLWUHF2M6&amp;[B&#039;68&#039;UL8&lt;\:I/\:)*
ME_Y:G(RGTP&gt;9C&lt;3]G83QJ%00%Z\-[5&amp;Y8%PY)GBF9]?WCK#A(^*&lt;&lt;NS81[6+
MSI&amp;1?-:JK-5&amp;GT49,BY&amp;G#05G6B&lt;!IOCAT?#\&lt;64&lt;W6&amp;^(KQT&lt;R1/4KOILER
M?@;++&gt;1$C4=]]@#69`#&#039;,P20IZ@[K1M5R%&amp;\ULJCSFM-AUY].JZ6D-^MI=H6
M\_O];&quot;O&#039;!Q=T3XL6@&#039;DXU@%R=K!4.Q#.#C1_W;SY=8,EEFH)&lt;3R1:U;.&lt;.,Z
M7GA8JW&lt;J6K$D&#039;@&amp;87F,SNUN9W0/C625&#039;I?77MFH&#039;/(RI==&lt;R(V?FP&gt;B(F=FM
M&quot;&quot;/&quot;RJTA*[,:,6P((WF&#039;$9L-HP0=0WI;&quot;4[).JI$R2-1A8*1A=$:-/O@WUS#
M&lt;-;F66MRDK=KY/G(//@*D;A,^T\&gt;K&lt;D,6&#039;5K0Y&gt;&lt;_MCS(&#039;^9OB)I]!5&amp;A;EZ
M-,:5Q65Z%A&amp;=@R-[Y1OJ6PZ.+A&gt;IEQ0M=&#039;C!PLO.)9?N&lt;8:X((N.?S%9Y-9E
MCXV4==?$&gt;K99&#039;!_OQ;H[&lt;LOA9?26BNDE;-XG77%X&amp;=V#:&#039;J)V&amp;_&amp;V;R,[H`T
MO40-+Y&amp;PP\OHAD[3R[+A)&gt;I,_O)X+RNF%V?R5\9[636\+#N3O^K%)-&#039;QUG57
M,[//$87D8-$W=J#V_I0KXH)IA3D&amp;EB/U9F%:3-[_.&gt;.&quot;J)A[X]VC$YHI.E&gt;+
MB]EL3&gt;-&amp;7-QB$IXQ8R;$Q1BRCHW,[KIE?5)&lt;(B\I+J+_G)@U!T&lt;+4^(2?5EQ
M24^,2WJ6N&quot;R;&lt;5EP?264X&gt;&amp;K]UJHJ[S_:?1S/Y/?!#KM^Z_+H&gt;&#039;W?RY&#039;0^K[
M;Z]$UOL_CYN:1I]`I:_7S_!Y)_&lt;7A]J_W^YXN[G\=/E;#@?%=K4AOFU&gt;I,&lt;P
M,I5Z::*K,&gt;?&#039;?0K`&lt;&quot;O?5BJ#$-^7=&#039;Q%7;XFGS[T[*5G&lt;V4&quot;,V:*1=3-+\&gt;+
M?1BV+\GKX@$&lt;PQ3YY^;H0^3R\]1ZI]PJG#&quot;?\+;`?FI&gt;&lt;,3&#039;58.G!7H38#08
MND.7;[VA%&lt;KT&#039;5SYWG[A1VYDI&lt;^.F-_&quot;R(V\HX#W-#X9$7;W+CTE\-.1T9[Q
MJM8W?G#S1TYS6I&#039;I;;&amp;]F+[E&gt;_;=&#039;];&gt;P)&gt;X[&gt;+1&lt;Y3&quot;%&quot;=6&lt;;HX&#039;%M&lt;0VX_
M8%J%Y]*DQ&#039;SW1RYY(U_=\@H2(HO:&#039;QJ*MN.7J&amp;]O.&lt;M=?`UFXW!&#039;OB+2?/GD
M&#039;8?&#039;Z5&amp;8;GJ\T&lt;N8,[Y;XS3EJ%%F`=&quot;J&quot;R\1E\QW]@6SAKUVD(B_,Y0&amp;6SN&gt;
M;*8HWV$R+MZ\\K1KM+Y38_9WV9@MWR41SA+_P-9_$&#039;XY/Q9_E&gt;M_NU6^U`?@
MI[W_-Q*.#+__=V4UK*[_KT+NGWLW/S16+8@/J=N^,X8CLEE9W[%&quot;6[&quot;^$05W
M]N_7&amp;)]E&#039;_VR^ZP?=+&gt;&gt;A(WK#YFOD&gt;/75ZVX(#[-3D^DB&quot;Z`_B@5\VX?J1[Y
M-K7SD]2C`&lt;.9[0G&lt;,KT1AE%SH7VWUJ?NC?O4=$9\92O7%$_SE/E_QDMD^-6V
M7!.1%;&gt;U]^5GV1V?5Z_1![?I+_H(.K_XBP&gt;`;%]M9[X&#039;H06Q6]3QD7N?W$1/
MD_\&quot;CW!+8SGS,^XC7^HF#Z-?Z::C4[[%;N13:%P^&quot;2,+&lt;A$&quot;&#039;TVCU(FO:]F_
M+#]2)8;BY#@\:^4P`O^RF]0OE:[2_SMG&quot;M/#F/;]AT@X/-3_1]7\[Q7)?/_O
MYD$BD4K&#039;=S&gt;2NUN.EP`/G[!F?F_K+5X%6H&amp;3[]F.5&lt;K5&lt;DMW&#039;N/N&lt;LW2R+%\
MO5X9.&lt;B#=1YKU\K\,!US65@9BMQ7;77EJZ^KM&#039;]\`6CF,*:V_^!P^X\$5]7W
M&#039;UZ)S/:?WMO;3CD:OGD$2RCV+[HX/OIB+K)4M6JA&lt;2;65VZPHMY:9/)/O5E8
MY+,MG5_&lt;Q1&quot;H)7:WD3?GP5:SHM5&amp;;8\V&gt;R-JJKW_O+K2]Y\T/K2M!&quot;K%&amp;&lt;.8
MMOZ[&amp;A[Y_EMD57W_Z94HL9L^&gt;-?\QG0JL9Y.[NVFL*(9H+7,TULHI[&gt;H!6JU
M8WIMK]BF:[SXS?:&amp;:N-SP8&amp;6=MIB=VS+=QEQY&quot;X+6&amp;LJ-WS&quot;V8)M.85&quot;C&amp;\G
MMW9]T&gt;#M%6K\XBBOI8%\N57--1PV:&gt;3?*+4R.&amp;4:-VS=I.B+SZV\Y6[=-%[,
M5]R,\V-7-VYW%S*=930S(UY__76&gt;HPD^V:,MT734^.8G3&gt;6D=[U9%U-`1U8:
M!QVY:7Q`6&gt;0LVVO0;)//A)OR38=\/HB-Q?0Y:+&#039;?H&lt;5J&amp;JW\YIIG`;O7E*95
MQ;M&#039;ZK7*&amp;&lt;MKK$W;LHMML:EJ:+&amp;5NVHTZ[R[X&quot;YUK64W8[WV0[&lt;=7C+_&#039;LD9
MF3O#2?M`9H0Y_S5/./R[Y[5K&gt;&gt;N=7(/&#039;C5&gt;&lt;3+&#039;&lt;&#039;+$7,7V7BY/=C`_B)SP5
MF08UCC&amp;Q]=H+C+9-=5A`ONJ#5X:\KHM/UU8IGD5K\BS;5+$MWKTAGAZ$=Y_L
MD&amp;FI`7[*?!*]@R&lt;-&gt;&lt;?5.EN`6\/+3KETTF+&#039;Y5-N.=&lt;B]RVQ=M%J-TVS5M+&quot;
M.\9**,IOZ88C06:K-ZHJ-6WZ&gt;\%H+90F&#039;*&lt;_U_=V=O9V%XS&quot;%9^X-&lt;[3W]89
MUQ9+V&lt;IN\B2*+LD(W?&#039;A[(RCS1H^9(,5OL(WH@_7J.$);\:6-3=3HV8F!!QY
M&gt;0%&#039;I)E)(8]DSZ67H*]R_=_)/&gt;1#Q(HV:QC3UG]7ED?&amp;_^&amp;(&amp;O^_$B5WXEL)
M=N&lt;NPZ!.JQQ[UP_V4BE\CNLN/O;DKY1K[5-_J=;V&gt;[VT@IG9VT^GR*._FBN&lt;
MT(2!WAK,_(5&amp;F[ZQS?LJ?VYYE?GU*KUJW%]ED2WF1T=UW2&gt;&quot;7&lt;&quot;&gt;&quot;M-&quot;J5SP
M/]*:=,VX&amp;[$.RR_AW&amp;TU&gt;=&lt;W5D.F\`IC7*&gt;D7W^MSKO$QDFY@&quot;1L;:R)%*1X
M-+W&gt;]77&gt;FJ[_U)[Z#TJ%@O^6=WUS.[Z5HGL_?&#039;[3OFM/WA%]!L9_Q&#039;OF9H[Y
M2Q2&amp;WBI6RGGY%Y\L44O1F?_8OFK&amp;?^XG$SS(U($(U-&lt;I5XJ%7+/(;@0*?!CF
M&lt;CBUX/7NK?T&gt;Q2)?K[=6HH$Z=T`N[P12=P/U!?YK7?PJT&quot;^OEY;5S9SFW&lt;CO
M!.IWV.\$4M[7N&lt;/U!4JI2-8&#039;O,S8];&gt;9G]N+&amp;:X*DUUY#;L4`L5J0;BWY=Q&quot;
MI&lt;C\:7.FP*[_ON$UL&#039;]O;_?=.RQW7/&#039;R_^\PY&quot;Z_G/@WXIO;F&lt;W#]]Z39XQ0
MO%[&gt;J5XV**..^7=RC;O&amp;KP`W9$6AV:YY^?^V@%[_,76&amp;NGA_GQ]5GY\U*_R&quot;
MY9EN,?#_+^/9^,&#039;KG&lt;U0H:+E:E[Q[QWOZ\TJKQR\O&amp;TIN&quot;%B_8MI_U=?_YGU
MZ[_3UW]6H\/W_R*AH+K_]TKD_EUOFLQ5-.&gt;2S0TF%V8.XP?IX,8![X=\SO,+
M],FTVY@K3ETSPGRF&lt;\(#\MW0V7?OLOD?!N?MVU=NC`EJP2?6A0QG^LV;QE3A
M@ZLM1&amp;&amp;ZZSA1QLB+;K7YRF)3#RNSMX6&#039;M]C-FV5&#039;3&#039;TR60L^&#039;AB=NFL[Q`/E
MAVQ1G+[H9=M15+/&#039;HR;C86776Y3Z!3,&gt;-2,KL&quot;VA-G5$&gt;)7VSZ?&lt;]$##2_K^
M8R@46AYI_Y$5U?Y?B&lt;SUW_VM-#T\Z%@!MAVS=OSO\VN2_#*LG/U9)[;2:]L9
M6E!*)E+,9[E;8K?L&#039;XW=3MQ/;-/#FYGD[D;B@?6P**.&#039;LV\O.!V&amp;QCD,#CD,
MCW$8#@TYC(QQ&amp;`HO&gt;%W&quot;7MM^Q_$)8^-C$&quot;ZANSIU#]_5J8B!T[$55_E!3&gt;F:
MY_SQL;DI@?82K-B&gt;OEX&gt;^R2V4,@Z&#039;&gt;:_[@3)_TV_38X?([HY\N=-LO`^.Z1U
M%?$$J/T#&gt;P&amp;NH1B\S[;K&#039;&lt;-AFO&lt;V[/V7$@?L@9![,;A9U\?.9#5-[M[G$^&lt;-
M*TZ^X.C+&lt;J13*BJQ3&amp;HY/75YLXYT;#0!N^/(6,?O[B?LY0K&#039;1@K$BR`T\6K:
M*8_2.&lt;+.[#_8M5Z@MGQ[2E0S-M?,MS(V&amp;PSG\7V[\VD90&lt;[-%/K&amp;YP1&lt;[]I?
MUK82L;U4&lt;JU2+SP&lt;R0WFIW=2ES0^Q;1_)W%\&#039;J$PZ4O86XE09GOO2&amp;[V3VXX
M&gt;P,*/SRE1K@:L1&lt;G$R^&lt;O*01&gt;Q881ER^W3&#039;5B/U5(T8%OZ05&gt;U$;5E8N&amp;Q5[
M!3&quot;,C*T&#039;$XP&lt;&#039;&amp;42V_&gt;26_&gt;LMC*MR8XU$[3%94)CGF1F;R0VEZXNAAEG;&quot;+V
M:\!LAE+W1LOIUF5CPXW\_.4D7G7&amp;#]^S)^D*1O8.AXU&lt;/GOEVQV&amp;S40NWPHV
M1W,W-&#039;-C.MS?3QB/A*WM.&quot;WYEF&gt;M&gt;C8KZWN[Z&gt;36X=YARGP(&lt;-:LL5FQ7R,0
MEUD+VV;E&lt;-1*]/)6AHU&lt;S&lt;K^VKVX&lt;T&quot;W;&#039;W@1EX]L&quot;6&lt;&#039;5=R)5W,J&#039;`[2WQ5
M0&gt;=SI@:&amp;4WGK:D,_Z8+#W1:U4Q85S[G3,IP8-\7WZ2_FHU9&lt;J^-5[8OB#&lt;?-
M#FW*9+[#I?V%![O&amp;RYR*KA&gt;GM&gt;V]]7&lt;R&amp;XG-C%P,F_!0IOTMS&amp;,&amp;*.,D&#039;X6C
M#Z#;&#039;F*;];KX_OB0)W?7/&quot;PV^BFB2UQY+A.RH]%?)61&#039;7RI##LV&gt;7&lt;Z^@CS/
M/H0)CPQA:!NMK%&#039;VNZFBXM:L+\137:/[AE0%RS6WN_*SM*7PR[CLAU_&amp;9=]I
M9&#039;=O-^$P,NME/SQTH74VA9DO^TXS1Z-F9NM\AV)S-&amp;)FULM^^&amp;5&lt;]L,OX[(?
M?AF7_?#+N&gt;R&#039;7])E/_QR+OOAEW+9#[^4RWYXRJ5VUL)V6G&#039;6&amp;9_(WI%M&gt;M;Z
MD=JH]Q755=9_#Q+QC9U$H/J2]O]%ED,CZ[_!Y8A:_WT5&gt;I/=,TN;OB6OL1TJ
M;;9IE+;7N\,&#039;R?0^&amp;;,&quot;X!$CL;V,UYT*/6Z4RE7U=JTT+Q]GLFI0P.M-T]&gt;8
MQ8ZF5J?.JO6B)KYQ1+O&amp;Q.CD+5:OR&lt;\+Z(Z&#039;JVA,8YS!4U5&gt;L1DJOKD=H&amp;&gt;M
M=&amp;DU7^?&#039;BEJ#=S_T3;*Z?,**R8?#=);C@R?:!&amp;&lt;\?D4;G7+-5KE0T;P4!/T6
M.]UXYW4LOAN-YZ[%CB@SS3RV](AVJ_Q(O):33F:M9Y&gt;SWN-V#5\C]B:/1;P[
M99W&quot;YYDD&#039;BK-%5IR+Y?CB:AZLUPJUWCNBCC3X7J[9297;S&lt;:]69K43BUY8YX
MT%9NE##]M&amp;P/GSF^AE3(U5A&gt;\](N/OHB[YMO&amp;@^Q&amp;1:6V$:[6CTS0_5FLUG]
MQ&#039;N=57,/&gt;5[1`WN!@!B,)D[E][N,,$O%/(UDZ1571&lt;,]W50G]]P(!?:FPY/3
MAS,@NJ%N&gt;MRK\?*OTYO;&amp;+T=G[+(&lt;LZ,32GTF0IC9PHW;.UA8?X?&gt;^G]P909
M^EDU7Z_@JU&quot;6$QY4D1&lt;33YB/^UU@O!LH:?0$?[7.(WLG%(Y$N0GQ0SQT7&quot;);
M;9W^E2?EIEGF6Z`/LV%/1NI.:-D;6K:NC/)9NM,(/4OGV-R%8&amp;5JJ5!XK39*
M9+@$CBM6QASR6G_CAI6,&amp;S=DQN)92%&amp;/EL@6K_?T&amp;3%&gt;/4?J?&lt;`*@#9&lt;I-Y)
M[F?6]P\W#Q+?OQL2AY*9#3[&gt;R*S&#039;#Q*9^!H-RW:2J10]9+-^$$_=2Z2X.SFO
M&quot;BSQZ(G+!_-___O,7Z:P_&#039;5&amp;U6.BS/&gt;I\)B?^%MU/^V&gt;^-Z24;1Z_;A5K;:7
MW/94V+T/[?F9&#039;.9HZ&amp;QDQ])EO&lt;L-3I&gt;3/?*T,&gt;KJWK&amp;CRE;S+Q&gt;ZZ\ZK2WN?
M:8?6&gt;.]NF[5F\&amp;YNYYH:IJOW(I]$%TYX^[B:=U[M,[2WB\5BLF5^V9?R*\EM
M_(&lt;KY]++&quot;D/L\5E=&#039;KO_A\LY_@LM!X/+&#039;K;\LB(P27_.QW^3RI\Z]G!@&gt;47T
MS/YH(!0(^FDX&lt;MF*&lt;&gt;GR#P&gt;7PU%5_J]&quot;5RI_/OPO5K69)X#3YG_!2)3*/Q2-
M1*/!U3&quot;]_R,24OM_7HG&gt;9/N\1&amp;E02V-&amp;/E&gt;AV9S&gt;$L-(KW&gt;7CWYUHS[0S*IA
M&lt;_R(ZD:&gt;_(BYRR-10?C0DAX/8#JM3(NI#\_?2H5F$&gt;8&lt;K5#FQIK:C]OEIGR0
M3./C`&#039;J.Z`_X_&amp;J1!JX5&gt;ELXC5J]?-1:;K)BO=&quot;F%VCD,,.B\;*,(08M=Y@(
MW&gt;N--QI\*G?C!D74;U9@FMH%1#+X&lt;-EX!0=[M]X6DZ.V&amp;%+GV^5*,:&quot;3BU;=
M*W_1YX\U^8A,O=$J5XW&#039;GN@&amp;$O/O1&gt;2C4=P@GV$^*M/[@V168&amp;)%9\TIJWPY
MB4ZO^FB4\;2&lt;&amp;):7G;Z&lt;\?+OA44&gt;\A;G+1^S,WZ*SUKF^50RQ^&gt;Z/(/)D9@=
M%IKE1HOFQ67QTA$J13E%%]-7FD3+B1+WT/3*:3M%@&gt;;C/$?C%;U.SX09J36F
MI3SB2R)V/-IY?D3X,&lt;M.3K3E[)H2D_.*UY@=\R$9I5AOYX_KE:+6#+`C3&lt;RL
M&#039;E&amp;4*`!&gt;ZH5ZXTS,S^I5S3)YPE/*(RAWS&lt;LWR/,&quot;19G1`&gt;;+/&lt;KQ#*3-,8_*
M.9%X4;0+`9:4.01C?`9YYJ5X%.JUXW*I+9&lt;;:)-EK&lt;2-D\NJ&gt;`[*R,N&#039;FM:0
M\V@1.KT72F9ACK:/&gt;MLU/J&#039;B\:%*JYWD&gt;($W=9YU-V`_&lt;,+_I&quot;K7.FMH.O\E
M9EE\CE4JMUBA4A?#[-:=I27^;T!TJ:CR@7JS).8Y`7Z&amp;NR\4&amp;?TR?-(WTFDV
M)1L8CN9$/1]7R[FC?$X_84:=E@/4=9[A(GF\P.A[P#SO1:92N39%&#039;F/&gt;6-2H
M-N5%.BOU3L&quot;&lt;H&#039;KYC+A1U\NM&gt;O/L#CMIM1JZ3,]).Q_@-62I5*^7*AI=.:R6
M*?L)KY&gt;J=4V3&amp;5HPHB);@U&amp;5$!.Y8*3S1DEI$UG5:N8*&amp;F^:](UHFG63WT&gt;\
M3Z8V)V&gt;&#039;SE+615I0$71ZR=V)2)FX&quot;4LIYP:\?,[+CLD-[Y/.&gt;`O*T9G`:+%-
M3J@H,/F&#039;L[QDNN4DGEPUK+DNI?9[2Z&gt;W5C+FHS74+N5L5QYFSK23G8=4_7FG
M*&amp;P9[]+1E\0RB;[$)W]+&gt;I5&gt;A*.=:@4Q%Q1N&#039;3-T-C1#7VKKS26&gt;[&gt;*:+A9.
M&lt;K_&lt;$QJE2^E*XS]GMV,[:_5`]C`FC_]6EL/!E:&#039;QWTI8C?]&gt;C:C$F-\O+BE+
MM-&gt;@LM0JE)8*C;9?]&quot;(%EG&lt;][)6[858*MY8+$4T+:8%`(;J:O[42B2ZOL!`O
MUFC42Q_4&lt;+?JO7GSYCC+L1CS1VXMKK&quot;;_-];U!LQZRD5WM?SZD;.Q;,JHV&gt;:
M6J.2.Q/GO#&gt;MLV9G2@&amp;5:Q5R&lt;--+-RO]Y4*]S:__\MUCYKO:Y%!3/&amp;CK971%
MISN:&lt;E6=I?C`8)TV&lt;^CLIR*ZH=L1BF_H]K*(L&#039;@Q+!\#\7!H&gt;8NG+R-7ES-M
M?CTI\=Z[G6GE13?MX]&gt;@5(ONH-S@1Q?M7X*3VT5NE%MYZP$/H9S.+Q4M7Z&#039;@
M_QZ]2K51&amp;&#039;X[J77&amp;)XQ6&lt;GJ+!^C_GM/I!]Z;`L:;5F\:)V@%6#RHQB.72&gt;TF
M]_&lt;3Z3`\X@6G]O=&gt;\F.4&quot;;SM4B9$0Z&#039;%U=%,&amp;$T8SX%C7HN&amp;&lt;D&quot;:IY?:MO+T
M0MO=P^UMQSMMJ_12!K+@&gt;/\G.&gt;;_9$I:+5/@0UJ9\$9AD17T#!\+:8MRUQ?_
M?9RIYO2&#039;W//$]-K?ZRJ&quot;;-=&amp;`N6UAX]K&lt;T5Y$RF]9BRS8SV3!\].:!@F/^E&#039;
M0W`QN.2EP2KU^L-VP_X^!)9KU:OE0H87G.]WJ99^CR?G#ZKT;CO&gt;&amp;__`_B-#
M5C-TQ\G&#039;2_1&#039;BSSA/%K.ILSKNS$LI89F^^FM:1TQPA5C?Z.MRO9LK&lt;@$`K=7
MM?SMY5!16Q$-&gt;:FH/5JJM2L5H^W:35+Y!Q&gt;#O`DL1I:I]+TWEVY0!M.8LRD&amp;
MV&gt;%@*,*VQ+&quot;))6N%`(OS*:$XI1LOJ2@&amp;&gt;)ODGK;+!:U&amp;,ZLVCY3,M&#039;B#$FZ&lt;
M663W,&lt;4*!X*\IO`S;^#4&amp;[)@Q&gt;`^=R9&gt;&lt;R&amp;G2&#039;Q.)!*MG1:TAIBMT-BS4L[1
M#3_S?ARL!,C&amp;N[!1S[=HE3@G1ZWX?&quot;$&lt;\E*[(R/-Q#&quot;1CQ([G4X@)Z(K!O85
MZ5!?VDZN)W93&quot;7[1#$H?A[4*;&gt;VRSX1I6%\NB.I2R77H$T:Y4A-C9AZ%3K-,
MP_9%1G=&#039;.KFF1F;XF!9[R&gt;P99L2OK#L&lt;T*&lt;6:^R-&gt;(HE4V^PM7@JF5HD(T?)
M]+V]PS0[BA\&lt;Q&#039;?3]`3/W@%;W]O=2(HWPK&quot;]31;??9&gt;]D]S=6&amp;1:6=R9X],A
M\8UJVDA)62D*D-$+1!Q1,&quot;J^.3&gt;L\`E8FW:IE?B$L%FCX;A]?QN-\;D9\28Y
M#.9&#039;TL4#XFWGIE&#039;-6*ZJ-&lt;LT:::!S!EO7@WFYQ.$4ENKG%DS`\I7^I*S\#+Q
M`9,1H9#IBR@MK29N3M.MWY:\O\:+;J?,)Y85]EZNHG7TAV7V=J60J[;:QS$Y
M5:!9P_&gt;,2)M/7=V+WT_0UI[-Y%;F&#039;C]N/&#039;DU=&#039;SX2H89YALR`\S&amp;0,5&lt;*]UA
M&quot;`3&amp;[B&lt;.4KP(&#039;5&gt;(-\3&lt;!/ZO))X;-UQOD4P1/*:T%M5D7:X&amp;4&quot;O+TP=&quot;Y:UR
M6H&quot;B-\O4.[S0:5ZDWS$]7C&#039;$*PD5C&#039;=BU:K86M`6\&lt;).7O/&amp;-*]??-RL,Y^U
M?B*Z&amp;YKWZ6(:E^.NSGZBR9K**R?O_ZG=U&#039;A=7A@NKL,4E?SVWL&#039;DP(]S-&amp;&gt;-
M[Z:2+%\_U42K$3U=H\Z;6S57F]?9JI]7=G:8&#039;`YB,[Z[_FYF;&gt;]!(H5`-K`S
MNE6N:F(#`O9&lt;\*I-5U/FJY8KE;*N\994U!=LJTR\1;;%8U]Y/H@J+LH4TEJ2
M6!DC,T6M1=LFQ&quot;MQ&gt;8&amp;_)6]$%\0%4K[EGMO)M?FDF&quot;;@6G$XLHD&#039;B?5,.KF3
MH.X)$L\=RIBG$&gt;,FA4^A&#039;&#039;/;/%CQQ3C3+)UPIL$]F)W,P=[AKO%86#@XE#UX
M68OHF43B&quot;B?E&quot;CWE7!&gt;;=&#039;T[:Y9=HXEGY&#039;0^D^&#039;&#039;&amp;#Z0R^C;(MO)G:2U$2^\
MS,_30&amp;RRL^4@.3,VVOW^=RWSS*RNKK$5^=%LUVIR?XA&lt;;Q$#`$&gt;LAP,6XR(C
M-XSLV&amp;U7\[S(&gt;7.EK,T;ZVIG!5HUH\J@\6Z=7WOY.$,L)HLWNONH@HI+`3\D
MZHE8O9#M13^I=\1ZCNRBL;HV$JWU^&#039;9F_=WU;7YU,G7+[71F&gt;V]7WE:/CD9:
M;^=UL&gt;ACUG&gt;=!\FCQNMEGEZ[+/(H1\NS#6H+?-0P&#039;)&#039;T#NV)&amp;&quot;Y!(ZB=W&amp;FY
MVJZRFAEDNU;F`&lt;H60)?+0C-G;`YJ\@K9&#039;*GU[R02^YG#W&gt;3W#Q/\8B#3LDP%
MX.9`[,F0#HPHK/&amp;\%&gt;-N*PYXHW2K(Y:A\3ZO&#039;*,=+3S/YWF6UPOS&lt;OOX&lt;&amp;SX
MY6AO?2CGP\LK[@[$YP)$(PU&#039;AS*D2LN.-%!HFH.&quot;7)Z/`9B/5X!VA=8;&gt;8QD
MOT_CK$Y]D1\R!CIT*!(6?1H]&amp;4]CA^-*O3/:EF5L=N(/,CN&#039;VRB@T`KB$L_K
M]0KM1ZK2OC9&#039;*8DL,.JQ+W=,7RP5-R^*?]#66]0+CPTK:;^^FF$9Z18[?T3G
MQ%,M0O&#039;+;?JR,,1NMI$^D;&gt;M@MA&lt;)T9#O!D_E,-88[Q)+P-`F&gt;8U;HBW;_D@
M@(Q2*AU??R&gt;SOW&lt;4%J[-*-QEX=^OP42RQN0&gt;JPZO@KK&lt;9F8\)&quot;-&gt;-K&quot;Z0)U;
ML4WO*0\OLN@BN[7(D[?(RV&amp;1K?&quot;?]:8P%`K?DB&#039;04%6DR3V?K$A1/JT:E[A&lt;
M0]Q=DD_=T!L6Y$,.M/HJFR)]P*6BB6[&amp;W#?(LRU!-X[D@%R75:0IU_;Y!(E7
MI$CD=RCZ^5R^7&quot;FWQ-&quot;]),&lt;=K%&amp;FN&quot;X:LP%S;E9NHG.BO8JH&quot;1VQ&#039;BV65NE&quot;
M)R?^M//PF)=D&lt;_2*)9,JGO#&gt;B6]OBRH1&quot;;N=WTEL)`_%5VYY!KHYV(X?;,G&#039;
M&#039;T++9MM.T,N&amp;_!5:44!L^(2`9X^X,_&#039;_M_?F[6T;R;[P_*U/`3/&#039;-BF1%&#039;=*
M5IRYM$39O*-M*,IQ3N+!`0E0PI@D.`2I)1/?S_[6TMWHQD+1=B;SGG.$YTDL
M`KTOU5755?4CRKN`U@&#039;?F_^^^5S**TCI,A8O5O3A1&quot;[&gt;&gt;JW=VA,U7:C!\]EH
M$QC;^1S&#039;#_U/1/?)HP6_&quot;^D7&quot;!VBY`CA`+X[S&amp;_#O(U0L0+S$V\&#039;6:`-SNVS
M[H_V1?^&lt;4)WW]RG,7+E,)]=2&amp;9&#039;&quot;J0*&quot;O2&lt;/&gt;VB&quot;CUXT6*!1W-EQY[U]?G(D
M&quot;MQOBN)F`1U,D!.5`:N%=,B9H`;\07(]Z&lt;5%[6L_4AS*G:*H!V\9G&lt;V7*-]A
MRVEM6:1Z2HS&amp;!8J*)KFM-N4Q%C#/&quot;:-9&quot;K$P3R=;P%?.KI&lt;W&amp;272=$?S&#039;&quot;-2
MP7B,-ROL%K?TKI&#039;XN:Z_9!-1.#3Q&#039;F+)&lt;D;:)&#039;;Z($,BU=4H85TV^X3&quot;@JM]
M%K$%L&#039;2`OUT($ABGS:.;U&gt;R3B+DBQ$(6)3&amp;REB0-8BVX/ED&lt;&quot;])Q$_!&quot;7?&amp;-
MWIJCO-\[1?IMO_EI((&gt;[$?L,9*N/CA#=BTM)WXWOW;.CZ&amp;OJR8==8/E&amp;MJ.(
M^V7X@&amp;LW3Q&gt;/+.,&quot;:YO&amp;C\%9=MP[,3VAJB`/857BGX+DB&#039;%\0!XNIHPVC2LT
M99%D:&#039;IG=JR6?+627@,K\&amp;8$,RJOQ,.E-^&gt;A)P$5*DJMXK([H,$6L2\:*9_U
M@:SMQ&lt;;1]6D)XBWA,O@$A($&amp;-E^Z+T3CF39X1[W#@=ZWJ.03VC&#039;,)8L.H-3`
M8@L&amp;/HW5F&quot;P&gt;VMVY`NK5_3#H=\2Z-VM/?([O/8U3#&amp;ECDZ8DK79YYP^=Q2:B
M!.J&#039;2W\D#GF8A`-KCAI&amp;$D&#039;G`6QE/M=S%*,NW,4*&lt;I32N@.!&quot;%DNR`]_C)S%
M`JL$?ICEN.%*6*QCB%&lt;T_(!V3&quot;:H7&quot;&#039;^S&#039;731QJFD+HJYC`2&amp;Y*=I9&amp;F=J4/
M-=V]$UL$U8I&gt;2RMU;&amp;&amp;&gt;SFMFF6`!D#F_N,:&#039;E!*&amp;FDS@7=]%RQ:F,\!5(6\7
M,9W3U&gt;B&amp;2KSQK\GF&#039;#AU9@A@D2-U2LKHT9QR1YN5K#GG[_EX)MQ3&lt;D==&quot;AE5
M&quot;*]RXWKCL4&lt;O,*@H2=08^A7.8#::$$&lt;[])*9&#039;S1/F(7HH6`L#5X6!I,I:&quot;6R
MF72;&#039;E#^VM^ZQ\=`!2[L2Q&quot;ENK7T[11+(]&lt;[3[&amp;@VQ&amp;9$R&lt;2VLC?W?BC&amp;[-?
MD^`:VO?)1XXJ23&amp;H)MA=)]V(NTZ2!%68BYT&#039;-H^6/U=&amp;@BCL!)1Y0PNY&gt;&#039;$J
M4W]7,]0%^&amp;IAYY\GU0+4V0_V1;&gt;O3LY]N:&quot;O&gt;B&quot;]C8&#039;+N=&#039;,&quot;/+O?DWJ=&#039;KV
M`#FY@?WN/V4I\F0\9F\7O&quot;T1&amp;FI&lt;QG-4$JWFN&amp;99)P9K&#039;`Z*T!LE&quot;H?#:7!I
M7UT&lt;=09=(*#4S):V&amp;&quot;].S@&gt;QSZKRRVD0\/#(%8%+#^TB)H&#039;C\NEZ[XU0=8M0
M@=1&amp;.&#039;=*Z.L&gt;RKR%^/;HO&#039;\+K._Y^&gt;!=[TP:MRN9&quot;&quot;_/5)&gt;LO%`5&amp;+)7LHL_
MG1V&quot;6#GH]A&amp;QV!R_\]42UQJ;&quot;N%^7WA(*:[1:`*Y)#]P4?4S0U_K1,$@Q5^`
M(/^VWSE49VM-EGPU&amp;PG=FZ&quot;YT@,&#039;)VD&amp;)RR,A&gt;_:9_2HHG=W+=7LWNG%29&gt;.
M&#039;:EH.X$=J&gt;LYR9,&#039;R9=.V`6)BP\K#4#W&lt;H!N&amp;&#039;O6+[B$2[`=BA%+@,,AI&amp;)+
MQ)C;(WF9&gt;&amp;C7&amp;RTD#A44+4O0\E,)FSZR!*ORS25\&gt;QM0)C5*.)]Y)&gt;!H^0##
M&gt;43Y&lt;H4&gt;7LPR)$I`B?;;2D!Y^-M*`.:O^(TEU&#039;0/EO7KP9\9ZR%KJ55;8J60
M9%A&lt;4W:UE;[8HK56V]]DM:Z;Y\W6^YH2:LUF1@D4ES%S@/026AN4L*X-S6KM
M6^&gt;YHB^5KRNAUOBV$C#F^+&gt;5@&quot;NJ;92P9D7ILY&amp;]6NLUL=9JU4:[L5=O-?9.
M3HII90M5XIK5BF9+]4J#.XG$FU0N,^_:(3=0P&lt;?F4?YT9B7G&amp;B,^^Z-&quot;5`+V
M;W^#&#039;9.]4C;=&lt;]DEM)K-&gt;C.U!%ZM64-LEM!:6X+UV*X5(]DT1Y),23&lt;:24O-
M9CMC&#039;/393*Z4K[SDI.=K[QUY&quot;#AWWR,&amp;T[L/F!^&#039;34$F&quot;JR=1.=CPZA[&amp;8`\
M\BUWGE&#039;=7_^HVT]4@;.-E&amp;+;I,(9#3&lt;\5]C3@@P]&#039;%D7?&gt;#YR-&gt;6+$96K**.
M,UZP7;O=([M_ICD_(DV+RXITAR%$B+E#ZD0J^^WA(0[42R=\*6\^^79I[BQ&quot;
M*1Z:=M]DU)TFL9[TS!`S&gt;]5]*9]W9[?^(I@1$ZBNIZ0@ANVQ+M^=6KTCFC0T
M9T8=,5T(`O\YC3-PD-;NGKVWWW?ZJK*&lt;;9,/+GSJ&#039;&lt;D+_7-2RM,=L&lt;8H%OD&#039;
MR&quot;HE&lt;EB7#0KC]1R&gt;=(`2FC6)&gt;OC3Z?E1-Z?QZWA?=GYAY!#IQ:?#=]W#OV@Y
M+M&quot;FX&#039;*0ED-\ZIX-M/1&#039;W&gt;-N/[U%_.GXO/^7R_Y[.0&quot;]68GNG7%S.PA*$HJ[
M9#A+4.5,(A):/8!H&quot;U-#3@RQ09!-O.Q%2RSWW7?P,];,[[Y+-%3/8^0R&amp;DL9
M^&lt;85Y&gt;P9!P&lt;0&gt;$&amp;JY6JY^$#&lt;1BC/C1VR&gt;/?(+YY,Y%.NHH\[O1.M&#039;97[L&gt;=5
M770#25;IW:/=.8Y7HJ[3R\X9ZECGEA)U$UL`DMC=?O\\6I36GI36CCSN&quot;.XN
M%&#039;O8-6&quot;^E&#039;I6^.\3V6Y%8+ALCR4LF98&lt;H@&quot;MQJ!8E&amp;_$X-G&#039;1S2+VL\=JYH0
MT+3/$9W8ERJ`8W1M$=5C*#=EOQ!=-+ZR[KR70,#N&#039;)^]!EC!)JY+6*$L,LTG
MJU!8;J&quot;[@+H3TBI!]&lt;L&lt;)+35/+[&lt;L*&#039;VCYW&gt;0+]SK$0D5%V3R]JT2\4B81?C
MU2&lt;&gt;8:C.L:Z]F;=`YP:^M_?&quot;U512-1GD(?2$O12V&lt;T&amp;N-.A9(:KRY(U&amp;R7%=
MCC5.I,-&quot;F\N0[+08KSC2H)$AAG9-PWI#OB#TZ7I&#039;MZ!(NYOG:_%(5U(EJX9$
M@LZ1G,UFBDG!#5KDA;&amp;^L/I:W-)?^[&gt;LVD^U#WC7.3O4#`24:HHVY:^1.1JY
M5;C2YR1?^QLIM7K_V:7[R4+9.D5UT1!5&quot;1CNA)6&quot;S(P&lt;F(&gt;WX3\$,R@T^7LX
M,V&#039;`QQ)P*Z@O1V-#*&quot;Y$5&quot;S28/(R$#YU=N\,*%:_,^B=\\2S&gt;XQ07ZGZ&#039;#Q_
ML45WS@,MR6!RRQI`3#)!^&quot;[)@L\GWKT\CM!P1W?&quot;0&lt;L#\K[AX&gt;#X%SP&lt;;,=#
M%^#D+L4GO(_!ZF@]W/EHA&#039;G9??L^).,M;Q:N$A38&amp;$^Y=UO)[_K9RX&amp;PS9F(
ML01PQ`9`6!`&quot;&amp;W5NX5+&lt;`=#HWWFPUWG\02I`U5WJ74KGY&quot;2Z&quot;2/RVA!VKZ*R
M#G3+]4JK.5GP\G9+N^F]?(=F&gt;I&lt;#O2BG.:PWVQ6I1CK$T/ZP0J+;D&gt;M@B4$G
MR`]JMEP$P$^M0M2K!W,D#RDV?-;A`.0;J40\O&gt;2]H]N#B!2&#039;Y_VN/&gt;B_I335
MM!1OKBY_4G&gt;+\HJG(O^1@ZWIOG#:E6YJC`HU&lt;0D.1S301&quot;`4)32P=D74&amp;&lt;UX
M&#039;KTGQ96=LZ0ML\&#039;2$_N3*[UQ;LF-3RAY4W1LA^?ONWT,-7]^=O)39N/A#$/&quot;
M&lt;4/GY`KG@J(+L&gt;J0U,+HYX74%\V7EJOYA$V`K4X8V08K)\^0C0B*U&quot;6Z1%G7
M+[Y+H;ZEZ0@I^,KYU=G@\I&amp;A-P:7@&gt;&amp;5^1#&gt;05,(HY#F!%E09WD31O&lt;X;J&quot;9
M0GM3O!3!!1WJT94BLSY(-EY-^&quot;(UF-UZ,Q_JG3!5F`+U8MLA.?T\O2-EP+.,
MC&amp;(=*^&lt;&quot;9&lt;^I0\N97..%_&lt;TT92AZ;\]P]1[WSHYH+&quot;([MV&lt;QBUC,FS!W-]T[
MA(6Z^7)3T_&gt;]&lt;64X;+E.NY)I^AXK6#&gt;`!WDXPP&quot;^^60`_V0`_P&lt;:P.-M9DEG
M/9@,L?@8HRA?81/_N)D\S&amp;AGYBY@U[U=P&#039;Z%40NM[V%&amp;Q=^Z;;RR[]&quot;&gt;S6SJ
MV90-9&quot;/K!&lt;HGZ,9%ETK$Q:&gt;T0&amp;PRIG8D-A&#039;C&quot;\?\5(71`G:9)?K0FSO(@DX&gt;
M2OHR&quot;H,5L,E&quot;R^#252Q9RM;*U4JY4K9Z:.+-Y)&amp;MI-$5&gt;UF2AK?(&gt;])]KX@:
MYZ!]&amp;A^50&gt;2#ABQA*5P^3)+D7UQU+S&#039;6P@C-HL2N7&#039;CHE2!%!6CZ,I2?T&quot;%:
MEV7H[C4:BTRW\-!&quot;,ZX9QLDFWI-`[!QRC$Y;0H@C=&lt;&quot;LS@PVB$-79FA&lt;&amp;=Q1
M?`DQ*I:PH&amp;;Q8KY:S`.@$7RDC@2?S:&lt;_^4KA_3&amp;27304!O&amp;Z/&quot;I&#039;OA3&quot;,^+[
M\&quot;&#039;&lt;#6^FY9L?XOX2TD_I48&lt;&#039;TK&gt;][_1[YU&gt;75N?J0^^DU^G_9%T.KHZ/&#039;].G
M27U9QPIG_GP.#(VYF-C=S0XG/!`^(BE/1?B&quot;!&lt;ZV-&quot;/&#039;XY3Z?^?Q$&quot;#;XI&quot;9
M&amp;5M(TGD+?&quot;FJ#(&gt;HAI.QGMG:3!E&quot;P*IEN=MGK:),1=0&gt;EB(:O`1W,^)&quot;O7NT
M$PD&quot;/$QP.V#$@]`((DT6N#!Y&amp;*%!VOK-$)(6%Y7GDN8?#XCD=7&quot;:&gt;QUR)/\4
MREV&lt;65LP\_8RG.37^NUQIL\,&#039;49QAJ7=$UHSB*&amp;7)@66M![48R*R60Q+M:R#
M#I!?$:-NDW$9&amp;YT&amp;8O&gt;N0K2:T)0=I,(MTNE*M$8&amp;CUR2&gt;I)-4;UK1-]-;%U_
M]G=AJND[[!T2EF\V&amp;;.:,6;^..^S3R&gt;Z2&gt;((DN6A37TK1.EX=&quot;FX?5X.GGP;
M=0C]):.OG_6)`0Y@Z-E`+61]V5/P(ZE7B)&gt;6IH.D&lt;3`41\RU3H&quot;OR,V(!=46
M64ZPF&amp;%(A%.JF4FU2JX6,F*G1LCB0S&gt;X/$%U45Y3&#039;96LJK%*D*8!SW$+YPI+
M[G(:)%&lt;J?%&lt;54AL#L^%HP%9U[/ER&lt;2`UQ/=H&amp;H6S*;6QL*3F;+&gt;-AP\&#039;N7`]
MDQAXDS$:6)1&#039;&amp;AMLN`C&#039;YK-H_?R#U3TY%M:E],[*\THM6-]_W-IQAGY65FQE
M5E:L/3IO::7@!_*A+3+0,R.3TYZ0^X:&gt;9%;@URGC`;Y063W4U&gt;H9+74I@VY@
MDI28KC1H!1&#039;M-N36UTZ-7,PVE0)S8V#LJ:6^N+7GOBNGKA?;F*2@RZI&amp;EH.[
MV5Y,0^NUTE+(\H[%88ZWB1-&#039;&amp;:D;Y1$\8;0A\2?RZ_&amp;OVL:4[M&#039;;6CKA4ZV2
M1UM4+8/&quot;05JMJ`4E&quot;JM*I4N%M&quot;;H]%A?FD7+_+6&quot;_*V&amp;O8S^*L@!.4(9E:DN
M*L+%_8U#KEIR;T2&#039;T@WL[0GY^LD1(V=[;`NT@?W3C3TR&#039;QTDWHE3@S[(]O`)
M8KX2IPF\_&quot;Q;&gt;XDF=3#P=PBXBU,8:ILSU7W]AAR[;?;EUH?TL?&amp;JU^1XX5\X
M7E#%E_K+;R&gt;C!42SN8[-(2:G&lt;SBXZIQ89*%TVCT;H,[Q;#V+HV_:U9QNON&quot;,
MD]RH@%(A.V?BZ&gt;B(W&amp;#YX\SBW#&quot;-]8%#6BY@=\&amp;0&gt;;/;O&#039;9G5B@J@K/-VS!*
MEC.UISD&gt;`X;0!)[0%KN&gt;(PMP9E5Q#/ES&lt;2!?8_G.,O!E!O4!&quot;UE8/Z`&quot;H4&quot;I
MJ@AYJCX]6XBW*D,&amp;Y8!Y6%B[(C&lt;=J5HC:2&quot;T1G(W5)/X\T%4OCR9(`4D=99Y
MSE&quot;D$`I%JV(VW\SQVF*PU$*I6J#KI&#039;PU2HX&#039;NPABIBNHV7&quot;4^/,[OD`H(L=J
MW&amp;&amp;SZ$,W8FKNPD#ZR&quot;K.%_DL9&amp;:O\38+EA;%3I-+1[98SIK&gt;\I\K&#039;]4XQ\8O
ML3!.&gt;F\N&lt;P5M0,W3CJ!5HP_R+(.?,#@162U5S:F&quot;P9DO;_&quot;FQ7:62+;S!=2L
MP32CB&gt;X=Q3I;D*4Z7ALM_&lt;GN8K0JCYA&#039;[[V&lt;BF%!1A)E+/+;H&gt;!YE%6XV(X&lt;
M8*N$&gt;DXX`&amp;MB@B4=)E&lt;++I;KEZ&#039;?G`DIF?ZLAA,:8(M25)NI4Y]Y&amp;&amp;,7:R0G
M(F&amp;Y#3Z1`@7512R4\/!E[?&amp;40XQB?*@I2#W*E]/YSXV/VFY]ID]X040&gt;.5&quot;C
M/T&quot;-O[:6:&amp;W=&gt;2_176@&quot;ZXFBPJ6L-5RG8OA(D)Y\PM&quot;#(?`#&gt;A$X+YK7;(PG
MB98H-A254U[&gt;O-`L8G^*5J.`B+V-6.MC?`E3,_@C7XBZIY2$11&quot;=ER]!,J.;
MS&amp;#APE&amp;)T)JR!8(7KVH+&#039;(K&quot;HPY9(L&#039;WT%XBU&amp;%GN&lt;)[1WOL_ES[:&amp;SUFR&quot;8
MPR&lt;Y7+&quot;R_QS;B;C:M7[&amp;^TCTHV;0CVZ(1Z4?WJ`2$0YZC%G-5U3$]&lt;$$7&quot;^&lt;
MH2X)J.MDC!WX4LBQ1)11_.0`_=CXRL&gt;B*(04\30&#039;6!Y+`7$:,O?G7A[S%:S?
M?K/&lt;U;Q&amp;OWZN0BF&lt;`[AI()7&lt;A[HDKZ-)$&#039;HR9=0Q-;(P&lt;VH;R:JBCU&amp;!#9,&amp;
M/U-IM$FC\3K4F&gt;&amp;R=8CU&amp;W?ON,UA7:+=N:=WTHJQPH(Z\B?N1C1QA&lt;PO=!&lt;?
M^RJ&amp;.WIMK&amp;5%$*G]%[1X](9Q&amp;6*,C5%(WS8OU-C$5U;36%F&#039;P02O\HVE(UA7
MU)H&quot;P17+P_5%D`1J&quot;=-57`YZ(PT6F2((:9U65;[U6#O`0BP97_!^8J.@&gt;,^I
MCU`H;FRM4R_D&#039;JSH2ZZE+Z&amp;,D9$9S6%I%_2#*2+EJ-G3A%WI#HI77$C:Z6H7
M./(E,IVTK&gt;(JB&lt;UE#O1_Q-!,&lt;0)OVWQ&quot;6E%*O$O#I!&amp;A.^&lt;`JZPM%P4!BZ6?
MQ47AU2%.Q6F`@93\3Q3BQ2&amp;]@UB:)QA14&lt;2%#$TBG5XR4@/YY?LX8P#?S#-(
M&lt;(&gt;Q@^@$Q(&quot;0W;1)?^I,[IP&#039;O!Z?T\(8^_=PQ-&#039;5-&lt;J%&gt;(5A==`Z!WJ#IXPC
MVC[&quot;`W8Q*UL7-]Y=V7JS6AJJ*\=UR:TVE$%3*&amp;Z9YY:M$SH&gt;@&amp;9&gt;3SQYL%&amp;4
M3#3M0`H+RQ9Y$O;W^,?*&quot;?W2:N:C%C(:(CD(R/2HH?H!%]G?HA???V_M\3J5
M;UYH/&amp;U)\;TH8RM=MG+$#GDUF;+WD*Z_R4$=PT&amp;,%LX4P1)9X2EZ([HN^&quot;&quot;\
M[@\US9ZP]U0#;(4&lt;=LL9+0*\9%K-LE;&quot;:X,]3SFC%;&lt;IL_Q-K=^/.SLT$/(W
MC)LV;-6#^%[4;APD0X4:2E2*BPBWWLAW95@,/V)76!?.&amp;G:-U*$3&#039;:GY_1$I
M&amp;UE!C-1)Z-8&quot;NN5#GUH?J-*/K`WUT4-^CLYB1:EH7L;9J,&quot;:^HN%N+E23O=%
M@WU7ZE]@&gt;LGEGB]$&quot;-V%=,%9K&amp;&amp;6&lt;H$BMID&quot;_;`8$^2+&quot;2E&gt;HS&gt;&amp;RF`9YR*C
M&lt;S$VR\OR7*!(O%9JA;+0)&gt;&quot;4#L4K1@[%5)%.`1)R,S&quot;A4BN83&quot;&amp;?&gt;T&quot;[@8U#
M:Y5@G#?;6B!:GO$I06\^Z^M)4$,A=/NNN@M&quot;)V#);96M2Q\9=Q7P!.^,6..&quot;
MJAB^0I1A8LG/Z&lt;&#039;ZA-9&gt;PK27!HWD.[QC)(L)XD/YA)5GJ8AQG37K&quot;&gt;V3&quot;&#039;J(
M&#039;.G873&gt;+5JH^Y&quot;&quot;3\T4G99:ZJ%E3#S+#!@#ZB`/`&amp;F@*8&quot;AN^?1[,7$8QH]P
M8GK&#039;[K?-H&lt;4CI+@)&amp;;;0U&quot;0QYU&amp;FO5!6]R!B]16C!:?S4?EGRV$A&quot;N)H1$F4
M?.4N5A5[F8B9N&amp;&amp;]6C519$2CHMCKSX;8S.S@V)6&quot;9\*:0X0X$]86,J3VAO8;
MK=:XOE_=;^UGARZ4)6J&amp;&amp;_N-I\&quot;%3W8;?Y3=QGK+#5R&gt;&#039;`7,7\JR,7H#^8(C
M1T-9?Q&lt;;C=\SE.&#039;@IXON93*2H7IM7-&lt;O7:C4O*W&#039;EQ-_2&quot;^W=F3873SO]^&quot;X
MMU9[!^;;:@M&gt;KZJMV&amp;O4JENK&gt;NU`#C-U^.KZAIS@%VSP,&lt;.H7,`SSEQB5LAL
M#[6QU^3&amp;HIH$/Y&lt;@&lt;Y`*3AV5C(8@#\=5J\$3!F4^GTQ60E,T14Z60C(&quot;\9QY
M*,K3NJ&quot;P6ZB:XYL0:8+1F[&amp;AQ4@87JLF86-9EI`L,B[,ETIM1GP2_N\E?&lt;`6
ML/&#039;B^4RZ10E1J&amp;@V-P^R@R,\!M3E#5V.WL\=&amp;A81&amp;&quot;&quot;U+NCD]QA,&lt;U&gt;0TA^(
M-]0\[BD2?HA6EK*+*,S`1FXUS$;YI.B$E03S]S)&quot;JR/^A3WBPU@37G(&#039;SX([
MRDWV3(*C)0+I+T:K*1JJC%3\)I)ZL=&lt;RG30O120`+&quot;P&quot;=T`_,M]=WA2M;2`^
MV^9LD$T`4N=/,S3D`%88M7&quot;D6$&quot;R#)N(]Z8S1&quot;O_6+-!8&quot;/+]5GHC#WE0P3_
MBDG#ZQ&gt;YK&gt;+1`]4&quot;3\P%SNB!&quot;A^H;P3BDN57%34P$3109I&#039;[S`KUC2;WF14:
M&amp;TWN,RNDC::]IEJMD*J-*,1I[\R(;=@[R]M.T0:N)0]_%$`BS^.//_,_KRQ\
M63!R=#YDYG`XQY!R1&#039;:C&amp;)&lt;MYH/U8^&gt;BVLK;]U&quot;(LI$`&quot;F*!3+)$J1&gt;^*#N(
M/&#039;PH0%WXB81&gt;ZS&gt;+?X%PMU=0AA&quot;%&gt;`WU6KR&amp;&gt;BVCAGI-JZ&#039;6,*K@G\ID@S+H
MK7EA5&gt;XKE&gt;-CY&#039;JR4E)+14I.&amp;V\W+S6\)SDY&gt;7]J7W0N+_5AQP_]//:&amp;7?E`
MUGMNP&gt;]&quot;2L#*S&#039;1J[1G5)&quot;)9]&#039;MG;WO&#039;/W&amp;LA[/.&quot;1;WW7U*&quot;OR0FEPO#Z-8
MO@&amp;^H-?M0V.HR[;MA%-8][&lt;!RA(3+Y_+6:]&gt;O;)R&#039;&quot;PFQV8BD4TRJY=H,C$S
M6?&#039;Y,YMI1?[9,_Q2).L2+1-POEJVS%QL-I.T&lt;A:G9&lt;+(6:*Y``&gt;K@%TV9(A&#039;
M7F.\WVSLU;Q4AE@5IW&#039;#36*&amp;OWM&amp;Z&quot;#P&quot;9IZ&gt;&#039;S2&gt;7OY.H&gt;@1*7K:W&gt;8L\J[
MTLG2@W:*6R6!UTD,BC&gt;C-Q&#039;&amp;B9;L&gt;OE)S^1.M%^WLQ&#039;E9V5`&quot;=5&amp;KQ-X*5&#039;Y
M&lt;]^+?GRZG6)S&quot;3RU]/&lt;]&lt;Q0UM!5EA0-#D/9:#.30;=1&#039;C;UJVRV7*X[G5!KC
MZMZ&gt;&quot;7*0FIT&#039;-_43#G2MAO&#039;RX?\,&lt;K&quot;EUD_WY-@^O^R\Z&lt;$(P-_TIWWYT^5[
MQ#3P[M&amp;1RUIC[Q.WXC%,&lt;[88]8`TO&gt;A!*6Q/0=)BJ`/@EJAM]3V&quot;8*C5]RO%
M:D6+YT_2//;&quot;AM[8_A38X?P(75SD!3Z^L6&lt;4@`P%&gt;_X-@K.([#\;!Z4?AHM/
M?-^JO&lt;/B6+_RVO)NW`6\L866Q3)N31*V;K$7D%^4B._X;ICJ0&gt;XH[U/%%G&quot;U
MJI;YS6PUA5&lt;[.P;2@!#AL5US2&amp;EM&gt;_,YE4Z_=BQ?@P+`AM&#039;GT@]SF]B,UZ^M
MBX%]&lt;MXY*@B4B%JC7BGNPY@VZJUBM?K[C:G1&quot;&amp;SM`MB3%]9%_QQ#&lt;74/C5[I
MB6]1I0H#P&lt;,5K9G4#-%,&amp;9?F5,:!?O&quot;8=3PSEV,A&gt;&gt;TN2DCD_KRFT3:&lt;6#^H
M:78W:;72]8L:H8C&#039;FAV5;%P6Z`4\UNK/CT_1C_W&gt;H(N-SZ)30$[1L3Q.I]1K
M0:?VZJWV:%BM[P&amp;=:E=K36??;56RZ524/4&amp;GHD^$;E(E0H7_Q.%8_N&#039;,_5T/
MU&lt;0Q-):Q6R(UM0!B$43K,:L\2_**AR?G9UV[=Q[11/DF/MR5^SUQRO%OO!)D
MV_1`VC439&gt;-C5O:GA4`MV*-6NUC3=R*25:*J;F&quot;+4:B2:0RI*F$)W/(.!()1
MC!+#&amp;575]J+0+:(2&amp;\9F%N21V[&gt;7J$_-YY%B47JIYUX&amp;]DT0+FURM)[DX66M
M4$&quot;8$2Z0;K:$X]]9WUY&gt;8S&amp;OMDJ/5&#039;8=KTW^62M&amp;&gt;1-/9I/JU&quot;2U6_ZI;QP&lt;
M#[SG1MY6U1??6&lt;MKNB;76A%+@)%$M`1UI=M4\WJ6L)&#039;Q6:5%*&#039;44,CE88!0P
M]C[`P,V+T8V/&lt;1PQ@H!Y3&lt;Z;,1\WP7CQ(FF5\=H27[&quot;)\.NR][;SIC\HQ&#039;O`
MA@&quot;BHS%+#FVV^&amp;/*9-&amp;U,&amp;;/6AKP#T]#5.+GZ$]@0+]B+:020%G&gt;(\O!VA)&quot;
MN[8^$7=H$0Q7D!QYMM0U&#039;$OSZ@EI[M_VK,-_(Q=&#039;OA2:3`1/_S6@X%^!_]QN
MMY[PG_^(YXOG_PNQG_%Y!/^Y46E7-/R_.N(_-UNM)_R_/^(A6%&gt;^12+S`YQJ
M(;TKC.`4&#039;&amp;@2M&quot;40M/3M-DNQXL7\NZ&amp;A!RJ$/,;V1UX;W=P$E/`KQ/&#039;=WM96
M.JW\V[!TZ\S@]&#039;0TF$N%).U&lt;H[97@M%2,J[;$F&quot;]PEX)^5!,:&lt;D11-L,$:]J
M&amp;,&quot;@A:LY&gt;A&#039;A%1T.*`-K&quot;U&gt;G+&lt;L83@K-OI&quot;]S6BSQ.8&lt;QJ$[4YMN-EF&quot;5\N`
M^-)O&quot;&gt;.,B&amp;:J-@I3G#N8%S3=INOT&amp;V\RW\)H_\&amp;&lt;H%PH4`E=@Y&#039;CJ+`F8)@&amp;
M-=,JUH[64W(1P!L(BRY+H+&lt;_&gt;BID]2J4ER\&lt;P(9$)Q4Y`A+!OE:C]*^&amp;8?Z&quot;
M54-XO+K*3-=O.&lt;BOMAHEO&quot;2=4LU*A46`O`J%.8&amp;M_#LC%D==BU:2WDGJE0$W
M31C&#039;U,AWN,ON/*(*UB&gt;0^KP)81$KT[U1,/?CESR$$H[;&amp;[I7QGO8K&gt;WM(6S5
MTM0#&amp;D&#039;U12&lt;/+%]8G\*?6(^W,5Y`80KN7&quot;--L`9Z=,?D3W$!QZ#3M[=+KC4+
M8%&#039;Z,RQ[S@&#039;MR5XFE9)MJ3N@FP!O9/\K%+X&amp;Y+%Y&lt;OXV5[1RHL`&lt;:H?_2VQF
MO,FC0&quot;;4T2VT4&quot;-DDK+&quot;&quot;J=8&lt;!02Y.+JN-_]Z^NJB=^&lt;`&#039;&quot;VK%]@@RA@:1RI
M&#039;W9C&quot;XE/&lt;KE`^1ME@\*F0&amp;#)KM-?I,8LC3\B&amp;\:O&amp;:&#039;CXWW):;8?RZ2RA=.Y
M5=VD&amp;C/;U*J_?2QI2C9&gt;??HBW*PV,237_J@D=MKK^N;90F\$6_OU&lt;K&#039;RUF1*
M9!.@H0)/(3N[R#;#D$YSV%./]&quot;F632WT+\M&amp;,C%NLR=L\/]9SQ?S_U]PULDZ
MUO+_P/@#MV_R_W40!9M/_/\?\?R&gt;^-_[M59KW&#039;9&#039;&gt;_\K\;_;C/]=K?_/!0#?
MD1#@D=4IF_7.EJ%-?0KL&lt;!G,-&lt;TH`5FC?XHT^6:&#039;)/H6PQ&quot;W!(IX#&gt;_&amp;=AK5
M2K&amp;6`J;^93CBZ5;#]&quot;G-;;Q(QM_T69F118;&gt;VLLY-LI3.GIIQLOVNS:-!:7@
MX7^!%K4O5!TODDCDFH&lt;:A?.HW+^I5&quot;M&#039;;SH-C.2!FMU/&lt;WL&gt;3/S1@WWK!UI$
M%GIP99,K3N[G9Q^MB_.3WN%/UOO&gt;^0EY=3][]@R6++&amp;P?0^6Q;-?9CE=F0_%
M4P%,U6VT:573E;]\=S4X.O_QS#[L((#-N_/+@?W7TPN\CAYT3VV,XSS0&quot;V/&#039;
MN5K,ZC?9MT[C\%#T[78ZM&gt;=PAHRR.O3^]-2ZZ)SU#K$G(`0*W!YDP$$41+$&gt;
M/OS+.U6JZIVR9*?^.)AZ6.`=X-W%(@&gt;!`Z]+S)&lt;%WF^S6Q&amp;B1&amp;;E]8H7Z[-;
MH`)B]:[=[]6#6&amp;&lt;B&gt;V[UGD.^.&quot;Y+]8,W4J@3O&quot;QTC,)G6NR)HX1\Q.?AK4+T
M53[.,ICZ([P=R+^@?NB8]S_K/VPLU&lt;;@6;&quot;F&quot;A^+,*30K(0-N0S[%$&gt;KW]!H
M9ES;:WKM9KM9S;0B5T7J\?]`&#039;GK,COSDY/#)C/S)C/Q?&#039;/[OUKE&gt;D7.DC(-/
MX,K^\FN,Q_^%1N,1SKUI-1Z]CW-RPN)8AE^7FX&amp;-K&gt;.Q&lt;]]CI/=S&#039;9_7LG*L
MTW*6T&amp;1@CAZ-&quot;[?FV?H66&#039;I&lt;+!1+5CC\&quot;9].#2&quot;*C(0)&lt;`\M,\)O`87X&gt;CP(
M!061CD7/6&#039;,.HD1,T#D]#U3&#039;DUZ&quot;&amp;$[=^82^U^A7#*D&gt;?F5[:PP&lt;LF20`SC[
MD^&quot;T&gt;#(?GI^&lt;]]=7/G80=:US=MFSAL&amp;]\/%&amp;DC&lt;/R%EB]C*TVF1O?M5+1)?O
MG!W^9+\Y_Z#PN21VNHS2+L/CDHL`@J4;(/)EPP-O-&lt;?@P4.TZ&gt;=[=6&lt;2!A$R
M!2-*XF8G&amp;/`#RA,&#039;?5:(]&lt;E@TXQ0WSOM(IT23S6*6#T0+2:?`@U+D`+@J6+Q
M@]F&#039;]&amp;J`&quot;3J_.I-AVFN5V/`8T/*,MZI&#039;[S(@Y&gt;5&gt;UTS9UR&#039;&lt;4\CXN%UQ,AG!
M+49FQ&lt;\2-NU9K&gt;6`^E%(#[JP(D8@GP:\*BLF_HBKSB-TTG9=1I330M=K8?X%
M=C2N&quot;`%Q!TQ&#039;!,2:QU5*!X,G`*?QM:`&quot;&amp;.0R@AL1P5T6B;9%&lt;/?1&#039;M]+^VR?
MG`N&lt;E48RWGZX&amp;H:$7;B,G$-%G&#039;UGB(;&lt;`H)[&#039;80N1?6/3V,V[.=JYD.%O`WP
M\!PM@)WCD/\&lt;SCI&gt;@0YV_Z[#?6GJL&lt;WU!(?]SN4[2\9&#039;9\!:&amp;%N2&#039;J,V&quot;.1T
M!BNW7(YH[:#6&#039;_FSEP1&#039;^)*1CM-1L\V1KS5;Z0GLWAF-2@HF&lt;`12H5@$9P@&lt;
M@96/@$D=0?R1Z[H+BO!*LCWX2GCWH`%6(/&quot;0,A&#039;J.Q]T9`J)[]&amp;)(RY&#039;(Z0C
M,F*\*+S&#039;H_O:&quot;+@BJZZ&gt;?MJJNA06LH2BQUY3+24:9S$9!E&quot;I(HRPMT8&lt;59$Z
M3V$6\&#039;&quot;1W&quot;&gt;BU8LYE5$CJW04Q(&#039;G*;5JPFNK]K?9EG+`8B?J.UB&quot;PE?*%20D
MC^6W&quot;TCAW!4Z%=6*5J-H[14)&gt;1&quot;Q`Q&#039;]+UA00=7:&#039;M&gt;`C&quot;OU*7V&lt;HD;A.+7E
M.8&lt;!(S`D`BDLT)U80%I/Y%;$\&#039;03C_W_I6,^#%L7[\J9/0]YB2SXFI5&lt;\ZUZ
M_7D4A&amp;%)C/PU,Q_6W,&gt;V%J5LH`0UO%KED`-W@5P)[$T53A&#039;I2,0;8&amp;]R`0&gt;?
MC3%_&gt;=HY8?1.Q#].?C_M&#039;O6N3BU+@+PF$YR@!1FOJ:;:VUV$#RY-&quot;%&quot;,6P/B
M@8!WX=BL&quot;X&lt;L!O/?-Y^K\&quot;=`Z3(6+U;T08*,,OZ:J.E&quot;#1Y:*2#I_.0SR/@L
MF)5$]RG,)GX7HC`0.@R,)D0%#&#039;_(W&#039;&lt;$LY)8&#039;&#039;3_-SC7T.8M:W]?X,W+&gt;+;&quot;
ME`%.E:(U]^2)?XO!]:&#039;R=/CZ\Y,C4&gt;#^(_#U\O)?L#[IQ47M:S]2&#039;$JAHJ@&#039;
M;ZF%_T1ICUP%&quot;;R&gt;%+$9V/4&amp;N:U*;(VS@!G/.8%FHZBIDRT!&#039;)91(DUW-,\Q
M(A6,QQC@#K&lt;&quot;F5P@\1,A;:U=/#0)M)JECK1)[/1!HD2JJU&#039;&quot;NFSV200V;N*S
MP]*9$MXTD&lt;`X;1[=K&amp;9,$0Y4M&#039;02+-&amp;:7I(&amp;L18$GJ\@&#039;3&lt;!+U0TJ*&quot;(*9E&#039;
M.&lt;+9(^;RFY\&amp;&lt;K@;L&lt;]`MOH:3+L.Z4+?NV=&#039;!HA[\N0CP!82&lt;F0[(O1V`&gt;0B
M,&#039;0JE32FS,2I%TQ9.E;]0-@8%%-&amp;F\85FK)(A:J/U2*A4A(UL&amp;)YAOZ^\O:6
M$;&lt;5WLMRFL2V5G#W]&quot;^CX#12/NL#F8&quot;^C@.F&quot;R2&lt;$GJ7R?%,Q6CO&#039;0[TOD4E
MGS#4WB1:H&quot;0ZL.R2!M&amp;&gt;*![:G8&quot;[ST)&amp;S]A[&amp;J=(8%VL-\D&quot;B!&gt;@R0;DN3CD
M81(.&amp;`Z&lt;Y%#A&#039;T7J,D*=#W&gt;Q@ARE5*9%D!\!#YW%`JL$?CA&quot;42$U&amp;9RA:$0B
M0&lt;,GS)^Y240L&amp;NGN0`&gt;!!TDJFRVFD:9VI0\U1=LDM@BJ-:&amp;BJ85Y#&lt;NKH(+`
M,RC53`I!#K)20&quot;(065RP6L!5(6\7,9T(G$`E(GZ$`+Z285*FR8#;&lt;6![YLZS
MYIR_Y^.9&lt;$_)&#039;74I!%4AP&lt;J-JX#&gt;$5]/(MWA&amp;4QAK&gt;31CO!IRI][%F)$46-I
M\+(PF$R)?&gt;Z&#039;(J@IY:_]+89TG[J=8FGD&gt;N&lt;I%G0[(G,2RM*1`/5&amp;ORC2I@I=
MGUH3[*Z3;L1=)TF&quot;*LS%SB\?&gt;/ES99IO/G25@OCPJ4S]7&lt;T41&quot;&quot;ML/SSI&amp;Z`
M.OM!0W@#5D(NZ*L&gt;2&amp;]CX&#039;)N,&quot;HA2I0C*.3=KTG%3D\&quot;6;W[3UF*/!F/L3T+
M@33/OO\8/APU1:LYKEF%00H&#039;1&gt;B-DE#Q@\[@,@9WW](6X\7)^2#V655^*1&#039;M
MU8K`I7=X&lt;46^&gt;7RZWGLC5.0B!`BU$&lt;Z=$A!_8(A%WB3\P?NWP/J&gt;GP_&gt;]13:
MJ9*)\&quot;HY@E7-&quot;U6!(7LEN_C3V2&amp;[/+_OG,3&amp;[YPAK5Q_0:L`F%\/*&lt;4U8MTA
ME^0&#039;+NI_9L!6)`L&amp;*?X&quot;!/FW_&lt;ZA.EMKLF0-EHII+D6)$@$:T#4QI)C%9_2H
MHG6D*XHU3&lt;&gt;.U+:=^.%25W;BT!/YT@F[0J?*!GW&gt;4_CB&amp;Z&amp;#)R&quot;?-&lt;SG;T:B
MKWP[EOVWE]#Z5B3Z&gt;NU;2V@UOK6$J@YQ_G4EU&#039;33Q/7K(89]G;74JBT-VWL3
M9.XU^.*U_6_$LM]PO:\IH=9L;H!EGQP@O836!B6L:T.S6OO6&gt;:[H2^7K2J@U
MOJV$1F6_]6TEX(IJ&amp;R6L65%)C/.TU5JOB;6F\-/W,!;\(_CIZ:M58+BW3`SW
MF7?M;(;A3CMF_YNP[#?=&lt;]DE()9]&lt;RV6?29%T$IHK2W!&gt;FS7BI%LFB/)2$2;
MC*2E9K.=,0[Z;&quot;97RE?&gt;=-+SM9&gt;//`2&lt;N^\1@^G=!\R/PZ8P`77=0$9H5T@&quot;
MWW+Q&amp;=7]]8^Z`D45.%L,*K9-*IS1C,-SI6,*A1&amp;[0(1[&quot;K9!YB,K5E&#039;&#039;&amp;2\T
M..H&gt;V?TSS&lt;J]JJ&#039;12N:&gt;[C&quot;$&quot;&quot;&#039;05*CLMX&gt;&#039;.%`OG?&quot;EO/[DVZ6YLPBE&gt;*BL
M`$A#@6Q;JL1ZTCLS%&quot;M[U7TIGW=GM_XBF!$3J*ZGI&quot;!&amp;D:P0$Z1W)*-JHO&gt;\
MYTKXX3@#IR%[J,H$)CQ^ZAW)Z_US4LI/&amp;!9(,8I%!6G-&lt;(8*?RE&gt;#T/&gt;IV+/
M\Z?3\Z.N!@$O(._3L.W%I\-WW&lt;._:#DDU&#039;Q*C@AF/@$RG]HB`V!&gt;#D!O5J++
M9X4I&#039;XH+93A+4.5,(A+:0(!H.UL:R`3Q)NK(]AJN?=1,`K4W&amp;ZKG,7(9C:6,
M&quot;6AZQOZ(6IY$J!\[/BX2%*Q6:?#T=!]]W.F=:.VHW(\]KXK0!&quot;E54D!V&amp;J]$
M70AUCSK6N:5$W&lt;06@&quot;1VM]\_CQ:EM2&gt;EM2./.X*[RP0U$T&quot;Z$3R$A&quot;]@ZRQA
MUT0[#_5,+&#039;&quot;&#039;!KX]SF(L`G_&quot;7B&#039;Z&#039;-&amp;)?:D&quot;T$$[,&amp;ZD,F*(+AI?(:P%PB1@
M[%X&amp;MD,%F[@N886RR#2?8$![,M]`(!=U)Z15@NJ7.&lt;*:S./+#1MJ_]CI#?0[
M1QU?^U&quot;[*I&lt;U:A&gt;+&quot;$7(UY]XC$T)]-V;&gt;0M$7^8+?&quot;]&lt;325EDPZHH2&lt;LJ+&quot;M
MBP&lt;BQ`:*/-]JE!S7Y1@D1#XLM!X..:#@0#D41A89VE5-48NT3!&amp;\+=V4(NU^
MGJ_&amp;(WU)E&lt;P;$@DZ1W)&amp;F\D;&gt;O26&#039;+%(K/6%5=CBIO[:OV7U?JJ-P+O.V:%F
M)*#44[0Q?XT,U%#S2/$/2&gt;F8K_W-Q&amp;$O6Z&gt;H,AJB.L%SED(QR`S)@7F`RZ.;
ME8]+J&lt;W?PYD)`SZ:-%A:*&quot;X,1-S$/&quot;\#X5RL`P[1Q+._GU!AJ?H&lt;Z6AZYSS0
ML@PFMZP%Q&quot;03A,.1;/A\XMW+(PDM&gt;&#039;[:#):&lt;#7KH$IR\5_F4AS:4&gt;#W&lt;^6B6
M&gt;=E]^YXC\WNS&lt;)6@PL9XROW;2G[7S]]\%8/]F3,18PO@F,6H]S&quot;HTLB&gt;[P%H
M].\PL#N//T@&amp;J+Y+O4_IG)Q$MV%$8AO&quot;$%94UH%NN5YI-2&gt;37MYN:;&gt;]E^_0
M&lt;.]RH!?E-(?U9KLB54F&#039;&amp;-H*G0;4#&lt;EUL$2/PB7&#039;[%D$P%.M0H($F&quot;-Y2+&#039;J
M$VCV0I%X&gt;LE[)P7O_A`QQ0?]MY2FFI;BS=7E3^I^45[S5.0_&lt;K&quot;S8-G&#039;J%03
M%^$E&quot;8E&gt;&amp;E)&lt;U1C*01E#V&#039;CBVLY9TI;98.E%?LTR9*DS&gt;Q&quot;*WA0]V^&#039;Y^VZ_
M\[9KGY^=_)39&gt;#C&#039;D&#039;#&lt;T%FYPKG`\R=@]2&amp;IAM&amp;/&amp;*DOFC`17`B3R$X860LC
MZH&amp;/-#ED0P*&amp;[Z6+E&#039;7]XOL4ZEN:GI#&lt;7\^OS@:7CPR]&quot;2&#039;A(MJ@,B&#039;&quot;&gt;VB4
M)/R0Y@394&amp;=Y$T9W.6Z@&amp;4=[4[P8&quot;0DR09K\D&lt;Y1VO=!LO%JPI&gt;IP&gt;S6F_E0
M[X2IPA2H%]L/R&gt;GGZ1TI(YYE9&quot;;K6#D7*&#039;M.&#039;5K.Y!HO[6^F*4/1&gt;WN&amp;J_&gt;X
M=W9$8Y&amp;,%2EM9!/!(I,.3^G`]1O:PN_7O5IC;\\9.9FV\+&amp;&quot;=8OX1CW+(K[Y
M9!&#039;_9!&#039;_QUG$XX5F2&gt;&lt;\F`JQ!)F&amp;9OYU$=:S[&gt;93X.BM[V%&amp;Q=^ZL;PR\=&quot;&gt;
MS8SLV9H-Q&quot;/K!8HHZ-=(]TK$R*&gt;T(`*!U^!I&#039;`M.^6D,PQSGS)LCMJTW&gt;2CI
MRR@,5L`E&quot;T4#8Y&quot;0Q6RM7*V4*V6KMU30[VPM34%Q2](`%UE/NO(5&amp;+H4E)1/
MRB!RRD2.L!0N&#039;R9)ZB\ASS%@Q@@MH\2N7&#039;CHIB`E!43*&quot;&gt;4G&quot;A`1!SJ,QL(C
M(6-&quot;G&quot;BU49S&amp;&amp;!\=X[0CVBFQGA37Q.&amp;@@RE+:!D$DP/F=&amp;:P01RZ-4/[2@Y@
M(4?%$I;4+%W,5XLYPI3QB3H2;#8?_N0[A5?(2&#039;715A@D[/*H&#039;#E7J&amp;#Z#^%N
M&gt;#,U0^SG=+^E7.R#\JG(?D@)][[3[YU?75J=JP^]DUZG_Y-U.;@Z/GY,R2:5
M:!V%TVXN+_;DM,,)#PW&amp;[5Q,=50B:6&quot;NL&quot;_O/!X4Y&amp;,&lt;LCUCLTDZ@(%113WB
MD&quot;#$)&lt;XPF:`IZPB$/:*&quot;?%8U*C1BI/^P.-$*)KB;R5&quot;2*)&lt;&amp;&gt;+S@!L&amp;PD`9Z
M.9OEPG3&gt;(-B9,`!4&amp;$F&gt;2]&lt;!&gt;&amp;0D[XC3&#039;/`,N/&lt;X:M(:G\&amp;B&lt;/?+QFFGC2ZG
M0-H;6-*TT,`;D\C=9#X3DLH$-4X\^AS&#039;E2U2`[&amp;O5R&amp;:5&amp;B:$-+O%NG&lt;)2J$
M;(I&#039;LXFZ2[93]:X)O2J^J?W9WX4=I^\D&lt;.G6C5W-&amp;#M_+*&#039;KT54S&#039;BWXQ0M$
MWU.)+0V?.(K3KH%U,J(IXIC&amp;OO)@H&#039;^S?/]9G[T(,,^7KMA9\_,C*6:(`Y=&amp;
MAZ2G,%1.S.LB!&amp;%.8&#039;U%*S$G&amp;-,P)&#039;HK%=01SKJ,Q*31O_BX,F:5I&gt;,/EBC2
MN0$]I4$+HGF2F&quot;/)RYK0KMLQF.**A-[NWJ-%%&lt;ZS5.+&quot;8INSN;&lt;$&quot;J=3Q2`7
M*IJVK,UPZ4Z$Q&lt;9Z3HZ%12I/?9[GK&amp;`EL&gt;SU`-H1ECU/L8%FG\RJ8FWC&quot;Y75
M0R6MGE&#039;&gt;,LM8N&#039;+Y5`[,,Q^+N/-&gt;W@H[3]0]&quot;M$!\\O&lt;&#039;/K&lt;7M)F-@J![`M/
MA$:W^#N&gt;,Q19C6PA]6)`$,&lt;EFM*,J!6XDEQ86]&lt;*/U),MO2.5U!KRM%X:T&lt;/
M9ZVBR;RV&lt;KO+Z7P78S;E%`Z[MY2TT_0J2N+OIB^S!`(JKC/9P42P`O&#039;]L=#$
MK(&lt;WR1/I+Q-MD`6DX&#039;W+@HX%ET,P\XXRX-\0;U-?YAP\(!MA+4*$?Q1[;SU0
M/6)ZF)#UK!%&#039;H9M/&quot;]3NBTLI!K:1.S&lt;Z5!EP;J$TI3&amp;D-XI`$8,#/$B\$Z&lt;&gt;
M?4B)TI&quot;(T2#&gt;Z8&quot;!\/*SP`SG)1=0$+(%&quot;%`NS4FH&quot;&gt;.I$2=,P#9MM#&lt;?43F.
M4,67AKC83L8)B29Z&#039;?M&amp;S%OG&lt;&#039;#5.;&#039;(&#039;.NT&gt;S:@(!&#039;K63=]88:H7$18&amp;4)/
M6BQ6&lt;Z!)-L&#039;C,9!?D1?M]G`U9J0\&#039;&#039;AHV]:.&quot;#$B2YB)$`1T_.7)Q4:A[%%F
MS%7`,[M4Q6.:8AKCSV[O;-#7HXP`=^;/5C*D@0@L@L5+I$0D*JLYW4\&quot;LR$%
M!D+70JMM!9^(O(K&lt;B&amp;K&#039;,#.`/Q7$H(C+#[PJG60&quot;;%Z[TBQ$H96WF1)$R7*F
M8CLG(X`0,O?-U!84QX2]5]B&amp;!J%9J.`A6+ZS#&#039;R9P8@JLK!^0-U.@5+!&#039;QK(
M\+.%&gt;*LR9!`O6#D(C\6YB6_1&amp;DD#H362NZ&amp;:Q)\/HO(U+@&quot;2.LL\9RA2(`V$
M1C&amp;:;^9X;=%&lt;;!=*58%]7#7PF7]$U4WL[H#M&gt;DEVNN.[&#039;0*S-$P,6&quot;RE&quot;TLU
M=SK::0Q`&#039;B-&gt;XIJ&quot;M;0*XVB1&lt;M8,^-C*1S7.L?%++(R3WIO+7$$;T`1J0D4;
M385,0!&#039;4C?.A5#5G&quot;\9GSFC,MK,4T*UPHL-,HQ&#039;U&#039;?9UR,B9&gt;+&amp;W]&quot;&gt;[B]&amp;J
M/&amp;*!J?=R*D9FEHC%3EF%)S2!I0GEJ?#3UF0V2[JTKA9&lt;+-&lt;/TT&quot;Q&amp;YT)Z0`C
MT&#039;EH@&quot;U*46V.`&gt;L&gt;Q\7XHH+7#4B;QQ(BCV!B?VMLO1%$*(YC;;(9P+C\W/A(
ML_!5D5EB7%(B.(M&lt;&amp;R;V=`)V&gt;A`&#039;[L5Y`$YM0=#0MS`-O7&#039;:\L6E+Z:#]&quot;:3
M3QA?-UQ-/;T(G&amp;?-63K&amp;?YF`RNEPY3!,&amp;E1Y`EO9B+0?CYJ/J@*I$RY:$P*X
M=NCN.EA@0%E$7I,M2$&amp;!U&lt;;3&gt;IW&quot;E6(:J`Z/)XG++@GC3&amp;*Z&quot;PCXVD&gt;#PMP$
MP1P^R2&amp;%W?3G&amp;`%(.1VCD8F/&quot;A&amp;QFD&#039;$N@1?[8&lt;WJ&amp;5F#%]QA4E,+&gt;)Y+YRA
M@04M30[*(#^^%&amp;H-/@X=82&lt;DT.R+HA&quot;ZJ*%9P_)8WHL3,L3/S6.^`N*@NZMY
MC7[]7(52.(&lt;.7U^7-)[Q747*J&amp;-JG!%!66YD657T,2JP81X$SU0:;9H9]$,7
M%&lt;J(`1*:]AE(:&amp;`EHV^&quot;9T)!).2%J@J-Q-V()JZ0^87L-6)?Q7!&#039;KXW5KP7&#039;
M0N=26DIZP[@,,&lt;;&amp;**1OM!=J;.(KJVFLK,-@@N8&gt;QM(1,D$H\)QY(%Q?1-.@
MEH0*Y5EOI&quot;%T,&#039;YPU&amp;E5Y5N/E42LKB`#&#039;=Y=;#@6[SGU$0I%4J!UZH7&lt;D15]
MR;7T)90Q,C*C.2SM@GXTZBCMGJ[6D&quot;[#&gt;`6J)%X!$LW;*JZ9^B()3N+%JP5M
M@B;%2*8HVK;Y#(])2P*$/J*&gt;Y_,E&gt;3CRQ:4$IC=XAF(4F9G=IS`X%\&#039;7L86)
MBC-W@OA`$K33I/SI)2/!D%^^CS,P\,T\V&#039;36/&gt;K`&quot;0A8(7O[DPY&gt;`*%.T4&lt;&gt;
MUL[8OR&lt;@3#:M&quot;@F!M(-&amp;7C[&#039;9W9$VT?(!2QF9&gt;OBQKLK$PZIKN1$-&quot;?4Z8&lt;R
M``\%@_3&lt;LG5&quot;9PZ0U&gt;N))T]+BO:.UD%(A&amp;%E(^/$;D/_6#FA7P+2CWKK:(CD
M(&quot;!7H(;J!UR&#039;?XM&gt;$*+C@9[\A&lt;9[EQ1_CGH(=1^B_/E#7G&quot;F?F+XH!!C,:K(
M:.%,AX3WC@*CZ(WHNF#6T&amp;(DU&#039;3`PFQ8#;`5&lt;B@W@B`.D9YFK837AAB1&lt;O`K
MKEAF^9M:OQ]W=F@@Y&amp;\8-VW8J@?Q[:K=6DFN#W79&gt;+&#039;&quot;JP9$&gt;M^5T57\B`?B
M^Q2^I=&amp;H(?IBTE61/R*U-%\I(`$3BE8..XZNV3X0KA]9;^Z&#039;$EJV**\FEG&#039;&gt;
M++&quot;F/J)EL1V9C-U0-,0,=6$`G#E%;N!+-8&lt;4GWA[D.!?LS0Z%%C0I#7#8DQG
M4DPH1XIQ%8K&amp;!AOJFF6&lt;28T.T=A\(Z8\GX&quot;OE4I&#039;`LSCY`[%*X;_PU21/D&gt;A
MSF-&quot;I;ZA,IFSPS+C/#.?`WQV`OU?LAXB&amp;.?-+A3H/,CXE&quot;!(G_4%)\BE4!OX
MKKIPI(#V@F,K6Y&lt;415X%UL&amp;+25:&quot;*2AI%=R=_.D&gt;+,1JDB;D-)8DJ.)%-EGE
M$/?+I[0\CT%@X[@IL6614`:*$+.LI5DWJUF!4[].U,G@SM%UGB5-ZL34&lt;Q&quot;\
M&amp;&lt;DM#A??;I`&gt;1UP\ZU&gt;UXOB-,PU*&gt;_0M,V[Q&gt;&quot;K^Q90BY+(33(&lt;,Z&amp;GJ`YD1
M*M/V*ZM;.K&amp;^B]&amp;2UMFZ_+/EL!`%X37BATHV=Y&gt;#S!HO$]%$-ZQ7JR:*[&amp;E4
M%&#039;O]V=`C,&#039;&lt;*RTALC83QD8C1)XR#Q*]-S8WJ[9%7;]3WZK5,&lt;R-9HF9GM-]X
M&quot;KSY9&amp;;T!YD9K3&lt;T(@A8NDCUE[)LC#=&quot;T0N0&gt;:*LOXM)T&gt;\9BE-`3\&lt;C&lt;:K7
MAG7)TH5*3&gt;,2?#GQA_321*(G7/F5#BN_DKCR*P-67C$?*X*5YV&amp;F#E]=WU#8
MA@7;)\W$#&lt;3,);Z(C$Q107U-CE&gt;J2?!SB1A,#GF#B$,7D@_)*HA-%EH-GC`H
M\_EDLA*:KBDRS112%&amp;CGS$/%`JT+&quot;A2&#039;JDJ^YI(60[T9VP6-A)N`:A(VEL46
MR8WCPGRIM(G$F&gt;&#039;_7M(&#039;;`&amp;;VI[/I&quot;.?D+J*9G/S(*8XPL=%&lt;G$%NI2_GSLT
M+&quot;*416I=T,GO,1CLKJ&quot;D/Q`;JL6((%R@$&amp;V&quot;91=1;H*-W&amp;J8C?))\&lt;M0D&quot;_C
MT#X4PR&amp;,-&gt;$E=_`LN*/&lt;9&#039;XGF&amp;&lt;BD/YBM)JB7=5(11PC&amp;1Q[+=-)8VC$R,+&quot;
M&amp;%V=_!&lt;P4HN[O&quot;GB&#039;=1RVYP-A=WS:8961L!UHQ:1U!Q(EA$6B[?U$&#039;U28LT&amp;
MV9#\+&amp;8(K*F\WN!?,6F04VVK&gt;-!+M&lt;`3&lt;X$S&gt;J&quot;B7NH;@?AR^54%NTS$NI19
MY#ZS0GVCR7UFA&lt;9&amp;D_O,&quot;FFC::^I5BND:B,*&lt;=H[,T)R]L[RME.T@6G)PQ\%
M$/[S^.//_,\K&quot;U\6C!R=#YDY&#039;,XQI!R1E3-&amp;$HQY#?[8N:BV\O8]%*)L=H&quot;&quot;
M6#9#J^(797^3AP\%J`L_D7QM_6;Q+Y`C]PK*`*&lt;0KZ%&gt;B]=0KV744*]I-=0:
M1A7\4QD)40:]-2^LRGVE&lt;GR,3$]62FJI2,EIX^WFI8971R&lt;G[T_MB\[EI3[L
M^*&amp;?Q]ZP\RF(E&lt;\M^%U(B;.:F4ZM/:.:1.R5?N_L;&gt;_X)XY.&lt;M8YP&gt;*^NT])
M@1]2D^OE8?#5-\`7]+I]:`QUV;:=&lt;`KK_I8P$&quot;9&gt;/I&gt;S7KUZ9&gt;4XO%&amp;.S9,B
M&quot;WK69-%D8F8R.O5G-M.*_+-G^*5(5DU:)F!\M6R9N=A&lt;*VF3+T[+-)-\R0]O
MS@FWJI7FN#YT*UX6)VSRP%4./J^.=9RO=[9VH,L7&quot;I0[S3+G0/N&gt;9F%TD/A*
MJKWD:V%/%&#039;U(V&amp;CIAE:&amp;]502-3S%NB=98\+`Q[20T&gt;[R#]9?`6X7Q$UM-,/F
MH&quot;8FF%!I$#&amp;&#039;_Q&quot;SN5]K.Y6*X^S#;#IMQVMZ;F78,C%R1`:&gt;4_$#)[7=0!P&lt;
M^#_!RA#@LFJ,&lt;/TXZ9U=?;`(IR;5EE&lt;IHWEXT$L#W:IL%+KQ6DN2&amp;RAQ22XQ
M_OB!^$EVOD(WS)$PCY%7?[CK1;&amp;1:@&#039;=LFDFYRN+\3&quot;D_9OP[!()+,D^;ZFC
M9NK&lt;VRY&gt;#1R8[QSW%CF``P$-4VWLT7!4&amp;_O58EN#AF%S$X+[0*B=Q8*GGV^Y
MQS.!WPX+3^#H4$ITV92(UB_XS9S?2H0+&gt;GE-FC6FB#8Z&quot;,ER43]8RY.J0_M*
MJ-A\?;-:H,Y/C`?\7Y2*=G2.+R-+DOT)F&gt;&quot;2&lt;3`[&amp;&quot;HD.3E&gt;E%&amp;H4,@]U:9Z
M&lt;77#H6W@CD1]PUKTU&quot;`2+.E+T&gt;+^7D^&quot;H3.QIR&quot;?P8G&amp;0]RLU`C)J%FM?-,0
MHYF!,-M#9S49H90N^&amp;6&#039;LK&quot;!&amp;)_&gt;T!AI+YZE0PXEQH&quot;Z)708MA]P4PWT$H:*
M$@D3V&quot;9:(8DB&gt;*C:;5J-S;UFL?8M8X6/Z\%,H#(`6CR?K*ZO8:$A&#039;5!-0GRD
M2%&gt;4.0:*?\#MC-IGV6S:@:N9&lt;GK0MK+,LLX\4J:!NEFWFJ0E&gt;&quot;.&lt;PZNW7&#039;31
MIO,S%/-V$2SR.;YRCI=@P/&gt;D%6^A&#039;9C2F/$,ZC1&#039;K74C#?9%6H_0V94O&amp;-]A
MH&quot;9H&lt;:K&amp;Z0:DNNL;MAN1!@;&amp;HA&quot;32NI5/[!!8IHM\WKCPXGGS?,&amp;7%&quot;D\Z15
M/R(&#039;:KH%=X`%.U&quot;5/$Z:HF3K5SA:S:QF:.P&amp;4MK&quot;CG]EU2J1:03?HA6-P75P
M\[?WV\5:+7M%9R_G!)C/=*CA^&gt;A[G6V\S-UFCBA9V#,M4!;RSZ@&lt;WB)TO8CC
MXLQL6-F47@VYS/!X#C0LS*`I!T\[;OV.HWD-&quot;Z4?EO^XL6G[&amp;8F3GR5GH*?*
MG/KL_61I!S0N2!=:M0@&gt;[%O(*#++O9_&lt;:P*QKU$EG+GJ/I#O*BUV6L@X$0N0
M)6X].WR8Q&gt;#Y&quot;H08&gt;$RP#8@DC.Y@&#039;-)+Q?^8LGH(`R+20:=0:-`[9?&quot;NW^T&lt;
MV6&gt;=TRY?ZU9;2-;%+OLK=&amp;?`2V&gt;;&lt;0ABNPV&#039;S=B2:@&quot;0D&gt;#&gt;Q]LKCD6V6.,]
MBVW[.;4]&#039;\6X:0TZ!*IC-$&gt;Q$6)O;MYXO6AD1XF.DC$NM=]S%9Z&gt;`#C$!&quot;QU
M`.$2QVZMPCQQK5K=+]8K&lt;2)%(^*NIM,&#039;(5BD#DK&amp;0UY$8DS^[WGOK//FI%L0
MV(01)TWUH%R#F\0FAEF$=A&amp;D&lt;+2\CVR=:&gt;!AC;&quot;IH&#039;X*B.F`SN*%-=O&quot;K*$7
M0`&gt;(@B?W*1ITD;FT,F_1J-)\`4,]SN&gt;($)`IF,^&quot;%\&amp;[TM5;&#039;#HO,JGEW29:
M+4MBKG0UQT*TANJEZ!Y4T1M-QM+(B&amp;$H)(T.[PP/D&amp;=J$%)75D14,HF.5M^!
M0=)UH;9`0(LQ5QGV#!Z+61+Z5$E&lt;C.P:7Y&amp;R+V,])@C!:,4^NG]/6200GX1=
M]N&amp;[WEDW_P_7N[51IA9B@[95]NJ\59JU8K6A2-PC-2K&quot;*&lt;0+O.!&lt;H&amp;U]]$43
M&gt;.#KXW)2-&lt;]RD1IZLBI,K&amp;1AZF^N7W&amp;&quot;R82T8M&lt;O5S4#&quot;/DX=FWA=9*Q&lt;U)W
MLK1#)UA&#039;5@-8W&#039;3)@SBA(7*@5&lt;Y8#]V!&amp;USXGX;L&gt;X!RD+&quot;VL&lt;*Y@YIM?QEZ
MDW%1(TC;;%8NHC-)])%@YI5-58,&quot;YS7@&gt;.M&gt;&gt;\_UZL.]&lt;;GLMMQ&amp;;=P8NA53
MU6``\&amp;J0N[5ZM8W&lt;G_@W1E&lt;7SM0F,Q@0RMU\OW,JK`)FWAV_+UI=HC#;VS!A
M&lt;R!(03&quot;Q0B!^()_&amp;V#PLBZ@#$NIY7A4!(FJ`C*&#039;V`K4`&#039;.\N*9HY[JT?&gt;AMF
M+S)Q/^T&lt;O;??7;WM7G3&gt;=F-(EO3MZ/QL@!P57]J$`5G\\*W:7]Z?(E5RAG3&#039;
M0_@?P&quot;&quot;`M###&quot;&quot;BGIU=(I4J_4QME.](@37^74E7/HYEEW0]-\)?-R6&lt;\(HWE
M&gt;&gt;T.P^5J2&quot;M4_2T6Z;#1KCC&gt;:,]SRN5ZK&gt;%5ZJ.1%\.,CO+P.HU^$SITF^@:
M_E.M&amp;1#!L-DPO+O-AD2OK4N$3[&quot;[=)+_QC_.SGO]OZJ_$4^M3WR&#039;*./MT1M!
M#;%..JUL!?9+7H31&gt;V$8S]I$=&gt;(+T2J6&#039;4]F&lt;4JQ/,@[!%(AF*E]/YU0*X0R
M7^CVKBZ[?0[C8XRNT/+1[E5#@YKE]`]2J[Q7;]7W6_NC:KGL-*KNN%&amp;K-=OF
MN&amp;&lt;4P).0\9&#039;8Z1:I0EH&quot;KUO&gt;)1&#039;IR.-((@XOAH.T.0+7TK-&#039;PT(J9/,FCZ%$
M7J`[O_$&amp;*%#AL&gt;DB7GIW&gt;WN+:&quot;XTT`UD&amp;U_1N_\S&amp;KY2X2A$[+5)Y&quot;//EY_\
M$JWT9+]&lt;&lt;ZHF:#1;PBA[N\I=&amp;88R[;7&lt;&#039;FZC/FKL5=MNN0S[Q*DTQM6]V/9(
MS&lt;Z3E/J)Z&#039;N-&gt;(&amp;:F*)(,NF&gt;&#039;-OGEYTW/1A8^)O^1&quot;3D]SB&quot;0KGN#/TLM^I&#039;
M=/@D,9&amp;5-$:H%($]8+&amp;2PAJ^B;-GCP#?:_7]2K&amp;:8.JQ%S;TQO:GSK67UR\L
MZ`U)-&amp;S7QK_&#039;KEA,&amp;$&amp;B],-P\8F%:NT=%B&gt;IA&#039;?C+N&quot;-+8P.-49%J!NU#A&lt;2
M\0-&gt;RQ+QG&lt;8KH$&quot;8]]F3VK&gt;^5[7,;V:K*;S:V3$X&quot;&amp;&amp;,ANV:0TIKVYO/J73Z
MM6/Y&amp;LW&amp;AM&#039;GT@]SFR[%@7&amp;Z&amp;-@GYYVC@L&quot;DKS7JE&gt;(^C&amp;FCWD))]W&lt;;4Z,1
MV-I%L+1&gt;6!?]&lt;X0ZZ1X:O=(3WR+W`P/!PQ6MF=0,T4P97F]4QH&amp;IY-#K&gt;&amp;8N
MQT+2;TZ4D,C]&gt;4VC;:!E/ZAI=C=IM3*&quot;%S5&quot;$8\U.RK9L*+7&quot;WBLU9\?GZ(?
M^[U!%QN?1:&lt;$%8S3*?5:T&quot;DX3=JC8;6^!W2J7:TUG7VW5&lt;FF4U&#039;V!)V*/M%1
M4B5&quot;A?\PI8HNM?[AS/U=D@?P;DO[,&#039;9+9+]-KY/WAADN_9:\)#T\.3_KVKWS
MB&quot;;*-_&#039;AKMSOB9M9_HW7&lt;!SX)Y`A8ECK0[=TLC^M)G0%&gt;]1J%VOZ3D2R2E0U
M.GRJ4HE`TN4M[T`@&amp;,4H,1QU56TO2GX#CC]RD,ZC;8J]1#OB/&#039;ID%RB]/&quot;&amp;7
M@8T&lt;G50OP\M:H5!0FA=R^1!!%&lt;_Z]O(:BWD5L;49E5W&#039;:Y-_UHI1WL23V:1Z
MH:`SOO_4-PZ.!_J(H?I1U1??6&lt;MK&lt;C&#039;36A%+@)&#039;:M01U0R-)\WJ6\&#039;#U6&lt;`;
M&gt;NA#3#X&#039;&quot;T19X=!.&quot;(RY`/D;&lt;;(P0K/I8L:;,1]W&gt;&#039;SQ(ND#^=H27[&quot;)\.NR
M][;SIC\HQ&#039;O`3G2BHS&amp;_26VV^&amp;/*9)%+%6;/6AKP#T]#5.)G0QCYBK602@!E
M&gt;8\LAX@[CM8G2OB+8+B&quot;Y.@#D[J&amp;8VE&gt;F82/HA8&amp;&lt;X[`&lt;0/L5_R-O,5OU:K&gt;
M?KTQJH!H/1ZWFR.OU?1,&lt;A?/R90N_I;5ST3C]N&amp;`AI\@BWSH;6$0:[R0M&amp;Z\
MR5R`#?G0I2Y_W=HYZA[G&lt;])&quot;(U?$6*LV]%((&gt;.&lt;7:&quot;]KR^]%:4R4*ZEP*V/2
M2I.&quot;D2&amp;I.&amp;B;&lt;`ZEK[_,&lt;J*\3O_P&#039;4:%12,7BZJ^9=-G2%`QZQ0?!$W*E&lt;1O
M.;6NZ)=\S6&amp;]HK!MV,VT&gt;L6X&amp;-/%:V3764QW3YU/&#039;G:K&#039;`S_&#039;L(X9WT2$]@&lt;
M.&gt;-1U1NV1N5RK&gt;;MM]L@&quot;=7-&quot;&lt;PL@F&lt;R\S,+I2R3LNX$7I&lt;&gt;K)W74?&quot;3&lt;F`%
M&lt;QOGUEN4@ZTHQ6CQ,,&lt;UG_SBWTVG]TOU!09P%/V8&gt;&lt;$L+=,T&gt;KFC7E+&lt;)$S&amp;
M&quot;?\C+P3,R_/CP&gt;GI58&#039;2A&quot;.?DF0-N&quot;AW9(Z$?&quot;O%EW9C5*L[^T,8YJ;3&#039;KG5
M:JO9RAQFE3LQPNH+#2[Q!/4D2T&quot;R*)Z5$S=&lt;,E?`1Z]A#&lt;/=)WL8=&lt;1W^J&lt;4
M,&gt;RXW_VKB$U.YSI&gt;\/0^G&#039;9?657K[;M?BQHNGD)00/4P&quot;S&quot;*A8@+[-CJO7J[
MBNW&gt;0TU%O:T4L-`]4E_#J:^&lt;Q&#039;59.&quot;S$3W?=&quot;$!0RW&gt;DU&gt;03&quot;?U5=(?&amp;2&#039;P9
MA7CMBHX&#039;?,V&quot;4X0!5#X&lt;7MAO_G(Q,-RH+&gt;&amp;;9(/`!#F+Z/H2NRS?M811CC4?
M&quot;9=&gt;;)^FC25OF1$NJ(9VA)/B:A)&lt;D_L)]A5DE;=H]U&gt;T&lt;C\_^TB1^^8CD)7N
MGT_NB1B(@G0^0/EBB;,H;2QTMT[$2,#X1,XP6&quot;PW&amp;Y.+?O&gt;X.T`*].:\/[!^
M^TT_LM9E/.H,.B)3;$R%FP`_VWB%P0$IT!=,H!YP&lt;`6@TT6.*FB!X![018U0
M,[#G/\*D&amp;V7!@(8BD`TDPRMGPCFD4$O&gt;PM/3&amp;OED.&amp;6T&lt;,9HZ9[&#039;8T0%ZBFU
MNVI2LY&gt;JYGH`GD8L&amp;&lt;JO%DV*(I^&#039;0BCFJ5=V&gt;+-:NL&#039;=3-H$Y&quot;_?70V.SG\\
MLP\[B`_Y[AQ!-1&quot;+H7!@M&quot;7.AZ&quot;&amp;G&lt;LTKN/UNBC1VHK^&gt;GJ!:H]!]]1&amp;/)9!
MK$ZM_W+YR7HNO:F/+`L&#039;19\ZP#6.0LOUT.H)[&gt;4Y#BD;8K!ENG#FV8HFQ)5!
MH]E/@7`AY5+CX(G:Y8+Z0M%#)T553AA84Q&amp;C7[H9XD(H9])TIHPQDBY&gt;)DU4
MV\UFBHGJL-[VVO5AK;Z?:J*:4G!*;&amp;A-RH-9VPU&quot;&amp;+Y8?%)3[YC\A/\KH2!Y
MD\-E`6LYD82MA&amp;.9;^YVPV@&amp;U=^Q5-$9$KU#NZ)PE_XOK&quot;W3+#&quot;W=M`_LG_*
MY!V]A(CZ1SZKYM4RMY&#039;N1I`7Q@G($U;O-F+16OHYP=(AQ6\7;IW$6*WCL^7&amp;
MA&lt;1WZ`99M&amp;[N2&quot;^#_Q/ZGM&quot;&gt;WSR$/HBCD58;/P!YPH@&amp;-N?SBVRXZ&lt;.B&quot;C$Z
MBZ3,TMT&#039;;[VKK8_:6[+LO%44!+*`&gt;$+-H#T`W=!C.=![(&quot;153?91]4/&amp;/9&amp;8
MC=C34I&quot;_`[Z,&amp;JK&quot;3N+K\`Y]@_(\:HI:D?SP,GCY*BK4R&#039;_4&gt;V_WSZ_.CNRK
MB[QL_5[1JNMGE?0AQ;_%-=XKO?C[S.*C(@O6KG&amp;(ZF5R*:N71J&#039;N%[:9(`Z@
MX9DM5X&gt;L,*?&quot;&amp;?N!PJ7J9P!(&gt;,:2T1?:6)@-T-H50MGQZ&lt;&quot;&gt;3^ZMW&quot;LXYW&#039;=
M&amp;=&gt;YQFRN*T*68`:\BI&lt;W@=Y&#039;:U,V&gt;`+=4&quot;LEUF3*(;\=9&#039;&lt;T?KIU^&#039;+W$N]V
MK6T&#039;AQTY!B&gt;,*?Y.O&gt;G@OD^QI3EJ&amp;^&gt;SZ5*80P4Y(0_,!CLY]IQV3P&lt;?.H-!
M_]*^.KN\Z![VCGO=(V$@,BG$FL*QX9Z]YFSV^5\2G4I,0,XZ=&amp;846V-$YKU,
MKF(F)/+1UY)\M,/[,\UVO$KBT8!`&quot;D*XN+-=;[BZ)N:&quot;J11W)@H$\X&gt;V65L0
M,5,]L4E0V9]&lt;&#039;8+6T-Y+?#0IA&#039;QH4U=?)9N(3O&lt;3=S6TYWD8&quot;KP&lt;V+0C5&amp;0M
MN\B[KRRRD5%D7D6ZG+B3KRQ[+[.Y__CR$C^;/V/+)+$@TD\(HWGF29%&gt;\//O
MMG/61;\7(&quot;JN?FK&gt;?M%(F*=&amp;&gt;E4@056XLOMOK&amp;RU0;^XIM4WUN1N7)/[U37%
M)MY&#039;&quot;?4N1N&amp;U-&amp;;M,5)!#!/DG^CG#!R-I&gt;C59Q6B1N?MB*GS[I&lt;+!RT?;91.
M\R9#I[.*VW0!H&#039;@_DQGS#Z*_[V(&lt;$7.%?!WQVJI5DJ]M`K/&#039;$TK&gt;6JC!X+3Q
MV\MZ[&lt;#:V?&amp;3)S]R:/6DJ&amp;&gt;.W^7%*Q3M*]66+MW?PQB$/_L?]:$51T)4=)*\
MFT6?]+^PZ+6E?7A&gt;J;FQ`OUU91J2J%G6A6`47L563QJ#3SEP_FO$&quot;0NP`=CO
M1&lt;FF&amp;TVP2N9$%O7@&lt;RE-&gt;&gt;\OEJMD2R#=OZ0Q%;V2S)V4V&quot;*&amp;$0=?VJ;YY5GI
M^\0T`=&#039;M.M6^D2:L&gt;&#039;?R&#039;*8Y7@=-M[Q+`?E_/)ZLPIM\N&#039;1Q^YF6HWJP(\,+
MP-&quot;T&lt;,AT`3RH`K@[9MS]N;&gt;XP8!F#L=C1YIH%`)&lt;B^]B5&quot;_$&amp;UDN_.MK`K2*
MM]YRKAU_5K:L[CW;#QJ%J*))F82:&#039;[Y)7:?NJ6A3E669Q#HX:;JKQ0JE:&#039;(.
M_8&amp;]IX&#039;EN&quot;L45&amp;096?4^:BX\&quot;O&#039;#=Y%HH$8YI5Y&#039;,ZXN&quot;[Q+3XR(]DD50&#039;&amp;]
MV.V1%(B!S$J!`)4W!P7+1/ML&amp;8N(VV848X2MYPS&quot;Z=&amp;L6X3&lt;HQ0R=K4J2&quot;&amp;A
MEM6KL_(;#.HIX[,ZP@Z:C4QA+3R3*;4!C0$&quot;Q+QW9:HT[Y/J@?1YY73BGJ]R
MH$==HY`TY,Y&#039;6`P4WKA&lt;#G_]6$:(.&amp;RF9+.MA3.[II`=:#^(0?4T_U%CT^)?
M6.2C1Z(9Y&amp;RYB+T)?XVV?-Q4+/Q5])Z/U?%&lt;G7BDX&lt;`#[QYO`U)T&amp;9/(@E\X
M*&amp;BP#:\CHC&gt;&gt;4W33N3?+1[=QN&lt;4PIU&amp;09V/3&gt;4C:.&lt;L,!E&lt;C)J!4C7:C&gt;!W^
M:N@S\-0&lt;DP`I):1JT&lt;*:,NVJT^I+J&lt;XDGU#X*^OYY!Z(Y7:&gt;!A;&#039;;KL`[PL&#039;
M&amp;30S6Z2C^5/M34IT\OR`$J&#039;-&amp;PISF7T8B\!5&lt;YE:I)1+X_/Z\RAC&gt;1H1T&gt;*K
M$3,FCB?-8#1AHB1]Z:.MK(7W]F;N02R?%K(VOE?3&gt;N(&amp;,X\[8KR^U=5]:0M&lt;
ML1AT-F#R`R3\1%MUY&amp;.B?KC&#039;!;7`Q:%=+*W?W%$3Y-8+&#039;V;N`CW018!LI?PN
MJR\8&#039;&gt;/X^.#+]S&amp;+=U9&gt;EF0L/#HL*S&#039;)A**U)TQ*&quot;ZDZB,&lt;NO4A,$2C%4&amp;:&amp;
M/N)V2H0YW[\ZLR\&#039;G4&#039;7/NJ^N7H;3QJ3;^(BD-`E6+%&lt;&lt;EQ&amp;4S0C48$_U(&quot;:
MJ6&amp;KH3&gt;G&quot;+_/F_9EYV6:8HEB#$*11`9S=&quot;&gt;PXN*!:IS;_2-D&#039;I+JJ/S8%&lt;0J
M93RE+XC8_U@TWS9PP1GC%R&lt;%&amp;0-FQ`\4VK*,:RR]+5%P[=^M)69HO7@;L\BH
MQI(KA[!T@BJ?KR*L&amp;_0E)E\9]QUEV4+:H&#039;MU-J?#F#FX`K__WJK6XK6E%D&quot;^
MJ4:7$X,E=U\^=U]Y)2Z6E]9]]55TR1SO5D9;-TM7_1A/)@.(Z.^,-B.?D%[E
M06:N:F:N:CQ7*@V(*_^^]9)T@RKKL2K%VDE(&gt;&amp;(9Q]9R(5Y&lt;7-&gt;HV:&#039;1J99&gt;
M3-$&lt;Q$2IS76-_(9R6^GE1H=P9F?3E&lt;()&#039;E&quot;&gt;]W%I&amp;DDPDDB;[`9H)S#/F]0E
MT=6;M]#4V60)[OH+\A7&amp;%9&gt;C4KQP-Z&gt;GF&quot;^\L7_/&quot;&lt;@&quot;P/B*C&quot;454*WMR;4I
MS-RQC9;F+HZ4+8\O\Z)2BMJN&quot;#!&amp;&quot;[^T&gt;Y=&#039;O3ZD*H=+&amp;Z^DS5-W=]&lt;2;&lt;2&amp;
M1W&#039;&gt;@#\)EU$RK&amp;GZ&quot;5)$-&gt;&amp;]=O($Q_+(\@&lt;+82=RO8(L8H,&#039;^R]JM&#039;[)85IO
MM$1!B&amp;CKK&gt;-/4!0KEZV!L-8`%B&quot;%RLH3!@ND!B=2?*TM1&gt;J&quot;-&quot;CYYQC7C!%Y
M$;`IN$.;4_B1EYZ1-*&lt;S&lt;9+(&quot;5?!=^6+`FIPP^=AZ?G$+3UWRS!2P`:H&quot;&gt;!E
ME&#039;+9-&lt;,`@6)URMK$+8LXI;0ZC^G^ZAFA18DK/9V;XU)$:&#039;%^OK7AR0;3Q&#039;%O
M4AO_.5KP&gt;2N/.U&#039;)BE$;&lt;G&lt;[.&lt;:]PE%.Z8NYV@[5*B6.B)8&gt;6C_0_GL%B_%Y
M^$N.5%NJ5]H8Z,N,&amp;F(LLV]?8IF26%Q4T&lt;0$-B;:5%!`JK;-JG45NXR&#039;V,K&#039;
M&quot;.`+E4J1%KU],J?N#3.&gt;+@7(5VY;/81[]\LO/1U#`-O\3(-0^T6@&lt;&amp;8\N&gt;-.
MWV*#-V),NB?:S\&gt;R8KSP^XJ&gt;G5]5]2(B7;Y8Y:KSL!*X5\6X2&#039;4K+J,WN&#039;@6
M!GH;I-R4K=HP9W3(JGWPU=UYK!-?VO0U#&lt;Z&lt;&quot;]B;VLJ&quot;=6Z)5:XO)=EELAO%
MO%0!\21:42AC&#039;ET!CW9X?M2-]%&amp;/5&#039;F$!DRA-QU.&#039;M(K%7H&quot;,G32BU%RQWQ4
MJMS7*G&quot;4WC&lt;J&amp;]=[ROK!(_B&gt;7F_:=9GBPJ*MO/G@=M$@;XR1O]#:,5&amp;GH2)*
M*=\@6&gt;M-ZF[2+-]2HCZFF]35O&quot;%Z\8_&#039;H\U,ZHP0D+$(D!&lt;=M&amp;&lt;U8D!&amp;K[Y4
M.W/PY72:1B\90U&amp;V(1%%&lt;3FZQO_8*%&#039;^+:W+O=JH7A\U&lt;(S&lt;:LT=UVK#1BS`
M091&#039;#);Z31$56Q4*J0C_:%%_9&quot;@:/506&gt;W5;?.OP:+)_2O:6&gt;&amp;_R[9;!1SAZ
MACJ2GM%[@]VD&gt;&quot;;+&gt;TS+?\5$P+CA,ZU24;H(:D3IOC1*&quot;&amp;4:&#039;+X]E)?`F`/5
M59-),,H+5F@[5$D-CSJ_B`B;QM3=LM?@[41S]J^UAO5:M=XHE]MNK5KSFM7Q
MT)RPV\@K\%9Z`=;9P[^&gt;,/@&#039;7@3M0T-OA![7,3]`\1%GV_`$S`IQ&amp;G.WOSPZ
MH5&lt;B&amp;JZ;M^W.Q&lt;5)U[89_$R\Q4NM@E;M]Y`/(YY3NRN\ON#?FO!DQK&#039;&quot;+(2.
M&quot;AL7@=NI)1@S[5;]@*TRSPA-I&quot;*&lt;)+ZD.*V:X!7R(5$TS4\HQ?!&quot;@V?.&lt;^,*
MP1Q)3HH:2-1FO$O4)1R`7B4;.W&lt;6H2&gt;_Y[F6M&#039;Z*:O[T]/S.S^+3O(3^:&lt;BW
ME*Z=2;#P^$@!V94&lt;UQB&gt;9C(IL1!`T!NU&lt;K,UU-^6*&quot;F2@C)E-NO`(ZW5:N&quot;_
MU7:SHO^+?S:KS&gt;:?JO56M5%O-&quot;KM^I\JM7:CU?Z35?DC!F&quot;%&quot;A[+^I.S\,-U
MZ1[[_M_T2&lt;&quot;VX$(@(A[]$*3&lt;K=2;K&lt;9&gt;&amp;2;?&lt;4?.V&quot;3B6O((HT6\X&amp;!4U7T*
M+\3_PJONAPO[&lt;L`&#039;*T6CTC6!0&#039;:`74,&quot;27[VBE+W3WJGO8&#039;=N91A8BT,K[0@
MR(Z\^EBT7BSX&lt;JIW/0O0SP9EW%`S&lt;$#0[2_*9RE.0&#039;2GQM&amp;2^-\O[$Y$:N$4
M6[CB&quot;FCA37QR+6.W3.&quot;E1,/0MPC.,/2?M)Q9,&#039;N8!JM0*X70\$KH_&#039;&#039;G:&gt;YJ
M&lt;-J32\IU$!`R)KHFDZ2*9B)P&#039;IZ?GUK#U36[*F&lt;/)];^=0/Z2$XCFO7?U&quot;3P
M)Q[DNE@S]:]:,_@LRM@F8&amp;F0NQ(_1BNAZA2=3C3\\+S??:S+:1U^))^E/(9Z
M(&lt;:O9X^U*$ZRJSP,*?;SS&amp;4X&gt;H5A2E&quot;^P6K)I[,?+0$!&lt;..Y18M06=#80LD,
M!PQ2=N&lt;C?!&#039;E=LE[&#039;&gt;,6*,\Q6@,&lt;BJ6R1X$QY1]1M(+5&#039;MJ_V&quot;Q\Z,-=)&#039;@$
M`7+VZ&#039;[]RAW[;7LVN^[-EO&gt;_:(&#039;7:Q6.N58SPVU_T5!;&amp;R_TKUSJW[+8_Q7+
M_?==\`WFV.G?ZE=.`DT`*P&gt;..U&lt;G,#C]SN4[$56#!#9AL;9M61?!Q!\]6+=^
M(.`F\Q3!!T$GR&gt;@&quot;7A6*(#1ZSA*!&lt;T#4ON:L-!O^.,]!X%!_\(-5Q4@1/W8_
M]`9H&amp;G!UF6&gt;H6])NUFM*R#3:-C@]OQH0+Q]APHOJ)A,+SI?2K]Y&quot;H&gt;\1U&amp;G(
M5]P4,E2XI)(](&lt;)3&quot;H7SES7OV6OM4CIMY&#039;94G%\$`8_`Z6=.N$2LH-$G,E$^
MO&gt;R&lt;201;B&gt;H9KN:DWB&#039;MA!W,;(Y]BNA&gt;XKQ$%TD$9W-X(3G&quot;0&#039;`D(&lt;UQ7;3V
M]ANX-UO[E6;R\&quot;%L)&#039;OHSYS%0WZUM\W1$]2&amp;_,P[CHQ%O&quot;6(=OD&lt;8D9&lt;_J5W
M8;_IG=F&#039;[[J&#039;?T$=OR;98V)S[$#FW&quot;RW&#039;*=#;!6-RQ#6EC.C7B[$IBQ&#039;=*?=
M@@.UNH]JD&amp;:E6&amp;O%&gt;\?1&amp;3D`APR?&amp;;*F@WL(=?4]$50:-@15B1*?9&quot;7$#A)[
M!M4.U#-,2Z.%MPB30$C&quot;:E=)`9D6QKHB,*$:*MB-&amp;Y5(@R2^8CA#:OAK&quot;T-:
MZNH.2E&amp;`C8J11T;6CM40Z@\@!]L$V[X]PO\MP@G\&#039;ZM%4TA!8A$;7@&amp;#&lt;6`8
M1J!%W%P?0Y\)/#(:J))!&amp;#;,*%(+8%$!18J7/S&lt;!4F&quot;&amp;&quot;V487-ZOY#O.\4=$
MWEP)KXN@H_XLAXRG&quot;(^/8);TTH\H#A\9M`1)HC\Y?YLK6CF9F^W.J&gt;M3;SJ:
M/^35R.Y8]:(E_JJJ&gt;S4UNC0K!PF2069FDBY\79&#039;4&amp;IGGYQK&gt;30O]-&lt;BF-P?&amp;
M5S*FR)5*\MIZ33;SNYG1]&quot;Q(-KNZV4A$!.\LN,-IG`D$1F&gt;$UON3!VL,HAB=
MHK0VF/P0#!D!6E,E/U&lt;^&amp;CN]22QTN]5NFY&#039;UOF%O4BN17,%VX-_$78S0[I7V
MDBTM19^&#039;)`&gt;2&gt;F&quot;Y&lt;$88M@8S18:PL:F7#,&gt;7EZ7[C:;G?AYRCJ(&lt;IRCL%79&amp;
MW&quot;?CYB9/2*6,.P8N[R2?NQ)AH0.&gt;A9?/PY&gt;J!3S4[18/]7[;9)R_=:@MHC8&amp;
M)[?A^$CR%%UA?/.0ZT5^P;C+;,;@4YY/]GCA&gt;7FM7&amp;U2GB5F180W;+?V6$YI
MMZMU/,M^O^$6NSFU826S67@:7W0&amp;[ZQ&lt;&lt;J!4&lt;W&gt;2ISL./`-/?$$Y8E@TJ@2C
MK2@269-!F\/EPEW-UY0H!UYP7;(``5Q$S.J:&gt;93EZO.8RKQHO3,F3UJ4K.O%
MW+1FCIJX(YDK^.&gt;R\]-Q&#039;NT:K-%)_\C*_5SZ:,&#039;?_&lt;L!+Y#]&amp;MX&gt;[+3WFQR6
M-DL1G]092+?$O[Y\A&lt;28:&quot;WU2]&gt;3Q/I&lt;D&amp;3B=#59^G,@%*6_BE.7CV?!E7HN
M3D`L3#2;?&gt;L&amp;.+N[WU#Z3K+T&#039;0&amp;M9.F-?P8GE4TRG8U1QV&lt;%2[VPR&quot;7&lt;9DD/
M!T&quot;&quot;&lt;.U58+L!E=NK-%K,%F\PK)8PHR-@;PY(!Z(I_&lt;S+_6[VET&lt;(N%?)IIF[
M6:P5=:SB4&quot;&quot;P%;%L)?%3CD1F*1H+N6F!DN!9L8*-;`?Q(%HLY]*=L/Q3*%5K
MK5I[A!&amp;9QXU1H^G$;L948@$,)W^2W$I8/?1_CN&lt;+*U6&quot;4S-J[2NQ7A4$2;=_
MV3L_L_0G1[K\7&#039;0WG)VH!%L5:((3YKBVKWHHM/)7/!PGN(4!P&#039;;DS=J6I6&amp;+
MRL6J&lt;C0KAO;EF0F:&quot;L,&quot;;X]$?&#039;WAJ,0KGT(\:_YDT?;/G[XIO!*,.[&#039;M7U5&quot;
MF3(.!.&lt;N&gt;&amp;_F^8/5PL)K%2EC(UB!(QAW&#039;4S&amp;W)K&lt;WUJE(E;!V6HZ!*DO&amp;&amp;-T
M:G^X8&quot;W#Z&amp;$T`3E^CO(@8OQ2R*W(*3#O&quot;+D#7XFK3#0EV*E7ZF*),?2-=%LD
M_:M4@H!(373)]Q:OA,L=@=P17#&amp;D+X7&gt;A,!Y:&gt;/(3/,)HI[@0$Q7(+]+N&amp;[-
M-Y*B4\UA&quot;%?S&lt;FPU8QQ[^\&lt;.C,&#039;IU8F8]FHE6LCIW]4@&#039;6I#(]OCN&#039;]?A4N,
MC(5(RXA\&quot;%(8H@E/4;5U[&lt;V\!8;ZY^GUPA5B_5&quot;&#039;\)Z#@S\))&#039;&#039;LR&gt;)!Z/7E
M+&quot;@_T)+CNGR)[BU`PB9^,BS&#039;8[SOWMRB5&lt;W^7@E-XX?Q-YL!B*Y_RF7&#039;\1K&gt;
MR&amp;UZSJA9;&gt;[MU2OC:L/=;XRK[2:0HW%SW!B/&amp;]6]K;&gt;PM82\05=\6R&quot;-&gt;@MH
M?&amp;/K9#3]S[]NO[Z_&amp;;4J_V]Q6-E2WRI;[T;3]W]VZ9YOZ^GZ]O]_SQ??_^JW
MOOCM-BQ%5\*4HU&amp;NEBLEY$;$9?#Z^]\V$*ZZ&gt;?];AU^UI_O?/^(Q[W^!79^0
MO11&quot;W&quot;B(F;37@M&quot;,&amp;NWA7JO&gt;:+;*Y=%^K=4:M]U1+`AX:G9Q1YSVB&gt;/CTNUJ
M-2Y)^S,,S$164H;O(CDP#VTL(08J80U$`%:@RP*SQE\.-4,;84*C5#CJ`ZI&lt;
M2&gt;&gt;%1I679[V+B^Z@)D00TY`[&#039;1M0,SW/`#K%)W(_%4!CV/U&amp;A4+V[S2J%1-:
M5/0_V2?H/)XBJ8@:::D/#%E2#&amp;)H#QV\,YF/I+V7Q(@7R`@[QLNYPD7ALH:H
M,AN&quot;A!U\6LWMR`HV3_/P8@Z&quot;P0M5QPLJ$D2%,7E&#039;Z@H**S\?D4/U_9M*M7+T
MIH.(9A3H\=/&lt;GM/MB:UN3[*,XB_.3WJ&#039;/UGO&gt;^&lt;G&#039;31&quot;&gt;O;LF77)7%4?O9SB
MH&amp;&lt;27.=W\80B@ZVZ\F3[G-6W3N/P4/3M=CH%87CFC[(Z]/[TU+KHG/4.L2&lt;_
MJGM^%/Z&amp;&#039;.X3/OS+.Y42`),4@4/IK6#8-TRGSCR)K&quot;L7RC6:Y@/OPNL#EX=:
M&#039;&lt;G%(3,GO*W12LU\6&gt;#]-KNUYTL=*X+7J_0;5*MWW7ZO&#039;L0ZPVBK1G=0Y^]A
M2&quot;!B7@=O9!2(6XZY@H%R;_&quot;&quot;;$GJ0\7D.B&amp;&amp;6\6MD@847])$1OVGC$;&gt;]H;[
MS:KK`=UU:@W/&amp;^[MCRI)BYR8`&amp;F\(CI;;*+%&lt;%/P]RAU&#039;P;S!X[240-1WWH;
M!!AIHC&lt;;E:T.!K3`3R&#039;%7`4&amp;W:7KB/0L)R&gt;&#039;Z3F(7ISX(V^&amp;D4Y7T&quot;$&gt;DL[&lt;
M`;Y#?BDJ:;96KL`*@R\Y\4FHL!Z&quot;E35UV*T*;_-(DB&quot;.F!T`&lt;&quot;((EL&gt;G@,5T
M#[*,*BC_[Q6C^6*SH??Y:T5A;6&quot;RI-*==0GRU4JML5TO_&#039;ZR*Y:*KT,.J`MT
M\LZZ!?:-MM_0NW&#039;@[%APXPTQM_H_2LS];R/H*NTT4FW@;Q3),U]*U)EQ93AL
MN4X;9-?]NE=K[.TY(R=)^&amp;*9(_(7^[`)$6Q^.1%L_O&lt;B@O4FV:PW%4&amp;(;-N!
M==@-;Z9HWVX9P8W509)+B7K\&quot;&amp;4C\O6^T^^=7UU:G:L/O9-&gt;I_^3=3FX.CX6
M-(JTRSN-MF@2/&amp;C_&gt;(/1%L3Y.D./!=Q$GEL*8$&#039;1&#039;4U9VEW)*/]IA[KE!L!T
M_&lt;(Z9F3&gt;!4MD+\-)?BT?(D$UOB!34?`=E-G2H,DKDN:1*C&quot;&lt;^?.YM[0^4;PF
MZ*)&quot;FM,CVA/B&amp;!(E((9!Z.,[#&quot;?&amp;&quot;KMF`_&amp;^FDVI&#039;;50NKA&gt;39R%*`,W/!,&quot;
M?_9WHE/`I#C8F1(&amp;L-YD[&amp;K&amp;V(&#039;L`\(4Q?L&#039;]B^!E/9/.5QKT^%-4843BU-*
MCP=FOM7-/1%(5U80#X8C&lt;WV6?^!GV&quot;9#CQAJT9BT*6&#039;3GV*C9NVT*\5F-3HA
MI&lt;86IMV_=288/Q^OYL7@O3(M7Y2G3.1TX@!)%!SIFJ_REA=K[-[SG8XZOG#6
MYZ@29D12&quot;BJ&amp;IS%K;%P.Q:5@_V23(FB=#`B_GW]`X#^+WO$2L_(\F`7K^X];
MI37H?]C*K*QH$;:^XD=R:XQ+&#039;&amp;40LY;)9XDG76X,YG(2614@(;Y063$\OY&amp;1
ML[*+F[Z@*@&lt;Q/FI71O:3$?WDP8A]EKEC$=BT0B![&#039;&amp;&lt;:N0(/2#^S-7HQ&quot;%&quot;,
MWMS)9D2M\(!6N%,OO$:_[VO9$%AH4E97$0NEV`,?T[RBT*IE=SF=[V)H&quot;O(@
M9H&quot;#I1G;3AIQPDLM\A-RAFOW@1DW,;$1S,\B&amp;H4&lt;AK1(=;A3UJ.\\4;JQ&lt;@?
ML4-9+97E(,VT%\*)#L3BWG]V]1:O3&lt;;5&#039;DOT4-&lt;;`15V&amp;`+*K)8!813!$]BD
MB:]I&lt;3&quot;U=$(OI))&#039;I$[M712B&#039;TUM1%(_2&amp;LF\KMTY*EFD`5%6IOU`U(OV(R%
M5E3(`-%?V-8-:MSYJJIP/\0KI0C5&lt;MK0MU_$*4&#039;3Y#F:Y2)H#YGF&quot;;*K8)TL
M:1XIEI,,&lt;(*M@M:P-L2,5\C:M335&amp;QD&amp;**&quot;$2.F6HH=+:N&amp;TG(+U0(VB@#/E
M;8RQTF`EW;&amp;A]6BB&amp;@U&#039;1*I.\8:4%D*EIT_`YH,LAI:A$.O(H51K#65HG1BK
M;:MS.+CJG%B]TXN3[FGW;$#J.XMXQJR&#039;B+98?B&#039;:U\$8K&amp;8*6\ES.:H^!R4K
M\@K=I@A9(O%HID7$D25(AUMB#O)YQ*HP`X1A+A%&#039;`ID8`L$C0*#&gt;V:&quot;OZW]%
MB,^858L(?&quot;$)[&amp;IN7;X[):`8`8R&amp;HJ&lt;/,M6O&#039;ENTPWBMQN,-&quot;`B:V62\5U:P
MUK;OBL`6PL@8:K&gt;[9^]M8,P+$;[D-A.X*!G9(O?.+@=V&#039;Z&lt;F)R&gt;W278AU78M
MB1Z?THRD&lt;305&gt;=)[&lt;YG3K9T2P1$K!Q&#039;?;@1&amp;U$B=&quot;C:23&amp;10N)*TB9&amp;*]RJP
M?KA&quot;]]HID+FI@QG3%@`1]4=%87^+X#^,]70#HBYW(VOV4@@\Z?#-N5R7RA)V
M-LEC%\[SGQOL3_Y5ZM,8\Y#0H,K9?*8SLKIU.@WM7A,][G=J&gt;+=13QO;1SLG
MN/0JOV#KPZ@AUNLDET-+&quot;!@!W.+(4PBF@&amp;22&amp;4&gt;A6J$*Q!Z[/]&lt;^JJL,5.G&gt;
M!,$&lt;HY-&quot;?R&quot;E&quot;QO_SYK]EXH6B/J7R_Y[^_A(V)8VR+D!_D_Z&lt;G4&#039;@!E22-(&amp;
MV:,V==$8?.*&#039;-^AT`&gt;?.S)L(9##BES&quot;*Y,(9JK.)-&amp;?!=.J@TL7Z$=55:E=&#039;
M80NI[VCYI$4M9LM^*&amp;]P&gt;0)-TYS#F@0IW&lt;S:&#039;H],(4E1GBY!,0Z6!9L*9E;R
MKG#2+I%!H?;%I-,OX&#039;@LM#&amp;#HTQW)]B,]3%R2O/&amp;&quot;%I:7]HEM&gt;=L$1%&quot;`TN?
M+[Q;+(?60#R9R12HE-($_&#039;R^]*=(^E$R$.VQ?C`HFG1\\4,.MAW@E8+_&quot;0%K
M22\:S,1\GR#8LC`J&quot;J/9;+&#039;N&gt;]^DV%\XLG1&quot;P@QZL&amp;[(OXLW#&quot;R&gt;J4]^-_@R
MF&#039;O,_A;12Y7TLH8*)U_`.Q++$&lt;I;$F91GY-%+;/X/;I%,F=R6(QQ5,4$GV32
MV&quot;\O.V+-DF47XYR:1JH-YF&lt;I&quot;66MO&lt;&lt;1)#(.TF_M.S&amp;?9&lt;%QHK4M7P8ORY2&quot;
M3DG!9G)&quot;[@&lt;FE%SE#KX71!&lt;!ZN/G`)&amp;//-..HO5BJ7P&gt;S&quot;X7B-1E?-)OQP_$
M30UY,.S4J[4,ZO/M(Z.I&gt;6C9,M?ENYXD5&quot;$BZ`K:6Y9..*Q5#PG14&lt;+N#1^V
M!`-&quot;MC50R&#039;0.^Q*QD4E;+D5I&lt;M&lt;9.3,+-?)\F[`&quot;;E&#039;L)7\NT#TSQ&lt;:$=&quot;3,
M&#039;IC7-5?VXVFS%F:6$&lt;%7&lt;10I9SG-[_X^@[PVT]?]!JTW3F9DT[]E[47!3=)8
M#;D!I&quot;&amp;%N-,V!29J&#039;Z3$Y5=6^F&amp;QTXK1YM)]&#039;O+/ED/L3.*2!+U$0W4[(GZ)
M:Y%6:US?K^ZW]EOE&lt;KT]\NJ-^EZ]EKP6D;FB^Q#YYNDV.#[@&lt;JC3HG:EF5J6
MRZUJI3FN#]V*EQJUB\O2`G558Y&amp;Z4`HRXG3)%X\&amp;,I+?TU2/!XFO,KY\[+50
M-$8?$LI;70-KJ%55ED?T?;$:$SH]ZDNZ2FRM$+0M0RTGXXSQ&amp;&quot;9L+(8K:%$Y
MQ#F6?VZYWL0C96[Z5(^\QGB_V=BK&gt;&gt;5R-.UB=ZE&quot;&lt;*ZCF5?;&quot;J&lt;&lt;)KOTW;/=
MH3_;A82EK=+A\4GG[&gt;7K7.F\9I6NK]UASBKO1D[QI9*P#A&lt;&amp;E[#*2T)K7)H@
M2U&lt;B]]XHV?7RDY[)G6B_;F&lt;CRL^3&quot;OG#Y6NVB#?+$N7/?2_Z\&gt;EVBLV=.I_@
MY=_W8LX-\U5(=H+\A[10J;6=2L5Q]M&#039;(N.UX3&lt;^M#&amp;,XX&quot;*#&lt;&amp;[@&#039;^2ZTZ`0
M;0V6$\TP&quot;B)4UTGO[.J#T-:G8:YJ,9!QR&gt;&quot;M+]#DN8TG*DIZF@H=.%4!_X)&gt;
M+)B*K\1&#039;0ELFM=L::DET`@E\%US#%AM`R2L&amp;0GL)%``,Z^-1W2/9#D(Q\R8.
M^@[K[P3`MI*;&amp;WLT&#039;-7&amp;?C5Y,&amp;Z3?1?%I5OP1B+APA[/\OP=`VKQT4(I87&amp;Y
MPK$[_X+?S/FM-&amp;FBE]?$1W$P&gt;]B&amp;(*V*&lt;H&amp;[7];R=)YK7POJD`3!`-E_,1[P
M_P,EO1)O@\*,4&amp;O152?=W#ICO($1@&gt;DL-5Z64KY9&gt;8IV9U.]2&quot;?FGFL8FD5]
MPUKTU#?.9$E?@!G@KDV&quot;H0-2S6KIW2O5%?&#039;:.]5FM?)-0PR]C,);/%B(_XS,
M&#039;L&#039;DR`YE&amp;8.R7D%GBW:T%\_2;4P38T#=$E9JML0N,LS5%A[&amp;6A,)$\9L6B&amp;)
M(GBHVFU:C&lt;V]IFF:^J5CA8_KP4S@20PMGD]6U]&gt;PT)`.J&quot;9]9NVUX(PRQR`R
M&gt;-QF052A-N$.7,WP*CN^E666-7=+*@W4S3)-DI94/Q:M&#039;&amp;IQ&lt;I&#039;NQ@R3)P,L
MBW`)L1),7,&amp;4XJW7,C9Q-(,ZS5%KW4A#86*9\C,7D#?1)&amp;&quot;@)GBII\;I9A&amp;L
MKF]885DNEXTATB&gt;5N&#039;`_L+U;V.9YO?&#039;AQ//F&gt;&lt;,^5%3(U+#T`P=1=U702E7)
MXZ0I2K9^A2]&amp;*_@6C]$9&lt;WDE,HW6UK2BVZP&amp;J;;WV\5:+7M%9R_G:$$[RV#J
MC^SI$&#039;F7_(O$7F=H/&#039;.WF2-*9@U,&quot;Y19PC,JA[&lt;(!@6A&lt;7%FB#Y#Z=60RPR/
MYV#WW-3]=/&quot;TX];O.)K7L%#Z8?F/&amp;YNVGY$X^5ER!GJJS*G/WD^6=D#C@G2A
M58O@P;Z%C&quot;*SW/O)O2;&lt;*AI5&lt;BRH[K,V7L:_Q8E8&gt;-/@UK/#AUG,AZ(@;SE@
MIJ?S8($^8,/5&gt;(SAZ/`\1W!&lt;/.8&lt;&quot;V/@&amp;(Z*[]%T:/&quot;NW^T&lt;V6&gt;=TRY=CUO5
MEG9?]U?HSH&quot;7SC;#VL5V&amp;QDAZ%M2#0!%@*/&gt;Q]LKCD6^_&gt;`]2T`4J&gt;WY*,9-
M:]`A4!VC.8J-$&#039;MS\\;K12,[*F,(!S-JO^&lt;JV5]@;F$&quot;YKL)A%)$PF.&gt;N%:M
M[A?KE3B1HA%Q5]/I@Q#14@&lt;EXR$3+S$F__&gt;\=]9Y&lt;X*AP^79J]&gt;#$B)N$IL8
M9G]$ZB!!&quot;D?+^^@*E08&gt;L;8:$2Z/Y(F%DCS$^S$TC%U++X`.,&quot;!Z8I\JD&quot;-U
M8Z)1)1FU@&quot;,_80D^B[#DU$9ZM;BOA`JR:[ILR)*8*UW-L1&quot;MH7HINME:]$:3
M5C4R4M&quot;&#039;A2$L$5Q#-[*)\#%35U9$5#*)CE;?@4&#039;2#714\JR)62,%L\D#:M)X
MEI:!R5CHV36^(F5?QGI,U]W1BGUT_WYI/&amp;O&gt;*GMUWBK-6K&#039;:4&quot;3ND1H5X13B
MA8K;&#039;7W1!![X^KB&lt;5.78!M%IBLLNN9+7H#/F9$):L&gt;N7JYH!]/$9NS)L5\;.
M2=W)15I1_&#039;^A4+&amp;XZ9(&#039;&lt;4)#Y$#3*G&amp;!1UH%!B1U.`H;FS2@&#039;&quot;1`&amp;*QP[H!L
M9/G+T)N,BQI!VK8P_H0E+.D%[A$LPKA63KDD&amp;DZ(=:^]YWH8+[]&lt;=EMNHS9N
M#-V8,XSA=J@Y&amp;M;J58[CRO_&amp;Z.K&quot;F=I#8C2A&quot;_E^YU2HOC$@&quot;;TO6EVB,-O;
M,&amp;&#039;S(L=]#X&#039;X&gt;6XAQN9A61Q7#8$%\JH($%$#9`RU%Z@%F&#039;BSZ^5-4C1SW%L_
M]#;,7F3B?MHY&gt;F^_NWK;O&gt;B\[&lt;9&lt;E^C;T?G9`#DJO/&lt;`;B&amp;@P%-L8_J7]Z&lt;4
M66H8&gt;B@:!&amp;/$8QR!M#!##X&#039;3TRN*A_`[M5&amp;V(\V&#039;[7&lt;I5?4\FEG6_=`$?]F&lt;
M?,8CTEB&gt;B`NY7`UIA:J_52#\=L7Q1GN&gt;4R[7:PVO4A^-O)BG;)2&#039;UVGTFXST
MVQP3&#039;_ZIUHS[6MAL(.W,;;[`&gt;VU=7@ZZ%W:73O+?^,?9&gt;:__5_7WH&#039;?:[1^P
MM1J5\?;HC:&quot;&amp;$;:ENM4C$\PDYB4#&#039;\@37X*PF=GQ9!:G%,N#O$,@%=&quot;GT+Z?
M3@ZT8+$);.E81`32\M&#039;N54-S0X$1TCY(_?Q&gt;O57?;^UCC!6G477&#039;C5JMV3;&#039;
M/:,`GH2,CVPM1*J0E@`IP*L4[`:1CCR.)#I&gt;CIS)Q*:+!V_IV:-A(=5&#039;=Y,G
M#F4&lt;QY1=+`J/39&lt;PZ&amp;4&#039;#&amp;R@&amp;\@VOJ)W_V&lt;T?&amp;6-I=TJ^_1,(E\$H8&gt;FEWAA
M+_OEFE-%3C8B/%&#039;Y!A9__(U4$K=J56^_WA@AG,=XW&amp;Z.O%;3,R&lt;GGI-G)?Z6
MI1N:COTB!0.#I?ZAMX78-JCOLFZ\R9R,ZO#@W+*Z_&#039;5KYZA[G,_)JQ20*-]U
M+NU._VTQ%2RA*/T-&lt;B5E,$V!/\E[%&#039;8BQN&#039;CZ-W&quot;NH:^$O86E=?I&#039;[ZS.W&quot;Z
MXCQ0U;=\K04)*F:=XH-8&#039;[F2^&quot;T7@\!,L.1K?X9B&amp;!O]R&amp;ZFU2O&amp;)0N\YM3Y
MY&amp;&amp;WRL&#039;P[Z&amp;)-&amp;-\$A/8&#039;#GC4=4;MD;E&lt;JWF[;?;L-&#039;J,3R6K&quot;(26#;F9Z9Y
M3/+X:(;7I0&lt;,9:6L;\N!!5P-SJVW*`=;48K1XF&amp;^#-*^^&#039;?3Z?U2?8$!&#039;$4_
M9AZ(92F9IM&#039;+&#039;?62H7&lt;&quot;)&amp;#X[C_R$D;D_&#039;@`!V.!TH0CGY)D#;@H=V2.A&#039;PK
M#X]V8U2K._M#&amp;.:FTQZYU6JKV&lt;H&lt;9I4[,&lt;+J&quot;PUNC&gt;_;$Q@K1.J0T9^XX9(A
M5A@.WKAL$&lt;A#&gt;-T2N0SU3\E;Z+C?_:MP0R1\5]0?]#Z&lt;=E]95&gt;OMNU^+6I1Z
M&gt;=U%TH=P0!)W=XGS@`*0U=M5;/&lt;&gt;&#039;H3UMN+OH7LD&#039;0%%4U9V!C110=&gt;!&quot;_,M
M&lt;8X+26S7&gt;D=,,Y$ZNOS7G:\B.[Y1J&amp;&amp;,V3Q%:/;[X?#&quot;?O.7BX$6Y@X?#5U)
M@%?%=+&amp;[EKCS05]QW+S&lt;/HW99XPM7%&quot;-&gt;&#039;BW-?C2&gt;&amp;T]&#039;[V.\&amp;YE04E\OKC8
M:XZ%[H(&amp;W&quot;[B&lt;&#039;%TY&lt;W&amp;Y*+?/&gt;XBVE/GS7E_8/WVFZZN6Y&lt;1XZN+3+$Q%5%S
M^=E&amp;&quot;9D-;=$$!Y?O:BE&lt;EH%.%RV&#039;5L@81&quot;#2`XA3C$TG,7BU418,:&quot;C,KRE2
MN+44,)T&lt;94%/:^1#4TLR:5R1]1M(@SQ&amp;5*&quot;&gt;&lt;C&lt;FQ7%,!4/W:&gt;!KR463@48-
M&gt;^MK41J-MGPV5B3%BA`C96A[OS6@1%;_Y?*3]5QZ4Q^Y&lt;&#039;8WGCHSX%-#D`WQ
M4LT*F!V1&gt;GZ82A&gt;#&#039;),LNA5-B.NQK&gt;&#039;(6:%Q&quot;6912ZU(EB*:[*J^6!/OUIL4
M53D@#U&#039;$\&amp;%DW84+H?P(`ER,I(N7FR+`#&gt;MMKUT?UNK[FR&#039;`C73#DGJC+BQ+
M)+&#039;&amp;6=L-0AB^F,.NR=8F/^&#039;_2L#NP3=&lt;%K&quot;6$TDX9$`L\\W=;AC-H/H[EBHZ
M0Z)WA#*X2_\7E_EI%_Q;.SK0G`F[*&amp;Q!=$E&gt;(*83IA_P!3@!`@T9MFO1.C0@
M[!0DLC`N(\9J`[1*3&#039;R&#039;-F5%Z^8.E1ZD^&gt;!&quot;_-&quot;&gt;WSR$/K#.)O8RD&quot;&gt;TM[4Y
MGU]DNP`?%A6T!&quot;1.+&gt;K.GKTDI6JU]5%[2X8#MXJ&quot;0!80`:D9M`&gt;@&amp;YH).K\W
MXOY:4?V0&lt;2\EK*^9HMH22:*&amp;BLL;H:V\PSCE&gt;1XU1:TXHFKP4L,;,_(?]=[;
M_?.KLR/[ZB(O6[]7M.KZ6:6CBYOHV%S\?6;Q49$%:]&lt;X1/4RN9352Z-0]PO;
M#/]5@9&gt;O9[9&lt;&#039;;+BM@YG[`&lt;-#D&#039;.E;ED](4F&lt;2YI[0Y`7.D.[./3@3V?W%NY
M5W#.X[HSM(7&amp;;*XK0I9@.LK$R\-@U-&#039;:E`V&gt;0#?42HDUF7+(;P?9&#039;8V?;AW6
M&#039;5ZBZM#:=G#8D6-PP@,SW:DW&#039;=SWO1`5A^BL)&#039;2.-ND&lt;V=?&quot;&quot;7E@-MC)L&gt;&gt;T
M&gt;SKXT!D,^I?VU=GE1?&gt;P=]SK&#039;HG[ATD&lt;4)LL4%&#039;S0=D(E/J?R2J-&quot;&lt;A9A\Z,
MX,$I8K(@5RF@X/CH:TD^VN%M!J/7&amp;X4$4A#&quot;Q9WM&gt;L/5-3$73*6X,WA#;7T?
M6XW_^C9K&quot;R)V$RPVB0^-2JX.06MH[R4^FA1&quot;/K2IJRFPAVBX/&#039;%70WN&gt;AZ&amp;P
M=BQ_TXY0D;7L(N^^LLA&amp;1I%YY5&lt;Y&lt;2=?6?9&gt;9G/_\&gt;4E?C9_QI9)8D&amp;DGQ!&amp;
M\\R3(KW@Y]]MYZR+?B]H-&lt;Q3\_:+1L(\-=*K`@FJPI7=?V-EJPWZQ36MOK$F
M=^.:W*^N*3;Q/DJH=S$*KZ4Q:X^1&quot;F*8(/]$/V?@:&quot;Q%KSY+-;+!VZ6A1*_&#039;
M)&quot;Y:BO&lt;SF3&#039;_(/K[+L81,5?(0+FOK5HE^=H&gt;/BP].J$DGJX:#$Z+UA)Y)G`6
M$K1Z[&lt;#:V?&amp;3)S_!-R5%/7/\+B]&gt;H6A?J;9TZ9XAQ_V/^M&quot;*(R$J.DG&gt;S:)/
M^E]8]-K2/CROU-Q8@?ZZ,@U)U&quot;SK0C`*KV*K)XW!IQPX_S7BA&amp;E.BKC?BY)-
M-YI@E&lt;R)9&#039;&quot;;[*:\YP!_\99`NG])8RIZ)9D[*;%%C#L&quot;OHU/,Z&quot;WTO&gt;)&gt;&lt;.@
MFPVH?2,M).:P%9_#-,?KH.F&amp;0N`[7M);X_%D%=[DPZ6+V\\T3(B&lt;!6)&amp;9H:F
MA8.&gt;B!AC*@2+HT=4*^,5^@WB8CI1H#BC$.!:?!&lt;C@B&quot;NSG+A7U^#3.\F6L]H
MF67+ZM[S];112!2##I5)J/FAB_OR.G5/19NJK(LOUL%)RQ`M`A_Y&gt;3KT!_:&gt;
M!I9]:E#GY&quot;\CHY%&#039;K5%&amp;(7[X+A(-U&quot;BGU.MHMCME$?K.$R.B?5(%H/Y,6-63
M`C&amp;06&lt;D!6!D+DK&lt;QFO_(@&#039;C&lt;-J,8(_`,9Q`V]6;=PAF64LB(&quot;ZH@H1,,9F7U
MZJS\IDR1.\-P-24L.#*S81L&amp;#*&lt;J4VH#&amp;@OI$W.SD:G2C!NK!](YA=.)^]**
MNAG=0?NH8/[`UN(4R6F^7/Q&lt;*9?#7S_&quot;N&#039;6HF9+-MA;.[!I!$2V\GO88SC!U
MR^-?6.2C1Z+I,;E&lt;Q-Z$OT9;/GX3&amp;?XJ&gt;L_&#039;ZG@&gt;V9&quot;BA@,/O&#039;N\#4C194PB
M`S%A_Z8%7GH=$;TQ#N(XF&#039;NS?&#039;0;EUL,&lt;QH%&gt;38V;5.E&amp;8W,8&#039;`U8@)4J(C/
M:E[&quot;7PU]!IZ:8Q(@I814+5I84Z;93EI]*=69Y!,*?V4]G]P#L=S.T\#BV&amp;T7
MX&#039;WA((-F9HMT-&#039;^JO4F)3IX?4&quot;*T&gt;4-A+K,/X]$D&quot;+W\6(%Q15&amp;M:6E\7G\&gt;
M92Q/PZLTOAHQ8^)XTNP1$G%#I--;M)6UL&quot;`&gt;&amp;G::^31`GOA&gt;3&gt;N)&amp;\P\[HCQ
M^E97]Z4M&lt;,5BT-F`R0E.E6BK=@HQ]&lt;,]+J@%+@[M8FG]YHZ:(+=&gt;^#!S%\%4
MQ?)0RN^R^O(&quot;-NWQ\&lt;&amp;7[V,6[ZR\+,E8&gt;&#039;185F*2&quot;86&quot;25@L%%)U$(]=&gt;I&amp;8
M(@*20ID9^HC;*1&#039;F?/_JS$9HTJY]U&#039;US]3:&gt;-&quot;;?Q$4@H4NP8KGDN&quot;!NQVN+
MK0/SA6A`S=2PU=!9@`PTM@N\:5]V7J8IELC3&amp;8HD,IBC.X$5%P]4X]SN&#039;R&#039;S
MD%1&#039;Y3$3$:N4\92FAF+_8]%\V\`%9XQ?G!1D#)CAC&quot;VT91G76&#039;I;HN@DOUM+
M!(5R&quot;XGQ7T=&amp;-99&lt;V1NG$U3Y?!5AW:`O,?G*N.\HRQ;2!MVK[_&amp;E^V_0+UB!
MWW]O56OQVE(+(-&lt;&#039;H\N)P8IBTM]77HF+Y:5U7WT573+&#039;NY71ULW253_&amp;DTE/
M7_V=T6;D$]*K/,C,5&lt;W,58WG2J4!&lt;&gt;7?[Q=U/[/*&gt;JQ*L782$IY8QK&amp;U7(@7
M%]&lt;U2GL^R3VF%U,T!S%1:G-=([^AW%9ZN=$AG-G9=*5P@@&gt;4YWU&lt;FD82C&quot;32
M)KL!V@G,\R9U273UYBTT=39Y1;C^@EQ1&quot;$&quot;62O&#039;&quot;W9R&gt;8K[PQOX])R`+`.,K
M,I940+6V)]&gt;F&quot;&amp;&quot;!;;0T;R2D;(2XG1&gt;5%JT7X5(1X-]^LYY=VKW+HUX?4I7#
M)4/OF9+WKB7:B`TGB&amp;VZ-P?^)%R:2JOI)T@1U83WVLD3&#039;,M3N!7LHZ17D$5L
M\&amp;#_18W6+SE,ZXV6*`@1;;UU_`F*8N6R-1#6&amp;L`&quot;I%!9&gt;&lt;)@@=3@1(JOM:5(
M79`&amp;)?\&lt;XYHQ;@R&amp;&amp;0SNT-D`L1&quot;EX3W-Z4R&lt;)&#039;+&quot;5203^:*`&amp;MSP&gt;5AZ/G%+
MS]TRC!2P`6H&quot;&gt;!FE7&#039;9!A46Y.F5MXI9%G%):G&lt;=T?_6,8AR**SV=F^-2=G:T
M;GYKPY,-IHGCWJ0V7L?BL?*X$Y6L&amp;+4A=[&gt;3XVB-.,HI?3%7VZ%:I&lt;01,&lt;8]
MAN&#039;%$E_!8GP&gt;_I(CU9;JE38&amp;^C*CAB1A.;]IB65*8G%111,3V)AH4T$!J=HV
MJ]95D!$&gt;8BL?(X`O5&quot;I%6O3VR9QZ[)+Q=&quot;EB3^:B*)X4&gt;/677WJ:L1FU^9D6
M^!-&amp;/&#039;U]\),[[O0M-G@CQJ1[HOU\+&quot;N&amp;:;JOZ-GY554O(M+EBU6N.@\K@7M5
MC(M4M^(R&gt;H.+9V&amp;@MT&#039;*3=FJ#7-&amp;AZS:!U_=G&lt;&lt;Z\:5-7]/@S+F`O:FM+%CG
MEECE^E*272:[4&lt;P;,EX5[`RM*)0QCZZ`1SL\/^I&amp;^JA&#039;JCQ&quot;`Z;0FPXG#^F5
M&quot;CT!&amp;3KIQ2BY8XY@C[4*&#039;*7WC&lt;K&amp;]9ZR?O`(OJ?7FW9=IKBP:&quot;MO/KA=-,@;
M8V`)M&#039;9,U&amp;FHB%+*-TC6&gt;I.ZFS3+MY3P3.DF=35OB$YBX_%H,Y,Z(U93+%33
M10?M68U@3=&amp;K+]7.&#039;&#039;PYG:;12P8[DFU(A#M&quot;C#WXCXT2Y=_2NMRKC&gt;KU40/&#039;
MR*W6W&#039;&amp;M-FS$_.&gt;B/&amp;*PU&amp;\&amp;8Z]0Q![X1W,JEY[.&gt;B0&amp;=AJR^-;AT63_E.PM
M\=[D.B1]6]DY4QU)S^B]P6Z2N^SR&#039;M/R7S$1,&amp;[X3*M4E&quot;Y\YBG=ESJA4J;!
MX=M#&gt;0F,.5!=A7CJ&gt;&lt;$*;8&lt;JJ1%1WB]B7&amp;ACZFXG-&amp;OXC_(EJ[6&amp;]5JUWBB7
MVVZM6O.:U7$,.IJ2\US1GV3PSPYD]83!/_`B:!\:&gt;B-TZ&amp;&amp;+__A&#039;G&amp;U&quot;=GDL
M%EG,F^ORZ(1&gt;&quot;:1F-V_;G8N+DZYMDP0BW^*E5D$&#039;GH%\&quot;#K#$$V\ON!?`?V&lt;
M!3H.U`&gt;1N-4/V&quot;KS#,]WY4&quot;;^/(Y^4I*X#&amp;=$HJB:7Y&quot;*887&amp;L!&quot;GAM7&quot;.9(
M&lt;E+40#+NX-JZA`/0JV1CY\XB].3W/-&gt;2UD]1S;\9@?3I^7&lt;^Z_!_*:`$?=G]
MICH(Y;?=S,#_I0?Q?RO-1AV^0+IJ&amp;TC;GZSF[]3&#039;M&lt;__&lt;OS?#&gt;&lt;?#^6I5YZZ
M7U/&#039;&gt;OSG2K7:JFGXS[4_56KP_R?\YS_D^&lt;[J_^7&quot;HIE6&amp;$8&quot;Z&#039;%KZX(7`L%&lt;
MN6XL5;B:$[\O82$EK&quot;&amp;6-UXX4P_UL&amp;4*&amp;^1Z2\&gt;?A%L+;\Q8AYC.60!/-_&#039;*
M6UOH]@G%+2CB/#I=H7&lt;Q_L?./MYLY&#039;L8,?8?*W_!00D(*&amp;F^&quot;!#$K&amp;@YH871
M+(F#VH*B24\YBN!^H`KA)?O*(G#RK:WOOK.N0N?:V]H:!!:%[GRUM?5?__5?
M6_]A(=,%L@IP]/#7J]U=^&#039;^9O(U%?&gt;5@&lt;4WNQV7X`NE&#039;&#039;%I$YKSQ1I]0`77+
M-?%;9XZQGZ/]Y&quot;T8&amp;AT^Z_$^8]$Y&#039;6&lt;QNFDU2F$P7DZI!A6`$YNZ=15ZP@L*
MK=YQ3F@BAOX,(S0A$MB4L,+8N&quot;::$NBR#/9RXVU)9V]GXB\?S*3L]L1!&lt;]&#039;K
M&quot;:?87`0.&gt;F2%HX4_I-&#039;&#039;T!Y;QMB3!8\QW?_N%?_TZ,^&amp;]#^Y=+^@CO7TO];&amp;
M,]^D_[56H_U$__^(QPQZ/1IY$Q+M,=B/&quot;K:3]EK&amp;&#039;1_M-4=USZMZY?)^I&gt;+M
M-4:.$\&gt;A3LLN(F*G?&gt;*@MR).&#039;?R;C,E(49PH=&quot;[&amp;67*F8?[R838Z1$NX$,1M
ME`5)-HW&#039;&gt;#(!+E`K8((&quot;H,&#039;&gt;T,9FQ&amp;/,)Z/?^\MA%*&lt;J+09^#$5&#039;R/H@KL)O
M&gt;XG:!ZDJ2)0]&lt;1#$8*@!U5&quot;S?)E#VI&lt;@0A=#1A*@Y7)4%O&#039;UE5I$.HXKQ/FC
M-YV&amp;0)R&#039;K6_/@XD_&gt;K!O_8`;D&#039;4;&lt;G%^TCO\R7K?.S\A.&quot;[$H+]D+^H^7F_&#039;
M@ZG]/O??VKU.2E&lt;ZC&lt;-#T97;Z116PLP?9;7__&gt;FI==$YZQUBPW_T9/@!O-X9
MLELW?/B7]&lt;%H$-DMV7`L8LBAA3)@ZG[H&#039;A8M`4RZ/BA,#E;,R&quot;-;Z^=SZ^?&lt;
MVL0QU[[=7.+-\^_N/UK/0S+=&gt;`IG]$]#*?T4SN@IG-%3?)S_5O%Q]IMMISJN
MC\;?&#039;!^G1H-;DQ#D6C`%9^[OXO]*$EZM)&quot;X`A/P6TZ!3&gt;G8,B7U`Q3K%D&quot;RQ
MC6-6&gt;(0821D&lt;OC70V!=3+51/=AB?6/B&lt;F@C@_M\\?,Y3&lt;)QX&lt;)PO#&quot;#S[&gt;8H
MFX2.^9W9J:&lt;(,=7V7KU6:]?&amp;PZ^($%-K5?\G18AY-!;,4S28IV@P3]%@Q/,4
M#&gt;8I&amp;LQ3-!AZGJ+!/$6#,:MZB@;S%`W&amp;&gt;HH&amp;\Q0-YG]6-)@_V%]&lt;HC:L4&lt;#(
MC*^MYRXM`N4OKNVE)Y_SW\GG7$\+DQ.)BLYDY6DYDDFUF[2=CR1=H\&amp;MR,#+
M&lt;K84@&amp;&quot;OXNHTW073+/G)[3W1EB&gt;W][5]09*[H=][Y7[_3;KC&gt;U8AU8\ZI8F=
M7T_&gt;]OJ[_V7&gt;]D\&gt;XT\&gt;XT\&gt;XT\&gt;XT\&gt;XT\&gt;X[&amp;L3Q[CE/7)8_S)8_S)8_R_
MO\?XO]L8_&gt;EY&gt;IZ&gt;I^?I&gt;7J&gt;GJ?GZ7EZGIZGY^EY&gt;IZ&gt;I^?I&gt;7J&gt;GJ?GZ7EZ
GGIZGY^EY&gt;IZ&gt;I^?I&gt;7J&gt;GJ?GZ7EZGIZGY^G9^/G_`!&#039;U1^&lt;`6`&lt;`
`
end

--[ EOF
            </code></pre>

                    </div>

                    <div class="card-footer">

                        <div class="row">

                            <div class="col">

                                <strong>Tags:</strong>

                                
                            </div>

                            <div class="col">

                                
                                
                            </div>

                            <div class="col">

                                <span class="float-right">

                                    <strong>Advisory/Source:</strong>

                                    <a href="http://www.phrack.org/papers/emulating_hypervisors_samsung_rkp.html" target="_blank">
                                        Link
                                    </a>

                                </span>

                            </div>

                        </div>

                        <div class="row mt-3">

                            <div class="btn-group ml-2">

                                <a class="btn btn-primary btn-fab btn-icon btn-round"
                                   href="/papers/48067" aria-label="View Previous Paper"
                                   data-toggle="tooltip" data-placement="top" title="Previous Paper" >
                                    <i class="mdi mdi-arrow-left mdi-36px"></i>
                                </a>

                            </div>

                            <div class="col">

                                <div class="btn-group float-right">

                                    <a class="btn btn-primary btn-fab btn-icon btn-round"
                                       href="/papers/48081" aria-label="View Next Paper"
                                       data-toggle="tooltip" data-placement="top" title="Next Paper" >
                                        <i class="mdi mdi-arrow-right mdi-36px"></i>
                                    </a>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                <div class="card">

                    <div class="card-footer">

    <div class="d-none d-lg-block">

        <div class="container-fluid">

            <table class="table table-borderless text-center">

                <thead style="background-color:#083257;">

                <tr class="text-white">
                        <th>
                            <strong>Downloads</strong>
                        </th>
                        <th>
                            <strong>Certifications</strong>
                        </th>
                        <th>
                            <strong>Training</strong>
                        </th>
                        <th>
                            <strong>Professional Services</strong>
                        </th>
                    </tr>

                </thead>

                <tbody>

                <tr class="text-center">
                    <td>
                        <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                            Kali Linux
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">OSCP
                        </a>
                    </td>
                    <td>
                        <a href="/pentest-training-with-kali-linux"
                           target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/"
                           target="_blank" rel="noopener">Penetration Testing
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td>
                        <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                           target="_blank" rel="noopener">
                            Kali NetHunter
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">OSWP
                        </a>
                    </td>
                    <td>
                        <a href="/wireless-attacks-training"
                           target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                           target="_blank" rel="noopener">Advanced Attack Simulation
                        </a>
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                           target="_blank" rel="noopener">Kali Linux Revealed Book
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">OSEP
                        </a>
                    </td>
                    <td>
                        <a href="/evasion-techniques-breaching-defenses"
                           target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                           <br />All new for 2020
                        </a>
                    </td>
                    <td>
                        <a href="https://www.offensive-security.com/penetration-testing/#asa"
                           target="_blank" rel="noopener">Application Security Assessment
                        </a>
                    </td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">OSWE
                        </a>
                    </td>
                    <td>
                        <a href="/advanced-web-attacks"
                           target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                           <br />Updated for 2020
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">OSED
                        </a>
                    </td>
                    <td>
                        <a href="/windows-user-mode-exploit-development"
                           target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                           <br />All new for 2021
                        </a>
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://www.offensive-security.com/awe-osee/"
                           target="_blank" rel="noopener">OSEE
                        </a>
                    </td>
                    <td>
<!--
                        <a href="https://www.offensive-security.com/metasploit-unleashed/"
                           target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                        </a>
-->
                    </td>
                    <td></td>
                </tr>

                <tr class="text-center">
                    <td></td>
                    <td>
                        <a href="https://kali.training/"
                           target="_blank" rel="noopener">KLCP
                        </a>
                    </td>
                    <td>
                        <a href="https://kali.training/courses/kali-linux-revealed/"
                           target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                        </a>
                    </td>
                    <td></td>
                </tr>

                </tbody>

            </table>

        </div>

    </div>

    <div class="d-lg-none text-center">

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownDownloads" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Downloads
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownDownloads">

                <a class="dropdown-item" href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                    Kali Linux
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                   target="_blank" rel="noopener">
                    Kali NetHunter
                </a>
                <a class="dropdown-item"
                   href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                   target="_blank" rel="noopener">
                    Kali Linux Revealed Book
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownCerts" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Certifications
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownCerts">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener">OSCP
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">OSWP
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">OSEP
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">OSWE
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">OSED
                </a>
                <a class="dropdown-item"
                   href="https://www.offensive-security.com/awe-osee/"
                   target="_blank" rel="noopener">OSEE
                </a>
                <a class="dropdown-item" href="https://kali.training/"
                   target="_blank" rel="noopener">KLCP
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownTraining" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Training
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownTraining">

                <a class="dropdown-item"
                   href="/pentest-training-with-kali-linux"
                   target="_blank" rel="noopener"> - Penetration Testing with Kali Linux (PWK) (PEN-200)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/wireless-attacks-training"
                   target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                </a>
                <a class="dropdown-item"
                   href="/evasion-techniques-breaching-defenses"
                   target="_blank" rel="noopener">Evasion Techniques and Breaching Defences (PEN-300)
                   <br />All new for 2020
                </a>
                <a class="dropdown-item"
                   href="/advanced-web-attacks"
                   target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                   <br />Updated for 2020
                </a>
                <a class="dropdown-item"
                   href="/windows-user-mode-exploit-development"
                   target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                   <br />All new for 2021
                </a>
<!--
                <a class="dropdown-item" href="https://www.offensive-security.com/metasploit-unleashed/"
                   target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                </a>
-->
                <a class="dropdown-item" href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                   target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                </a>

            </div>

        </div>

        <div class="btn-group btn-block mt-1">

            <a class="btn btn-block btn-primary dropdown-toggle" href="#" role="button" id="dropdownServices" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Pro Services
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownServices">

                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/"
                   target="_blank" rel="noopener">Penetration Testing
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#other-services"
                   target="_blank" rel="noopener">Advanced Attack Simulation
                </a>
                <a class="dropdown-item" href="https://www.offensive-security.com/penetration-testing/#asa"
                   target="_blank" rel="noopener">Application Security Assessment
                </a>

            </div>

        </div>

    </div>

</div>

                </div>

            </div>

        </div>

    </div>


        
        <footer class="footer">

    <div class="container-fluid">

        <nav>

            <ul>

                <li>
                    <a href="https://twitter.com/exploitdb" target="_blank" aria-label="Exploit-DB Twitter" rel="noopener">

    <i class="mdi mdi-twitter mdi-36px"></i>

</a>


<a href="https://www.facebook.com/ExploitDB" target="_blank" aria-label="Exploit-DB Facebook" rel="noopener">

    <i class="mdi mdi-facebook mdi-36px"></i>
</a>

<a href="https://github.com/offensive-security/exploitdb" target="_blank" aria-label="Exploit-DB GitHub" rel="noopener">

    <i class="mdi mdi-github-circle mdi-36px"></i>
</a>                </li>

                <li>

                    <a href="/">
                        Exploit Database by Offensive Security
                    </a>

                </li>

                <li>

                    <a href="/terms">
                        Terms
                    </a>

                </li>

                <li>

                    <a href="/privacy">
                        Privacy
                    </a>

                </li>

                <li>

                    <a href="#" data-toggle="modal" data-target="#about">
                        About Us
                    </a>

                </li>

                <li>

                    <a href="/faq">
                        FAQ
                    </a>

                </li>

                <li>

                    <a href="/cookies">
                        Cookies
                    </a>

                </li>

            </ul>

        </nav>

        <div class="copyright mt-4">

            &copy;
            <a href="https://www.offensive-security.com/" target="_blank">OffSec Services Limited</a> 2021. All rights reserved.

        </div>

    </div>

    <!-- About EDB/GHDB Modal -->
<div class="modal fade bd-example-modal-lg" id="about" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="aboutModalTitle">About The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <div class="row">

                    <p>
                        <a href="https://www.offensive-security.com/" target="_blank" rel="noopener">
                            <img class="float-left" src="/images/offsec-logo-gray-trans-300x171.png"
                                 alt="Offensive Security">
                        </a>
                        The Exploit Database is maintained by <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a>, an information security training company
                        that provides various <a
                                href="https://www.offensive-security.com/courses-and-certifications/"
                                target="_blank" rel="noopener">Information Security Certifications</a> as well as high end <a
                                href="https://www.offensive-security.com/penetration-testing/"
                                target="_blank" rel="noopener">penetration testing</a> services. The Exploit Database is a
                        non-profit project that is provided as a public service by Offensive Security.
                    </p>

                    <p>The Exploit Database is a <a
                                href="http://cve.mitre.org/data/refs/refmap/source-EXPLOIT-DB.html" target="_blank" rel="noopener">CVE
                            compliant</a> archive of public exploits and corresponding vulnerable software,
                        developed for use by penetration testers and vulnerability researchers. Our aim is to serve
                        the most comprehensive collection of exploits gathered through direct submissions, mailing
                        lists, as well as other public sources, and present them in a freely-available and
                        easy-to-navigate database. The Exploit Database is a repository for exploits and
                        proof-of-concepts rather than advisories, making it a valuable resource for those who need
                        actionable data right away.
                    </p>

                    <p>The <a href="/google-hacking-database">Google Hacking Database (GHDB)</a>
                        is a categorized index of Internet search engine queries designed to uncover interesting,
                        and usually sensitive, information made publicly available on the Internet. In most cases,
                        this information was never meant to be made public but due to any number of factors this
                        information was linked in a web document that was crawled by a search engine that
                        subsequently followed that link and indexed the sensitive information.
                    </p>

                    <p>The process known as “Google Hacking” was popularized in 2000 by Johnny
                        Long, a professional hacker, who began cataloging these queries in a database known as the
                        Google Hacking Database. His initial efforts were amplified by countless hours of community
                        member effort, documented in the book Google Hacking For Penetration Testers and popularised
                        by a barrage of media attention and Johnny’s talks on the subject such as this early talk
                        recorded at <a href="https://www.defcon.org/html/links/dc-archives/dc-13-archive.html"
                                       target="_blank" rel="noopener">DEFCON 13</a>. Johnny coined the term “Googledork” to refer
                        to “a foolish or inept person as revealed by Google“. This was meant to draw attention to
                        the fact that this was not a “Google problem” but rather the result of an often
                        unintentional misconfiguration on the part of a user or a program installed by the user.
                        Over time, the term “dork” became shorthand for a search query that located sensitive
                        information and “dorks” were included with may web application vulnerability releases to
                        show examples of vulnerable web sites.
                    </p>

                    <p>After nearly a decade of hard work by the community, Johnny turned the GHDB
                        over to <a
                                href="https://www.offensive-security.com/community-projects/"
                                target="_blank" rel="noopener">Offensive Security</a> in November 2010, and it is now maintained as
                        an extension of the <a href="/">Exploit Database</a>. Today, the GHDB includes searches for
                        other online search engines such as <a href="https://www.bing.com/" target="_blank" rel="noopener">Bing</a>,
                        and other online repositories like <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>,
                        producing different, yet equally valuable results.
                    </p>


                </div>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>


    <div class="modal fade bd-example-modal-lg" id="osresources" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title text-primary"
                    id="resourcesModalTitle">Offensive Security Resources
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <table class="table dataTable table-borderless">

                            <thead>

                            <tr>
                                <th class="text-center"><strong>Downloads</strong></th>
                                <th class="text-center"><strong>Certifications</strong></th>
                                <th class="text-center"><strong>Training</strong></th>
                                <th class="text-center"><strong>Services</strong></th>
                            </tr>

                            </thead>

                            <tbody>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">
                                        Kali Linux
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">OSCP
                                    </a>
                                </td>
                                <td>
                                    <a href="/pentest-training-with-kali-linux"
                                       target="_blank" rel="noopener">Penetration Testing with Kali Linux (PWK) (PEN-200)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/"
                                       target="_blank" rel="noopener">Penetration Testing
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://www.offensive-security.com/kali-linux-nethunter-download/"
                                       target="_blank" rel="noopener">
                                        Kali NetHunter
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">OSWP
                                    </a>
                                </td>
                                <td>
                                    <a href="/wireless-attacks-training"
                                       target="_blank" rel="noopener">Offensive Security Wireless Attacks (WiFu) (PEN-210)
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#other-services"
                                       target="_blank" rel="noopener">Advanced Attack Simulation
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">

                                <td>
                                    <a href="https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf"
                                       target="_blank" rel="noopener">Kali Linux Revealed Book
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">OSEP
                                    </a>
                                </td>
                                <td>
                                    <a href="/evasion-techniques-breaching-defenses"
                                       target="_blank" rel="noopener">Evasion Techniques and breaching Defences (PEN-300)
                                       <br />All new for 2020
                                    </a>
                                </td>
                                <td>
                                    <a href="https://www.offensive-security.com/penetration-testing/#asa"
                                       target="_blank" rel="noopener">Application Security Assessment
                                    </a>
                                </td>

                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">OSWE
                                    </a>
                                </td>
                                <td>
                                    <a href="/advanced-web-attacks"
                                       target="_blank" rel="noopener">Advanced Web Attacks and Exploitation (AWAE) (WEB-300)
                                       <br />Updated for 2020
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">OSED
                                    </a>
                                </td>
                                <td>
                                    <a href="/windows-user-mode-exploit-development"
                                       target="_blank" rel="noopener">Windows User Mode Exploit Development (EXP-301)
                                       <br />All new for 2021
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://www.offensive-security.com/awe-osee/"
                                       target="_blank" rel="noopener">OSEE
                                    </a>
                                </td>
                                <td>
<!--
                                    <a href="https://www.offensive-security.com/metasploit-unleashed/"
                                       target="_blank" rel="noopener">[Free] Metasploit Unleashed (MSFU)
                                    </a>
-->
                                </td>
                                <td></td>
                            </tr>

                            <tr class="text-center">
                                <td></td>
                                <td>
                                    <a href="https://kali.training/"
                                       target="_blank" rel="noopener">KLCP
                                    </a>
                                </td>
                                <td>
                                    <a href="https://kali.training/courses/kali-linux-revealed/" target="_blank"
                                       target="_blank" rel="noopener" title="Your journey starts here!">[Free] Kali Linux Revealed
                                    </a>
                                </td>
                                <td></td>
                            </tr>

                            </tbody>

                        </table>

            </div>

            <div class="modal-footer">

                <button type="button"
                        class="btn btn-primary"
                        data-dismiss="modal">Close
                </button>

            </div>

        </div>

    </div>

</div>

    <!-- Advanced Search Modal -->
<div class="modal fade bd-example-modal-lg" id="search" tabindex="-1"
     role="dialog" aria-labelledby="searchModalTitle" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-dialog modal-lg"
         role="document">

        <div class="modal-content">

            <div class="modal-header">

                <h5 class="modal-title"
                    id="searchModalTitle">Search The Exploit Database
                </h5>

                <button type="button" class="close" data-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>

            <div class="modal-body">

                <form action="https://www.exploit-db.com/search" method="GET" id="searchForm">

                    <div class="row">

                        <div class="col-sm-12 col-lg-8">

                            <div class="form-group">

                                <label for="titleSearch" class="control-label text-primary">Title</label>

                                <input id="titleSearch" class="form-control" type="text" name="q" class="q"
                                       placeholder="Title" value="" autofocus>

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="cveSearch" class="control-label text-primary">CVE</label>

                                <input id="cveSearch" class="form-control" type="text" name="cve" class="cve"
                                       placeholder="2021-1234"
                                       value="" autofocus>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-6 col-lg-4">

                            <label for="typeSearchSelect" class="text-primary">Type</label>

                            <select id="typeSearchSelect" name="type" class="form-control">

                                <option></option>
                                
                                    <option value="dos" >
                                        dos
                                    </option>


                                
                                    <option value="local" >
                                        local
                                    </option>


                                
                                    <option value="remote" >
                                        remote
                                    </option>


                                
                                    <option value="shellcode" >
                                        shellcode
                                    </option>


                                
                                    <option value="papers" >
                                        papers
                                    </option>


                                
                                    <option value="webapps" >
                                        webapps
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="platformSearchSelect" class="text-primary">Platform</label>

                            <select id="platformSearchSelect" name="platform" class="form-control">

                                <option></option>
                                
                                    <option value="aix" >
                                        AIX
                                    </option>

                                
                                    <option value="asp" >
                                        ASP
                                    </option>

                                
                                    <option value="bsd" >
                                        BSD
                                    </option>

                                
                                    <option value="bsd_ppc" >
                                        BSD_PPC
                                    </option>

                                
                                    <option value="bsd_x86" >
                                        BSD_x86
                                    </option>

                                
                                    <option value="bsdi_x86" >
                                        BSDi_x86
                                    </option>

                                
                                    <option value="cgi" >
                                        CGI
                                    </option>

                                
                                    <option value="freebsd" >
                                        FreeBSD
                                    </option>

                                
                                    <option value="freebsd_x86" >
                                        FreeBSD_x86
                                    </option>

                                
                                    <option value="freebsd_x86-64" >
                                        FreeBSD_x86-64
                                    </option>

                                
                                    <option value="generator" >
                                        Generator
                                    </option>

                                
                                    <option value="hardware" >
                                        Hardware
                                    </option>

                                
                                    <option value="hp-ux" >
                                        HP-UX
                                    </option>

                                
                                    <option value="irix" >
                                        IRIX
                                    </option>

                                
                                    <option value="jsp" >
                                        JSP
                                    </option>

                                
                                    <option value="linux" >
                                        Linux
                                    </option>

                                
                                    <option value="linux_mips" >
                                        Linux_MIPS
                                    </option>

                                
                                    <option value="linux_ppc" >
                                        Linux_PPC
                                    </option>

                                
                                    <option value="linux_sparc" >
                                        Linux_SPARC
                                    </option>

                                
                                    <option value="linux_x86" >
                                        Linux_x86
                                    </option>

                                
                                    <option value="linux_x86-64" >
                                        Linux_x86-64
                                    </option>

                                
                                    <option value="minix" >
                                        MINIX
                                    </option>

                                
                                    <option value="multiple" >
                                        Multiple
                                    </option>

                                
                                    <option value="netbsd_x86" >
                                        NetBSD_x86
                                    </option>

                                
                                    <option value="novell" >
                                        Novell
                                    </option>

                                
                                    <option value="openbsd" >
                                        OpenBSD
                                    </option>

                                
                                    <option value="openbsd_x86" >
                                        OpenBSD_x86
                                    </option>

                                
                                    <option value="osx_ppc" >
                                        OSX_PPC
                                    </option>

                                
                                    <option value="osx" >
                                        OSX
                                    </option>

                                
                                    <option value="php" >
                                        PHP
                                    </option>

                                
                                    <option value="plan9" >
                                        Plan9
                                    </option>

                                
                                    <option value="qnx" >
                                        QNX
                                    </option>

                                
                                    <option value="sco" >
                                        SCO
                                    </option>

                                
                                    <option value="sco_x86" >
                                        SCO_x86
                                    </option>

                                
                                    <option value="solaris" >
                                        Solaris
                                    </option>

                                
                                    <option value="solaris_sparc" >
                                        Solaris_SPARC
                                    </option>

                                
                                    <option value="solaris_x86" >
                                        Solaris_x86
                                    </option>

                                
                                    <option value="tru64" >
                                        Tru64
                                    </option>

                                
                                    <option value="ultrix" >
                                        ULTRIX
                                    </option>

                                
                                    <option value="unix" >
                                        Unix
                                    </option>

                                
                                    <option value="unixware" >
                                        UnixWare
                                    </option>

                                
                                    <option value="windows_x86" >
                                        Windows_x86
                                    </option>

                                
                                    <option value="windows_x86-64" >
                                        Windows_x86-64
                                    </option>

                                
                                    <option value="windows" >
                                        Windows
                                    </option>

                                
                                    <option value="arm" >
                                        ARM
                                    </option>

                                
                                    <option value="cfm" >
                                        CFM
                                    </option>

                                
                                    <option value="netware" >
                                        Netware
                                    </option>

                                
                                    <option value="superh_sh4" >
                                        SuperH_SH4
                                    </option>

                                
                                    <option value="java" >
                                        Java
                                    </option>

                                
                                    <option value="beos" >
                                        BeOS
                                    </option>

                                
                                    <option value="immunix" >
                                        Immunix
                                    </option>

                                
                                    <option value="palm_os" >
                                        Palm_OS
                                    </option>

                                
                                    <option value="atheos" >
                                        AtheOS
                                    </option>

                                
                                    <option value="ios" >
                                        iOS
                                    </option>

                                
                                    <option value="android" >
                                        Android
                                    </option>

                                
                                    <option value="xml" >
                                        XML
                                    </option>

                                
                                    <option value="perl" >
                                        Perl
                                    </option>

                                
                                    <option value="python" >
                                        Python
                                    </option>

                                
                                    <option value="system_z" >
                                        System_z
                                    </option>

                                
                                    <option value="json" >
                                        JSON
                                    </option>

                                
                                    <option value="ashx" >
                                        ASHX
                                    </option>

                                
                                    <option value="ruby" >
                                        Ruby
                                    </option>

                                
                                    <option value="aspx" >
                                        ASPX
                                    </option>

                                
                                    <option value="macos" >
                                        macOS
                                    </option>

                                
                                    <option value="linux_crisv32" >
                                        Linux_CRISv32
                                    </option>

                                
                                    <option value="ezine" >
                                        eZine
                                    </option>

                                
                                    <option value="magazine" >
                                        Magazine
                                    </option>

                                
                                    <option value="nodejs" >
                                        NodeJS
                                    </option>

                                
                                    <option value="alpha" >
                                        Alpha
                                    </option>

                                
                                    <option value="solaris_mips" >
                                        Solaris_MIPS
                                    </option>

                                
                                    <option value="lua" >
                                        Lua
                                    </option>

                                
                                    <option value="watchos" >
                                        watchOS
                                    </option>

                                
                                    <option value="vxworks" >
                                        VxWorks
                                    </option>

                                
                                    <option value="python2" >
                                        Python2
                                    </option>

                                
                                    <option value="python3" >
                                        Python3
                                    </option>

                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <div class="form-group">

                                <label for="authorSearch" class="text-primary">Author</label>

                                <input id="authorSearch" class="form-control" type="text" name="e_author"
                                       placeholder="Author" value="">

                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-sm-12 col-lg-6">

                            <div class="form-group">

                                <label for="textSearch" class="control-label text-primary">Content</label>

                                <input id="textSearch" class="form-control" type="text" name="text"
                                       placeholder="Exploit content" value="">

                            </div>

                        </div>

                        <div class="col-sm-6 col-lg-2">

                            <label for="portSearchSelect" class="text-primary">Port</label>

                            <select id="portSearchSelect" name="port" class="form-control">

                                <option></option>
                                
                                    <option value="14" >
                                        14
                                    </option>


                                
                                    <option value="21" >
                                        21
                                    </option>


                                
                                    <option value="22" >
                                        22
                                    </option>


                                
                                    <option value="23" >
                                        23
                                    </option>


                                
                                    <option value="25" >
                                        25
                                    </option>


                                
                                    <option value="42" >
                                        42
                                    </option>


                                
                                    <option value="49" >
                                        49
                                    </option>


                                
                                    <option value="53" >
                                        53
                                    </option>


                                
                                    <option value="66" >
                                        66
                                    </option>


                                
                                    <option value="69" >
                                        69
                                    </option>


                                
                                    <option value="70" >
                                        70
                                    </option>


                                
                                    <option value="79" >
                                        79
                                    </option>


                                
                                    <option value="80" >
                                        80
                                    </option>


                                
                                    <option value="81" >
                                        81
                                    </option>


                                
                                    <option value="102" >
                                        102
                                    </option>


                                
                                    <option value="105" >
                                        105
                                    </option>


                                
                                    <option value="110" >
                                        110
                                    </option>


                                
                                    <option value="111" >
                                        111
                                    </option>


                                
                                    <option value="113" >
                                        113
                                    </option>


                                
                                    <option value="119" >
                                        119
                                    </option>


                                
                                    <option value="123" >
                                        123
                                    </option>


                                
                                    <option value="135" >
                                        135
                                    </option>


                                
                                    <option value="139" >
                                        139
                                    </option>


                                
                                    <option value="143" >
                                        143
                                    </option>


                                
                                    <option value="161" >
                                        161
                                    </option>


                                
                                    <option value="162" >
                                        162
                                    </option>


                                
                                    <option value="164" >
                                        164
                                    </option>


                                
                                    <option value="383" >
                                        383
                                    </option>


                                
                                    <option value="389" >
                                        389
                                    </option>


                                
                                    <option value="402" >
                                        402
                                    </option>


                                
                                    <option value="406" >
                                        406
                                    </option>


                                
                                    <option value="411" >
                                        411
                                    </option>


                                
                                    <option value="443" >
                                        443
                                    </option>


                                
                                    <option value="444" >
                                        444
                                    </option>


                                
                                    <option value="445" >
                                        445
                                    </option>


                                
                                    <option value="446" >
                                        446
                                    </option>


                                
                                    <option value="502" >
                                        502
                                    </option>


                                
                                    <option value="504" >
                                        504
                                    </option>


                                
                                    <option value="513" >
                                        513
                                    </option>


                                
                                    <option value="514" >
                                        514
                                    </option>


                                
                                    <option value="515" >
                                        515
                                    </option>


                                
                                    <option value="532" >
                                        532
                                    </option>


                                
                                    <option value="548" >
                                        548
                                    </option>


                                
                                    <option value="554" >
                                        554
                                    </option>


                                
                                    <option value="555" >
                                        555
                                    </option>


                                
                                    <option value="617" >
                                        617
                                    </option>


                                
                                    <option value="623" >
                                        623
                                    </option>


                                
                                    <option value="631" >
                                        631
                                    </option>


                                
                                    <option value="655" >
                                        655
                                    </option>


                                
                                    <option value="689" >
                                        689
                                    </option>


                                
                                    <option value="783" >
                                        783
                                    </option>


                                
                                    <option value="787" >
                                        787
                                    </option>


                                
                                    <option value="808" >
                                        808
                                    </option>


                                
                                    <option value="873" >
                                        873
                                    </option>


                                
                                    <option value="888" >
                                        888
                                    </option>


                                
                                    <option value="901" >
                                        901
                                    </option>


                                
                                    <option value="998" >
                                        998
                                    </option>


                                
                                    <option value="1000" >
                                        1000
                                    </option>


                                
                                    <option value="1040" >
                                        1040
                                    </option>


                                
                                    <option value="1089" >
                                        1089
                                    </option>


                                
                                    <option value="1099" >
                                        1099
                                    </option>


                                
                                    <option value="1100" >
                                        1100
                                    </option>


                                
                                    <option value="1114" >
                                        1114
                                    </option>


                                
                                    <option value="1120" >
                                        1120
                                    </option>


                                
                                    <option value="1194" >
                                        1194
                                    </option>


                                
                                    <option value="1235" >
                                        1235
                                    </option>


                                
                                    <option value="1471" >
                                        1471
                                    </option>


                                
                                    <option value="1521" >
                                        1521
                                    </option>


                                
                                    <option value="1533" >
                                        1533
                                    </option>


                                
                                    <option value="1581" >
                                        1581
                                    </option>


                                
                                    <option value="1589" >
                                        1589
                                    </option>


                                
                                    <option value="1604" >
                                        1604
                                    </option>


                                
                                    <option value="1617" >
                                        1617
                                    </option>


                                
                                    <option value="1723" >
                                        1723
                                    </option>


                                
                                    <option value="1743" >
                                        1743
                                    </option>


                                
                                    <option value="1761" >
                                        1761
                                    </option>


                                
                                    <option value="1812" >
                                        1812
                                    </option>


                                
                                    <option value="1858" >
                                        1858
                                    </option>


                                
                                    <option value="1861" >
                                        1861
                                    </option>


                                
                                    <option value="1900" >
                                        1900
                                    </option>


                                
                                    <option value="1947" >
                                        1947
                                    </option>


                                
                                    <option value="2000" >
                                        2000
                                    </option>


                                
                                    <option value="2022" >
                                        2022
                                    </option>


                                
                                    <option value="2049" >
                                        2049
                                    </option>


                                
                                    <option value="2100" >
                                        2100
                                    </option>


                                
                                    <option value="2103" >
                                        2103
                                    </option>


                                
                                    <option value="2121" >
                                        2121
                                    </option>


                                
                                    <option value="2125" >
                                        2125
                                    </option>


                                
                                    <option value="2181" >
                                        2181
                                    </option>


                                
                                    <option value="2242" >
                                        2242
                                    </option>


                                
                                    <option value="2315" >
                                        2315
                                    </option>


                                
                                    <option value="2375" >
                                        2375
                                    </option>


                                
                                    <option value="2380" >
                                        2380
                                    </option>


                                
                                    <option value="2381" >
                                        2381
                                    </option>


                                
                                    <option value="2401" >
                                        2401
                                    </option>


                                
                                    <option value="2480" >
                                        2480
                                    </option>


                                
                                    <option value="2525" >
                                        2525
                                    </option>


                                
                                    <option value="2640" >
                                        2640
                                    </option>


                                
                                    <option value="2810" >
                                        2810
                                    </option>


                                
                                    <option value="2812" >
                                        2812
                                    </option>


                                
                                    <option value="2947" >
                                        2947
                                    </option>


                                
                                    <option value="2954" >
                                        2954
                                    </option>


                                
                                    <option value="2990" >
                                        2990
                                    </option>


                                
                                    <option value="3000" >
                                        3000
                                    </option>


                                
                                    <option value="3030" >
                                        3030
                                    </option>


                                
                                    <option value="3050" >
                                        3050
                                    </option>


                                
                                    <option value="3052" >
                                        3052
                                    </option>


                                
                                    <option value="3128" >
                                        3128
                                    </option>


                                
                                    <option value="3129" >
                                        3129
                                    </option>


                                
                                    <option value="3181" >
                                        3181
                                    </option>


                                
                                    <option value="3200" >
                                        3200
                                    </option>


                                
                                    <option value="3217" >
                                        3217
                                    </option>


                                
                                    <option value="3306" >
                                        3306
                                    </option>


                                
                                    <option value="3333" >
                                        3333
                                    </option>


                                
                                    <option value="3378" >
                                        3378
                                    </option>


                                
                                    <option value="3389" >
                                        3389
                                    </option>


                                
                                    <option value="3460" >
                                        3460
                                    </option>


                                
                                    <option value="3465" >
                                        3465
                                    </option>


                                
                                    <option value="3500" >
                                        3500
                                    </option>


                                
                                    <option value="3535" >
                                        3535
                                    </option>


                                
                                    <option value="3632" >
                                        3632
                                    </option>


                                
                                    <option value="3690" >
                                        3690
                                    </option>


                                
                                    <option value="3790" >
                                        3790
                                    </option>


                                
                                    <option value="3814" >
                                        3814
                                    </option>


                                
                                    <option value="3817" >
                                        3817
                                    </option>


                                
                                    <option value="4000" >
                                        4000
                                    </option>


                                
                                    <option value="4002" >
                                        4002
                                    </option>


                                
                                    <option value="4070" >
                                        4070
                                    </option>


                                
                                    <option value="4081" >
                                        4081
                                    </option>


                                
                                    <option value="4105" >
                                        4105
                                    </option>


                                
                                    <option value="4111" >
                                        4111
                                    </option>


                                
                                    <option value="4322" >
                                        4322
                                    </option>


                                
                                    <option value="4343" >
                                        4343
                                    </option>


                                
                                    <option value="4434" >
                                        4434
                                    </option>


                                
                                    <option value="4501" >
                                        4501
                                    </option>


                                
                                    <option value="4555" >
                                        4555
                                    </option>


                                
                                    <option value="4592" >
                                        4592
                                    </option>


                                
                                    <option value="4661" >
                                        4661
                                    </option>


                                
                                    <option value="4750" >
                                        4750
                                    </option>


                                
                                    <option value="4848" >
                                        4848
                                    </option>


                                
                                    <option value="5000" >
                                        5000
                                    </option>


                                
                                    <option value="5060" >
                                        5060
                                    </option>


                                
                                    <option value="5061" >
                                        5061
                                    </option>


                                
                                    <option value="5080" >
                                        5080
                                    </option>


                                
                                    <option value="5081" >
                                        5081
                                    </option>


                                
                                    <option value="5093" >
                                        5093
                                    </option>


                                
                                    <option value="5151" >
                                        5151
                                    </option>


                                
                                    <option value="5180" >
                                        5180
                                    </option>


                                
                                    <option value="5247" >
                                        5247
                                    </option>


                                
                                    <option value="5250" >
                                        5250
                                    </option>


                                
                                    <option value="5272" >
                                        5272
                                    </option>


                                
                                    <option value="5308" >
                                        5308
                                    </option>


                                
                                    <option value="5432" >
                                        5432
                                    </option>


                                
                                    <option value="5466" >
                                        5466
                                    </option>


                                
                                    <option value="5554" >
                                        5554
                                    </option>


                                
                                    <option value="5555" >
                                        5555
                                    </option>


                                
                                    <option value="5600" >
                                        5600
                                    </option>


                                
                                    <option value="5655" >
                                        5655
                                    </option>


                                
                                    <option value="5666" >
                                        5666
                                    </option>


                                
                                    <option value="5800" >
                                        5800
                                    </option>


                                
                                    <option value="5803" >
                                        5803
                                    </option>


                                
                                    <option value="5814" >
                                        5814
                                    </option>


                                
                                    <option value="5858" >
                                        5858
                                    </option>


                                
                                    <option value="5900" >
                                        5900
                                    </option>


                                
                                    <option value="5984" >
                                        5984
                                    </option>


                                
                                    <option value="6066" >
                                        6066
                                    </option>


                                
                                    <option value="6070" >
                                        6070
                                    </option>


                                
                                    <option value="6080" >
                                        6080
                                    </option>


                                
                                    <option value="6082" >
                                        6082
                                    </option>


                                
                                    <option value="6101" >
                                        6101
                                    </option>


                                
                                    <option value="6112" >
                                        6112
                                    </option>


                                
                                    <option value="6129" >
                                        6129
                                    </option>


                                
                                    <option value="6379" >
                                        6379
                                    </option>


                                
                                    <option value="6502" >
                                        6502
                                    </option>


                                
                                    <option value="6503" >
                                        6503
                                    </option>


                                
                                    <option value="6660" >
                                        6660
                                    </option>


                                
                                    <option value="6667" >
                                        6667
                                    </option>


                                
                                    <option value="7001" >
                                        7001
                                    </option>


                                
                                    <option value="7002" >
                                        7002
                                    </option>


                                
                                    <option value="7070" >
                                        7070
                                    </option>


                                
                                    <option value="7071" >
                                        7071
                                    </option>


                                
                                    <option value="7080" >
                                        7080
                                    </option>


                                
                                    <option value="7100" >
                                        7100
                                    </option>


                                
                                    <option value="7144" >
                                        7144
                                    </option>


                                
                                    <option value="7210" >
                                        7210
                                    </option>


                                
                                    <option value="7272" >
                                        7272
                                    </option>


                                
                                    <option value="7290" >
                                        7290
                                    </option>


                                
                                    <option value="7426" >
                                        7426
                                    </option>


                                
                                    <option value="7443" >
                                        7443
                                    </option>


                                
                                    <option value="7510" >
                                        7510
                                    </option>


                                
                                    <option value="7547" >
                                        7547
                                    </option>


                                
                                    <option value="7649" >
                                        7649
                                    </option>


                                
                                    <option value="7770" >
                                        7770
                                    </option>


                                
                                    <option value="7777" >
                                        7777
                                    </option>


                                
                                    <option value="7778" >
                                        7778
                                    </option>


                                
                                    <option value="7787" >
                                        7787
                                    </option>


                                
                                    <option value="7879" >
                                        7879
                                    </option>


                                
                                    <option value="7902" >
                                        7902
                                    </option>


                                
                                    <option value="8000" >
                                        8000
                                    </option>


                                
                                    <option value="8001" >
                                        8001
                                    </option>


                                
                                    <option value="8002" >
                                        8002
                                    </option>


                                
                                    <option value="8004" >
                                        8004
                                    </option>


                                
                                    <option value="8008" >
                                        8008
                                    </option>


                                
                                    <option value="8020" >
                                        8020
                                    </option>


                                
                                    <option value="8022" >
                                        8022
                                    </option>


                                
                                    <option value="8023" >
                                        8023
                                    </option>


                                
                                    <option value="8028" >
                                        8028
                                    </option>


                                
                                    <option value="8030" >
                                        8030
                                    </option>


                                
                                    <option value="8080" >
                                        8080
                                    </option>


                                
                                    <option value="8081" >
                                        8081
                                    </option>


                                
                                    <option value="8082" >
                                        8082
                                    </option>


                                
                                    <option value="8088" >
                                        8088
                                    </option>


                                
                                    <option value="8090" >
                                        8090
                                    </option>


                                
                                    <option value="8181" >
                                        8181
                                    </option>


                                
                                    <option value="8300" >
                                        8300
                                    </option>


                                
                                    <option value="8400" >
                                        8400
                                    </option>


                                
                                    <option value="8443" >
                                        8443
                                    </option>


                                
                                    <option value="8445" >
                                        8445
                                    </option>


                                
                                    <option value="8473" >
                                        8473
                                    </option>


                                
                                    <option value="8500" >
                                        8500
                                    </option>


                                
                                    <option value="8585" >
                                        8585
                                    </option>


                                
                                    <option value="8619" >
                                        8619
                                    </option>


                                
                                    <option value="8800" >
                                        8800
                                    </option>


                                
                                    <option value="8812" >
                                        8812
                                    </option>


                                
                                    <option value="8839" >
                                        8839
                                    </option>


                                
                                    <option value="8880" >
                                        8880
                                    </option>


                                
                                    <option value="8888" >
                                        8888
                                    </option>


                                
                                    <option value="9000" >
                                        9000
                                    </option>


                                
                                    <option value="9001" >
                                        9001
                                    </option>


                                
                                    <option value="9002" >
                                        9002
                                    </option>


                                
                                    <option value="9080" >
                                        9080
                                    </option>


                                
                                    <option value="9090" >
                                        9090
                                    </option>


                                
                                    <option value="9091" >
                                        9091
                                    </option>


                                
                                    <option value="9100" >
                                        9100
                                    </option>


                                
                                    <option value="9124" >
                                        9124
                                    </option>


                                
                                    <option value="9200" >
                                        9200
                                    </option>


                                
                                    <option value="9251" >
                                        9251
                                    </option>


                                
                                    <option value="9256" >
                                        9256
                                    </option>


                                
                                    <option value="9443" >
                                        9443
                                    </option>


                                
                                    <option value="9447" >
                                        9447
                                    </option>


                                
                                    <option value="9784" >
                                        9784
                                    </option>


                                
                                    <option value="9788" >
                                        9788
                                    </option>


                                
                                    <option value="9855" >
                                        9855
                                    </option>


                                
                                    <option value="9876" >
                                        9876
                                    </option>


                                
                                    <option value="9900" >
                                        9900
                                    </option>


                                
                                    <option value="9987" >
                                        9987
                                    </option>


                                
                                    <option value="9993" >
                                        9993
                                    </option>


                                
                                    <option value="9999" >
                                        9999
                                    </option>


                                
                                    <option value="10000" >
                                        10000
                                    </option>


                                
                                    <option value="10001" >
                                        10001
                                    </option>


                                
                                    <option value="10080" >
                                        10080
                                    </option>


                                
                                    <option value="10202" >
                                        10202
                                    </option>


                                
                                    <option value="10203" >
                                        10203
                                    </option>


                                
                                    <option value="10443" >
                                        10443
                                    </option>


                                
                                    <option value="10616" >
                                        10616
                                    </option>


                                
                                    <option value="11000" >
                                        11000
                                    </option>


                                
                                    <option value="11211" >
                                        11211
                                    </option>


                                
                                    <option value="11460" >
                                        11460
                                    </option>


                                
                                    <option value="12203" >
                                        12203
                                    </option>


                                
                                    <option value="12221" >
                                        12221
                                    </option>


                                
                                    <option value="12345" >
                                        12345
                                    </option>


                                
                                    <option value="12397" >
                                        12397
                                    </option>


                                
                                    <option value="12401" >
                                        12401
                                    </option>


                                
                                    <option value="13327" >
                                        13327
                                    </option>


                                
                                    <option value="13701" >
                                        13701
                                    </option>


                                
                                    <option value="13722" >
                                        13722
                                    </option>


                                
                                    <option value="13838" >
                                        13838
                                    </option>


                                
                                    <option value="16992" >
                                        16992
                                    </option>


                                
                                    <option value="18821" >
                                        18821
                                    </option>


                                
                                    <option value="18881" >
                                        18881
                                    </option>


                                
                                    <option value="19000" >
                                        19000
                                    </option>


                                
                                    <option value="19810" >
                                        19810
                                    </option>


                                
                                    <option value="19813" >
                                        19813
                                    </option>


                                
                                    <option value="20000" >
                                        20000
                                    </option>


                                
                                    <option value="20002" >
                                        20002
                                    </option>


                                
                                    <option value="20010" >
                                        20010
                                    </option>


                                
                                    <option value="20031" >
                                        20031
                                    </option>


                                
                                    <option value="20111" >
                                        20111
                                    </option>


                                
                                    <option value="20171" >
                                        20171
                                    </option>


                                
                                    <option value="22003" >
                                        22003
                                    </option>


                                
                                    <option value="23423" >
                                        23423
                                    </option>


                                
                                    <option value="25672" >
                                        25672
                                    </option>


                                
                                    <option value="26000" >
                                        26000
                                    </option>


                                
                                    <option value="27015" >
                                        27015
                                    </option>


                                
                                    <option value="27700" >
                                        27700
                                    </option>


                                
                                    <option value="28015" >
                                        28015
                                    </option>


                                
                                    <option value="30000" >
                                        30000
                                    </option>


                                
                                    <option value="30303" >
                                        30303
                                    </option>


                                
                                    <option value="31337" >
                                        31337
                                    </option>


                                
                                    <option value="32400" >
                                        32400
                                    </option>


                                
                                    <option value="32674" >
                                        32674
                                    </option>


                                
                                    <option value="32764" >
                                        32764
                                    </option>


                                
                                    <option value="34205" >
                                        34205
                                    </option>


                                
                                    <option value="37215" >
                                        37215
                                    </option>


                                
                                    <option value="37777" >
                                        37777
                                    </option>


                                
                                    <option value="37848" >
                                        37848
                                    </option>


                                
                                    <option value="38292" >
                                        38292
                                    </option>


                                
                                    <option value="40007" >
                                        40007
                                    </option>


                                
                                    <option value="41523" >
                                        41523
                                    </option>


                                
                                    <option value="44334" >
                                        44334
                                    </option>


                                
                                    <option value="46824" >
                                        46824
                                    </option>


                                
                                    <option value="48080" >
                                        48080
                                    </option>


                                
                                    <option value="49152" >
                                        49152
                                    </option>


                                
                                    <option value="50000" >
                                        50000
                                    </option>


                                
                                    <option value="50496" >
                                        50496
                                    </option>


                                
                                    <option value="52311" >
                                        52311
                                    </option>


                                
                                    <option value="52789" >
                                        52789
                                    </option>


                                
                                    <option value="52869" >
                                        52869
                                    </option>


                                
                                    <option value="52986" >
                                        52986
                                    </option>


                                
                                    <option value="53413" >
                                        53413
                                    </option>


                                
                                    <option value="54345" >
                                        54345
                                    </option>


                                
                                    <option value="54890" >
                                        54890
                                    </option>


                                
                                    <option value="55554" >
                                        55554
                                    </option>


                                
                                    <option value="55555" >
                                        55555
                                    </option>


                                
                                    <option value="56380" >
                                        56380
                                    </option>


                                
                                    <option value="57772" >
                                        57772
                                    </option>


                                
                                    <option value="58080" >
                                        58080
                                    </option>


                                
                                    <option value="62514" >
                                        62514
                                    </option>


                                
                            </select>

                        </div>

                        <div class="col-sm-6 col-lg-4">

                            <label for="tagSearchSelect" class="text-primary">Tag</label>

                            <select id="tagSearchSelect" name="tag" class="form-control">

                                <option></option>
                                
                                    <option value="1" >
                                        WordPress Core
                                    </option>


                                
                                    <option value="3" >
                                        Metasploit Framework (MSF)
                                    </option>


                                
                                    <option value="4" >
                                        WordPress Plugin
                                    </option>


                                
                                    <option value="7" >
                                        SQL Injection (SQLi)
                                    </option>


                                
                                    <option value="8" >
                                        Cross-Site Scripting (XSS)
                                    </option>


                                
                                    <option value="9" >
                                        File Inclusion (LFI/RFI)
                                    </option>


                                
                                    <option value="12" >
                                        Cross-Site Request Forgery (CSRF)
                                    </option>


                                
                                    <option value="13" >
                                        Denial of Service (DoS)
                                    </option>


                                
                                    <option value="14" >
                                        Code Injection
                                    </option>


                                
                                    <option value="15" >
                                        Command Injection
                                    </option>


                                
                                    <option value="16" >
                                        Authentication Bypass / Credentials Bypass (AB/CB)
                                    </option>


                                
                                    <option value="18" >
                                        Client Side
                                    </option>


                                
                                    <option value="19" >
                                        Use After Free (UAF)
                                    </option>


                                
                                    <option value="20" >
                                        Out Of Bounds
                                    </option>


                                
                                    <option value="21" >
                                        Remote
                                    </option>


                                
                                    <option value="22" >
                                        Local
                                    </option>


                                
                                    <option value="23" >
                                        XML External Entity (XXE)
                                    </option>


                                
                                    <option value="24" >
                                        Integer Overflow
                                    </option>


                                
                                    <option value="25" >
                                        Server-Side Request Forgery (SSRF)
                                    </option>


                                
                                    <option value="26" >
                                        Race Condition
                                    </option>


                                
                                    <option value="27" >
                                        NULL Pointer Dereference
                                    </option>


                                
                                    <option value="28" >
                                        Malware
                                    </option>


                                
                                    <option value="31" >
                                        Buffer Overflow
                                    </option>


                                
                                    <option value="34" >
                                        Heap Overflow
                                    </option>


                                
                                    <option value="35" >
                                        Type Confusion
                                    </option>


                                
                                    <option value="36" >
                                        Object Injection
                                    </option>


                                
                                    <option value="37" >
                                        Bug Report
                                    </option>


                                
                                    <option value="38" >
                                        Console
                                    </option>


                                
                                    <option value="39" >
                                        Pwn2Own
                                    </option>


                                
                                    <option value="40" >
                                        Traversal
                                    </option>


                                
                                    <option value="41" >
                                        Deserialization
                                    </option>


                                
                            </select>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">

                                    <input class="form-check-input" type="checkbox"
                                           name="verified" value="true"
                                           id="verifiedSearchCheck"   >
                                    Verified

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="hasapp" value="true"
                                           id="hasappSearchCheck" >
                                    Has App

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                            <div class="form-check form-check-inline">

                                <label class="form-check-label text-primary">
                                    <input class="form-check-input" type="checkbox"
                                           name="nomsf" value="true"
                                           id="nomsfCheck" >
                                    No Metasploit

                                    <span class="form-check-sign">
                                        <span class="check"></span>
                                    </span>

                                </label>

                            </div>

                        </div>

                    </div>

                    <div class="row">

                        <div class="col-12">

                            <button type="submit" class="btn btn-primary float-right">Search</button>

                        </div>

                    </div>

                </form>


            </div>

        </div>

    </div>

</div>

</footer>

    </div>

</div>

</body>

<!--   Make the default DataTables search field larger   -->
<style type="text/css">
    .dataTables_filter input {
        font-size: 16px;
    }
</style>

<!--   Core JS Files   -->
<script src="/js/core/jquery.min.js"></script>
<script src="/js/core/popper.min.js"></script>
<script src="/js/core/bootstrap.min.js"></script>

<script src="/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<script src="/js/plugins/moment.min.js"></script>

<!-- Forms Validations Plugin -->
<script src="/js/plugins/jquery.validate.min.js"></script>

<!--  DataTables.net Plugin, full documentation here:
https://datatables.net/    -->
<script src="/js/plugins/jquery.dataTables.min.js"></script>

<!--  Notifications Plugin    -->
<script src="/js/plugins/bootstrap-notify.js"></script>

<!-- Control Center for Now Ui Dashboard: parallax effects,
scripts for the example pages etc -->
<script src="/js/now-ui-dashboard.js"></script>

<script src="/js/selectize.min.js"></script>

<script src="/js/app.js"></script>
<script src="/js/appfunctions.js"></script>


<script>
    window.addEventListener('popstate', () => {
        location.reload();
    }, false);

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }


    function removeURLParameter(url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts= url.split('?');
        if (urlparts.length>=2) {

            var prefix= encodeURIComponent(parameter)+'=';
            var pars= urlparts[1].split(/[&;]/g);

            //reverse iteration as may be destructive
            for (var i= pars.length; i-- > 0;) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }

            url= urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            window.history.pushState('', document.title, url);
            return url;
        } else {
            window.history.pushState('', document.title, url);
            return url;
        }
    }

    function showFilters() {
        var x = document.getElementById("exploitFiltersCard");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function updateQueryString(key, value, url) {
        if (!url) url = window.location.href;
        var re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
            hash;

        if (re.test(url)) {
            if (typeof value !== 'undefined' && value !== null)
                return url.replace(re, '$1' + key + "=" + value + '$2$3');
            else {
                hash = url.split('#');
                url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
        }
        else {
            if (typeof value !== 'undefined' && value !== null) {
                var separator = url.indexOf('?') !== -1 ? '&' : '?';
                hash = url.split('#');
                url = hash[0] + separator + key + '=' + value;
                if (typeof hash[1] !== 'undefined' && hash[1] !== null)
                    url += '#' + hash[1];

                window.history.pushState('', document.title, url);
                return url;
            }
            else
                window.history.pushState('', document.title, url);
                return url;
        }
    }

    $('#search').submit(function() {
        $(this).find(":input").filter(function(){ return !this.value; }).attr("disabled", "disabled");
        return true; // ensure form still submits
    });

    // Un-disable form fields when page loads, in case they click back after submission
    $('#search').find( ":input" ).prop( "disabled", false );

    // If the ajax call fails, throw the error to the console instead of
    // popping up an alert to the user
    $.fn.dataTable.ext.errMode = 'throw';

</script>

<!-- App scripts -->



</html>
